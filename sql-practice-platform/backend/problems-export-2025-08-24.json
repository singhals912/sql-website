{
  "categories": [
    {
      "id": "8a31828d-d2e8-44b8-bb9e-636d039bdbcf",
      "name": "A/B Testing",
      "slug": "a/b-testing",
      "description": "Advanced problems in A/B Testing",
      "created_at": "2025-08-11T13:51:10.028Z"
    },
    {
      "id": "c7e4c5a1-5b75-4117-a113-118749434557",
      "name": "Advanced Topics",
      "slug": "advanced-topics",
      "description": "Complex SQL concepts",
      "created_at": "2025-08-11T13:44:19.649Z"
    },
    {
      "id": "426fcc68-b403-458f-9afd-5137f772de78",
      "name": "Aggregation",
      "slug": "aggregation",
      "description": "GROUP BY, HAVING, aggregate functions",
      "created_at": "2025-08-11T13:44:19.649Z"
    },
    {
      "id": "c5ec99f8-01ff-4d36-b36e-27688566397d",
      "name": "Basic Queries",
      "slug": "basic-queries",
      "description": "Fundamental SQL operations",
      "created_at": "2025-08-11T13:44:19.649Z"
    },
    {
      "id": "672071b9-615d-473b-8985-5fbc5612729e",
      "name": "Energy Analytics",
      "slug": "energy-analytics",
      "description": "Advanced problems in Energy Analytics",
      "created_at": "2025-08-11T13:51:10.032Z"
    },
    {
      "id": "089e178f-9baa-41c3-8ed5-626d2f2227d5",
      "name": "Fraud Detection",
      "slug": "fraud-detection",
      "description": "Advanced problems in Fraud Detection",
      "created_at": "2025-08-11T13:51:09.988Z"
    },
    {
      "id": "8798fdcf-0411-45cb-83dd-b4912e133354",
      "name": "Joins",
      "slug": "joins",
      "description": "INNER, LEFT, RIGHT, FULL OUTER joins",
      "created_at": "2025-08-11T13:44:19.649Z"
    },
    {
      "id": "c6117091-f4fa-4c45-925b-8671834d6408",
      "name": "Recommendation Systems",
      "slug": "recommendation-systems",
      "description": "Advanced problems in Recommendation Systems",
      "created_at": "2025-08-11T13:51:10.018Z"
    },
    {
      "id": "e1b879e5-e95b-41ee-b22a-a2ea91897277",
      "name": "Subqueries",
      "slug": "subqueries",
      "description": "Correlated and non-correlated subqueries",
      "created_at": "2025-08-11T13:44:19.649Z"
    },
    {
      "id": "949357d0-c57c-45fc-93a7-4c350616a3a8",
      "name": "Supply Chain",
      "slug": "supply-chain",
      "description": "Advanced problems in Supply Chain",
      "created_at": "2025-08-11T13:51:10.024Z"
    },
    {
      "id": "47c2009b-81d2-458f-96b0-1a68aee370d6",
      "name": "Time Analysis",
      "slug": "time-analysis",
      "description": "Date/time functions and analysis",
      "created_at": "2025-08-11T13:44:19.649Z"
    },
    {
      "id": "9ba6536c-e307-41f7-8ae0-8e49f3f98d55",
      "name": "Window Functions",
      "slug": "window-functions",
      "description": "ROW_NUMBER, RANK, LAG, LEAD",
      "created_at": "2025-08-11T13:44:19.649Z"
    }
  ],
  "problems": [
    {
      "id": "4aeaaea6-093f-41c4-9037-d36e44e11bd1",
      "title": "A/B Test Results Analysis",
      "slug": "ab-test-results-analysis",
      "difficulty": "medium",
      "description": "**Scenario:** Facebook's growth team needs to analyze A/B test performance for a new feature.\n\n**Business Context:** Compare conversion rates between control and test groups to determine if the new feature improves user engagement.\n\n**Problem:** Calculate conversion rates for each test group and determine statistical significance.\n\n**Expected Output:** Return group_name, total_users, conversions, conversion_rate for each test group.",
      "is_premium": false,
      "is_active": true,
      "category_id": "8a31828d-d2e8-44b8-bb9e-636d039bdbcf",
      "created_at": "2025-08-11T13:51:10.028Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 1,
      "search_vector": "'a/b':1,13 'analysi':4 'analyz':12 'busi':20 'calcul':40 'compar':22 'context':21 'control':26 'convers':23,41,58,59 'determin':31,48 'engag':38 'expect':51 'facebook':6 'featur':19,35 'group':29,46,54,64 'growth':8 'improv':36 'name':55 'need':10 'new':18,34 'output':52 'perform':15 'problem':39 'rate':24,42,60 'result':3 'return':53 'scenario':5 'signific':50 'statist':49 'team':9 'test':2,14,28,45,63 'total':56 'user':37,57",
      "category_name": "A/B Testing",
      "category_slug": "a/b-testing"
    },
    {
      "id": "d277eb23-10d8-4551-b82b-87b041897e84",
      "title": "ABN AMRO Corporate Banking Risk Analytics",
      "slug": "abn-amro-risk-management-system",
      "difficulty": "hard",
      "description": "**Business Context:** ABN AMRO's corporate banking division manages complex lending portfolios across European markets, requiring sophisticated credit risk modeling and regulatory capital calculations to maintain Basel III compliance while optimizing returns on risk-weighted assets.\n\n**Scenario:** You're a senior credit risk analyst at ABN AMRO evaluating corporate lending portfolios across industry sectors. The risk committee needs comprehensive analysis of probability of default, loss given default, and exposure at default metrics for regulatory capital allocation optimization.\n\n**Problem:** Calculate advanced credit risk metrics including expected loss, economic capital requirements, and risk-adjusted return on capital. Identify sectors with PD > 3%, LGD > 40%, but RAROC > 15% for enhanced monitoring frameworks.\n\n**Expected Output:** High-risk, high-return sectors meeting all risk criteria, showing comprehensive credit metrics and capital requirements, ordered by RAROC descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "c7e4c5a1-5b75-4117-a113-118749434557",
      "created_at": "2025-08-11T17:08:07.893Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 2,
      "search_vector": "'15':113 '3':108 '40':110 'abn':1,9,53 'across':19,59 'adjust':100 'advanc':87 'alloc':83 'amro':2,10,54 'analysi':67 'analyst':51 'analyt':6 'asset':43 'bank':4,13 'basel':33 'busi':7 'calcul':30,86 'capit':29,82,95,103,136 'committe':64 'complex':16 'complianc':35 'comprehens':66,132 'context':8 'corpor':3,12,56 'credit':24,49,88,133 'criteria':130 'default':71,74,78 'descend':141 'divis':14 'econom':94 'enhanc':115 'european':20 'evalu':55 'expect':92,118 'exposur':76 'framework':117 'given':73 'high':121,124 'high-return':123 'high-risk':120 'identifi':104 'iii':34 'includ':91 'industri':60 'lend':17,57 'lgd':109 'loss':72,93 'maintain':32 'manag':15 'market':21 'meet':127 'metric':79,90,134 'model':26 'monitor':116 'need':65 'optim':37,84 'order':138 'output':119 'pd':107 'portfolio':18,58 'probabl':69 'problem':85 'raroc':112,140 're':46 'regulatori':28,81 'requir':22,96,137 'return':38,101,125 'risk':5,25,41,50,63,89,99,122,129 'risk-adjust':98 'risk-weight':40 'scenario':44 'sector':61,105,126 'senior':48 'show':131 'sophist':23 'weight':42",
      "category_name": "Advanced Topics",
      "category_slug": "advanced-topics"
    },
    {
      "id": "3e5c2aaf-f454-41cf-8898-ac134e7309d4",
      "title": "AIG Insurance Claims Fraud Detection",
      "slug": "aig-insurance-claims-fraud-detection",
      "difficulty": "hard",
      "description": "**Business Context:** AIG's insurance fraud detection division develops machine learning models and statistical analysis to identify potentially fraudulent claims while minimizing false positives that could harm legitimate customers.\n\n**Scenario:** You're a senior fraud analytics specialist at AIG developing predictive models for claim investigation prioritization. The claims review team needs to identify suspicious patterns that warrant detailed investigation.\n\n**Problem:** Create a fraud risk score combining multiple indicators: claim amount vs. policy average (weight 30%), claim frequency (weight 25%), time patterns (weight 25%), and adjuster consistency (weight 20%). Identify claims scoring above the 90th percentile for investigation priority.\n\n**Expected Output:** High-risk claims with individual risk factors, composite fraud scores, and investigation priorities, ordered by fraud score descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "c7e4c5a1-5b75-4117-a113-118749434557",
      "created_at": "2025-08-11T13:51:15.998Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 3,
      "search_vector": "'20':93 '25':84,88 '30':80 '90th':99 'adjust':90 'aig':1,8,44 'amount':75 'analysi':20 'analyt':41 'averag':78 'busi':6 'claim':3,25,49,53,74,81,95,109 'combin':71 'composit':114 'consist':91 'context':7 'could':31 'creat':66 'custom':34 'descend':124 'detail':63 'detect':5,12 'develop':14,45 'divis':13 'expect':104 'factor':113 'fals':28 'fraud':4,11,40,68,115,122 'fraudul':24 'frequenc':82 'harm':32 'high':107 'high-risk':106 'identifi':22,58,94 'indic':73 'individu':111 'insur':2,10 'investig':50,64,102,118 'learn':16 'legitim':33 'machin':15 'minim':27 'model':17,47 'multipl':72 'need':56 'order':120 'output':105 'pattern':60,86 'percentil':100 'polici':77 'posit':29 'potenti':23 'predict':46 'priorit':51 'prioriti':103,119 'problem':65 're':37 'review':54 'risk':69,108,112 'scenario':35 'score':70,96,116,123 'senior':39 'specialist':42 'statist':19 'suspici':59 'team':55 'time':85 'vs':76 'warrant':62 'weight':79,83,87,92",
      "category_name": "Advanced Topics",
      "category_slug": "advanced-topics"
    },
    {
      "id": "46126968-4455-4602-821b-06375609254f",
      "title": "AT&T Customer Service Call Volume Analytics",
      "slug": "at-t-customer-service-call-volume",
      "difficulty": "easy",
      "description": "**Business Context:** AT&T's customer service department handles millions of calls monthly across residential, business, and enterprise customers. The analytics team needs insights to optimize staffing and improve service quality.\n\n**Real-World Challenge:** Your analysis must account for several edge cases that commonly occur in production systems:\n\n⚠️ **Edge Cases to Consider:**\n- **Dropped calls** (duration = 0, no satisfaction rating)\n- **Calls without resolution** (status = 'Dropped', agent_id = NULL)\n- **Extremely long calls** (outliers >120 minutes - usually escalated issues)\n- **Weekend vs weekday patterns** (different staffing and call volumes)\n- **Customer type impacts** (Enterprise customers get priority, affecting resolution times)\n\n**Problem:** Calculate average call duration and resolution rate by service category. Your solution must:\n1. Handle NULL values appropriately (dropped calls shouldn't skew averages)\n2. Exclude outliers (calls >120 minutes) from duration calculations\n3. Account for dropped calls in resolution rate calculations\n4. Show results only for categories with at least 3 completed calls\n\n**Expected Output:** Service categories with avg_duration (excluding outliers), resolution_rate (%), and total_calls (including dropped), ordered by resolution rate descending.\n\n**Think About:** How do you handle division by zero? What constitutes a \"resolved\" call? Should dropped calls count toward resolution rate?",
      "is_premium": false,
      "is_active": true,
      "category_id": "426fcc68-b403-458f-9afd-5137f772de78",
      "created_at": "2025-08-11T13:51:15.989Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 4,
      "search_vector": "'0':65 '1':119 '120':81,134 '2':130 '3':139,157 '4':148 'account':46,140 'across':21 'affect':102 'agent':74 'analysi':44 'analyt':7,28 'appropri':123 'averag':107,129 'avg':165 'busi':8,23 'calcul':106,138,147 'call':5,19,63,69,79,93,108,125,133,143,159,173,194,197 'case':50,59 'categori':115,153,163 'challeng':42 'common':52 'complet':158 'consid':61 'constitut':191 'context':9 'count':198 'custom':3,13,26,95,99 'depart':15 'descend':180 'differ':90 'divis':187 'drop':62,73,124,142,175,196 'durat':64,109,137,166 'edg':49,58 'enterpris':25,98 'escal':84 'exclud':131,167 'expect':160 'extrem':77 'get':100 'handl':16,120,186 'id':75 'impact':97 'improv':36 'includ':174 'insight':31 'issu':85 'least':156 'long':78 'million':17 'minut':82,135 'month':20 'must':45,118 'need':30 'null':76,121 'occur':53 'optim':33 'order':176 'outlier':80,132,168 'output':161 'pattern':89 'prioriti':101 'problem':105 'product':55 'qualiti':38 'rate':68,112,146,170,179,201 'real':40 'real-world':39 'residenti':22 'resolut':71,103,111,145,169,178,200 'resolv':193 'result':150 'satisfact':67 'servic':4,14,37,114,162 'sever':48 'shouldn':126 'show':149 'skew':128 'solut':117 'staf':34,91 'status':72 'system':56 'team':29 'telecommun':202 'think':181 'time':104 'total':172 'toward':199 'type':96 'usual':83 'valu':122 'volum':6,94 'vs':87 'weekday':88 'weekend':86 'without':70 'world':41 'zero':189 '⚠️':57",
      "category_name": "Aggregation",
      "category_slug": "aggregation"
    },
    {
      "id": "a2dedad9-60f7-4e85-84a2-90ea11c097d6",
      "title": "Adobe Creative Cloud Subscription Analytics",
      "slug": "adobe-revenue-analysis",
      "difficulty": "easy",
      "description": "**Business Context:** Adobe's subscription business model requires continuous analysis of Creative Cloud plans across different customer segments to optimize pricing strategies and reduce churn.\n\n**Scenario:** You're a business analyst at Adobe studying subscription revenue patterns. The revenue operations team needs to identify which Creative Cloud plans generate the most recurring revenue for strategic planning.\n\n**Problem:** Find all Creative Cloud subscription plans with total monthly recurring revenue exceeding $1 million.\n\n**Expected Output:** Subscription plans with total MRR (>$1M only), ordered by revenue descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "c5ec99f8-01ff-4d36-b36e-27688566397d",
      "created_at": "2025-08-11T17:08:07.820Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 5,
      "search_vector": "'1':75 '1m':84 'across':20 'adob':1,8,38 'analysi':15 'analyst':36 'analyt':5 'busi':6,11,35 'churn':30 'cloud':3,18,52,66 'context':7 'continu':14 'creativ':2,17,51,65,91 'creative-softwar':90 'custom':22 'descend':89 'differ':21 'exceed':74 'expect':77 'find':63 'generat':54 'identifi':49 'million':76 'model':12 'month':71 'mrr':83 'need':47 'oper':45 'optim':25 'order':86 'output':78 'pattern':42 'plan':19,53,61,68,80 'price':26 'problem':62 're':33 'recur':57,72 'reduc':29 'requir':13 'revenu':41,44,58,73,88 'scenario':31 'segment':23 'softwar':92 'strateg':60 'strategi':27 'studi':39 'subscript':4,10,40,67,79 'team':46 'total':70,82",
      "category_name": "Basic Queries",
      "category_slug": "basic-queries"
    },
    {
      "id": "55c0bc97-b6bc-42ae-a1dd-b08f0cec5e82",
      "title": "E-commerce Customer Analytics",
      "slug": "airbnb-revenue-analysis",
      "difficulty": "easy",
      "description": "Business Context: An online retail company wants to analyze customer purchasing patterns to improve their marketing strategies and inventory management.\n\nScenario: You're a data analyst at a growing e-commerce platform. The marketing team needs insights into customer behavior to optimize their campaigns and product recommendations.\n\nProblem: Analyze customer purchase data to identify high-value customers and popular product categories. Calculate average order values and customer lifetime metrics.\n\nExpected Output: Customer segments with purchase statistics, sorted by total revenue contribution.",
      "is_premium": false,
      "is_active": true,
      "category_id": "c5ec99f8-01ff-4d36-b36e-27688566397d",
      "created_at": "2025-08-11T17:08:07.818Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 6,
      "search_vector": "'analyst':31 'analyt':5 'analyz':14,55 'averag':70 'behavior':46 'busi':6 'calcul':69 'campaign':50 'categori':68 'commerc':3,37 'compani':11 'context':7 'contribut':88 'custom':4,15,45,56,64,74,79 'data':30,58 'e':2,36 'e-commerc':1,35 'expect':77 'grow':34 'high':62 'high-valu':61 'hospit':89 'identifi':60 'improv':19 'insight':43 'inventori':24 'lifetim':75 'manag':25 'market':21,40 'metric':76 'need':42 'onlin':9 'optim':48 'order':71 'output':78 'pattern':17 'platform':38 'popular':66 'problem':54 'product':52,67 'purchas':16,57,82 're':28 'recommend':53 'retail':10 'revenu':87 'scenario':26 'segment':80 'sort':84 'statist':83 'strategi':22 'team':41 'total':86 'valu':63,72 'want':12",
      "category_name": "Basic Queries",
      "category_slug": "basic-queries"
    },
    {
      "id": "2abba901-541a-4c0e-ae30-624927a7b3f3",
      "title": "Amazon Prime Video Content Performance",
      "slug": "amazon-prime-membership-growth",
      "difficulty": "easy",
      "description": "**Business Context:** Amazon Prime Video's content strategy team analyzes viewing patterns and subscriber engagement to optimize content acquisition and production investments.\n\n**Scenario:** You're a content analyst at Amazon Prime Video studying membership growth across different regions. The content team needs to identify regions with strong subscriber growth for targeted content localization.\n\n**Problem:** Find all regions with more than 1 million total Prime Video subscribers.\n\n**Expected Output:** Regions with subscriber counts (>1M subscribers only), ordered by subscriber count descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "426fcc68-b403-458f-9afd-5137f772de78",
      "created_at": "2025-08-11T17:06:42.245Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 7,
      "search_vector": "'1':66 '1m':78 'acquisit':24 'across':41 'amazon':1,8,35 'analyst':33 'analyz':15 'busi':6 'content':4,12,23,32,45,57 'context':7 'count':77,84 'descend':85 'differ':42 'engag':20 'expect':72 'find':60 'growth':40,54 'identifi':49 'invest':27 'local':58 'membership':39 'million':67 'need':47 'optim':22 'order':81 'output':73 'pattern':17 'perform':5 'prime':2,9,36,69 'problem':59 'product':26 're':30 'region':43,50,62,74 'scenario':28 'strategi':13 'stream':86 'strong':52 'studi':38 'subscrib':19,53,71,76,79,83 'target':56 'team':14,46 'total':68 'video':3,10,37,70 'view':16",
      "category_name": "Aggregation",
      "category_slug": "aggregation"
    },
    {
      "id": "7ceae8af-c0b8-49de-afca-daa1af1c484c",
      "title": "Social Media Engagement Analysis",
      "slug": "spotify-revenue-analysis",
      "difficulty": "easy",
      "description": "Business Context: A social media platform wants to understand user engagement patterns to improve their algorithm and content recommendations.\n\nScenario: You're working for a social media analytics team. The product team needs data on post performance and user interaction patterns to enhance the platform experience.\n\nProblem: Analyze post engagement metrics including likes, comments, and shares. Identify top-performing content types and user engagement patterns.\n\nExpected Output: Content performance metrics grouped by post type, showing engagement rates and reach statistics.",
      "is_premium": false,
      "is_active": true,
      "category_id": "426fcc68-b403-458f-9afd-5137f772de78",
      "created_at": "2025-08-11T17:08:07.819Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 8,
      "search_vector": "'algorithm':20 'analysi':4 'analyt':32 'analyz':52 'busi':5 'comment':58 'content':22,65,73 'context':6 'data':38 'engag':3,15,54,69,81 'enhanc':47 'expect':71 'experi':50 'group':76 'identifi':61 'improv':18 'includ':56 'interact':44 'like':57 'media':2,9,31 'metric':55,75 'need':37 'output':72 'pattern':16,45,70 'perform':41,64,74 'platform':10,49 'post':40,53,78 'problem':51 'product':35 'rate':82 're':26 'reach':84 'recommend':23 'scenario':24 'share':60 'show':80 'social':1,8,30 'statist':85 'team':33,36 'top':63 'top-perform':62 'type':66,79 'understand':13 'user':14,43,68 'want':11 'work':27",
      "category_name": "Aggregation",
      "category_slug": "aggregation"
    },
    {
      "id": "0f14418a-640f-4711-b5a4-e5b3d81b27d3",
      "title": "American Express Credit Portfolio Analytics",
      "slug": "american-express-portfolio-analytics",
      "difficulty": "medium",
      "description": "**Business Context:** American Express's credit risk management team analyzes cardholder portfolio performance across different customer segments to optimize credit limits, reduce default risk, and maximize interchange revenue in the premium credit card market.\n\n**Scenario:** You're a senior credit risk analyst at American Express studying portfolio allocation across customer segments. The risk committee needs to identify which customer segments show optimal risk-adjusted returns with portfolio allocation above 15% and return rates exceeding 8%.\n\n**Problem:** Calculate risk-adjusted portfolio metrics and identify customer segments meeting allocation and return criteria for strategic investment focus.\n\n**Expected Output:** High-performing customer segments (>15% allocation, >8% return rate), ordered by return rate descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "47c2009b-81d2-458f-96b0-1a68aee370d6",
      "created_at": "2025-08-11T17:08:07.873Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 9,
      "search_vector": "'15':76,109 '8':81,111 'across':19,54 'adjust':70,86 'alloc':53,74,94,110 'american':1,8,49 'analyst':47 'analyt':5 'analyz':15 'busi':6 'calcul':83 'card':38 'cardhold':16 'committe':59 'context':7 'credit':3,11,25,37,45 'criteria':97 'custom':21,55,64,91,107 'default':28 'descend':118 'differ':20 'exceed':80 'expect':102 'express':2,9,50 'focus':101 'high':105 'high-perform':104 'identifi':62,90 'interchang':32 'invest':100 'limit':26 'manag':13 'market':39 'maxim':31 'meet':93 'metric':88 'need':60 'optim':24,67 'order':114 'output':103 'perform':18,106 'portfolio':4,17,52,73,87 'premium':36 'problem':82 'rate':79,113,117 're':42 'reduc':27 'return':71,78,96,112,116 'revenu':33 'risk':12,29,46,58,69,85 'risk-adjust':68,84 'scenario':40 'segment':22,56,65,92,108 'senior':44 'show':66 'strateg':99 'studi':51 'team':14",
      "category_name": "Time Analysis",
      "category_slug": "time-analysis"
    },
    {
      "id": "4e721623-1caa-49da-ad07-cf77cb0fdfc0",
      "title": "Apple App Store Revenue Analytics",
      "slug": "apple-iphone-sales-by-quarter",
      "difficulty": "easy",
      "description": "**Business Context:** Apple's App Store team analyzes app performance across different categories to optimize featured app recommendations and understand revenue trends for developer partnerships.\n\n**Scenario:** You're a business intelligence analyst at Apple studying App Store quarterly performance. The App Store team needs to identify which app categories drive the most revenue for strategic planning.\n\n**Problem:** Find all app categories with total quarterly revenue exceeding $50 million.\n\n**Expected Output:** App categories with total revenue (>$50M only), ordered by revenue descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "c5ec99f8-01ff-4d36-b36e-27688566397d",
      "created_at": "2025-08-11T17:06:42.109Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 10,
      "search_vector": "'50':72 '50m':81 'across':16 'analyst':37 'analyt':5 'analyz':13 'app':2,10,14,22,41,46,53,65,76,89 'appl':1,8,39 'busi':6,35 'categori':18,54,66,77 'context':7 'descend':86 'develop':29 'differ':17 'drive':55 'exceed':71 'expect':74 'featur':21 'find':63 'identifi':51 'intellig':36 'million':73 'mobil':88 'mobile-app':87 'need':49 'optim':20 'order':83 'output':75 'partnership':30 'perform':15,44 'plan':61 'problem':62 'quarter':43,69 're':33 'recommend':23 'revenu':4,26,58,70,80,85 'scenario':31 'store':3,11,42,47 'strateg':60 'studi':40 'team':12,48 'total':68,79 'trend':27 'understand':25",
      "category_name": "Basic Queries",
      "category_slug": "basic-queries"
    },
    {
      "id": "ad4cdc97-b86c-47f2-aaf5-4bb66bab4b20",
      "title": "BBVA Digital Banking Transformation Analytics",
      "slug": "bbva-risk-management-system",
      "difficulty": "hard",
      "description": "**Business Context:** BBVA's digital transformation division analyzes customer digital adoption patterns across European and Latin American markets to optimize mobile banking investments, enhance customer experience, and compete with fintech disruptors in the digital banking ecosystem.\n\n**Scenario:** You're a senior digital banking analyst at BBVA evaluating customer digital engagement across different markets. The digital strategy team needs comprehensive analysis of digital adoption rates, transaction volumes, and customer lifetime value for strategic investment allocation.\n\n**Problem:** Calculate digital transformation metrics including digital adoption rates, mobile transaction penetration, and customer lifetime value. Identify markets with adoption rates > 75%, mobile penetration > 60%, and CLV > €5000 for digital investment prioritization.\n\n**Expected Output:** High-performing digital markets meeting all adoption criteria, showing comprehensive digital metrics and customer value analysis, ordered by CLV descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "c7e4c5a1-5b75-4117-a113-118749434557",
      "created_at": "2025-08-11T17:08:07.889Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 11,
      "search_vector": "'60':104 '75':101 'across':18,56 'adopt':16,68,87,99,121 'alloc':79 'american':22 'analysi':65,130 'analyst':49 'analyt':5 'analyz':13 'bank':3,27,40,48 'bbva':1,8,51 'busi':6 'calcul':81 'clv':106,133 'compet':33 'comprehens':64,124 'context':7 'criteria':122 'custom':14,30,53,73,93,128 'descend':134 'differ':57 'digit':2,10,15,39,47,54,60,67,82,86,109,117,125 'disruptor':36 'divis':12 'ecosystem':41 'engag':55 'enhanc':29 'european':19 'evalu':52 'expect':112 'experi':31 'fintech':35 'high':115 'high-perform':114 'identifi':96 'includ':85 'invest':28,78,110 'latin':21 'lifetim':74,94 'market':23,58,97,118 'meet':119 'metric':84,126 'mobil':26,89,102 'need':63 'optim':25 'order':131 'output':113 'pattern':17 'penetr':91,103 'perform':116 'priorit':111 'problem':80 'rate':69,88,100 're':44 'scenario':42 'senior':46 'show':123 'strateg':77 'strategi':61 'team':62 'transact':70,90 'transform':4,11,83 'valu':75,95,129 'volum':71 '€5000':107",
      "category_name": "Advanced Topics",
      "category_slug": "advanced-topics"
    },
    {
      "id": "d52d9256-38a1-4a27-9d80-9cc3edb2e076",
      "title": "BNP Paribas Investment Banking Analytics",
      "slug": "bnp-paribas-risk-management-system",
      "difficulty": "hard",
      "description": "**Business Context:** BNP Paribas's investment banking division operates across global capital markets, providing M&A advisory, equity and debt capital markets services, requiring sophisticated analytics to optimize deal flow, pricing strategies, and competitive positioning against Goldman Sachs, Morgan Stanley, and other bulge bracket banks.\n\n**Scenario:** You're a senior investment banking analyst at BNP Paribas evaluating transaction performance across different service lines and geographic regions. The global markets team needs comprehensive analysis of deal volumes, fee generation, and market share positioning for strategic resource allocation.\n\n**Problem:** Calculate investment banking performance metrics including fee margins, deal completion rates, and market share analysis. Identify service lines with fee margins > 4%, completion rates > 85%, and deal values > €500M for strategic focus areas.\n\n**Expected Output:** High-performing service lines meeting all performance criteria, showing comprehensive deal metrics and competitive positioning, ordered by average deal value descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "c7e4c5a1-5b75-4117-a113-118749434557",
      "created_at": "2025-08-11T17:08:07.885Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 12,
      "search_vector": "'4':114 '85':117 'across':15,65 'advisori':22 'alloc':91 'analysi':78,107 'analyst':58 'analyt':5,31 'area':125 'averag':146 'bank':4,12,50,57,95 'bnp':1,8,60 'bracket':49 'bulg':48 'busi':6 'calcul':93 'capit':17,26 'competit':39,142 'complet':102,115 'comprehens':77,138 'context':7 'criteria':136 'deal':34,80,101,119,139,147 'debt':25 'descend':149 'differ':66 'divis':13 'equiti':23 'evalu':62 'expect':126 'fee':82,99,112 'flow':35 'focus':124 'generat':83 'geograph':70 'global':16,73 'goldman':42 'high':129 'high-perform':128 'identifi':108 'includ':98 'invest':3,11,56,94 'line':68,110,132 'm':20 'margin':100,113 'market':18,27,74,85,105 'meet':133 'metric':97,140 'morgan':44 'need':76 'oper':14 'optim':33 'order':144 'output':127 'pariba':2,9,61 'perform':64,96,130,135 'posit':40,87,143 'price':36 'problem':92 'provid':19 'rate':103,116 're':53 'region':71 'requir':29 'resourc':90 'sach':43 'scenario':51 'senior':55 'servic':28,67,109,131 'share':86,106 'show':137 'sophist':30 'stanley':45 'strateg':89,123 'strategi':37 'team':75 'transact':63 'valu':120,148 'volum':81 '€500m':121",
      "category_name": "Advanced Topics",
      "category_slug": "advanced-topics"
    },
    {
      "id": "c13c9bc3-408d-46b8-8c64-340768bcd065",
      "title": "BlackRock Alternative Investment Analytics",
      "slug": "blackrock-portfolio-analytics",
      "difficulty": "medium",
      "description": "**Business Context:** BlackRock's alternative investments division manages over $300 billion in private equity, real estate, and hedge fund strategies, requiring sophisticated performance analysis to optimize institutional client allocations and generate alpha in volatile markets.\n\n**Scenario:** You're a senior alternative investments analyst at BlackRock evaluating strategy performance across asset classes. The investment committee needs to identify which alternative strategies deliver superior risk-adjusted returns with Sharpe ratios above 1.2 and annual returns exceeding 12%.\n\n**Problem:** Calculate comprehensive performance metrics and identify top-performing alternative investment strategies meeting return and risk criteria.\n\n**Expected Output:** High-performing alternative strategies (>12% return, >1.2 Sharpe ratio), ordered by Sharpe ratio descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "9ba6536c-e307-41f7-8ae0-8e49f3f98d55",
      "created_at": "2025-08-11T17:08:07.854Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 13,
      "search_vector": "'1.2':75,108 '12':80,106 '300':14 'across':53 'adjust':69 'alloc':33 'alpha':36 'altern':2,9,45,63,91,104 'analysi':28 'analyst':47 'analyt':4 'annual':77 'asset':54 'billion':15 'blackrock':1,7,49 'busi':5 'calcul':82 'class':55 'client':32 'committe':58 'comprehens':83 'context':6 'criteria':98 'deliv':65 'descend':115 'divis':11 'equiti':18 'estat':20 'evalu':50 'exceed':79 'expect':99 'fund':23 'generat':35 'hedg':22 'high':102 'high-perform':101 'identifi':61,87 'institut':31 'invest':3,10,46,57,92 'manag':12 'market':39 'meet':94 'metric':85 'need':59 'optim':30 'order':111 'output':100 'perform':27,52,84,90,103 'privat':17 'problem':81 'ratio':73,110,114 're':42 'real':19 'requir':25 'return':70,78,95,107 'risk':68,97 'risk-adjust':67 'scenario':40 'senior':44 'sharp':72,109,113 'sophist':26 'strategi':24,51,64,93,105 'superior':66 'top':89 'top-perform':88 'volatil':38",
      "category_name": "Window Functions",
      "category_slug": "window-functions"
    },
    {
      "id": "7770d8bd-25ce-4caf-908f-6371e1a43e3c",
      "title": "Inventory Management System",
      "slug": "cvs-health-pharmacy-inventory-management",
      "difficulty": "medium",
      "description": "Business Context: A retail chain needs to optimize their inventory management across multiple store locations to reduce costs and improve product availability.\n\nScenario: You're an inventory analyst for a multi-location retail company. The operations team needs insights into stock levels, turnover rates, and reorder priorities.\n\nProblem: Analyze inventory data to identify slow-moving products, calculate turnover rates, and determine which products need restocking across different store locations.\n\nExpected Output: Inventory analysis showing product performance, stock levels, and reorder recommendations by location.",
      "is_premium": false,
      "is_active": true,
      "category_id": "8798fdcf-0411-45cb-83dd-b4912e133354",
      "created_at": "2025-08-11T13:51:15.994Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 14,
      "search_vector": "'across':15,71 'analysi':78 'analyst':31 'analyz':53 'avail':25 'busi':4 'calcul':62 'chain':8 'compani':38 'context':5 'cost':21 'data':55 'determin':66 'differ':72 'expect':75 'identifi':57 'improv':23 'insight':43 'inventori':1,13,30,54,77 'level':46,83 'locat':18,36,74,88 'manag':2,14 'move':60 'multi':35 'multi-loc':34 'multipl':16 'need':9,42,69 'oper':40 'optim':11 'output':76 'perform':81 'prioriti':51 'problem':52 'product':24,61,68,80 'rate':48,64 're':28 'recommend':86 'reduc':20 'reorder':50,85 'restock':70 'retail':7,37 'scenario':26 'show':79 'slow':59 'slow-mov':58 'stock':45,82 'store':17,73 'system':3 'team':41 'turnov':47,63",
      "category_name": "Joins",
      "category_slug": "joins"
    },
    {
      "id": "20b87983-9952-4f6b-ad79-96cce189c2e2",
      "title": "Employee Performance Analytics",
      "slug": "capital-one-credit-risk-modeling",
      "difficulty": "medium",
      "description": "Business Context: A technology company wants to analyze employee performance metrics to improve team productivity and identify areas for professional development.\n\nScenario: You're an HR data analyst tasked with evaluating employee performance across different departments. Management needs insights for performance reviews and resource allocation.\n\nProblem: Analyze employee performance data including project completion rates, skill assessments, and productivity metrics to identify top performers and improvement opportunities.\n\nExpected Output: Performance analytics by department showing key metrics and rankings.",
      "is_premium": false,
      "is_active": true,
      "category_id": "9ba6536c-e307-41f7-8ae0-8e49f3f98d55",
      "created_at": "2025-08-11T13:51:21.532Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 15,
      "search_vector": "'across':37 'alloc':48 'analyst':31 'analyt':3,73 'analyz':11,50 'area':21 'assess':59 'busi':4 'compani':8 'complet':56 'context':5 'data':30,53 'depart':39,75 'develop':24 'differ':38 'employe':1,12,35,51 'evalu':34 'expect':70 'hr':29 'identifi':20,64 'improv':16,68 'includ':54 'insight':42 'key':77 'manag':40 'metric':14,62,78 'need':41 'opportun':69 'output':71 'perform':2,13,36,44,52,66,72 'problem':49 'product':18,61 'profession':23 'project':55 'rank':80 'rate':57 're':27 'resourc':47 'review':45 'scenario':25 'show':76 'skill':58 'task':32 'team':17 'technolog':7 'top':65 'want':9",
      "category_name": "Window Functions",
      "category_slug": "window-functions"
    },
    {
      "id": "7cd37118-1e89-4efb-b6a7-8b195e927f66",
      "title": "Charles Schwab Wealth Management Analytics",
      "slug": "charles-schwab-portfolio-analytics",
      "difficulty": "medium",
      "description": "**Business Context:** Charles Schwab's wealth management division serves high-net-worth clients with diversified investment portfolios, requiring sophisticated analytics to optimize asset allocation, minimize tax impact, and achieve superior risk-adjusted returns across market cycles.\n\n**Scenario:** You're a wealth management analyst at Charles Schwab studying client portfolio performance across different wealth segments. The advisory team needs to identify which wealth tiers achieve optimal performance with portfolio returns above 10% and volatility below 18%.\n\n**Problem:** Calculate wealth management metrics and identify high-performing client segments meeting return and risk criteria for advisory strategy optimization.\n\n**Expected Output:** Optimal wealth segments (>10% return, <18% volatility), ordered by return descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "9ba6536c-e307-41f7-8ae0-8e49f3f98d55",
      "created_at": "2025-08-11T17:08:07.870Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 16,
      "search_vector": "'10':78,109 '18':82,111 'achiev':35,71 'across':41,58 'adjust':39 'advisori':63,101 'alloc':30 'analyst':50 'analyt':5,26 'asset':29 'busi':6 'calcul':84 'charl':1,8,52 'client':19,55,93 'context':7 'criteria':99 'cycl':43 'descend':116 'differ':59 'diversifi':21 'divis':13 'expect':104 'high':16,91 'high-net-worth':15 'high-perform':90 'identifi':67,89 'impact':33 'invest':22 'manag':4,12,49,86 'market':42 'meet':95 'metric':87 'minim':31 'need':65 'net':17 'optim':28,72,103,106 'order':113 'output':105 'perform':57,73,92 'portfolio':23,56,75 'problem':83 're':46 'requir':24 'return':40,76,96,110,115 'risk':38,98 'risk-adjust':37 'scenario':44 'schwab':2,9,53 'segment':61,94,108 'serv':14 'sophist':25 'strategi':102 'studi':54 'superior':36 'tax':32 'team':64 'tier':70 'volatil':80,112 'wealth':3,11,48,60,69,85,107 'worth':18",
      "category_name": "Window Functions",
      "category_slug": "window-functions"
    },
    {
      "id": "41facc79-e158-4b9f-a70d-05908d560d3e",
      "title": "Citadel Hedge Fund Risk Parity Analysis",
      "slug": "citadel-hedge-fund-risk-parity-analysis",
      "difficulty": "hard",
      "description": "**Business Context:** Citadel's quantitative research team develops sophisticated risk parity strategies that balance portfolio risk contributions across different asset classes and geographical regions.\n\n**Scenario:** You're a senior quantitative analyst at Citadel building next-generation risk parity models. The portfolio management team needs to understand how different positions contribute to overall portfolio risk and optimize allocations accordingly.\n\n**Problem:** Calculate the risk contribution of each position using: Risk Contribution = Position Weight × Beta × Portfolio Volatility. Identify positions contributing more than 5% to total portfolio risk and calculate optimal rebalancing weights to achieve equal risk contribution.\n\n**Expected Output:** High-risk contributing positions with current and optimal weights, risk contributions, and rebalancing recommendations, ordered by current risk contribution descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "c7e4c5a1-5b75-4117-a113-118749434557",
      "created_at": "2025-08-11T13:51:15.996Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 17,
      "search_vector": "'5':89 'accord':65 'achiev':100 'across':24 'alloc':64 'analysi':6 'analyst':37 'asset':26 'balanc':20 'beta':80 'build':40 'busi':7 'calcul':67,95 'citadel':1,9,39 'class':27 'context':8 'contribut':23,57,70,76,86,103,109,117,125 'current':112,123 'descend':126 'develop':14 'differ':25,55 'equal':101 'expect':104 'fund':3 'generat':43 'geograph':29 'hedg':2 'high':107 'high-risk':106 'identifi':84 'manag':49 'model':46 'need':51 'next':42 'next-gener':41 'optim':63,96,114 'order':121 'output':105 'overal':59 'pariti':5,17,45 'portfolio':21,48,60,82,92 'posit':56,73,77,85,110 'problem':66 'quantit':11,36 're':33 'rebalanc':97,119 'recommend':120 'region':30 'research':12 'risk':4,16,22,44,61,69,75,93,102,108,116,124 'scenario':31 'senior':35 'sophist':15 'strategi':18 'team':13,50 'total':91 'understand':53 'use':74 'volatil':83 'weight':78,98,115 '×':79,81",
      "category_name": "Advanced Topics",
      "category_slug": "advanced-topics"
    },
    {
      "id": "ebd41598-6542-40d8-9b54-c7b010de4ca5",
      "title": "Restaurant Chain Sales Analysis",
      "slug": "citibank-credit-card-fraud-detection",
      "difficulty": "medium",
      "description": "Business Context: A restaurant chain wants to analyze sales performance across different locations and menu categories to optimize their operations and menu offerings.\n\nScenario: You're a business analyst for a growing restaurant chain. The management team needs insights into sales patterns, popular menu items, and location performance to make strategic decisions.\n\nProblem: Analyze restaurant sales data to identify top-performing locations, popular menu categories, and sales trends. Calculate average order values and identify growth opportunities.\n\nExpected Output: Sales performance metrics by location and menu category, sorted by total revenue.",
      "is_premium": false,
      "is_active": true,
      "category_id": "9ba6536c-e307-41f7-8ae0-8e49f3f98d55",
      "created_at": "2025-08-11T13:51:12.115Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 18,
      "search_vector": "'across':15 'analysi':4 'analyst':33 'analyz':12,58 'averag':75 'busi':5,32 'calcul':74 'categori':20,70,91 'chain':2,9,38 'context':6 'data':61 'decis':56 'differ':16 'expect':82 'grow':36 'growth':80 'identifi':63,79 'insight':43 'item':49 'locat':17,51,67,88 'make':54 'manag':40 'menu':19,26,48,69,90 'metric':86 'need':42 'offer':27 'oper':24 'opportun':81 'optim':22 'order':76 'output':83 'pattern':46 'perform':14,52,66,85 'popular':47,68 'problem':57 're':30 'restaur':1,8,37,59 'revenu':95 'sale':3,13,45,60,72,84 'scenario':28 'sort':92 'strateg':55 'team':41 'top':65 'top-perform':64 'total':94 'trend':73 'valu':77 'want':10",
      "category_name": "Window Functions",
      "category_slug": "window-functions"
    },
    {
      "id": "c0a60c80-ad7b-45ff-b137-8d138d785a29",
      "title": "Citigroup Global Investment Banking Analytics",
      "slug": "citigroup-portfolio-analytics",
      "difficulty": "medium",
      "description": "**Business Context:** Citigroup's global investment banking division manages complex capital markets transactions across emerging and developed markets, requiring sophisticated analytics to optimize deal flow, pricing strategies, and regulatory compliance.\n\n**Scenario:** You're a senior investment banking analyst at Citigroup evaluating transaction performance across different product lines. The capital markets team needs to identify which investment banking services generate the highest fee margins with transaction values above $100M and fee rates exceeding 2%.\n\n**Problem:** Calculate investment banking performance metrics and identify high-margin services meeting transaction size and fee criteria for strategic focus areas.\n\n**Expected Output:** High-margin investment banking services (>$100M transaction size, >2% fee rate), ordered by fee margin descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "9ba6536c-e307-41f7-8ae0-8e49f3f98d55",
      "created_at": "2025-08-11T17:08:07.872Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 19,
      "search_vector": "'100m':73,109 '2':78,112 'across':19,49 'analyst':43 'analyt':5,26 'area':100 'bank':4,12,42,62,82,107 'busi':6 'calcul':80 'capit':16,54 'citigroup':1,8,45 'complex':15 'complianc':35 'context':7 'criteria':96 'deal':29 'descend':119 'develop':22 'differ':50 'divis':13 'emerg':20 'evalu':46 'exceed':77 'expect':101 'fee':67,75,95,113,117 'flow':30 'focus':99 'generat':64 'global':2,10 'high':88,104 'high-margin':87,103 'highest':66 'identifi':59,86 'invest':3,11,41,61,81,106 'line':52 'manag':14 'margin':68,89,105,118 'market':17,23,55 'meet':91 'metric':84 'need':57 'optim':28 'order':115 'output':102 'perform':48,83 'price':31 'problem':79 'product':51 'rate':76,114 're':38 'regulatori':34 'requir':24 'scenario':36 'senior':40 'servic':63,90,108 'size':93,111 'sophist':25 'strateg':98 'strategi':32 'team':56 'transact':18,47,70,92,110 'valu':71",
      "category_name": "Window Functions",
      "category_slug": "window-functions"
    },
    {
      "id": "c28cd914-6ca0-4082-9358-090d21a4d66c",
      "title": "Costco Wholesale Membership Analytics",
      "slug": "costco-revenue-analysis",
      "difficulty": "easy",
      "description": "**Business Context:** Costco's membership strategy team analyzes renewal patterns and spending behaviors across different membership tiers to optimize retention programs and maximize lifetime customer value.\n\n**Scenario:** You're a membership analytics specialist at Costco studying member performance across different tiers. The membership team needs to identify which membership types generate the highest average annual spending per member.\n\n**Problem:** Find all membership types with average annual spending per member exceeding $2,500.\n\n**Expected Output:** Membership types with average spending (>$2,500 only), ordered by average spending descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "426fcc68-b403-458f-9afd-5137f772de78",
      "created_at": "2025-08-11T17:08:07.748Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 20,
      "search_vector": "'2':75,84 '500':76,85 'across':18,43 'analyt':4,36 'analyz':12 'annual':59,70 'averag':58,69,82,89 'behavior':17 'busi':5 'context':6 'costco':1,7,39 'custom':29 'descend':91 'differ':19,44 'exceed':74 'expect':77 'find':64 'generat':55 'highest':57 'identifi':51 'lifetim':28 'maxim':27 'member':41,62,73 'membership':3,9,20,35,47,53,66,79 'need':49 'optim':23 'order':87 'output':78 'pattern':14 'per':61,72 'perform':42 'problem':63 'program':25 're':33 'renew':13 'retent':24 'scenario':31 'specialist':37 'spend':16,60,71,83,90 'strategi':10 'studi':40 'team':11,48 'tier':21,45 'type':54,67,80 'valu':30 'wholesal':2",
      "category_name": "Aggregation",
      "category_slug": "aggregation"
    },
    {
      "id": "1f1ecb19-0ca8-4831-918f-0385bda358bf",
      "title": "Credit Suisse Investment Banking M&A",
      "slug": "ing-group-risk-management-system",
      "difficulty": "hard",
      "description": "**Business Context:** Credit Suisse's investment banking division advises on complex mergers and acquisitions globally, requiring sophisticated deal analytics to optimize transaction structuring and fee generation.\n\n**Scenario:** You're a senior investment banker at Credit Suisse analyzing M&A transaction performance across different industry sectors. The M&A committee needs to evaluate deal profitability and market share metrics.\n\n**Problem:** Calculate M&A performance metrics including deal fee rates, transaction multiples, and completion success rates. Identify sectors with average deal size > $1B and fee rate > 1.5%.\n\n**Expected Output:** High-value M&A sectors (>$1B average deal, >1.5% fee rate), showing comprehensive deal metrics and market analysis, ordered by average deal size descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "c7e4c5a1-5b75-4117-a113-118749434557",
      "created_at": "2025-08-11T17:08:07.887Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 21,
      "search_vector": "'1.5':91,103 '1b':87,100 'acquisit':20 'across':48 'advis':15 'analysi':112 'analyt':25 'analyz':43 'averag':84,101,115 'bank':4,13 'banker':39 'busi':7 'calcul':66 'committe':55 'complet':78 'complex':17 'comprehens':107 'context':8 'credit':1,9,41 'deal':24,59,72,85,102,108,116 'descend':118 'differ':49 'divis':14 'evalu':58 'expect':92 'fee':31,73,89,104 'generat':32 'global':21 'high':95 'high-valu':94 'identifi':81 'includ':71 'industri':50 'invest':3,12,38 'm':5,44,53,67,97 'market':62,111 'merger':18 'metric':64,70,109 'multipl':76 'need':56 'optim':27 'order':113 'output':93 'perform':47,69 'problem':65 'profit':60 'rate':74,80,90,105 're':35 'requir':22 'scenario':33 'sector':51,82,99 'senior':37 'share':63 'show':106 'size':86,117 'sophist':23 'structur':29 'success':79 'suiss':2,10,42 'transact':28,46,75 'valu':96",
      "category_name": "Advanced Topics",
      "category_slug": "advanced-topics"
    },
    {
      "id": "35bf652f-f0c5-42b7-a1df-6c7936a7bf19",
      "title": "Credit Suisse Private Banking Analytics",
      "slug": "barclays-risk-management-system",
      "difficulty": "hard",
      "description": "**Business Context:** Credit Suisse's private banking division manages ultra-high-net-worth client portfolios across global wealth management markets, requiring sophisticated analytics to optimize investment strategies, risk management, and competitive positioning against UBS, JPMorgan Private Bank, and other leading wealth managers.\n\n**Scenario:** You're a senior private banking analyst at Credit Suisse evaluating client portfolio performance and relationship profitability across different wealth segments and geographic regions. The wealth management committee needs comprehensive analysis of assets under management, fee generation, and client satisfaction metrics for strategic growth planning.\n\n**Problem:** Calculate private banking performance metrics including asset growth rates, fee margins, and client retention analysis. Identify wealth segments with AUM > CHF 50M, fee margins > 1.2%, and client satisfaction scores > 8.5 for premium service focus.\n\n**Expected Output:** High-value wealth segments meeting all performance criteria, showing comprehensive portfolio metrics and client relationship analysis, ordered by AUM growth rate descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "c7e4c5a1-5b75-4117-a113-118749434557",
      "created_at": "2025-08-11T17:08:07.883Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 22,
      "search_vector": "'1.2':120 '50m':117 '8.5':125 'across':22,67 'analysi':80,110,148 'analyst':56 'analyt':5,29 'asset':82,102 'aum':115,151 'bank':4,12,43,55,98 'busi':6 'calcul':96 'chf':116 'client':20,61,88,108,122,146 'committe':77 'competit':37 'comprehens':79,142 'context':7 'credit':1,8,58 'criteria':140 'descend':154 'differ':68 'divis':13 'evalu':60 'expect':130 'fee':85,105,118 'focus':129 'generat':86 'geograph':72 'global':23 'growth':93,103,152 'high':17,133 'high-valu':132 'identifi':111 'includ':101 'invest':32 'jpmorgan':41 'lead':46 'manag':14,25,35,48,76,84 'margin':106,119 'market':26 'meet':137 'metric':90,100,144 'need':78 'net':18 'optim':31 'order':149 'output':131 'perform':63,99,139 'plan':94 'portfolio':21,62,143 'posit':38 'premium':127 'privat':3,11,42,54,97 'problem':95 'profit':66 'rate':104,153 're':51 'region':73 'relationship':65,147 'requir':27 'retent':109 'risk':34 'satisfact':89,123 'scenario':49 'score':124 'segment':70,113,136 'senior':53 'servic':128 'show':141 'sophist':28 'strateg':92 'strategi':33 'suiss':2,9,59 'ub':40 'ultra':16 'ultra-high-net-worth':15 'valu':134 'wealth':24,47,69,75,112,135 'worth':19",
      "category_name": "Advanced Topics",
      "category_slug": "advanced-topics"
    },
    {
      "id": "f2ba73f5-2964-42ae-8705-2ea1aff2001b",
      "title": "Deutsche Bank Credit Risk Analytics",
      "slug": "credit-suisse-risk-management-system",
      "difficulty": "hard",
      "description": "**Business Context:** Deutsche Bank's credit risk division manages exposure across global corporate and sovereign lending portfolios, requiring sophisticated default probability modeling and economic capital allocation.\n\n**Scenario:** You're a senior credit risk analyst at Deutsche Bank evaluating loan portfolio performance across different industry sectors. The risk committee needs to assess probability of default metrics for regulatory capital calculations.\n\n**Problem:** Calculate sector-level credit metrics including average probability of default, loss given default, and exposure at default. Identify high-risk sectors with PD > 2.5% for enhanced monitoring.\n\n**Expected Output:** High-risk lending sectors (>2.5% PD), showing comprehensive credit risk metrics and capital requirements, ordered by PD descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "c7e4c5a1-5b75-4117-a113-118749434557",
      "created_at": "2025-08-11T17:08:07.882Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 23,
      "search_vector": "'2.5':91,102 'across':16,47 'alloc':31 'analyst':39 'analyt':5 'assess':56 'averag':73 'bank':2,9,42 'busi':6 'calcul':64,66 'capit':30,63,110 'committe':53 'comprehens':105 'context':7 'corpor':18 'credit':3,11,37,70,106 'default':25,59,76,79,83 'descend':115 'deutsch':1,8,41 'differ':48 'divis':13 'econom':29 'enhanc':93 'evalu':43 'expect':95 'exposur':15,81 'given':78 'global':17 'high':86,98 'high-risk':85,97 'identifi':84 'includ':72 'industri':49 'lend':21,100 'level':69 'loan':44 'loss':77 'manag':14 'metric':60,71,108 'model':27 'monitor':94 'need':54 'order':112 'output':96 'pd':90,103,114 'perform':46 'portfolio':22,45 'probabl':26,57,74 'problem':65 're':34 'regulatori':62 'requir':23,111 'risk':4,12,38,52,87,99,107 'scenario':32 'sector':50,68,88,101 'sector-level':67 'senior':36 'show':104 'sophist':24 'sovereign':20",
      "category_name": "Advanced Topics",
      "category_slug": "advanced-topics"
    },
    {
      "id": "f8b1fc39-54aa-469b-ad12-af368903bb47",
      "title": "Online Learning Platform Analytics",
      "slug": "disney-revenue-analysis",
      "difficulty": "easy",
      "description": "Business Context: An online education platform wants to analyze student engagement and course performance to improve content delivery and student outcomes.\n\nScenario: You're a data analyst for an e-learning platform. The education team needs insights into course completion rates, student engagement, and content effectiveness.\n\nProblem: Analyze student learning data to identify popular courses, completion patterns, and engagement metrics. Calculate success rates and identify areas for improvement.\n\nExpected Output: Course performance analytics showing enrollment, completion rates, and engagement metrics.",
      "is_premium": false,
      "is_active": true,
      "category_id": "426fcc68-b403-458f-9afd-5137f772de78",
      "created_at": "2025-08-11T17:08:07.774Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 24,
      "search_vector": "'analyst':31 'analyt':4,78 'analyz':13,53 'area':71 'busi':5 'calcul':66 'complet':45,61,81 'content':21,50 'context':6 'cours':17,44,60,76 'data':30,56 'deliveri':22 'e':35 'e-learn':34 'educ':9,39 'effect':51 'engag':15,48,64,84 'enrol':80 'expect':74 'identifi':58,70 'improv':20,73 'insight':42 'learn':2,36,55 'metric':65,85 'need':41 'onlin':1,8 'outcom':25 'output':75 'pattern':62 'perform':18,77 'platform':3,10,37 'popular':59 'problem':52 'rate':46,68,82 're':28 'scenario':26 'show':79 'student':14,24,47,54 'success':67 'team':40 'want':11",
      "category_name": "Aggregation",
      "category_slug": "aggregation"
    },
    {
      "id": "5b8ca9e4-c845-416a-bb0b-6429619dcbcc",
      "title": "Energy Consumption Analysis",
      "slug": "energy-consumption-analysis",
      "difficulty": "medium",
      "description": "**Scenario:** Tesla's energy division analyzes solar panel performance across installations.\n\n**Business Context:** Calculate energy efficiency and identify underperforming installations for maintenance.\n\n**Problem:** Find installations with below-average energy production efficiency.\n\n**Expected Output:** Return installation_id, avg_daily_production, efficiency_rating, and performance_category.",
      "is_premium": false,
      "is_active": true,
      "category_id": "672071b9-615d-473b-8985-5fbc5612729e",
      "created_at": "2025-08-11T13:51:10.032Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 25,
      "search_vector": "'across':13 'analysi':3 'analyz':9 'averag':32 'avg':41 'below-averag':30 'busi':15 'calcul':17 'categori':48 'consumpt':2 'context':16 'daili':42 'divis':8 'effici':19,35,44 'energi':1,7,18,33 'expect':36 'find':27 'id':40 'identifi':21 'instal':14,23,28,39 'mainten':25 'output':37 'panel':11 'perform':12,47 'problem':26 'product':34,43 'rate':45 'return':38 'scenario':4 'solar':10 'tesla':5 'underperform':22",
      "category_name": "Energy Analytics",
      "category_slug": "energy-analytics"
    },
    {
      "id": "642f18fd-a78f-49d2-aded-f876ab91e6e2",
      "title": "Fidelity Investment Portfolio Optimization",
      "slug": "fidelity-portfolio-analytics",
      "difficulty": "medium",
      "description": "**Business Context:** Fidelity's institutional portfolio management team analyzes asset allocation performance across different investment strategies to optimize risk-adjusted returns for pension funds and endowments with multi-billion dollar portfolios.\n\n**Scenario:** You're a senior portfolio analyst at Fidelity managing institutional client investments. The investment committee needs to evaluate which asset classes are delivering superior risk-adjusted performance for strategic allocation decisions.\n\n**Problem:** Calculate risk-adjusted performance metrics and identify asset classes with annual return exceeding 8% and risk score below 15 for institutional portfolio construction.\n\n**Expected Output:** High-performing asset classes meeting return and risk criteria, ordered by return rate descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "e1b879e5-e95b-41ee-b22a-a2ea91897277",
      "created_at": "2025-08-11T17:08:07.870Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 26,
      "search_vector": "'15':91 '8':86 'across':17 'adjust':25,65,75 'alloc':15,69 'analyst':44 'analyz':13 'annual':83 'asset':14,58,80,101 'billion':35 'busi':5 'calcul':72 'class':59,81,102 'client':49 'committe':53 'construct':95 'context':6 'criteria':107 'decis':70 'deliv':61 'descend':112 'differ':18 'dollar':36 'endow':31 'evalu':56 'exceed':85 'expect':96 'fidel':1,7,46 'fund':29 'high':99 'high-perform':98 'identifi':79 'institut':9,48,93 'invest':2,19,50,52 'manag':11,47 'meet':103 'metric':77 'multi':34 'multi-billion':33 'need':54 'optim':4,22 'order':108 'output':97 'pension':28 'perform':16,66,76,100 'portfolio':3,10,37,43,94 'problem':71 'rate':111 're':40 'return':26,84,104,110 'risk':24,64,74,88,106 'risk-adjust':23,63,73 'scenario':38 'score':89 'senior':42 'strateg':68 'strategi':20 'superior':62 'team':12",
      "category_name": "Subqueries",
      "category_slug": "subqueries"
    },
    {
      "id": "58a7cb0d-634f-408b-a5b0-36c0599c2b50",
      "title": "Manufacturing Quality Control Analysis",
      "slug": "ford-vehicle-sales-performance",
      "difficulty": "easy",
      "description": "Business Context: A manufacturing company needs to analyze production quality metrics to identify defect patterns, improve processes, and maintain high quality standards.\n\nScenario: You're a quality assurance analyst in a manufacturing plant. The production team needs insights into defect rates, production efficiency, and quality trends across different product lines.\n\nProblem: Analyze quality control data to identify defect patterns, calculate quality scores, and determine which production lines need attention.\n\nExpected Output: Quality metrics by production line and defect type, showing defect rates and quality scores.",
      "is_premium": false,
      "is_active": true,
      "category_id": "c5ec99f8-01ff-4d36-b36e-27688566397d",
      "created_at": "2025-08-11T13:51:15.991Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 27,
      "search_vector": "'across':51 'analysi':4 'analyst':33 'analyz':12,56 'assur':32 'attent':73 'busi':5 'calcul':64 'compani':9 'context':6 'control':3,58 'data':59 'defect':18,44,62,82,85 'determin':68 'differ':52 'effici':47 'expect':74 'high':24 'identifi':17,61 'improv':20 'insight':42 'line':54,71,80 'maintain':23 'manufactur':1,8,36 'metric':15,77 'need':10,41,72 'output':75 'pattern':19,63 'plant':37 'problem':55 'process':21 'product':13,39,46,53,70,79 'qualiti':2,14,25,31,49,57,65,76,88 'rate':45,86 're':29 'scenario':27 'score':66,89 'show':84 'standard':26 'team':40 'trend':50 'type':83",
      "category_name": "Basic Queries",
      "category_slug": "basic-queries"
    },
    {
      "id": "fefcc89f-08b7-4473-857b-67a895af8b8b",
      "title": "Goldman Sachs Algorithmic Trading Performance",
      "slug": "berkshire-hathaway-insurance-float-optimization",
      "difficulty": "hard",
      "description": "**Business Context:** Goldman Sachs' electronic trading division operates sophisticated algorithmic trading strategies across global equity markets, generating significant alpha through quantitative models and high-frequency execution.\n\n**Scenario:** You're a senior quantitative strategist at Goldman Sachs analyzing algorithmic trading performance across different market regimes. The trading desk needs to evaluate strategy performance using advanced risk-adjusted metrics.\n\n**Problem:** Calculate comprehensive trading metrics including Sharpe ratios, maximum drawdown, and profit factor analysis. Identify strategies with Sharpe ratio > 1.8, max drawdown < 12%, and profit factor > 1.5.\n\n**Expected Output:** High-performing algorithmic strategies meeting all performance criteria, showing detailed risk metrics and profitability analysis, ordered by Sharpe ratio descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "c7e4c5a1-5b75-4117-a113-118749434557",
      "created_at": "2025-08-11T13:51:21.538Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 28,
      "search_vector": "'1.5':91 '1.8':84 '12':87 'across':18,47 'adjust':63 'advanc':60 'algorithm':3,15,44,97 'alpha':24 'analysi':78,109 'analyz':43 'busi':6 'calcul':66 'comprehens':67 'context':7 'criteria':102 'descend':114 'desk':53 'detail':104 'differ':48 'divis':12 'drawdown':74,86 'electron':10 'equiti':20 'evalu':56 'execut':32 'expect':92 'factor':77,90 'frequenc':31 'generat':22 'global':19 'goldman':1,8,41 'high':30,95 'high-frequ':29 'high-perform':94 'identifi':79 'includ':70 'market':21,49 'max':85 'maximum':73 'meet':99 'metric':64,69,106 'model':27 'need':54 'oper':13 'order':110 'output':93 'perform':5,46,58,96,101 'problem':65 'profit':76,89,108 'quantit':26,38 'ratio':72,83,113 're':35 'regim':50 'risk':62,105 'risk-adjust':61 'sach':2,9,42 'scenario':33 'senior':37 'sharp':71,82,112 'show':103 'signific':23 'sophist':14 'strategi':17,57,80,98 'strategist':39 'trade':4,11,16,45,52,68 'use':59",
      "category_name": "Advanced Topics",
      "category_slug": "advanced-topics"
    },
    {
      "id": "076d0462-bff2-4b4b-a1fb-5f4fec111ea7",
      "title": "Goldman Sachs Prime Brokerage Analytics",
      "slug": "danske-bank-risk-management-system",
      "difficulty": "hard",
      "description": "**Business Context:** Goldman Sachs's prime brokerage division serves hedge funds and institutional clients with sophisticated trading, financing, and custody services, requiring advanced analytics to optimize margin lending, securities financing, and risk management in volatile market conditions.\n\n**Scenario:** You're a senior prime brokerage analyst at Goldman Sachs evaluating client relationship profitability and risk exposure. The prime services team needs comprehensive analysis of financing revenues, margin utilization, and counterparty risk for strategic client segmentation.\n\n**Problem:** Calculate prime brokerage metrics including margin utilization rates, financing spread analysis, and counterparty risk assessment. Identify client segments with margin usage > 70%, financing spreads > 150bp, and risk scores < 3.0 for premium service focus.\n\n**Expected Output:** High-value, low-risk client segments meeting all criteria, showing comprehensive prime brokerage metrics, ordered by financing revenue descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "c7e4c5a1-5b75-4117-a113-118749434557",
      "created_at": "2025-08-11T17:08:07.893Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 29,
      "search_vector": "'150bp':105 '3.0':109 '70':102 'advanc':28 'analysi':67,91 'analyst':50 'analyt':5,29 'assess':95 'brokerag':4,12,49,83,130 'busi':6 'calcul':81 'client':19,55,78,97,122 'comprehens':66,128 'condit':42 'context':7 'counterparti':74,93 'criteria':126 'custodi':25 'descend':136 'divis':13 'evalu':54 'expect':114 'exposur':60 'financ':23,35,69,89,103,134 'focus':113 'fund':16 'goldman':1,8,52 'hedg':15 'high':117 'high-valu':116 'identifi':96 'includ':85 'institut':18 'lend':33 'low':120 'low-risk':119 'manag':38 'margin':32,71,86,100 'market':41 'meet':124 'metric':84,131 'need':65 'optim':31 'order':132 'output':115 'premium':111 'prime':3,11,48,62,82,129 'problem':80 'profit':57 'rate':88 're':45 'relationship':56 'requir':27 'revenu':70,135 'risk':37,59,75,94,107,121 'sach':2,9,53 'scenario':43 'score':108 'secur':34 'segment':79,98,123 'senior':47 'serv':14 'servic':26,63,112 'show':127 'sophist':21 'spread':90,104 'strateg':77 'team':64 'trade':22 'usag':101 'util':72,87 'valu':118 'volatil':40",
      "category_name": "Advanced Topics",
      "category_slug": "advanced-topics"
    },
    {
      "id": "2b252b01-350c-481f-a78a-b0259d68e69a",
      "title": "Hospital Patient Care Analytics",
      "slug": "google-ad-revenue-by-platform",
      "difficulty": "easy",
      "description": "Business Context: A hospital system wants to analyze patient care metrics to improve treatment outcomes, optimize resource allocation, and enhance patient satisfaction.\n\nScenario: You're a healthcare data analyst working with hospital administration. The medical team needs insights into patient outcomes, treatment effectiveness, and resource utilization.\n\nProblem: Analyze patient care data to identify treatment success rates, average stay durations, and department performance metrics.\n\nExpected Output: Healthcare analytics showing patient outcomes and department performance metrics.",
      "is_premium": false,
      "is_active": true,
      "category_id": "c5ec99f8-01ff-4d36-b36e-27688566397d",
      "created_at": "2025-08-11T17:06:42.246Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 30,
      "search_vector": "'administr':37 'alloc':22 'analyst':33 'analyt':4,71 'analyz':12,52 'averag':61 'busi':5 'care':3,14,54 'context':6 'data':32,55 'depart':65,76 'durat':63 'effect':47 'enhanc':24 'expect':68 'healthcar':31,70 'hospit':1,8,36 'identifi':57 'improv':17 'insight':42 'medic':39 'metric':15,67,78 'need':41 'optim':20 'outcom':19,45,74 'output':69 'patient':2,13,25,44,53,73 'perform':66,77 'problem':51 'rate':60 're':29 'resourc':21,49 'satisfact':26 'scenario':27 'show':72 'stay':62 'success':59 'system':9 'team':40 'treatment':18,46,58 'util':50 'want':10 'work':34",
      "category_name": "Basic Queries",
      "category_slug": "basic-queries"
    },
    {
      "id": "48c005a7-d8da-47b7-b266-8abc09bc7ba9",
      "title": "HSBC Trade Finance Analytics",
      "slug": "deutsche-bank-risk-management-system",
      "difficulty": "hard",
      "description": "**Business Context:** HSBC's trade finance division facilitates international trade across 40+ countries, providing letters of credit, trade loans, and supply chain financing, requiring sophisticated analytics to assess country risk, optimize pricing, and maintain compliance in complex regulatory environments.\n\n**Scenario:** You're a senior trade finance analyst at HSBC evaluating trade corridor performance and risk assessment. The global trade team needs comprehensive analysis of transaction volumes, country risk exposure, and profitability metrics for strategic market expansion decisions.\n\n**Problem:** Calculate trade finance performance metrics including country risk-adjusted returns, trade corridor profitability, and regulatory compliance scores. Identify corridors with transaction volumes > $5B, risk scores < 2.5, and profit margins > 3.5% for expansion focus.\n\n**Expected Output:** High-volume, low-risk, profitable trade corridors meeting all criteria, showing comprehensive trade finance metrics, ordered by transaction volume descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "c7e4c5a1-5b75-4117-a113-118749434557",
      "created_at": "2025-08-11T17:08:07.883Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 31,
      "search_vector": "'2.5':109 '3.5':113 '40':16 '5b':106 'across':15 'adjust':92 'analysi':67 'analyst':51 'analyt':4,30 'assess':32,60 'busi':5 'calcul':83 'chain':26 'complex':41 'complianc':39,99 'comprehens':66,132 'context':6 'corridor':56,95,102,127 'countri':17,33,71,89 'credit':21 'criteria':130 'decis':81 'descend':140 'divis':11 'environ':43 'evalu':54 'expans':80,115 'expect':117 'exposur':73 'facilit':12 'financ':3,10,27,50,85,134 'focus':116 'global':62 'high':120 'high-volum':119 'hsbc':1,7,53 'identifi':101 'includ':88 'intern':13 'letter':19 'loan':23 'low':123 'low-risk':122 'maintain':38 'margin':112 'market':79 'meet':128 'metric':76,87,135 'need':65 'optim':35 'order':136 'output':118 'perform':57,86 'price':36 'problem':82 'profit':75,96,111,125 'provid':18 're':46 'regulatori':42,98 'requir':28 'return':93 'risk':34,59,72,91,107,124 'risk-adjust':90 'scenario':44 'score':100,108 'senior':48 'show':131 'sophist':29 'strateg':78 'suppli':25 'team':64 'trade':2,9,14,22,49,55,63,84,94,126,133 'transact':69,104,138 'volum':70,105,121,139",
      "category_name": "Advanced Topics",
      "category_slug": "advanced-topics"
    },
    {
      "id": "9da41be0-656e-4919-8987-25e333bef4c6",
      "title": "Real Estate Market Analysis",
      "slug": "home-depot-revenue-analysis",
      "difficulty": "easy",
      "description": "Business Context: A real estate agency wants to analyze property market trends to help clients make informed buying and selling decisions and optimize their pricing strategies.\n\nScenario: You're a market analyst for a real estate company. The sales team needs insights into property values, market trends, and neighborhood performance to guide client recommendations.\n\nProblem: Analyze real estate transaction data to identify price trends, popular neighborhoods, and property characteristics that affect market value.\n\nExpected Output: Market analysis showing price trends and property performance metrics by location and type.",
      "is_premium": false,
      "is_active": true,
      "category_id": "c5ec99f8-01ff-4d36-b36e-27688566397d",
      "created_at": "2025-08-11T17:08:07.772Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 32,
      "search_vector": "'affect':75 'agenc':10 'analysi':4,81 'analyst':36 'analyz':13,60 'busi':5 'buy':22 'characterist':73 'client':19,57 'compani':41 'context':6 'data':64 'decis':25 'estat':2,9,40,62 'expect':78 'guid':56 'help':18 'identifi':66 'inform':21 'insight':46 'locat':90 'make':20 'market':3,15,35,50,76,80 'metric':88 'need':45 'neighborhood':53,70 'optim':27 'output':79 'perform':54,87 'popular':69 'price':29,67,83 'problem':59 'properti':14,48,72,86 're':33 'real':1,8,39,61 'recommend':58 'sale':43 'scenario':31 'sell':24 'show':82 'strategi':30 'team':44 'transact':63 'trend':16,51,68,84 'type':92 'valu':49,77 'want':11",
      "category_name": "Basic Queries",
      "category_slug": "basic-queries"
    },
    {
      "id": "c9150191-e1c2-428e-bfa7-10cd2aca4516",
      "title": "ING Sustainable Finance Analytics",
      "slug": "goldman-sachs-risk-management-system",
      "difficulty": "hard",
      "description": "**Business Context:** ING's sustainable finance division leads ESG lending and green bond issuance across European markets, requiring sophisticated analytics to measure environmental impact, assess sustainability risks, and optimize green financing portfolios for regulatory compliance and competitive advantage.\n\n**Scenario:** You're a senior sustainable finance analyst at ING evaluating green financing portfolio performance and ESG impact metrics. The sustainability committee needs comprehensive analysis of environmental outcomes, risk-adjusted returns, and regulatory compliance for strategic ESG investment decisions.\n\n**Problem:** Calculate sustainable finance performance metrics including carbon offset impact, ESG risk scores, and green premium analysis. Identify financing products with carbon offset > 10,000 tons, ESG scores > 8.0, and green premiums < 50bp for portfolio expansion.\n\n**Expected Output:** High-impact, low-risk, competitive green financing products meeting all sustainability criteria, showing comprehensive ESG metrics, ordered by carbon offset impact descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "c7e4c5a1-5b75-4117-a113-118749434557",
      "created_at": "2025-08-11T17:08:07.881Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 33,
      "search_vector": "'000':107 '10':106 '50bp':115 '8.0':111 'across':19 'adjust':73 'advantag':42 'analysi':67,99 'analyst':50 'analyt':4,24 'assess':29 'bond':17 'busi':5 'calcul':84 'carbon':90,104,141 'committe':64 'competit':41,127 'complianc':39,77 'comprehens':66,136 'context':6 'criteria':134 'decis':82 'descend':144 'divis':11 'environment':27,69 'esg':13,59,80,93,109,137 'european':20 'evalu':53 'expans':118 'expect':119 'financ':3,10,35,49,55,86,101,129 'green':16,34,54,97,113,128 'high':122 'high-impact':121 'identifi':100 'impact':28,60,92,123,143 'includ':89 'ing':1,7,52 'invest':81 'issuanc':18 'lead':12 'lend':14 'low':125 'low-risk':124 'market':21 'measur':26 'meet':131 'metric':61,88,138 'need':65 'offset':91,105,142 'optim':33 'order':139 'outcom':70 'output':120 'perform':57,87 'portfolio':36,56,117 'premium':98,114 'problem':83 'product':102,130 're':45 'regulatori':38,76 'requir':22 'return':74 'risk':31,72,94,126 'risk-adjust':71 'scenario':43 'score':95,110 'senior':47 'show':135 'sophist':23 'strateg':79 'sustain':2,9,30,48,63,85,133 'ton':108",
      "category_name": "Advanced Topics",
      "category_slug": "advanced-topics"
    },
    {
      "id": "c2db86f4-b45e-4958-bdba-934e9bd8949b",
      "title": "Intel Semiconductor Manufacturing Analytics",
      "slug": "high-value-customers",
      "difficulty": "easy",
      "description": "**Business Context:** Intel's manufacturing operations team monitors chip production across global fabrication facilities to optimize yield rates and maintain semiconductor supply chain efficiency.\n\n**Scenario:** You're a manufacturing analyst at Intel studying production performance across different chip architectures. The operations team needs to identify which processor families achieve the highest manufacturing yields.\n\n**Problem:** Find all processor families with average yield rate exceeding 85%.\n\n**Expected Output:** Processor families with average yield (>85% only), ordered by yield descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "c5ec99f8-01ff-4d36-b36e-27688566397d",
      "created_at": "2025-08-11T13:51:03.998Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 34,
      "search_vector": "'85':68,76 'achiev':53 'across':15,40 'analyst':34 'analyt':4 'architectur':43 'averag':64,74 'busi':5 'chain':27 'chip':13,42 'context':6 'descend':81 'differ':41 'effici':28 'exceed':67 'expect':69 'fabric':17 'facil':18 'famili':52,62,72 'find':59 'global':16 'highest':55 'identifi':49 'intel':1,7,36 'maintain':24 'manufactur':3,9,33,56 'monitor':12 'need':47 'oper':10,45 'optim':20 'order':78 'output':70 'perform':39 'problem':58 'processor':51,61,71 'product':14,38 'rate':22,66 're':31 'scenario':29 'semiconductor':2,25 'studi':37 'suppli':26 'team':11,46 'yield':21,57,65,75,80",
      "category_name": "Basic Queries",
      "category_slug": "basic-queries"
    },
    {
      "id": "02b4dc7d-b5e4-44c5-8340-93a0d4414680",
      "title": "Subscription Business Analytics",
      "slug": "jp-morgan-trading-desk-performance",
      "difficulty": "medium",
      "description": "Business Context: A SaaS company wants to analyze their subscription business metrics to understand growth patterns, churn rates, and revenue optimization opportunities.\n\nScenario: You're a business analyst for a subscription-based software company. The executive team needs insights into subscription performance, customer retention, and revenue trends.\n\nProblem: Analyze subscription data to calculate key metrics including monthly recurring revenue (MRR), customer lifetime value indicators, and growth rates.\n\nExpected Output: Subscription analytics showing key business metrics by plan type and customer segment.",
      "is_premium": false,
      "is_active": true,
      "category_id": "9ba6536c-e307-41f7-8ae0-8e49f3f98d55",
      "created_at": "2025-08-11T13:51:15.993Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 35,
      "search_vector": "'analyst':31 'analyt':3,75 'analyz':11,53 'base':36 'busi':2,4,14,30,78 'calcul':57 'churn':20 'compani':8,38 'context':5 'custom':47,65,84 'data':55 'execut':40 'expect':72 'growth':18,70 'includ':60 'indic':68 'insight':43 'key':58,77 'lifetim':66 'metric':15,59,79 'month':61 'mrr':64 'need':42 'opportun':25 'optim':24 'output':73 'pattern':19 'perform':46 'plan':81 'problem':52 'rate':21,71 're':28 'recur':62 'retent':48 'revenu':23,50,63 'saa':7 'scenario':26 'segment':85 'show':76 'softwar':37 'subscript':1,13,35,45,54,74 'subscription-bas':34 'team':41 'trend':51 'type':82 'understand':17 'valu':67 'want':9",
      "category_name": "Window Functions",
      "category_slug": "window-functions"
    },
    {
      "id": "a57277ea-6279-49cf-a268-f31a1152e97c",
      "title": "Digital Marketing Campaign Performance",
      "slug": "jpmorgan-chase-portfolio-analytics",
      "difficulty": "medium",
      "description": "Business Context: A digital marketing agency wants to analyze campaign performance across different channels to optimize their clients' advertising spend and improve ROI.\n\nScenario: You're a data analyst at a digital marketing agency. The account managers need insights into which campaigns and channels are delivering the best results for budget allocation decisions.\n\nProblem: Analyze marketing campaign data to identify top-performing channels, calculate cost per acquisition (CPA), and determine ROI by campaign type.\n\nExpected Output: Campaign performance metrics showing effectiveness and ROI by channel and campaign type.",
      "is_premium": false,
      "is_active": true,
      "category_id": "8798fdcf-0411-45cb-83dd-b4912e133354",
      "created_at": "2025-08-11T17:08:07.873Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 36,
      "search_vector": "'account':40 'acquisit':72 'across':16 'advertis':23 'agenc':10,38 'alloc':56 'analyst':33 'analyz':13,59 'best':52 'budget':55 'busi':5 'calcul':69 'campaign':3,14,46,61,78,82,92 'channel':18,48,68,90 'client':22 'context':6 'cost':70 'cpa':73 'data':32,62 'decis':57 'deliv':50 'determin':75 'differ':17 'digit':1,8,36 'effect':86 'expect':80 'identifi':64 'improv':26 'insight':43 'manag':41 'market':2,9,37,60 'metric':84 'need':42 'optim':20 'output':81 'per':71 'perform':4,15,67,83 'problem':58 're':30 'result':53 'roi':27,76,88 'scenario':28 'show':85 'spend':24 'top':66 'top-perform':65 'type':79,93 'want':11",
      "category_name": "Joins",
      "category_slug": "joins"
    },
    {
      "id": "addf9669-6c47-4410-8b73-354e852ff005",
      "title": "JPMorgan Derivatives Risk Analytics",
      "slug": "jpmorgan-derivatives-risk-analytics",
      "difficulty": "hard",
      "description": "**Business Context:** JPMorgan Chase's derivatives trading desk manages a multi-billion dollar portfolio of complex financial instruments, requiring sophisticated risk measurement and daily P&L attribution analysis.\n\n**Scenario:** You're a senior quantitative analyst at JPMorgan's derivatives desk analyzing position-level risk metrics. The risk management team needs to understand portfolio exposure and implement position sizing based on Value-at-Risk calculations.\n\n**Problem:** Calculate risk-adjusted position metrics including portfolio VaR contribution and exposure concentration. Identify instruments with VaR contribution > 5% of portfolio total and exposure > $50M.\n\n**Expected Output:** High-risk derivatives positions with VaR metrics and exposure analysis, showing only positions exceeding risk thresholds, ordered by VaR contribution descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "c7e4c5a1-5b75-4117-a113-118749434557",
      "created_at": "2025-08-11T17:06:42.249Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 37,
      "search_vector": "'5':91 '50m':97 'adjust':76 'analysi':33,110 'analyst':40 'analyt':4 'analyz':46 'attribut':32 'base':65 'billion':17 'busi':5 'calcul':71,73 'chase':8 'complex':21 'concentr':85 'context':6 'contribut':82,90,120 'daili':29 'deriv':2,10,44,103 'descend':121 'desk':12,45 'dollar':18 'exceed':114 'expect':98 'exposur':60,84,96,109 'financi':22 'high':101 'high-risk':100 'identifi':86 'implement':62 'includ':79 'instrument':23,87 'jpmorgan':1,7,42 'l':31 'level':49 'manag':13,54 'measur':27 'metric':51,78,107 'multi':16 'multi-billion':15 'need':56 'order':117 'output':99 'p':30 'portfolio':19,59,80,93 'posit':48,63,77,104,113 'position-level':47 'problem':72 'quantit':39 're':36 'requir':24 'risk':3,26,50,53,70,75,102,115 'risk-adjust':74 'scenario':34 'senior':38 'show':111 'size':64 'sophist':25 'team':55 'threshold':116 'total':94 'trade':11 'understand':58 'valu':68 'value-at-risk':67 'var':81,89,106,119",
      "category_name": "Advanced Topics",
      "category_slug": "advanced-topics"
    },
    {
      "id": "2a77e25e-17bb-4f89-af67-8634e9ca2153",
      "title": "LinkedIn Professional Network Analytics",
      "slug": "ibm-watson-ai-service-usage",
      "difficulty": "easy",
      "description": "**Business Context:** LinkedIn's growth team analyzes user engagement patterns across different professional industries to optimize platform features and targeting strategies for premium subscriptions.\n\n**Scenario:** You're a product analyst at LinkedIn studying industry engagement trends. The premium growth team needs to identify which professional industries show the highest user activity levels.\n\n**Problem:** Find all professional industries with average monthly engagement score exceeding 75.\n\n**Expected Output:** Industries with average engagement (>75 only), ordered by engagement descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "c5ec99f8-01ff-4d36-b36e-27688566397d",
      "created_at": "2025-08-11T13:51:21.524Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 38,
      "search_vector": "'75':68,75 'across':15 'activ':55 'analyst':34 'analyt':4 'analyz':11 'averag':63,73 'busi':5 'context':6 'descend':80 'differ':16 'engag':13,39,65,74,79 'exceed':67 'expect':69 'featur':22 'find':58 'growth':9,43 'highest':53 'identifi':47 'industri':18,38,50,61,71 'level':56 'linkedin':1,7,36 'month':64 'need':45 'network':3 'optim':20 'order':77 'output':70 'pattern':14 'platform':21 'premium':27,42 'problem':57 'product':33 'profession':2,17,49,60 're':31 'scenario':29 'score':66 'show':51 'strategi':25 'studi':37 'subscript':28 'target':24 'team':10,44 'trend':40 'user':12,54",
      "category_name": "Basic Queries",
      "category_slug": "basic-queries"
    },
    {
      "id": "71d86caa-b97f-448e-8282-93dc930abe4b",
      "title": "Supply Chain Logistics Analytics",
      "slug": "lockheed-martin-defense-contracts",
      "difficulty": "medium",
      "description": "Business Context: A logistics company wants to analyze their supply chain operations to optimize delivery routes, reduce costs, and improve customer satisfaction.\n\nScenario: You're a logistics analyst working on supply chain optimization. The operations team needs insights into delivery performance, route efficiency, and cost analysis.\n\nProblem: Analyze logistics data to identify delivery performance patterns, calculate efficiency metrics, and determine cost optimization opportunities.\n\nExpected Output: Logistics performance metrics showing delivery efficiency and cost analysis by region and route type.",
      "is_premium": false,
      "is_active": true,
      "category_id": "8798fdcf-0411-45cb-83dd-b4912e133354",
      "created_at": "2025-08-11T13:51:12.116Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 39,
      "search_vector": "'analysi':50,78 'analyst':32 'analyt':4 'analyz':12,52 'busi':5 'calcul':60 'chain':2,15,36 'compani':9 'context':6 'cost':22,49,65,77 'custom':25 'data':54 'deliveri':19,44,57,74 'determin':64 'effici':47,61,75 'expect':68 'identifi':56 'improv':24 'insight':42 'logist':3,8,31,53,70 'metric':62,72 'need':41 'oper':16,39 'opportun':67 'optim':18,37,66 'output':69 'pattern':59 'perform':45,58,71 'problem':51 're':29 'reduc':21 'region':80 'rout':20,46,82 'satisfact':26 'scenario':27 'show':73 'suppli':1,14,35 'team':40 'type':83 'want':10 'work':33",
      "category_name": "Joins",
      "category_slug": "joins"
    },
    {
      "id": "3ff6929e-490a-477b-a060-b0d8873c9cc7",
      "title": "Mastercard Global Payment Network Analytics",
      "slug": "mastercard-portfolio-analytics",
      "difficulty": "medium",
      "description": "**Business Context:** Mastercard's payment network processes over 150 billion transactions annually across 210 countries, requiring sophisticated analytics to optimize transaction routing, fraud detection, and revenue optimization.\n\n**Scenario:** You're a senior payments analyst at Mastercard studying transaction performance across geographic regions. The network team needs to identify high-performing regions with fraud rates below 0.1% and success rates above 99%.\n\n**Problem:** Calculate payment network metrics and identify regions meeting fraud and success criteria.\n\n**Expected Output:** High-performing regions (<0.1% fraud, >99% success), ordered by volume descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "9ba6536c-e307-41f7-8ae0-8e49f3f98d55",
      "created_at": "2025-08-11T17:08:07.875Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 40,
      "search_vector": "'0.1':62,87 '150':14 '210':19 '99':67,89 'across':18,45 'analyst':39 'analyt':5,23 'annual':17 'billion':15 'busi':6 'calcul':69 'context':7 'countri':20 'criteria':80 'descend':94 'detect':29 'expect':81 'fraud':28,59,77,88 'geograph':46 'global':2 'high':55,84 'high-perform':54,83 'identifi':53,74 'mastercard':1,8,41 'meet':76 'metric':72 'need':51 'network':4,11,49,71 'optim':25,32 'order':91 'output':82 'payment':3,10,38,70 'perform':44,56,85 'problem':68 'process':12 'rate':60,65 're':35 'region':47,57,75,86 'requir':21 'revenu':31 'rout':27 'scenario':33 'senior':37 'sophist':22 'studi':42 'success':64,79,90 'team':50 'transact':16,26,43 'volum':93",
      "category_name": "Window Functions",
      "category_slug": "window-functions"
    },
    {
      "id": "eb15df93-f7ca-4177-97d4-2ff06bc7c917",
      "title": "McKinsey Client Engagement Analysis",
      "slug": "mckinsey-client-engagement-analysis",
      "difficulty": "hard",
      "description": "**Business Context:** McKinsey & Company analyzes client engagement patterns and consultant utilization across different practice areas to optimize staffing models and identify high-value client relationships for strategic account management.\n\n**Scenario:** You're a senior analytics manager at McKinsey developing insights for the firm's managing partners. The leadership team needs to understand which engagement types and client combinations drive the highest profitability and consultant development.\n\n**Problem:** Calculate engagement profitability using: Revenue - (Consultant Hours × Hourly Rate × 1.4 overhead multiplier). Identify client-practice combinations with >$2M annual revenue and >25% profit margins. Rank by profit margin and include consultant utilization metrics.\n\n**Expected Output:** High-value client-practice combinations with revenue, costs, profit margins, and utilization rates, showing only profitable engagements meeting criteria, ordered by profit margin descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "c7e4c5a1-5b75-4117-a113-118749434557",
      "created_at": "2025-08-11T13:51:12.118Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 41,
      "search_vector": "'1.4':83 '25':96 '2m':92 'account':33 'across':16 'analysi':4 'analyt':40 'analyz':9 'annual':93 'area':19 'busi':5 'calcul':72 'client':2,10,29,62,88,114 'client-practic':87,113 'combin':63,90,116 'compani':8 'consult':14,69,77,105 'context':6 'cost':119 'criteria':130 'descend':135 'develop':44,70 'differ':17 'drive':64 'engag':3,11,59,73,128 'expect':108 'firm':48 'high':27,111 'high-valu':26,110 'highest':66 'hour':78,80 'identifi':25,86 'includ':104 'insight':45 'leadership':53 'manag':34,41,50 'margin':98,102,121,134 'mckinsey':1,7,43 'meet':129 'metric':107 'model':23 'multipli':85 'need':55 'optim':21 'order':131 'output':109 'overhead':84 'partner':51 'pattern':12 'practic':18,89,115 'problem':71 'profit':67,74,97,101,120,127,133 'rank':99 'rate':81,124 're':37 'relationship':30 'revenu':76,94,118 'scenario':35 'senior':39 'show':125 'staf':22 'strateg':32 'team':54 'type':60 'understand':57 'use':75 'util':15,106,123 'valu':28,112 '×':79,82",
      "category_name": "Advanced Topics",
      "category_slug": "advanced-topics"
    },
    {
      "id": "130642c4-caa3-4fb9-8069-7b29b664b0b6",
      "title": "Morgan Stanley Institutional Securities Analytics",
      "slug": "intesa-sanpaolo-risk-management-system",
      "difficulty": "hard",
      "description": "**Business Context:** Morgan Stanley's institutional securities division provides equity and fixed income trading, research, and capital markets services to institutional clients, requiring sophisticated analytics to optimize trading strategies, manage market risk, and enhance client service delivery.\n\n**Scenario:** You're a senior institutional securities analyst at Morgan Stanley evaluating trading desk performance and client relationship profitability. The institutional division needs comprehensive analysis of trading volumes, spread capture, and client revenue for strategic resource allocation decisions.\n\n**Problem:** Calculate institutional securities metrics including trading efficiency ratios, spread analysis, and client profitability models. Identify desks with trading volumes > $50B, spread capture > 25bp, and client ROI > 20% for premium resource allocation.\n\n**Expected Output:** High-volume, high-spread, high-ROI trading desks meeting all performance criteria, showing comprehensive institutional securities metrics, ordered by trading volume descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "c7e4c5a1-5b75-4117-a113-118749434557",
      "created_at": "2025-08-11T17:08:07.890Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 42,
      "search_vector": "'20':108 '25bp':104 '50b':101 'alloc':79,112 'analysi':67,91 'analyst':50 'analyt':5,30 'busi':6 'calcul':82 'capit':22 'captur':72,103 'client':27,40,59,74,93,106 'comprehens':66,131 'context':7 'criteria':129 'decis':80 'deliveri':42 'descend':139 'desk':56,97,125 'divis':13,64 'effici':88 'enhanc':39 'equiti':15 'evalu':54 'expect':113 'fix':17 'high':116,119,122 'high-roi':121 'high-spread':118 'high-volum':115 'identifi':96 'includ':86 'incom':18 'institut':3,11,26,48,63,83,132 'manag':35 'market':23,36 'meet':126 'metric':85,134 'model':95 'morgan':1,8,52 'need':65 'optim':32 'order':135 'output':114 'perform':57,128 'premium':110 'problem':81 'profit':61,94 'provid':14 'ratio':89 're':45 'relationship':60 'requir':28 'research':20 'resourc':78,111 'revenu':75 'risk':37 'roi':107,123 'scenario':43 'secur':4,12,49,84,133 'senior':47 'servic':24,41 'show':130 'sophist':29 'spread':71,90,102,120 'stanley':2,9,53 'strateg':77 'strategi':34 'trade':19,33,55,69,87,99,124,137 'volum':70,100,117,138",
      "category_name": "Advanced Topics",
      "category_slug": "advanced-topics"
    },
    {
      "id": "31ec673c-d80a-4fa5-b27b-2cfb56d5853c",
      "title": "Movie Recommendation Engine",
      "slug": "movie-recommendation-engine",
      "difficulty": "hard",
      "description": "**Scenario:** Disney+ wants to build a content recommendation system.\n\n**Business Context:** Find movies similar to a user's watched content based on genre preferences and ratings.\n\n**Problem:** For users who watched 'Action' movies, recommend other high-rated movies in the same genre they haven't seen.\n\n**Expected Output:** Return movie recommendations for Action movie watchers, excluding movies they've already seen.",
      "is_premium": false,
      "is_active": true,
      "category_id": "c6117091-f4fa-4c45-925b-8671834d6408",
      "created_at": "2025-08-11T13:51:10.018Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 43,
      "search_vector": "'action':35,57 'alreadi':64 'base':24 'build':8 'busi':13 'content':10,23 'context':14 'disney':5 'engin':3 'exclud':60 'expect':51 'find':15 'genr':26,46 'haven':48 'high':40 'high-rat':39 'movi':1,16,36,42,54,58,61 'output':52 'prefer':27 'problem':30 'rate':29,41 'recommend':2,11,37,55 'return':53 'scenario':4 'seen':50,65 'similar':17 'system':12 'user':20,32 've':63 'want':6 'watch':22,34 'watcher':59",
      "category_name": "Recommendation Systems",
      "category_slug": "recommendation-systems"
    },
    {
      "id": "b01ac3b6-2598-4cc2-9375-cec6a2aa0560",
      "title": "Netflix Content Strategy Analytics",
      "slug": "microsoft-azure-cloud-analytics",
      "difficulty": "medium",
      "description": "**Business Context:** Netflix's content strategy team analyzes viewing patterns and subscriber engagement across different content genres to optimize content acquisition investments, reduce subscriber churn, and compete with Disney+, HBO Max, and Amazon Prime in the streaming wars.\n\n**Scenario:** You're a senior content analyst at Netflix evaluating content performance across different genres. The content investment committee needs to identify which genres achieve the highest viewer engagement with production budgets below $50M per title and engagement scores above 80%.\n\n**Problem:** Calculate content performance metrics and identify high-engagement genres meeting budget and engagement criteria for future content investments.\n\n**Expected Output:** High-engagement content genres (<$50M budget, >80% engagement), ordered by engagement score descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "9ba6536c-e307-41f7-8ae0-8e49f3f98d55",
      "created_at": "2025-08-11T17:06:42.247Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 44,
      "search_vector": "'50m':76,111 '80':83,113 'achiev':67 'acquisit':25 'across':18,55 'amazon':37 'analyst':49 'analyt':4 'analyz':12 'budget':74,96,112 'busi':5 'calcul':85 'churn':29 'committe':61 'compet':31 'content':2,9,20,24,48,53,59,86,102,109 'context':6 'criteria':99 'descend':119 'differ':19,56 'disney':33 'engag':17,71,80,93,98,108,114,117 'evalu':52 'expect':104 'futur':101 'genr':21,57,66,94,110 'hbo':34 'high':92,107 'high-engag':91,106 'highest':69 'identifi':64,90 'invest':26,60,103 'max':35 'meet':95 'metric':88 'need':62 'netflix':1,7,51 'optim':23 'order':115 'output':105 'pattern':14 'per':77 'perform':54,87 'prime':38 'problem':84 'product':73 're':45 'reduc':27 'scenario':43 'score':81,118 'senior':47 'strategi':3,10 'stream':41 'subscrib':16,28 'team':11 'titl':78 'view':13 'viewer':70 'war':42",
      "category_name": "Window Functions",
      "category_slug": "window-functions"
    },
    {
      "id": "7faab40d-5472-4771-a2ce-80acb990ae52",
      "title": "Oracle Enterprise Software Analytics",
      "slug": "morgan-stanley-portfolio-analytics",
      "difficulty": "medium",
      "description": "**Business Context:** Oracle's enterprise software division analyzes customer deployment and usage patterns across different industry verticals to optimize cloud migration strategies, maximize annual contract values, and compete with Microsoft, SAP, and Salesforce in the enterprise software market.\n\n**Scenario:** You're a senior enterprise software analyst at Oracle evaluating customer success metrics across industry verticals. The customer success team needs to identify which verticals achieve highest software utilization with annual contract values above $500K and utilization rates exceeding 75%.\n\n**Problem:** Calculate enterprise software performance metrics and identify high-utilization verticals meeting contract value and usage criteria for expansion focus.\n\n**Expected Output:** High-utilization industry verticals (>$500K ACV, >75% utilization), ordered by utilization rate descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "8798fdcf-0411-45cb-83dd-b4912e133354",
      "created_at": "2025-08-11T17:08:07.871Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 45,
      "search_vector": "'500k':78,112 '75':83,114 'achiev':69 'across':18,57 'acv':113 'analyst':50 'analyt':4 'analyz':12 'annual':28,74 'busi':5 'calcul':85 'cloud':24 'compet':32 'context':6 'contract':29,75,97 'criteria':101 'custom':13,54,61 'deploy':14 'descend':120 'differ':19 'divis':11 'enterpris':2,9,40,48,86 'evalu':53 'exceed':82 'expans':103 'expect':105 'focus':104 'high':93,108 'high-util':92,107 'highest':70 'identifi':66,91 'industri':20,58,110 'market':42 'maxim':27 'meet':96 'metric':56,89 'microsoft':34 'migrat':25 'need':64 'optim':23 'oracl':1,7,52 'order':116 'output':106 'pattern':17 'perform':88 'problem':84 'rate':81,119 're':45 'salesforc':37 'sap':35 'scenario':43 'senior':47 'softwar':3,10,41,49,71,87 'strategi':26 'success':55,62 'team':63 'usag':16,100 'util':72,80,94,109,115,118 'valu':30,76,98 'vertic':21,59,68,95,111",
      "category_name": "Joins",
      "category_slug": "joins"
    },
    {
      "id": "387f6300-3716-40e2-85dc-a792cb32a6b1",
      "title": "PayPal Digital Payments Analytics",
      "slug": "merck-drug-development-pipeline",
      "difficulty": "easy",
      "description": "**Business Context:** PayPal's merchant services team analyzes transaction patterns across different merchant categories to optimize payment processing fees and identify high-growth market segments.\n\n**Scenario:** You're a business analyst at PayPal studying merchant transaction volumes. The merchant growth team needs to identify which business categories generate the highest average transaction values.\n\n**Problem:** Find all merchant categories with average transaction value exceeding $250.\n\n**Expected Output:** Merchant categories with average transaction value (>$250 only), ordered by average value descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "426fcc68-b403-458f-9afd-5137f772de78",
      "created_at": "2025-08-11T13:51:12.114Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 46,
      "search_vector": "'250':69,78 'across':15 'analyst':36 'analyt':4 'analyz':12 'averag':56,65,75,82 'busi':5,35,51 'categori':18,52,63,73 'context':6 'descend':84 'differ':16 'digit':2 'exceed':68 'expect':70 'fee':23 'find':60 'generat':53 'growth':28,45 'high':27 'high-growth':26 'highest':55 'identifi':25,49 'market':29 'merchant':9,17,40,44,62,72 'need':47 'optim':20 'order':80 'output':71 'pattern':14 'payment':3,21 'paypal':1,7,38 'problem':59 'process':22 're':33 'scenario':31 'segment':30 'servic':10 'studi':39 'team':11,46 'transact':13,41,57,66,76 'valu':58,67,77,83 'volum':42",
      "category_name": "Aggregation",
      "category_slug": "aggregation"
    },
    {
      "id": "9c9399dc-dc2c-4d6e-8ac0-15ffb247433a",
      "title": "Financial Portfolio Performance Analysis",
      "slug": "state-street-portfolio-analytics",
      "difficulty": "medium",
      "description": "Business Context: An investment management firm wants to analyze portfolio performance across different asset classes and investment strategies to optimize client returns and manage risk.\n\nScenario: You're a portfolio analyst at an investment firm. The portfolio managers need insights into asset performance, risk metrics, and allocation effectiveness for client reporting.\n\nProblem: Analyze investment portfolio data to calculate returns, assess risk levels, and evaluate performance across different asset classes and time periods.\n\nExpected Output: Portfolio performance metrics showing returns, risk assessment, and asset allocation effectiveness.",
      "is_premium": false,
      "is_active": true,
      "category_id": "47c2009b-81d2-458f-96b0-1a68aee370d6",
      "created_at": "2025-08-11T17:08:07.869Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 47,
      "search_vector": "'across':16,70 'alloc':51,88 'analysi':4 'analyst':35 'analyz':13,57 'assess':64,85 'asset':18,46,72,87 'busi':5 'calcul':62 'class':19,73 'client':25,54 'context':6 'data':60 'differ':17,71 'effect':52,89 'evalu':68 'expect':77 'financi':1 'firm':10,39 'insight':44 'invest':8,21,38,58 'level':66 'manag':9,28,42 'metric':49,81 'need':43 'optim':24 'output':78 'perform':3,15,47,69,80 'period':76 'portfolio':2,14,34,41,59,79 'problem':56 're':32 'report':55 'return':26,63,83 'risk':29,48,65,84 'scenario':30 'show':82 'strategi':22 'time':75 'want':11",
      "category_name": "Time Analysis",
      "category_slug": "time-analysis"
    },
    {
      "id": "f5c2c06b-023a-4e07-9240-18f97fefcde2",
      "title": "Pinterest Content Engagement Analytics",
      "slug": "netflix-revenue-analysis",
      "difficulty": "easy",
      "description": "**Business Context:** Pinterest's content strategy team analyzes pin performance across different lifestyle categories to optimize content recommendations and advertiser targeting strategies.\n\n**Scenario:** You're a content analyst at Pinterest studying engagement patterns across lifestyle categories. The advertising team needs to identify which categories generate the highest user engagement rates.\n\n**Problem:** Find all content categories with average engagement rate exceeding 15%.\n\n**Expected Output:** Content categories with high engagement (>15% average), ordered by engagement rate descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "c5ec99f8-01ff-4d36-b36e-27688566397d",
      "created_at": "2025-08-11T17:08:07.775Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 48,
      "search_vector": "'15':65,73 'across':15,38 'advertis':24,42 'analyst':32 'analyt':4 'analyz':12 'averag':61,74 'busi':5 'categori':18,40,48,59,69 'content':2,9,21,31,58,68 'context':6 'descend':79 'differ':16 'engag':3,36,53,62,72,77 'exceed':64 'expect':66 'find':56 'generat':49 'high':71 'highest':51 'identifi':46 'lifestyl':17,39 'need':44 'optim':20 'order':75 'output':67 'pattern':37 'perform':14 'pin':13 'pinterest':1,7,34 'problem':55 'rate':54,63,78 're':29 'recommend':22 'scenario':27 'strategi':10,26 'studi':35 'target':25 'team':11,43 'user':52",
      "category_name": "Basic Queries",
      "category_slug": "basic-queries"
    },
    {
      "id": "20fc0621-5497-4fc6-b871-05b2ac57a124",
      "title": "Product Inventory Status",
      "slug": "product-inventory-status",
      "difficulty": "easy",
      "description": "**Scenario:** Walmart needs to track inventory levels for restocking.\n\n**Business Context:** Identify products that are low in stock (quantity < 50) or out of stock.\n\n**Problem:** Find products with low inventory and categorize their status.\n\n**Expected Output:** Return product_name, quantity, and status ('Out of Stock' if 0, 'Low Stock' if < 50, 'In Stock' otherwise).",
      "is_premium": false,
      "is_active": true,
      "category_id": "c5ec99f8-01ff-4d36-b36e-27688566397d",
      "created_at": "2025-08-11T13:51:04.031Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 49,
      "search_vector": "'0':50 '50':23,54 'busi':13 'categor':35 'context':14 'expect':38 'find':29 'identifi':15 'inventori':2,9,33 'level':10 'low':19,32,51 'name':42 'need':6 'otherwis':57 'output':39 'problem':28 'product':1,16,30,41 'quantiti':22,43 'restock':12 'return':40 'scenario':4 'status':3,37,45 'stock':21,27,48,52,56 'track':8 'walmart':5",
      "category_name": "Basic Queries",
      "category_slug": "basic-queries"
    },
    {
      "id": "555fe7bc-059f-4b65-aa4f-0e6a318265d8",
      "title": "Renaissance Technologies Quantitative Alpha",
      "slug": "renaissance-technologies-quantitative-alpha",
      "difficulty": "hard",
      "description": "**Business Context:** Renaissance Technologies' Medallion Fund develops proprietary quantitative models to identify market inefficiencies and generate alpha through systematic trading strategies across global equity markets.\n\n**Scenario:** You're a senior quantitative researcher at Renaissance Technologies building next-generation alpha models. The portfolio management team needs to evaluate strategy performance using risk-adjusted metrics and factor decomposition.\n\n**Problem:** Calculate strategy alpha generation using Sharpe ratios, Information Ratios, and maximum drawdown analysis. Identify strategies with Sharpe ratio > 2.0 and maximum drawdown < 8%.\n\n**Expected Output:** High-performing quantitative strategies with risk metrics and alpha generation statistics, showing only strategies meeting performance criteria, ordered by Sharpe ratio descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "c7e4c5a1-5b75-4117-a113-118749434557",
      "created_at": "2025-08-11T13:51:21.536Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 50,
      "search_vector": "'2.0':82 '8':86 'across':26 'adjust':58 'alpha':4,21,44,66,98 'analysi':76 'build':40 'busi':5 'calcul':64 'context':6 'criteria':106 'decomposit':62 'descend':111 'develop':11 'drawdown':75,85 'equiti':28 'evalu':52 'expect':87 'factor':61 'fund':10 'generat':20,43,67,99 'global':27 'high':90 'high-perform':89 'identifi':16,77 'ineffici':18 'inform':71 'manag':48 'market':17,29 'maximum':74,84 'medallion':9 'meet':104 'metric':59,96 'model':14,45 'need':50 'next':42 'next-gener':41 'order':107 'output':88 'perform':54,91,105 'portfolio':47 'problem':63 'proprietari':12 'quantit':3,13,35,92 'ratio':70,72,81,110 're':32 'renaiss':1,7,38 'research':36 'risk':57,95 'risk-adjust':56 'scenario':30 'senior':34 'sharp':69,80,109 'show':101 'statist':100 'strategi':25,53,65,78,93,103 'systemat':23 'team':49 'technolog':2,8,39 'trade':24 'use':55,68",
      "category_name": "Advanced Topics",
      "category_slug": "advanced-topics"
    },
    {
      "id": "5c8c0ec6-3d89-4c9d-b360-e449a870df7d",
      "title": "Salesforce CRM Performance Analytics",
      "slug": "nike-product-sales-by-region",
      "difficulty": "easy",
      "description": "**Business Context:** Salesforce's customer success team analyzes CRM usage patterns across different industry verticals to optimize platform features and identify upselling opportunities.\n\n**Scenario:** You're a customer success analyst at Salesforce studying customer engagement across industry segments. The account management team needs to identify which industries show the highest platform adoption rates.\n\n**Problem:** Find all industry verticals with average monthly active users exceeding 500 per organization.\n\n**Expected Output:** Industry verticals with high adoption (>500 MAU average), ordered by active users descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "c5ec99f8-01ff-4d36-b36e-27688566397d",
      "created_at": "2025-08-11T13:51:12.105Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 51,
      "search_vector": "'500':69,79 'account':44 'across':16,40 'activ':66,84 'adopt':56,78 'analyst':34 'analyt':4 'analyz':12 'averag':64,81 'busi':5 'context':6 'crm':2,13 'custom':9,32,38 'descend':86 'differ':17 'engag':39 'exceed':68 'expect':72 'featur':23 'find':59 'high':77 'highest':54 'identifi':25,49 'industri':18,41,51,61,74 'manag':45 'mau':80 'month':65 'need':47 'opportun':27 'optim':21 'order':82 'organ':71 'output':73 'pattern':15 'per':70 'perform':3 'platform':22,55 'problem':58 'rate':57 're':30 'salesforc':1,7,36 'scenario':28 'segment':42 'show':52 'studi':37 'success':10,33 'team':11,46 'upsel':26 'usag':14 'user':67,85 'vertic':19,62,75",
      "category_name": "Basic Queries",
      "category_slug": "basic-queries"
    },
    {
      "id": "0a009921-29bc-46b5-a63f-bd014ae9782e",
      "title": "Salesforce Customer Success Analytics",
      "slug": "salesforce-revenue-analysis",
      "difficulty": "easy",
      "description": "**Business Context:** Salesforce's customer success team analyzes CRM adoption metrics across different industry verticals to identify expansion opportunities and reduce churn through proactive account management strategies.\n\n**Scenario:** You're a customer success analyst at Salesforce studying platform utilization patterns. The account management team needs to identify which industry verticals show the highest feature adoption rates for targeted expansion campaigns.\n\n**Problem:** Find all industry verticals with average feature adoption score exceeding 75% for expansion targeting.\n\n**Expected Output:** Industry verticals with high adoption (>75% average), ordered by adoption score descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "426fcc68-b403-458f-9afd-5137f772de78",
      "created_at": "2025-08-11T17:08:07.821Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 52,
      "search_vector": "'75':76,87 'account':29,46 'across':16 'adopt':14,59,73,86,91 'analyst':38 'analyt':4 'analyz':12 'averag':71,88 'busi':5 'campaign':64 'churn':26 'context':6 'crm':13 'custom':2,9,36 'descend':93 'differ':17 'exceed':75 'expans':22,63,78 'expect':80 'featur':58,72 'find':66 'high':85 'highest':57 'identifi':21,51 'industri':18,53,68,82 'manag':30,47 'metric':15 'need':49 'opportun':23 'order':89 'output':81 'pattern':44 'platform':42 'proactiv':28 'problem':65 'rate':60 're':34 'reduc':25 'salesforc':1,7,40 'scenario':32 'score':74,92 'show':55 'strategi':31 'studi':41 'success':3,10,37 'target':62,79 'team':11,48 'util':43 'vertic':19,54,69,83",
      "category_name": "Aggregation",
      "category_slug": "aggregation"
    },
    {
      "id": "5a52f8a8-e4d2-4519-958f-9352010eff9d",
      "title": "Session Duration Analysis",
      "slug": "session-duration-analysis",
      "difficulty": "medium",
      "description": "**Scenario:** YouTube wants to analyze user session patterns for recommendation algorithms.\n\n**Business Context:** Calculate session statistics including total time, average session duration, and user activity patterns.\n\n**Problem:** Find users with average session duration > 30 minutes and total watch time > 2 hours.\n\n**Expected Output:** Return user_id, session_count, total_minutes, and avg_session_duration for qualifying users.",
      "is_premium": false,
      "is_active": true,
      "category_id": "47c2009b-81d2-458f-96b0-1a68aee370d6",
      "created_at": "2025-08-11T13:51:04.044Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 53,
      "search_vector": "'2':43 '30':37 'activ':28 'algorithm':14 'analysi':3 'analyz':8 'averag':23,34 'avg':55 'busi':15 'calcul':17 'context':16 'count':51 'durat':2,25,36,57 'expect':45 'find':31 'hour':44 'id':49 'includ':20 'minut':38,53 'output':46 'pattern':11,29 'problem':30 'qualifi':59 'recommend':13 'return':47 'scenario':4 'session':1,10,18,24,35,50,56 'statist':19 'time':22,42 'total':21,40,52 'user':9,27,32,48,60 'want':6 'watch':41 'youtub':5",
      "category_name": "Time Analysis",
      "category_slug": "time-analysis"
    },
    {
      "id": "070b96e1-0cb0-4397-9746-275d5937653d",
      "title": "Snapchat Social Media Engagement",
      "slug": "oracle-revenue-analysis",
      "difficulty": "easy",
      "description": "**Business Context:** Snapchat's growth team analyzes user engagement patterns across different demographic segments to optimize content algorithms and advertising targeting strategies.\n\n**Scenario:** You're a user engagement analyst at Snapchat studying usage patterns across age demographics. The product team needs to identify which age groups show the highest daily active engagement rates.\n\n**Problem:** Find all age demographics with average daily engagement time exceeding 45 minutes.\n\n**Expected Output:** Age demographics with high engagement (>45 min daily average), ordered by engagement time descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "c5ec99f8-01ff-4d36-b36e-27688566397d",
      "created_at": "2025-08-11T17:08:07.822Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 54,
      "search_vector": "'45':69,78 'across':15,39 'activ':55 'advertis':24 'age':40,49,61,73 'algorithm':22 'analyst':33 'analyz':11 'averag':64,81 'busi':5 'content':21 'context':6 'daili':54,65,80 'demograph':17,41,62,74 'descend':86 'differ':16 'engag':4,13,32,56,66,77,84 'exceed':68 'expect':71 'find':59 'group':50 'growth':9 'high':76 'highest':53 'identifi':47 'media':3 'min':79 'minut':70 'need':45 'optim':20 'order':82 'output':72 'pattern':14,38 'problem':58 'product':43 'rate':57 're':29 'scenario':27 'segment':18 'show':51 'snapchat':1,7,35 'social':2 'strategi':26 'studi':36 'target':25 'team':10,44 'time':67,85 'usag':37 'user':12,31",
      "category_name": "Basic Queries",
      "category_slug": "basic-queries"
    },
    {
      "id": "a62c7efb-6dc5-40ae-8261-6cecdd2a482e",
      "title": "Customer Service Analytics Dashboard",
      "slug": "societe-generale-risk-management-system",
      "difficulty": "hard",
      "description": "Business Context: A customer service department wants to analyze support ticket data to improve response times, identify common issues, and enhance customer satisfaction.\n\nScenario: You're a customer service analyst responsible for monitoring support metrics. The management team needs insights into ticket volumes, resolution times, and agent performance.\n\nProblem: Analyze customer support data to identify patterns in ticket types, calculate key performance metrics, and assess service quality across different channels.\n\nExpected Output: Customer service metrics showing ticket analysis, response times, and performance indicators by category and channel.",
      "is_premium": false,
      "is_active": true,
      "category_id": "c7e4c5a1-5b75-4117-a113-118749434557",
      "created_at": "2025-08-11T17:08:07.886Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 55,
      "search_vector": "'across':72 'agent':51 'analysi':82 'analyst':34 'analyt':3 'analyz':13,54 'assess':69 'busi':5 'calcul':64 'categori':89 'channel':74,91 'common':22 'context':6 'custom':1,8,26,32,55,77 'dashboard':4 'data':16,57 'depart':10 'differ':73 'enhanc':25 'expect':75 'identifi':21,59 'improv':18 'indic':87 'insight':44 'issu':23 'key':65 'manag':41 'metric':39,67,79 'monitor':37 'need':43 'output':76 'pattern':60 'perform':52,66,86 'problem':53 'qualiti':71 're':30 'resolut':48 'respons':19,35,83 'satisfact':27 'scenario':28 'servic':2,9,33,70,78 'show':80 'support':14,38,56 'team':42 'ticket':15,46,62,81 'time':20,49,84 'type':63 'volum':47 'want':11",
      "category_name": "Advanced Topics",
      "category_slug": "advanced-topics"
    },
    {
      "id": "0d48baad-aa87-4f93-9612-328305363c65",
      "title": "Supply Chain Optimization",
      "slug": "supply-chain-optimization",
      "difficulty": "medium",
      "description": "**Scenario:** FedEx needs to optimize warehouse inventory levels across regions.\n\n**Business Context:** Calculate reorder points for each product at each warehouse based on demand patterns.\n\n**Problem:** Find products that need restocking (current_stock < reorder_point) at each warehouse.\n\n**Expected Output:** Return warehouse_id, product_name, current_stock, reorder_point, and shortage_amount.",
      "is_premium": false,
      "is_active": true,
      "category_id": "949357d0-c57c-45fc-93a7-4c350616a3a8",
      "created_at": "2025-08-11T13:51:10.024Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 56,
      "search_vector": "'across':12 'amount':55 'base':25 'busi':14 'calcul':16 'chain':2 'context':15 'current':35,49 'demand':27 'expect':42 'fedex':5 'find':30 'id':46 'inventori':10 'level':11 'name':48 'need':6,33 'optim':3,8 'output':43 'pattern':28 'point':18,38,52 'problem':29 'product':21,31,47 'region':13 'reorder':17,37,51 'restock':34 'return':44 'scenario':4 'shortag':54 'stock':36,50 'suppli':1 'warehous':9,24,41,45",
      "category_name": "Supply Chain",
      "category_slug": "supply-chain"
    },
    {
      "id": "e250723c-d9ff-4f9b-81ab-ec5e5f5fddd0",
      "title": "Target Store Revenue by Category",
      "slug": "target-store-revenue-by-category",
      "difficulty": "easy",
      "description": "**Business Context:** Target's retail operations team analyzes product category performance across stores to optimize inventory allocation and promotional strategies.\n\n**Scenario:** You're a retail analyst at Target studying category performance. The merchandising team needs to identify which product categories are driving the most revenue for strategic planning.\n\n**Problem:** List all product categories with total revenue exceeding $1 million.\n\n**Expected Output:** Product categories with total revenue (>$1M only), ordered by revenue descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "426fcc68-b403-458f-9afd-5137f772de78",
      "created_at": "2025-08-11T13:51:21.530Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 57,
      "search_vector": "'1':63 '1m':72 'across':17 'alloc':22 'analyst':31 'analyz':13 'busi':6 'categori':5,15,35,45,58,68 'context':7 'descend':77 'drive':47 'exceed':62 'expect':65 'identifi':42 'inventori':21 'list':55 'merchandis':38 'million':64 'need':40 'oper':11 'optim':20 'order':74 'output':66 'perform':16,36 'plan':53 'problem':54 'product':14,44,57,67 'promot':24 're':28 'retail':10,30 'revenu':3,50,61,71,76 'scenario':26 'store':2,18 'strateg':52 'strategi':25 'studi':34 'target':1,8,33 'team':12,39 'total':60,70",
      "category_name": "Aggregation",
      "category_slug": "aggregation"
    },
    {
      "id": "4201f984-393a-4772-91eb-90ecd63a3030",
      "title": "Tesla Energy Storage Analytics",
      "slug": "vanguard-portfolio-analytics",
      "difficulty": "medium",
      "description": "**Business Context:** Tesla's energy division analyzes battery storage deployment and performance across residential, commercial, and utility-scale projects to optimize energy storage solutions, maximize grid stability impact, and compete with traditional utilities and renewable energy providers.\n\n**Scenario:** You're a senior energy analyst at Tesla evaluating energy storage performance across different deployment types. The energy strategy team needs to identify which storage solutions achieve highest efficiency with capacity utilization above 80% and grid stability scores exceeding 9.0.\n\n**Problem:** Calculate energy storage performance metrics and identify high-efficiency solutions meeting utilization and stability criteria for strategic deployment expansion.\n\n**Expected Output:** High-efficiency storage solutions (>80% utilization, >9.0 stability score), ordered by capacity utilization descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "8798fdcf-0411-45cb-83dd-b4912e133354",
      "created_at": "2025-08-11T17:08:07.867Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 58,
      "search_vector": "'80':77,112 '9.0':83,114 'achiev':70 'across':17,56 'analyst':49 'analyt':4 'analyz':11 'batteri':12 'busi':5 'calcul':85 'capac':74,119 'commerci':19 'compet':35 'context':6 'criteria':100 'deploy':14,58,103 'descend':121 'differ':57 'divis':10 'effici':72,94,109 'energi':2,9,27,41,48,53,61,86 'evalu':52 'exceed':82 'expans':104 'expect':105 'grid':31,79 'high':93,108 'high-effici':92,107 'highest':71 'identifi':66,91 'impact':33 'maxim':30 'meet':96 'metric':89 'need':64 'optim':26 'order':117 'output':106 'perform':16,55,88 'problem':84 'project':24 'provid':42 're':45 'renew':40 'residenti':18 'scale':23 'scenario':43 'score':81,116 'senior':47 'solut':29,69,95,111 'stabil':32,80,99,115 'storag':3,13,28,54,68,87,110 'strateg':102 'strategi':62 'team':63 'tesla':1,7,51 'tradit':37 'type':59 'util':22,38,75,97,113,120 'utility-scal':21",
      "category_name": "Joins",
      "category_slug": "joins"
    },
    {
      "id": "d1092dcc-af01-4f71-9ec6-07be5e714e80",
      "title": "Top Spending Customers by Month",
      "slug": "top-spending-customers-by-month",
      "difficulty": "medium",
      "description": "**Scenario:** Stripe wants to identify top spending customers each month for account management.\n\n**Business Context:** Find the highest spending customer for each month in 2024.\n\n**Problem:** Return the customer with the highest total spending for each month.\n\n**Expected Output:** Return month, customer_id, and total_spent for top customer each month.",
      "is_premium": false,
      "is_active": true,
      "category_id": "9ba6536c-e307-41f7-8ae0-8e49f3f98d55",
      "created_at": "2025-08-11T13:51:04.041Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 59,
      "search_vector": "'2024':30 'account':17 'busi':19 'context':20 'custom':3,13,25,34,47,54 'expect':43 'find':21 'highest':23,37 'id':48 'identifi':10 'manag':18 'month':5,15,28,42,46,56 'output':44 'problem':31 'return':32,45 'scenario':6 'spend':2,12,24,39 'spent':51 'stripe':7 'top':1,11,53 'total':38,50 'want':8",
      "category_name": "Window Functions",
      "category_slug": "window-functions"
    },
    {
      "id": "21e44923-0f54-4782-937c-59917622752b",
      "title": "UBS Wealth Management Analytics",
      "slug": "morgan-stanley-risk-management-system",
      "difficulty": "hard",
      "description": "**Business Context:** UBS's wealth management division serves ultra-high-net-worth clients globally, requiring sophisticated analytics to optimize investment advisory services, assess portfolio risk, and maintain competitive advantage in the global private banking market.\n\n**Scenario:** You're a senior wealth management analyst at UBS evaluating client portfolio performance and advisory service effectiveness across different wealth segments. The private banking team needs comprehensive analysis of investment returns, risk management, and client satisfaction for service enhancement strategies.\n\n**Problem:** Calculate wealth management metrics including risk-adjusted portfolio returns, advisory fee optimization, and client retention analysis. Identify segments with Sharpe ratios > 1.8, fee margins > 1.5%, and retention rates > 95% for premium service positioning.\n\n**Expected Output:** High-performance, high-margin, high-retention wealth segments meeting all service criteria, showing comprehensive private banking metrics, ordered by Sharpe ratio descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "c7e4c5a1-5b75-4117-a113-118749434557",
      "created_at": "2025-08-11T17:08:07.881Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 60,
      "search_vector": "'1.5':108 '1.8':105 '95':112 'across':59 'adjust':90 'advantag':34 'advisori':26,56,93 'analysi':69,99 'analyst':48 'analyt':4,22 'assess':28 'bank':39,65,137 'busi':5 'calcul':83 'client':18,52,76,97 'competit':33 'comprehens':68,135 'context':6 'criteria':133 'descend':143 'differ':60 'divis':11 'effect':58 'enhanc':80 'evalu':51 'expect':117 'fee':94,106 'global':19,37 'high':15,120,123,126 'high-margin':122 'high-perform':119 'high-retent':125 'identifi':100 'includ':87 'invest':25,71 'maintain':32 'manag':3,10,47,74,85 'margin':107,124 'market':40 'meet':130 'metric':86,138 'need':67 'net':16 'optim':24,95 'order':139 'output':118 'perform':54,121 'portfolio':29,53,91 'posit':116 'premium':114 'privat':38,64,136 'problem':82 'rate':111 'ratio':104,142 're':43 'requir':20 'retent':98,110,127 'return':72,92 'risk':30,73,89 'risk-adjust':88 'satisfact':77 'scenario':41 'segment':62,101,129 'senior':45 'serv':12 'servic':27,57,79,115,132 'sharp':103,141 'show':134 'sophist':21 'strategi':81 'team':66 'ub':1,7,50 'ultra':14 'ultra-high-net-worth':13 'wealth':2,9,46,61,84,128 'worth':17",
      "category_name": "Advanced Topics",
      "category_slug": "advanced-topics"
    },
    {
      "id": "1b437802-cd3e-4030-901c-74517fd027af",
      "title": "UBS Wealth Management Private Banking",
      "slug": "fraudulent-transaction-detection",
      "difficulty": "hard",
      "description": "**Business Context:** UBS's private banking division manages ultra-high-net-worth client portfolios exceeding $2.5 trillion globally, requiring sophisticated wealth analytics and alternative investment strategies.\n\n**Scenario:** You're a senior private banker at UBS analyzing client portfolio performance across different wealth segments. The wealth management committee needs to evaluate investment strategy effectiveness for UHNW clients.\n\n**Problem:** Calculate comprehensive wealth metrics including portfolio alpha generation, risk-adjusted returns, and asset allocation efficiency. Identify client segments with portfolio alpha > 200bp and Sharpe ratio > 1.5.\n\n**Expected Output:** High-performing client segments meeting performance criteria, showing detailed wealth metrics and investment efficiency, ordered by alpha descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "089e178f-9baa-41c3-8ed5-626d2f2227d5",
      "created_at": "2025-08-11T13:51:09.988Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 61,
      "search_vector": "'1.5':90 '2.5':22 '200bp':86 'across':46 'adjust':74 'alloc':78 'alpha':70,85,110 'altern':30 'analyt':28 'analyz':42 'asset':77 'bank':5,11 'banker':39 'busi':6 'calcul':64 'client':19,43,62,81,96 'committe':53 'comprehens':65 'context':7 'criteria':100 'descend':111 'detail':102 'differ':47 'divis':12 'effect':59 'effici':79,107 'evalu':56 'exceed':21 'expect':91 'generat':71 'global':24 'high':16,94 'high-perform':93 'identifi':80 'includ':68 'invest':31,57,106 'manag':3,13,52 'meet':98 'metric':67,104 'need':54 'net':17 'order':108 'output':92 'perform':45,95,99 'portfolio':20,44,69,84 'privat':4,10,38 'problem':63 'ratio':89 're':35 'requir':25 'return':75 'risk':73 'risk-adjust':72 'scenario':33 'segment':49,82,97 'senior':37 'sharp':88 'show':101 'sophist':26 'strategi':32,58 'trillion':23 'ub':1,8,41 'uhnw':61 'ultra':15 'ultra-high-net-worth':14 'wealth':2,27,48,51,66,103 'worth':18",
      "category_name": "Fraud Detection",
      "category_slug": "fraud-detection"
    },
    {
      "id": "15382d01-697d-44bc-bfaa-931fec0cbdae",
      "title": "Uber Ride-Sharing Market Analytics",
      "slug": "uber-revenue-analysis",
      "difficulty": "easy",
      "description": "**Business Context:** Uber's market expansion team analyzes ride-sharing performance across different metropolitan areas to identify growth opportunities and optimize driver incentive programs in competitive markets against Lyft and local competitors.\n\n**Scenario:** You're a market analytics manager at Uber studying ride volume and revenue patterns across major metropolitan markets. The expansion strategy team needs to identify which markets show the highest average revenue per ride for investment prioritization.\n\n**Problem:** Find all metropolitan markets with average revenue per ride exceeding $15 for market expansion focus.\n\n**Expected Output:** High-revenue markets (>$15 average per ride), ordered by average revenue descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "426fcc68-b403-458f-9afd-5137f772de78",
      "created_at": "2025-08-11T17:08:07.816Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 62,
      "search_vector": "'15':89,100 'across':19,55 'analyt':6,45 'analyz':14 'area':22 'averag':71,84,101,106 'busi':7 'competit':33 'competitor':39 'context':8 'descend':108 'differ':20 'driver':29 'exceed':88 'expans':12,60,92 'expect':94 'find':79 'focus':93 'growth':25 'high':97 'high-revenu':96 'highest':70 'identifi':24,65 'incent':30 'invest':76 'local':38 'lyft':36 'major':56 'manag':46 'market':5,11,34,44,58,67,82,91,99 'metropolitan':21,57,81 'need':63 'opportun':26 'optim':28 'order':104 'output':95 'pattern':54 'per':73,86,102 'perform':18 'priorit':77 'problem':78 'program':31 're':42 'revenu':53,72,85,98,107 'ride':3,16,50,74,87,103 'ride-shar':2,15 'scenario':40 'share':4,17 'show':68 'strategi':61 'studi':49 'team':13,62 'uber':1,9,48 'volum':51",
      "category_name": "Aggregation",
      "category_slug": "aggregation"
    },
    {
      "id": "7102509c-bbd8-4706-99c5-23b599ec9de3",
      "title": "UnitedHealth Claims Processing Efficiency",
      "slug": "unitedhealth-claims-processing-efficiency",
      "difficulty": "medium",
      "description": "**Business Context:** UnitedHealth's claims processing division analyzes workflow efficiency across different claim types and processing centers to optimize operations and reduce patient wait times.\n\n**Scenario:** You're an operations analyst at UnitedHealth studying claims processing performance. The operations team needs to identify processing centers with consistently high efficiency across multiple claim types.\n\n**Problem:** Find processing centers that handle more than 5 different claim types AND maintain an average processing time under 3 days across all claim types.\n\n**Expected Output:** Efficient processing centers with claim type diversity, average processing times, and total volume, meeting both criteria.",
      "is_premium": false,
      "is_active": true,
      "category_id": "8798fdcf-0411-45cb-83dd-b4912e133354",
      "created_at": "2025-08-11T13:51:21.534Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 63,
      "search_vector": "'3':77 '5':66 'across':15,54,79 'analyst':35 'analyz':12 'averag':73,92 'busi':5 'center':21,49,61,87 'claim':2,9,17,39,56,68,81,89 'consist':51 'context':6 'criteria':100 'day':78 'differ':16,67 'divers':91 'divis':11 'effici':4,14,53,85 'expect':83 'find':59 'handl':63 'high':52 'identifi':47 'maintain':71 'meet':98 'multipl':55 'need':45 'oper':24,34,43 'optim':23 'output':84 'patient':27 'perform':41 'problem':58 'process':3,10,20,40,48,60,74,86,93 're':32 'reduc':26 'scenario':30 'studi':38 'team':44 'time':29,75,94 'total':96 'type':18,57,69,82,90 'unitedhealth':1,7,37 'volum':97 'wait':28 'workflow':13",
      "category_name": "Joins",
      "category_slug": "joins"
    },
    {
      "id": "38108e8c-7b5c-4134-b346-ea1d7bc31ee2",
      "title": "User Engagement Metrics",
      "slug": "user-engagement-metrics",
      "difficulty": "easy",
      "description": "**Scenario:** LinkedIn wants to measure user engagement across different content types.\n\n**Business Context:** Calculate average engagement rate (likes + comments) per post type.\n\n**Problem:** Find average engagement for each post type.\n\n**Expected Output:** Return post_type and avg_engagement, ordered by avg_engagement descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "426fcc68-b403-458f-9afd-5137f772de78",
      "created_at": "2025-08-11T13:51:04.035Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 64,
      "search_vector": "'across':11 'averag':18,28 'avg':40,44 'busi':15 'calcul':17 'comment':22 'content':13 'context':16 'descend':46 'differ':12 'engag':2,10,19,29,41,45 'expect':34 'find':27 'like':21 'linkedin':5 'measur':8 'metric':3 'order':42 'output':35 'per':23 'post':24,32,37 'problem':26 'rate':20 'return':36 'scenario':4 'type':14,25,33,38 'user':1,9 'want':6",
      "category_name": "Aggregation",
      "category_slug": "aggregation"
    },
    {
      "id": "e4783bb1-13fb-4dd1-be1f-a07cec187ebf",
      "title": "Vanguard Index Fund Performance Analytics",
      "slug": "bank-of-america-portfolio-analytics",
      "difficulty": "medium",
      "description": "**Business Context:** Vanguard's passive investment team manages over $7 trillion in index funds, requiring precise tracking error analysis to ensure funds accurately replicate their benchmark indices with minimal costs.\n\n**Scenario:** You're a quantitative analyst at Vanguard studying index fund performance across different asset classes. The fund management team needs to identify funds with the lowest tracking error for performance reporting.\n\n**Problem:** Calculate tracking error metrics and identify index funds with annualized tracking error below 0.15% (15 basis points).\n\n**Expected Output:** Low tracking error funds (<0.15% annually), showing fund performance and deviation metrics, ordered by tracking error ascending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "47c2009b-81d2-458f-96b0-1a68aee370d6",
      "created_at": "2025-08-11T17:08:07.871Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 65,
      "search_vector": "'0.15':82,92 '15':83 '7':15 'accur':28 'across':48 'analysi':24 'analyst':41 'analyt':5 'annual':78,93 'ascend':104 'asset':50 'basi':84 'benchmark':31 'busi':6 'calcul':69 'class':51 'context':7 'cost':35 'deviat':98 'differ':49 'ensur':26 'error':23,64,71,80,90,103 'expect':86 'fund':3,19,27,46,53,59,76,91,95 'identifi':58,74 'index':2,18,45,75 'indic':32 'invest':11 'low':88 'lowest':62 'manag':13,54 'metric':72,99 'minim':34 'need':56 'order':100 'output':87 'passiv':10 'perform':4,47,66,96 'point':85 'precis':21 'problem':68 'quantit':40 're':38 'replic':29 'report':67 'requir':20 'scenario':36 'show':94 'studi':44 'team':12,55 'track':22,63,70,79,89,102 'trillion':16 'vanguard':1,8,43",
      "category_name": "Time Analysis",
      "category_slug": "time-analysis"
    },
    {
      "id": "77b5ad49-9a65-4c07-8d89-3a98b9c6040c",
      "title": "Verizon Network Coverage Analysis",
      "slug": "verizon-network-coverage-analysis",
      "difficulty": "easy",
      "description": "**Business Context:** Verizon's network operations team monitors cellular tower performance across different regions to optimize coverage and identify areas needing infrastructure investment.\n\n**Scenario:** You're a network analyst at Verizon analyzing tower performance metrics. The infrastructure team needs to identify regions with strong coverage for capacity planning.\n\n**Problem:** Find all regions where Verizon has more than 100 total cellular towers deployed.\n\n**Expected Output:** Regions with tower counts (>100 towers only), ordered by tower count descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "c5ec99f8-01ff-4d36-b36e-27688566397d",
      "created_at": "2025-08-11T13:51:15.977Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 66,
      "search_vector": "'100':62,73 'across':16 'analysi':4 'analyst':33 'analyz':36 'area':24 'busi':5 'capac':51 'cellular':13,64 'context':6 'count':72,79 'coverag':3,21,49 'deploy':66 'descend':80 'differ':17 'expect':67 'find':54 'identifi':23,45 'infrastructur':26,41 'invest':27 'metric':39 'monitor':12 'need':25,43 'network':2,9,32 'oper':10 'optim':20 'order':76 'output':68 'perform':15,38 'plan':52 'problem':53 're':30 'region':18,46,56,69 'scenario':28 'strong':48 'team':11,42 'total':63 'tower':14,37,65,71,74,78 'verizon':1,7,35,58",
      "category_name": "Basic Queries",
      "category_slug": "basic-queries"
    },
    {
      "id": "71efa828-8725-4cdd-9311-c22fb8d71038",
      "title": "Visa Global Payment Processing Analytics",
      "slug": "visa-portfolio-analytics",
      "difficulty": "medium",
      "description": "**Business Context:** Visa's global payment network processes over 188 billion transactions annually across 200+ countries, requiring sophisticated analytics to optimize transaction routing, minimize processing latency, and maintain competitive advantage against Mastercard, American Express, and emerging digital payment platforms.\n\n**Scenario:** You're a senior payment processing analyst at Visa evaluating network performance across different transaction types. The network optimization team needs to identify which transaction categories achieve optimal performance with processing speeds under 2 seconds and approval rates above 97%.\n\n**Problem:** Calculate payment processing efficiency metrics and identify high-performance transaction types meeting speed and approval criteria for network infrastructure investment prioritization.\n\n**Expected Output:** High-performance transaction types (<2 second processing, >97% approval rate), ordered by transaction volume descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "e1b879e5-e95b-41ee-b22a-a2ea91897277",
      "created_at": "2025-08-11T17:08:07.874Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 67,
      "search_vector": "'188':15 '2':79,116 '200':20 '97':85,119 'achiev':72 'across':19,58 'advantag':35 'american':38 'analyst':52 'analyt':5,24 'annual':18 'approv':82,102,120 'billion':16 'busi':6 'calcul':87 'categori':71 'competit':34 'context':7 'countri':21 'criteria':103 'descend':126 'differ':59 'digit':42 'effici':90 'emerg':41 'evalu':55 'expect':109 'express':39 'global':2,10 'high':95,112 'high-perform':94,111 'identifi':68,93 'infrastructur':106 'invest':107 'latenc':31 'maintain':33 'mastercard':37 'meet':99 'metric':91 'minim':29 'need':66 'network':12,56,63,105 'optim':26,64,73 'order':122 'output':110 'payment':3,11,43,50,88 'perform':57,74,96,113 'platform':44 'priorit':108 'problem':86 'process':4,13,30,51,76,89,118 'rate':83,121 're':47 'requir':22 'rout':28 'scenario':45 'second':80,117 'senior':49 'sophist':23 'speed':77,100 'team':65 'transact':17,27,60,70,97,114,124 'type':61,98,115 'visa':1,8,54 'volum':125",
      "category_name": "Subqueries",
      "category_slug": "subqueries"
    },
    {
      "id": "24bde9ed-3686-42bc-8256-0623c8140863",
      "title": "Walmart Supply Chain Efficiency Analytics",
      "slug": "walmart-revenue-analysis",
      "difficulty": "easy",
      "description": "**Business Context:** Walmart's supply chain optimization team analyzes distribution center performance across different product categories to maintain competitive pricing advantage and ensure efficient inventory management across 10,000+ retail locations.\n\n**Scenario:** You're a supply chain analyst at Walmart studying distribution efficiency metrics. The logistics team needs to identify which product categories achieve the highest inventory turnover rates for operational optimization strategies.\n\n**Problem:** Find all product categories with inventory turnover rate exceeding 12 times per year for efficiency benchmarking.\n\n**Expected Output:** High-turnover product categories (>12x annual turnover), ordered by turnover rate descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "c5ec99f8-01ff-4d36-b36e-27688566397d",
      "created_at": "2025-08-11T17:08:07.711Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 68,
      "search_vector": "'000':34 '10':33 '12':79 '12x':93 'achiev':59 'across':18,32 'advantag':26 'analyst':43 'analyt':5 'analyz':14 'annual':94 'benchmark':85 'busi':6 'categori':21,58,73,92 'center':16 'chain':3,11,42 'competit':24 'context':7 'descend':100 'differ':19 'distribut':15,47 'effici':4,29,48,84 'ensur':28 'exceed':78 'expect':86 'find':70 'high':89 'high-turnov':88 'highest':61 'identifi':55 'inventori':30,62,75 'locat':36 'logist':51 'maintain':23 'manag':31 'metric':49 'need':53 'oper':66 'optim':12,67 'order':96 'output':87 'per':81 'perform':17 'price':25 'problem':69 'product':20,57,72,91 'rate':64,77,99 're':39 'retail':35 'scenario':37 'strategi':68 'studi':46 'suppli':2,10,41 'team':13,52 'time':80 'turnov':63,76,90,95,98 'walmart':1,8,45 'year':82",
      "category_name": "Basic Queries",
      "category_slug": "basic-queries"
    },
    {
      "id": "c70ce01f-a0c6-4231-b7f1-16576810ba1b",
      "title": "Wells Fargo Commercial Banking Analytics",
      "slug": "wells-fargo-portfolio-analytics",
      "difficulty": "medium",
      "description": "**Business Context:** Wells Fargo's commercial banking division manages lending portfolios across middle-market and large corporate clients, requiring sophisticated credit risk analytics to optimize loan pricing, maintain regulatory compliance, and compete with JPMorgan Chase and Bank of America in commercial lending markets.\n\n**Scenario:** You're a senior commercial banking analyst at Wells Fargo evaluating loan portfolio performance across different industry sectors. The credit risk committee needs to identify which sectors achieve optimal risk-adjusted returns with default rates below 2% and net interest margins above 3.5%.\n\n**Problem:** Calculate commercial banking performance metrics and identify low-risk, high-margin sectors meeting default and margin criteria for lending growth strategies.\n\n**Expected Output:** Optimal lending sectors (<2% default rate, >3.5% NIM), ordered by net interest margin descending.",
      "is_premium": false,
      "is_active": true,
      "category_id": "e1b879e5-e95b-41ee-b22a-a2ea91897277",
      "created_at": "2025-08-11T17:08:07.872Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 69,
      "search_vector": "'2':88,124 '3.5':94,127 'achiev':78 'across':17,65 'adjust':82 'america':45 'analyst':57 'analyt':5,29 'bank':4,12,43,56,98 'busi':6 'calcul':96 'chase':41 'client':24 'commerci':3,11,47,55,97 'committe':72 'compet':38 'complianc':36 'context':7 'corpor':23 'credit':27,70 'criteria':114 'default':85,111,125 'descend':134 'differ':66 'divis':13 'evalu':61 'expect':119 'fargo':2,9,60 'growth':117 'high':107 'high-margin':106 'identifi':75,102 'industri':67 'interest':91,132 'jpmorgan':40 'larg':22 'lend':15,48,116,122 'loan':32,62 'low':104 'low-risk':103 'maintain':34 'manag':14 'margin':92,108,113,133 'market':20,49 'meet':110 'metric':100 'middl':19 'middle-market':18 'need':73 'net':90,131 'nim':128 'optim':31,79,121 'order':129 'output':120 'perform':64,99 'portfolio':16,63 'price':33 'problem':95 'rate':86,126 're':52 'regulatori':35 'requir':25 'return':83 'risk':28,71,81,105 'risk-adjust':80 'scenario':50 'sector':68,77,109,123 'senior':54 'sophist':26 'strategi':118 'well':1,8,59",
      "category_name": "Subqueries",
      "category_slug": "subqueries"
    },
    {
      "id": "9992b85b-7f74-4ada-ab73-2daa3ef60e32",
      "title": "Wells Fargo Mortgage Risk Assessment",
      "slug": "wells-fargo-mortgage-risk-assessment",
      "difficulty": "hard",
      "description": "**Business Context:** Wells Fargo's mortgage lending division develops sophisticated risk models to assess loan default probability while ensuring fair lending practices and regulatory compliance across different demographic segments.\n\n**Scenario:** You're a senior risk modeling analyst at Wells Fargo building next-generation mortgage risk assessment tools. The credit committee needs to understand how different borrower characteristics interact to predict default risk.\n\n**Problem:** Create a comprehensive risk score using multiple factors: credit score weight (30%), debt-to-income weight (25%), loan-to-value weight (25%), employment history weight (20%). Calculate default probability by risk score deciles and identify deciles with default rates exceeding 8%.\n\n**Expected Output:** Risk score deciles with borrower counts, average risk scores, default rates, and expected loss calculations, showing only high-risk deciles >8% default rate.",
      "is_premium": false,
      "is_active": true,
      "category_id": "c7e4c5a1-5b75-4117-a113-118749434557",
      "created_at": "2025-08-11T13:51:12.117Z",
      "total_submissions": 0,
      "total_accepted": 0,
      "acceptance_rate": "0.00",
      "tags": null,
      "hints": null,
      "numeric_id": 70,
      "search_vector": "'20':97 '25':87,93 '30':81 '8':112,136 'across':31 'analyst':42 'assess':5,19,52 'averag':121 'borrow':62,119 'build':46 'busi':6 'calcul':98,129 'characterist':63 'committe':56 'complianc':30 'comprehens':72 'context':7 'count':120 'creat':70 'credit':55,78 'debt':83 'debt-to-incom':82 'decil':104,107,117,135 'default':21,67,99,109,124,137 'demograph':33 'develop':14 'differ':32,61 'divis':13 'employ':94 'ensur':24 'exceed':111 'expect':113,127 'factor':77 'fair':25 'fargo':2,9,45 'generat':49 'high':133 'high-risk':132 'histori':95 'identifi':106 'incom':85 'interact':64 'lend':12,26 'loan':20,89 'loan-to-valu':88 'loss':128 'model':17,41 'mortgag':3,11,50 'multipl':76 'need':57 'next':48 'next-gener':47 'output':114 'practic':27 'predict':66 'probabl':22,100 'problem':69 'rate':110,125,138 're':37 'regulatori':29 'risk':4,16,40,51,68,73,102,115,122,134 'scenario':35 'score':74,79,103,116,123 'segment':34 'senior':39 'show':130 'sophist':15 'tool':53 'understand':59 'use':75 'valu':91 'weight':80,86,92,96 'well':1,8,44",
      "category_name": "Advanced Topics",
      "category_slug": "advanced-topics"
    }
  ],
  "problem_schemas": [
    {
      "id": "014f4e82-e52f-4553-ab84-8016368555a9",
      "problem_id": "4aeaaea6-093f-41c4-9037-d36e44e11bd1",
      "sql_dialect": "mysql",
      "setup_sql": "\n      CREATE TABLE ab_test_results (\n          user_id INT,\n          test_group VARCHAR(20),\n          converted TINYINT(1),\n          signup_date DATE\n      );\n      INSERT INTO ab_test_results VALUES \n      (1, 'control', 1, '2024-01-15'),\n      (2, 'control', 0, '2024-01-16'),\n      (3, 'control', 1, '2024-01-17'),\n      (4, 'control', 0, '2024-01-18'),\n      (5, 'treatment', 1, '2024-01-15'),\n      (6, 'treatment', 1, '2024-01-16'),\n      (7, 'treatment', 0, '2024-01-17'),\n      (8, 'treatment', 1, '2024-01-18'),\n      (9, 'control', 0, '2024-01-19'),\n      (10, 'treatment', 1, '2024-01-19'),\n      (11, 'control', 1, '2024-01-20'),\n      (12, 'treatment', 0, '2024-01-20'),\n      (13, 'control', 0, '2024-01-21'),\n      (14, 'treatment', 1, '2024-01-21'),\n      (15, 'control', 1, '2024-01-22'),\n      (16, 'treatment', 1, '2024-01-22'),\n      (17, 'control', 0, '2024-01-23'),\n      (18, 'treatment', 0, '2024-01-23'),\n      (19, 'control', 1, '2024-01-24'),\n      (20, 'treatment', 1, '2024-01-24'),\n      (21, 'control', 0, '2024-01-25'),\n      (22, 'treatment', 1, '2024-01-25'),\n      (23, 'control', 1, '2024-01-26'),\n      (24, 'treatment', 0, '2024-01-26'),\n      (25, 'control', 1, '2024-01-27');",
      "solution_sql": "\n      SELECT \n        test_group as group_name,\n        COUNT(*) as total_users,\n        SUM(CASE WHEN converted THEN 1 ELSE 0 END) as conversions,\n        ROUND(\n          SUM(CASE WHEN converted THEN 1 ELSE 0 END) * 100.0 / COUNT(*), \n          2\n        ) as conversion_rate\n      FROM ab_test_results\n      GROUP BY test_group\n      ORDER BY conversion_rate DESC;\n    ",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.695Z",
      "expected_output": [
        {
          "group_name": "treatment",
          "conversions": "8",
          "total_users": "12",
          "conversion_rate": "66.67"
        },
        {
          "group_name": "control",
          "conversions": "7",
          "total_users": "13",
          "conversion_rate": "53.85"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "A/B Test Results Analysis",
      "problem_slug": "ab-test-results-analysis"
    },
    {
      "id": "5edcf6af-0460-485e-bd15-1a15a9d55888",
      "problem_id": "4aeaaea6-093f-41c4-9037-d36e44e11bd1",
      "sql_dialect": "postgresql",
      "setup_sql": "\n      CREATE TABLE ab_test_results (\n          user_id INT,\n          test_group VARCHAR(20),\n          converted BOOLEAN,\n          signup_date DATE\n      );\n      INSERT INTO ab_test_results VALUES \n      (1, 'control', true, '2024-01-15'),\n      (2, 'control', false, '2024-01-16'),\n      (3, 'control', true, '2024-01-17'),\n      (4, 'control', false, '2024-01-18'),\n      (5, 'treatment', true, '2024-01-15'),\n      (6, 'treatment', true, '2024-01-16'),\n      (7, 'treatment', false, '2024-01-17'),\n      (8, 'treatment', true, '2024-01-18'),\n      (9, 'control', false, '2024-01-19'),\n      (10, 'treatment', true, '2024-01-19'),\n      (11, 'control', true, '2024-01-20'),\n      (12, 'treatment', false, '2024-01-20'),\n      (13, 'control', false, '2024-01-21'),\n      (14, 'treatment', true, '2024-01-21'),\n      (15, 'control', true, '2024-01-22'),\n      (16, 'treatment', true, '2024-01-22'),\n      (17, 'control', false, '2024-01-23'),\n      (18, 'treatment', false, '2024-01-23'),\n      (19, 'control', true, '2024-01-24'),\n      (20, 'treatment', true, '2024-01-24'),\n      (21, 'control', false, '2024-01-25'),\n      (22, 'treatment', true, '2024-01-25'),\n      (23, 'control', true, '2024-01-26'),\n      (24, 'treatment', false, '2024-01-26'),\n      (25, 'control', true, '2024-01-27');",
      "solution_sql": "\n      SELECT \n        test_group as group_name,\n        COUNT(*) as total_users,\n        SUM(CASE WHEN converted THEN 1 ELSE 0 END) as conversions,\n        ROUND(\n          SUM(CASE WHEN converted THEN 1 ELSE 0 END) * 100.0 / COUNT(*), \n          2\n        ) as conversion_rate\n      FROM ab_test_results\n      GROUP BY test_group\n      ORDER BY conversion_rate DESC;\n    ",
      "explanation": "Advanced A/B Testing problem with real business applications.",
      "created_at": "2025-08-11T13:51:10.028Z",
      "expected_output": [
        {
          "group_name": "treatment",
          "conversions": "8",
          "total_users": "12",
          "conversion_rate": "66.67"
        },
        {
          "group_name": "control",
          "conversions": "7",
          "total_users": "13",
          "conversion_rate": "53.85"
        }
      ],
      "explanation_detailed": "A/B testing analysis requires calculating conversion rates using conditional aggregation. This is a common pattern in analytics.",
      "approach_summary": "Group by test group, count total users and conversions separately, then calculate percentage.",
      "key_concepts": [
        "CASE WHEN",
        "Conditional aggregation",
        "Percentage calculations",
        "GROUP BY"
      ],
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": [
        "Integer division issues",
        "Not handling boolean fields properly"
      ],
      "optimization_tips": [
        "Consider using FILTER clause in PostgreSQL as alternative to CASE WHEN"
      ],
      "problem_title": "A/B Test Results Analysis",
      "problem_slug": "ab-test-results-analysis"
    },
    {
      "id": "741c0b67-967f-4653-89ac-204a4878ee2d",
      "problem_id": "d277eb23-10d8-4551-b82b-87b041897e84",
      "sql_dialect": "mysql",
      "setup_sql": "\n      CREATE TABLE corporate_risk_profiles (\n          profile_id INT PRIMARY KEY,\n          client_industry VARCHAR(50),\n          risk_score DECIMAL(4,2),\n          exposure_millions DECIMAL(8,2),\n          probability_default DECIMAL(5,4)\n      );\n      INSERT INTO corporate_risk_profiles VALUES\n      (1, 'Oil & Gas', 7.5, 125.50, 0.0350),\n      (2, 'Technology', 4.2, 85.25, 0.0120),\n      (3, 'Manufacturing', 6.8, 220.75, 0.0280),\n      (4, 'Real Estate', 8.2, 180.90, 0.0420),\n      (5, 'Healthcare', 3.5, 95.80, 0.0080),\n      (6, 'Oil & Gas_1', 7.6, 135.50, 0.0360),\n      (7, 'Technology_1', 4.3, 95.25, 0.0130),\n      (8, 'Manufacturing_1', 6.9, 230.75, 0.0290),\n      (9, 'Real Estate_1', 8.3, 190.90, 0.0430),\n      (10, 'Healthcare_1', 3.6, 105.80, 0.0090),\n      (11, 'Oil & Gas_2', 7.7, 145.50, 0.0370),\n      (12, 'Technology_2', 4.4, 105.25, 0.0140),\n      (13, 'Manufacturing_2', 7.0, 240.75, 0.0300),\n      (14, 'Real Estate_2', 8.4, 200.90, 0.0440),\n      (15, 'Healthcare_2', 3.7, 115.80, 0.0100),\n      (16, 'Oil & Gas_3', 7.8, 155.50, 0.0380),\n      (17, 'Technology_3', 4.5, 115.25, 0.0150),\n      (18, 'Manufacturing_3', 7.1, 250.75, 0.0310),\n      (19, 'Real Estate_3', 8.5, 210.90, 0.0450),\n      (20, 'Healthcare_3', 3.8, 125.80, 0.0110),\n      (21, 'Financial_Services', 6.2, 175.40, 0.0250),\n      (22, 'Retail', 5.8, 90.15, 0.0220),\n      (23, 'Telecommunications', 4.9, 155.60, 0.0180),\n      (24, 'Energy', 7.9, 165.80, 0.0390),\n      (25, 'Automotive', 6.5, 145.25, 0.0270);",
      "solution_sql": "SELECT client_industry, AVG(risk_score) as avg_risk\nFROM corporate_risk_profiles \nGROUP BY client_industry \nHAVING AVG(risk_score) > 5.0 \nORDER BY avg_risk DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.773Z",
      "expected_output": [
        {
          "avg_risk": "8.500000",
          "client_industry": "Real Estate_3"
        },
        {
          "avg_risk": "8.400000",
          "client_industry": "Real Estate_2"
        },
        {
          "avg_risk": "8.300000",
          "client_industry": "Real Estate_1"
        },
        {
          "avg_risk": "8.200000",
          "client_industry": "Real Estate"
        },
        {
          "avg_risk": "7.900000",
          "client_industry": "Energy"
        },
        {
          "avg_risk": "7.800000",
          "client_industry": "Oil & Gas_3"
        },
        {
          "avg_risk": "7.700000",
          "client_industry": "Oil & Gas_2"
        },
        {
          "avg_risk": "7.600000",
          "client_industry": "Oil & Gas_1"
        },
        {
          "avg_risk": "7.500000",
          "client_industry": "Oil & Gas"
        },
        {
          "avg_risk": "7.100000",
          "client_industry": "Manufacturing_3"
        },
        {
          "avg_risk": "7.000000",
          "client_industry": "Manufacturing_2"
        },
        {
          "avg_risk": "6.900000",
          "client_industry": "Manufacturing_1"
        },
        {
          "avg_risk": "6.800000",
          "client_industry": "Manufacturing"
        },
        {
          "avg_risk": "6.500000",
          "client_industry": "Automotive"
        },
        {
          "avg_risk": "6.200000",
          "client_industry": "Financial_Services"
        },
        {
          "avg_risk": "5.800000",
          "client_industry": "Retail"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "ABN AMRO Corporate Banking Risk Analytics",
      "problem_slug": "abn-amro-risk-management-system"
    },
    {
      "id": "8dbadd6e-e484-4e61-bbf6-060ef0bfb53b",
      "problem_id": "d277eb23-10d8-4551-b82b-87b041897e84",
      "sql_dialect": "postgresql",
      "setup_sql": "\n      CREATE TABLE corporate_risk_profiles (\n          profile_id INT PRIMARY KEY,\n          client_industry VARCHAR(50),\n          risk_score DECIMAL(4,2),\n          exposure_millions DECIMAL(8,2),\n          probability_default DECIMAL(5,4)\n      );\n      INSERT INTO corporate_risk_profiles VALUES\n      (1, 'Oil & Gas', 7.5, 125.50, 0.0350),\n      (2, 'Technology', 4.2, 85.25, 0.0120),\n      (3, 'Manufacturing', 6.8, 220.75, 0.0280),\n      (4, 'Real Estate', 8.2, 180.90, 0.0420),\n      (5, 'Healthcare', 3.5, 95.80, 0.0080),\n      (6, 'Oil & Gas_1', 7.6, 135.50, 0.0360),\n      (7, 'Technology_1', 4.3, 95.25, 0.0130),\n      (8, 'Manufacturing_1', 6.9, 230.75, 0.0290),\n      (9, 'Real Estate_1', 8.3, 190.90, 0.0430),\n      (10, 'Healthcare_1', 3.6, 105.80, 0.0090),\n      (11, 'Oil & Gas_2', 7.7, 145.50, 0.0370),\n      (12, 'Technology_2', 4.4, 105.25, 0.0140),\n      (13, 'Manufacturing_2', 7.0, 240.75, 0.0300),\n      (14, 'Real Estate_2', 8.4, 200.90, 0.0440),\n      (15, 'Healthcare_2', 3.7, 115.80, 0.0100),\n      (16, 'Oil & Gas_3', 7.8, 155.50, 0.0380),\n      (17, 'Technology_3', 4.5, 115.25, 0.0150),\n      (18, 'Manufacturing_3', 7.1, 250.75, 0.0310),\n      (19, 'Real Estate_3', 8.5, 210.90, 0.0450),\n      (20, 'Healthcare_3', 3.8, 125.80, 0.0110),\n      (21, 'Financial_Services', 6.2, 175.40, 0.0250),\n      (22, 'Retail', 5.8, 90.15, 0.0220),\n      (23, 'Telecommunications', 4.9, 155.60, 0.0180),\n      (24, 'Energy', 7.9, 165.80, 0.0390),\n      (25, 'Automotive', 6.5, 145.25, 0.0270);",
      "solution_sql": "SELECT client_industry, AVG(risk_score) as avg_risk\nFROM corporate_risk_profiles \nGROUP BY client_industry \nHAVING AVG(risk_score) > 5.0 \nORDER BY avg_risk DESC;",
      "explanation": "Advanced corporate banking risk analytics using Basel III credit risk metrics and RAROC calculations for regulatory capital optimization.",
      "created_at": "2025-08-11T17:08:07.893Z",
      "expected_output": [
        {
          "avg_risk": "8.5000000000000000",
          "client_industry": "Real Estate_3"
        },
        {
          "avg_risk": "8.4000000000000000",
          "client_industry": "Real Estate_2"
        },
        {
          "avg_risk": "8.3000000000000000",
          "client_industry": "Real Estate_1"
        },
        {
          "avg_risk": "8.2000000000000000",
          "client_industry": "Real Estate"
        },
        {
          "avg_risk": "7.9000000000000000",
          "client_industry": "Energy"
        },
        {
          "avg_risk": "7.8000000000000000",
          "client_industry": "Oil & Gas_3"
        },
        {
          "avg_risk": "7.7000000000000000",
          "client_industry": "Oil & Gas_2"
        },
        {
          "avg_risk": "7.6000000000000000",
          "client_industry": "Oil & Gas_1"
        },
        {
          "avg_risk": "7.5000000000000000",
          "client_industry": "Oil & Gas"
        },
        {
          "avg_risk": "7.1000000000000000",
          "client_industry": "Manufacturing_3"
        },
        {
          "avg_risk": "7.0000000000000000",
          "client_industry": "Manufacturing_2"
        },
        {
          "avg_risk": "6.9000000000000000",
          "client_industry": "Manufacturing_1"
        },
        {
          "avg_risk": "6.8000000000000000",
          "client_industry": "Manufacturing"
        },
        {
          "avg_risk": "6.5000000000000000",
          "client_industry": "Automotive"
        },
        {
          "avg_risk": "6.2000000000000000",
          "client_industry": "Financial_Services"
        },
        {
          "avg_risk": "5.8000000000000000",
          "client_industry": "Retail"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "ABN AMRO Corporate Banking Risk Analytics",
      "problem_slug": "abn-amro-risk-management-system"
    },
    {
      "id": "e42927a0-ea48-47cc-8712-a34461d08079",
      "problem_id": "3e5c2aaf-f454-41cf-8898-ac134e7309d4",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE aig_policies (\n        policy_id VARCHAR(20) PRIMARY KEY,\n        policyholder_name VARCHAR(100),\n        policy_type VARCHAR(30),\n        annual_premium DECIMAL(10,2),\n        coverage_amount DECIMAL(12,2),\n        policy_start_date DATE\n    );\n      INSERT INTO aig_policies  VALUES\n      ('POL-001', 'ABC Manufacturing', 'Commercial Property', 125000.00, 5000000.00, '2023-01-15'),\n      ('POL-002', 'Smith Family Trust', 'Homeowners', 3500.00, 750000.00, '2023-03-20'),\n      ('POL-003', 'Global Logistics Inc', 'Commercial Auto', 85000.00, 2500000.00, '2023-02-10'),\n      ('POL-004', 'Johnson Residence', 'Homeowners', 2800.00, 650000.00, '2023-04-05'),\n      ('POL-005', 'Tech Startup LLC', 'General Liability', 15000.00, 1000000.00, '2023-05-12'),\n      ('POL-001_v1', 'ABC Manufacturing_v1', 'Commercial Property_v1', 125000.10, 5000000.10, '2023-01-16'),\n      ('POL-002_v2', 'Smith Family Trust_v2', 'Homeowners_v2', 3500.20, 750000.20, '2023-03-22'),\n      ('POL-003_v3', 'Global Logistics Inc_v3', 'Commercial Auto_v3', 85000.30, 2500000.30, '2023-02-13'),\n      ('POL-004_v4', 'Johnson Residence_v4', 'Homeowners_v4', 2800.40, 650000.40, '2023-04-09'),\n      ('POL-005_v5', 'Tech Startup LLC_v5', 'General Liability_v5', 15000.50, 1000000.50, '2023-05-17'),\n      ('POL-001_v6', 'ABC Manufacturing_v6', 'Commercial Property_v6', 125000.60, 5000000.60, '2023-01-21'),\n      ('POL-002_v7', 'Smith Family Trust_v7', 'Homeowners_v7', 3500.70, 750000.70, '2023-03-27'),\n      ('POL-003_v8', 'Global Logistics Inc_v8', 'Commercial Auto_v8', 85000.80, 2500000.80, '2023-02-18'),\n      ('POL-004_v9', 'Johnson Residence_v9', 'Homeowners_v9', 2800.90, 650000.90, '2023-04-14'),\n      ('POL-005_v10', 'Tech Startup LLC_v10', 'General Liability_v10', 15001.00, 1000001.00, '2023-05-22'),\n      ('POL-001_v11', 'ABC Manufacturing_v11', 'Commercial Property_v11', 125001.10, 5000001.10, '2023-01-26'),\n      ('POL-002_v12', 'Smith Family Trust_v12', 'Homeowners_v12', 3501.20, 750001.20, '2023-04-01'),\n      ('POL-003_v13', 'Global Logistics Inc_v13', 'Commercial Auto_v13', 85001.30, 2500001.30, '2023-02-23'),\n      ('POL-004_v14', 'Johnson Residence_v14', 'Homeowners_v14', 2801.40, 650001.40, '2023-04-19'),\n      ('POL-005_v15', 'Tech Startup LLC_v15', 'General Liability_v15', 15001.50, 1000001.50, '2023-05-27'),\n      ('POL-001_v16', 'ABC Manufacturing_v16', 'Commercial Property_v16', 125001.60, 5000001.60, '2023-01-31'),\n      ('POL-002_v17', 'Smith Family Trust_v17', 'Homeowners_v17', 3501.70, 750001.70, '2023-04-06'),\n      ('POL-003_v18', 'Global Logistics Inc_v18', 'Commercial Auto_v18', 85001.80, 2500001.80, '2023-02-28'),\n      ('POL-004_v19', 'Johnson Residence_v19', 'Homeowners_v19', 2801.90, 650001.90, '2023-04-24'),\n      ('POL-005_v20', 'Tech Startup LLC_v20', 'General Liability_v20', 15002.00, 1000002.00, '2023-06-01');",
      "solution_sql": "-- AIG Insurance Claims Fraud Detection\nSELECT \n    policy_id,\n    policyholder_name,\n    annual_premium,\n    ROUND(annual_premium / 1000, 2) as risk_score\nFROM aig_policies \nWHERE annual_premium > 50000\nORDER BY annual_premium DESC\nLIMIT 10;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.684Z",
      "expected_output": [
        {
          "policy_id": "POL-001_v16",
          "risk_score": "125.00",
          "annual_premium": "125001.60",
          "policyholder_name": "ABC Manufacturing_v16"
        },
        {
          "policy_id": "POL-001_v11",
          "risk_score": "125.00",
          "annual_premium": "125001.10",
          "policyholder_name": "ABC Manufacturing_v11"
        },
        {
          "policy_id": "POL-001_v6",
          "risk_score": "125.00",
          "annual_premium": "125000.60",
          "policyholder_name": "ABC Manufacturing_v6"
        },
        {
          "policy_id": "POL-001_v1",
          "risk_score": "125.00",
          "annual_premium": "125000.10",
          "policyholder_name": "ABC Manufacturing_v1"
        },
        {
          "policy_id": "POL-001",
          "risk_score": "125.00",
          "annual_premium": "125000.00",
          "policyholder_name": "ABC Manufacturing"
        },
        {
          "policy_id": "POL-003_v18",
          "risk_score": "85.00",
          "annual_premium": "85001.80",
          "policyholder_name": "Global Logistics Inc_v18"
        },
        {
          "policy_id": "POL-003_v13",
          "risk_score": "85.00",
          "annual_premium": "85001.30",
          "policyholder_name": "Global Logistics Inc_v13"
        },
        {
          "policy_id": "POL-003_v8",
          "risk_score": "85.00",
          "annual_premium": "85000.80",
          "policyholder_name": "Global Logistics Inc_v8"
        },
        {
          "policy_id": "POL-003_v3",
          "risk_score": "85.00",
          "annual_premium": "85000.30",
          "policyholder_name": "Global Logistics Inc_v3"
        },
        {
          "policy_id": "POL-003",
          "risk_score": "85.00",
          "annual_premium": "85000.00",
          "policyholder_name": "Global Logistics Inc"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "AIG Insurance Claims Fraud Detection",
      "problem_slug": "aig-insurance-claims-fraud-detection"
    },
    {
      "id": "8ae0716d-ed55-4781-a1e2-0575f63cb000",
      "problem_id": "3e5c2aaf-f454-41cf-8898-ac134e7309d4",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE aig_policies (\n        policy_id VARCHAR(20) PRIMARY KEY,\n        policyholder_name VARCHAR(100),\n        policy_type VARCHAR(30),\n        annual_premium DECIMAL(10,2),\n        coverage_amount DECIMAL(12,2),\n        policy_start_date DATE\n    );\n      INSERT INTO aig_policies  VALUES\n      ('POL-001', 'ABC Manufacturing', 'Commercial Property', 125000.00, 5000000.00, '2023-01-15'),\n      ('POL-002', 'Smith Family Trust', 'Homeowners', 3500.00, 750000.00, '2023-03-20'),\n      ('POL-003', 'Global Logistics Inc', 'Commercial Auto', 85000.00, 2500000.00, '2023-02-10'),\n      ('POL-004', 'Johnson Residence', 'Homeowners', 2800.00, 650000.00, '2023-04-05'),\n      ('POL-005', 'Tech Startup LLC', 'General Liability', 15000.00, 1000000.00, '2023-05-12'),\n      ('POL-001_v1', 'ABC Manufacturing_v1', 'Commercial Property_v1', 125000.10, 5000000.10, '2023-01-16'),\n      ('POL-002_v2', 'Smith Family Trust_v2', 'Homeowners_v2', 3500.20, 750000.20, '2023-03-22'),\n      ('POL-003_v3', 'Global Logistics Inc_v3', 'Commercial Auto_v3', 85000.30, 2500000.30, '2023-02-13'),\n      ('POL-004_v4', 'Johnson Residence_v4', 'Homeowners_v4', 2800.40, 650000.40, '2023-04-09'),\n      ('POL-005_v5', 'Tech Startup LLC_v5', 'General Liability_v5', 15000.50, 1000000.50, '2023-05-17'),\n      ('POL-001_v6', 'ABC Manufacturing_v6', 'Commercial Property_v6', 125000.60, 5000000.60, '2023-01-21'),\n      ('POL-002_v7', 'Smith Family Trust_v7', 'Homeowners_v7', 3500.70, 750000.70, '2023-03-27'),\n      ('POL-003_v8', 'Global Logistics Inc_v8', 'Commercial Auto_v8', 85000.80, 2500000.80, '2023-02-18'),\n      ('POL-004_v9', 'Johnson Residence_v9', 'Homeowners_v9', 2800.90, 650000.90, '2023-04-14'),\n      ('POL-005_v10', 'Tech Startup LLC_v10', 'General Liability_v10', 15001.00, 1000001.00, '2023-05-22'),\n      ('POL-001_v11', 'ABC Manufacturing_v11', 'Commercial Property_v11', 125001.10, 5000001.10, '2023-01-26'),\n      ('POL-002_v12', 'Smith Family Trust_v12', 'Homeowners_v12', 3501.20, 750001.20, '2023-04-01'),\n      ('POL-003_v13', 'Global Logistics Inc_v13', 'Commercial Auto_v13', 85001.30, 2500001.30, '2023-02-23'),\n      ('POL-004_v14', 'Johnson Residence_v14', 'Homeowners_v14', 2801.40, 650001.40, '2023-04-19'),\n      ('POL-005_v15', 'Tech Startup LLC_v15', 'General Liability_v15', 15001.50, 1000001.50, '2023-05-27'),\n      ('POL-001_v16', 'ABC Manufacturing_v16', 'Commercial Property_v16', 125001.60, 5000001.60, '2023-01-31'),\n      ('POL-002_v17', 'Smith Family Trust_v17', 'Homeowners_v17', 3501.70, 750001.70, '2023-04-06'),\n      ('POL-003_v18', 'Global Logistics Inc_v18', 'Commercial Auto_v18', 85001.80, 2500001.80, '2023-02-28'),\n      ('POL-004_v19', 'Johnson Residence_v19', 'Homeowners_v19', 2801.90, 650001.90, '2023-04-24'),\n      ('POL-005_v20', 'Tech Startup LLC_v20', 'General Liability_v20', 15002.00, 1000002.00, '2023-06-01');",
      "solution_sql": "-- AIG Insurance Claims Fraud Detection\nSELECT \n    policy_id,\n    policyholder_name,\n    annual_premium,\n    ROUND(annual_premium / 1000, 2) as risk_score\nFROM aig_policies \nWHERE annual_premium > 50000\nORDER BY annual_premium DESC\nLIMIT 10;",
      "explanation": "Insurance fraud detection using composite risk scoring, statistical anomaly detection, and percentile-based threshold analysis for investigation prioritization.",
      "created_at": "2025-08-11T13:51:15.999Z",
      "expected_output": [
        {
          "policy_id": "POL-001_v16",
          "risk_score": "125.00",
          "annual_premium": "125001.60",
          "policyholder_name": "ABC Manufacturing_v16"
        },
        {
          "policy_id": "POL-001_v11",
          "risk_score": "125.00",
          "annual_premium": "125001.10",
          "policyholder_name": "ABC Manufacturing_v11"
        },
        {
          "policy_id": "POL-001_v6",
          "risk_score": "125.00",
          "annual_premium": "125000.60",
          "policyholder_name": "ABC Manufacturing_v6"
        },
        {
          "policy_id": "POL-001_v1",
          "risk_score": "125.00",
          "annual_premium": "125000.10",
          "policyholder_name": "ABC Manufacturing_v1"
        },
        {
          "policy_id": "POL-001",
          "risk_score": "125.00",
          "annual_premium": "125000.00",
          "policyholder_name": "ABC Manufacturing"
        },
        {
          "policy_id": "POL-003_v18",
          "risk_score": "85.00",
          "annual_premium": "85001.80",
          "policyholder_name": "Global Logistics Inc_v18"
        },
        {
          "policy_id": "POL-003_v13",
          "risk_score": "85.00",
          "annual_premium": "85001.30",
          "policyholder_name": "Global Logistics Inc_v13"
        },
        {
          "policy_id": "POL-003_v8",
          "risk_score": "85.00",
          "annual_premium": "85000.80",
          "policyholder_name": "Global Logistics Inc_v8"
        },
        {
          "policy_id": "POL-003_v3",
          "risk_score": "85.00",
          "annual_premium": "85000.30",
          "policyholder_name": "Global Logistics Inc_v3"
        },
        {
          "policy_id": "POL-003",
          "risk_score": "85.00",
          "annual_premium": "85000.00",
          "policyholder_name": "Global Logistics Inc"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "AIG Insurance Claims Fraud Detection",
      "problem_slug": "aig-insurance-claims-fraud-detection"
    },
    {
      "id": "4bb9543b-0a21-4894-897c-094e4e061ac1",
      "problem_id": "46126968-4455-4602-821b-06375609254f",
      "sql_dialect": "mysql",
      "setup_sql": "\n      CREATE TABLE att_service_calls (\n          call_id INT PRIMARY KEY,\n          customer_type VARCHAR(20),\n          service_category VARCHAR(30),\n          call_duration_minutes INT,\n          resolution_status VARCHAR(20),\n          satisfaction_rating INT,\n          agent_id INT,\n          call_date DATE\n      );\n      INSERT INTO att_service_calls VALUES\n      (1, 'Residential', 'Technical Support', 25, 'Resolved', 4, 101, '2024-01-15'),\n      (2, 'Business', 'Billing', 15, 'Resolved', 5, 102, '2024-01-15'),\n      (3, 'Enterprise', 'Network Issues', 45, 'Resolved', 3, 103, '2024-01-16'),\n      (4, 'Residential', 'Technical Support', 0, 'Dropped', NULL, NULL, '2024-01-16'),\n      (5, 'Business', 'Billing', 12, 'Resolved', 4, 104, '2024-01-17'),\n      (6, 'Residential', 'Account Changes', 18, 'Resolved', 5, 105, '2024-01-17'),\n      (7, 'Enterprise', 'Network Issues', 38, 'Resolved', 4, 106, '2024-01-18'),\n      (8, 'Business', 'Technical Support', 22, 'Resolved', 3, 107, '2024-01-18'),\n      (9, 'Residential', 'Billing', 8, 'Resolved', 5, 108, '2024-01-19'),\n      (10, 'Enterprise', 'Account Changes', 35, 'Resolved', 4, 109, '2024-01-19'),\n      (11, 'Residential', 'Technical Support', 28, 'Resolved', 4, 110, '2024-01-20'),\n      (12, 'Business', 'Network Issues', 42, 'Resolved', 3, 111, '2024-01-20'),\n      (13, 'Enterprise', 'Billing', 20, 'Resolved', 5, 112, '2024-01-21'),\n      (14, 'Residential', 'Account Changes', 16, 'Resolved', 4, 113, '2024-01-21'),\n      (15, 'Business', 'Technical Support', 31, 'Resolved', 3, 114, '2024-01-22'),\n      (16, 'Enterprise', 'Network Issues', 50, 'Resolved', 4, 115, '2024-01-22'),\n      (17, 'Residential', 'Billing', 10, 'Resolved', 5, 116, '2024-01-23'),\n      (18, 'Business', 'Account Changes', 24, 'Resolved', 4, 117, '2024-01-23'),\n      (19, 'Enterprise', 'Technical Support', 55, 'Resolved', 3, 118, '2024-01-24'),\n      (20, 'Residential', 'Network Issues', 33, 'Resolved', 4, 119, '2024-01-24'),\n      (21, 'Business', 'Billing', 14, 'Resolved', 5, 120, '2024-01-25'),\n      (22, 'Enterprise', 'Account Changes', 40, 'Resolved', 3, 121, '2024-01-25'),\n      (23, 'Residential', 'Technical Support', 27, 'Resolved', 4, 122, '2024-01-26'),\n      (24, 'Business', 'Network Issues', 36, 'Resolved', 4, 123, '2024-01-26'),\n      (25, 'Enterprise', 'Billing', 18, 'Resolved', 5, 124, '2024-01-27');",
      "solution_sql": "-- Edge case aware solution for AT&T call analytics\nWITH call_stats AS (\n    SELECT \n        service_category,\n        -- Duration calculation excluding outliers and dropped calls\n        AVG(CASE \n            WHEN call_duration_minutes > 0 AND call_duration_minutes <= 120 \n            THEN call_duration_minutes \n        END) as avg_duration,\n        \n        -- Resolution rate calculation\n        COUNT(CASE \n            WHEN resolution_status = 'Resolved' \n            THEN 1 \n        END) * 100.0 / NULLIF(COUNT(*), 0) as resolution_rate,\n        \n        -- Total calls including dropped calls\n        COUNT(*) as total_calls,\n        \n        -- Completed calls (non-dropped) for filtering\n        COUNT(CASE \n            WHEN resolution_status != 'Dropped' \n            THEN 1 \n        END) as completed_calls\n    FROM att_service_calls\n    GROUP BY service_category\n    HAVING COUNT(CASE WHEN resolution_status != 'Dropped' THEN 1 END) >= 3\n)\nSELECT \n    service_category,\n    ROUND(avg_duration, 1) as avg_duration_minutes,\n    ROUND(resolution_rate, 1) as resolution_rate_percent,\n    total_calls\nFROM call_stats\nORDER BY resolution_rate DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.691Z",
      "expected_output": [
        {
          "total_calls": "7",
          "service_category": "Billing",
          "avg_duration_minutes": "13.9",
          "resolution_rate_percent": "100.0"
        },
        {
          "total_calls": "6",
          "service_category": "Network Issues",
          "avg_duration_minutes": "40.7",
          "resolution_rate_percent": "100.0"
        },
        {
          "total_calls": "5",
          "service_category": "Account Changes",
          "avg_duration_minutes": "26.6",
          "resolution_rate_percent": "100.0"
        },
        {
          "total_calls": "7",
          "service_category": "Technical Support",
          "avg_duration_minutes": "31.3",
          "resolution_rate_percent": "85.7"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "AT&T Customer Service Call Volume Analytics",
      "problem_slug": "at-t-customer-service-call-volume"
    },
    {
      "id": "68e07a6b-8c5d-4fd8-987d-109cef9dc5a8",
      "problem_id": "46126968-4455-4602-821b-06375609254f",
      "sql_dialect": "postgresql",
      "setup_sql": "\n      CREATE TABLE att_service_calls (\n          call_id INT PRIMARY KEY,\n          customer_type VARCHAR(20),\n          service_category VARCHAR(30),\n          call_duration_minutes INT,\n          resolution_status VARCHAR(20),\n          satisfaction_rating INT,\n          agent_id INT,\n          call_date DATE\n      );\n      INSERT INTO att_service_calls VALUES\n      (1, 'Residential', 'Technical Support', 25, 'Resolved', 4, 101, '2024-01-15'),\n      (2, 'Business', 'Billing', 15, 'Resolved', 5, 102, '2024-01-15'),\n      (3, 'Enterprise', 'Network Issues', 45, 'Resolved', 3, 103, '2024-01-16'),\n      (4, 'Residential', 'Technical Support', 0, 'Dropped', NULL, NULL, '2024-01-16'),\n      (5, 'Business', 'Billing', 12, 'Resolved', 4, 104, '2024-01-17'),\n      (6, 'Residential', 'Account Changes', 18, 'Resolved', 5, 105, '2024-01-17'),\n      (7, 'Enterprise', 'Network Issues', 38, 'Resolved', 4, 106, '2024-01-18'),\n      (8, 'Business', 'Technical Support', 22, 'Resolved', 3, 107, '2024-01-18'),\n      (9, 'Residential', 'Billing', 8, 'Resolved', 5, 108, '2024-01-19'),\n      (10, 'Enterprise', 'Account Changes', 35, 'Resolved', 4, 109, '2024-01-19'),\n      (11, 'Residential', 'Technical Support', 28, 'Resolved', 4, 110, '2024-01-20'),\n      (12, 'Business', 'Network Issues', 42, 'Resolved', 3, 111, '2024-01-20'),\n      (13, 'Enterprise', 'Billing', 20, 'Resolved', 5, 112, '2024-01-21'),\n      (14, 'Residential', 'Account Changes', 16, 'Resolved', 4, 113, '2024-01-21'),\n      (15, 'Business', 'Technical Support', 31, 'Resolved', 3, 114, '2024-01-22'),\n      (16, 'Enterprise', 'Network Issues', 50, 'Resolved', 4, 115, '2024-01-22'),\n      (17, 'Residential', 'Billing', 10, 'Resolved', 5, 116, '2024-01-23'),\n      (18, 'Business', 'Account Changes', 24, 'Resolved', 4, 117, '2024-01-23'),\n      (19, 'Enterprise', 'Technical Support', 55, 'Resolved', 3, 118, '2024-01-24'),\n      (20, 'Residential', 'Network Issues', 33, 'Resolved', 4, 119, '2024-01-24'),\n      (21, 'Business', 'Billing', 14, 'Resolved', 5, 120, '2024-01-25'),\n      (22, 'Enterprise', 'Account Changes', 40, 'Resolved', 3, 121, '2024-01-25'),\n      (23, 'Residential', 'Technical Support', 27, 'Resolved', 4, 122, '2024-01-26'),\n      (24, 'Business', 'Network Issues', 36, 'Resolved', 4, 123, '2024-01-26'),\n      (25, 'Enterprise', 'Billing', 18, 'Resolved', 5, 124, '2024-01-27');",
      "solution_sql": "-- Edge case aware solution for AT&T call analytics\nWITH call_stats AS (\n    SELECT \n        service_category,\n        -- Duration calculation excluding outliers and dropped calls\n        AVG(CASE \n            WHEN call_duration_minutes > 0 AND call_duration_minutes <= 120 \n            THEN call_duration_minutes \n        END) as avg_duration,\n        \n        -- Resolution rate calculation\n        COUNT(CASE \n            WHEN resolution_status = 'Resolved' \n            THEN 1 \n        END) * 100.0 / NULLIF(COUNT(*), 0) as resolution_rate,\n        \n        -- Total calls including dropped calls\n        COUNT(*) as total_calls,\n        \n        -- Completed calls (non-dropped) for filtering\n        COUNT(CASE \n            WHEN resolution_status != 'Dropped' \n            THEN 1 \n        END) as completed_calls\n    FROM att_service_calls\n    GROUP BY service_category\n    HAVING COUNT(CASE WHEN resolution_status != 'Dropped' THEN 1 END) >= 3\n)\nSELECT \n    service_category,\n    ROUND(avg_duration, 1) as avg_duration_minutes,\n    ROUND(resolution_rate, 1) as resolution_rate_percent,\n    total_calls\nFROM call_stats\nORDER BY resolution_rate DESC;",
      "explanation": "This solution demonstrates handling multiple edge cases: NULL handling with NULLIF to prevent division by zero, outlier exclusion for realistic averages, proper classification of dropped calls, and filtering for statistical significance.",
      "created_at": "2025-08-11T13:51:15.990Z",
      "expected_output": [
        {
          "total_calls": "7",
          "service_category": "Billing",
          "avg_duration_minutes": "13.9",
          "resolution_rate_percent": "100.0"
        },
        {
          "total_calls": "6",
          "service_category": "Network Issues",
          "avg_duration_minutes": "40.7",
          "resolution_rate_percent": "100.0"
        },
        {
          "total_calls": "5",
          "service_category": "Account Changes",
          "avg_duration_minutes": "26.6",
          "resolution_rate_percent": "100.0"
        },
        {
          "total_calls": "7",
          "service_category": "Technical Support",
          "avg_duration_minutes": "31.3",
          "resolution_rate_percent": "85.7"
        }
      ],
      "explanation_detailed": "This problem tests your ability to aggregate data by categories and calculate multiple metrics per group. The key is using GROUP BY with multiple aggregate functions.",
      "approach_summary": "Group by service category, then calculate averages for duration and resolution rate, plus count total calls.",
      "key_concepts": [
        "GROUP BY",
        "AVG()",
        "COUNT()",
        "Multiple aggregations"
      ],
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": [
        "Forgetting GROUP BY",
        "Using COUNT(*) instead of proper resolution rate calculation"
      ],
      "optimization_tips": [
        "Use proper column indexing on service_category for better performance"
      ],
      "problem_title": "AT&T Customer Service Call Volume Analytics",
      "problem_slug": "at-t-customer-service-call-volume"
    },
    {
      "id": "1d4ff274-66c5-4c06-86bd-04553b6cb91d",
      "problem_id": "a2dedad9-60f7-4e85-84a2-90ea11c097d6",
      "sql_dialect": "mysql",
      "setup_sql": "\nCREATE TABLE adobe_subscriptions (\n    subscription_id INT PRIMARY KEY,\n    plan_name VARCHAR(50),\n    monthly_revenue DECIMAL(12,2),\n    subscriber_count INT,\n    churn_rate DECIMAL(5,2),\n    signup_date DATE\n);\n\nINSERT INTO adobe_subscriptions VALUES\n(1, 'Creative Cloud Individual', 52.99, 450000, 0.05, '2024-01-15'),\n(2, 'Creative Cloud Business', 79.99, 120000, 0.03, '2024-02-10'),\n(3, 'Photography Plan', 19.99, 800000, 0.07, '2024-01-20'),\n(4, 'Single App Plan', 22.99, 200000, 0.08, '2024-03-05'),\n(5, 'Student Plan', 19.99, 300000, 0.12, '2024-02-15'),\n(6, 'Creative Cloud Teams', 84.99, 85000, 0.04, '2024-01-25'),\n(7, 'Creative Cloud Enterprise', 99.99, 45000, 0.02, '2024-03-01'),\n(8, 'Acrobat Pro DC', 23.99, 180000, 0.06, '2024-02-20'),\n(9, 'Stock Standard', 29.99, 90000, 0.09, '2024-03-10'),\n(10, 'Stock Premium', 99.99, 25000, 0.05, '2024-01-30');\n",
      "solution_sql": "\nSELECT \n    plan_name, \n    SUM(monthly_revenue * subscriber_count) as total_revenue\nFROM adobe_subscriptions \nGROUP BY plan_name \nHAVING SUM(monthly_revenue * subscriber_count) > 1000000 \nORDER BY total_revenue DESC;\n",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.739Z",
      "expected_output": [
        {
          "plan_name": "Creative Cloud Individual",
          "total_revenue": "23845500.00"
        },
        {
          "plan_name": "Photography Plan",
          "total_revenue": "15992000.00"
        },
        {
          "plan_name": "Creative Cloud Business",
          "total_revenue": "9598800.00"
        },
        {
          "plan_name": "Creative Cloud Teams",
          "total_revenue": "7224150.00"
        },
        {
          "plan_name": "Student Plan",
          "total_revenue": "5997000.00"
        },
        {
          "plan_name": "Single App Plan",
          "total_revenue": "4598000.00"
        },
        {
          "plan_name": "Creative Cloud Enterprise",
          "total_revenue": "4499550.00"
        },
        {
          "plan_name": "Acrobat Pro DC",
          "total_revenue": "4318200.00"
        },
        {
          "plan_name": "Stock Standard",
          "total_revenue": "2699100.00"
        },
        {
          "plan_name": "Stock Premium",
          "total_revenue": "2499750.00"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Adobe Creative Cloud Subscription Analytics",
      "problem_slug": "adobe-revenue-analysis"
    },
    {
      "id": "8b3d757f-5b5d-4ae3-b3ba-e2ca16333f0a",
      "problem_id": "a2dedad9-60f7-4e85-84a2-90ea11c097d6",
      "sql_dialect": "postgresql",
      "setup_sql": "\nCREATE TABLE adobe_subscriptions (\n    subscription_id INT PRIMARY KEY,\n    plan_name VARCHAR(50),\n    monthly_revenue DECIMAL(12,2),\n    subscriber_count INT,\n    churn_rate DECIMAL(5,2),\n    signup_date DATE\n);\n\nINSERT INTO adobe_subscriptions VALUES\n(1, 'Creative Cloud Individual', 52.99, 450000, 0.05, '2024-01-15'),\n(2, 'Creative Cloud Business', 79.99, 120000, 0.03, '2024-02-10'),\n(3, 'Photography Plan', 19.99, 800000, 0.07, '2024-01-20'),\n(4, 'Single App Plan', 22.99, 200000, 0.08, '2024-03-05'),\n(5, 'Student Plan', 19.99, 300000, 0.12, '2024-02-15'),\n(6, 'Creative Cloud Teams', 84.99, 85000, 0.04, '2024-01-25'),\n(7, 'Creative Cloud Enterprise', 99.99, 45000, 0.02, '2024-03-01'),\n(8, 'Acrobat Pro DC', 23.99, 180000, 0.06, '2024-02-20'),\n(9, 'Stock Standard', 29.99, 90000, 0.09, '2024-03-10'),\n(10, 'Stock Premium', 99.99, 25000, 0.05, '2024-01-30');\n",
      "solution_sql": "\nSELECT \n    plan_name, \n    SUM(monthly_revenue * subscriber_count) as total_revenue\nFROM adobe_subscriptions \nGROUP BY plan_name \nHAVING SUM(monthly_revenue * subscriber_count) > 1000000 \nORDER BY total_revenue DESC;\n",
      "explanation": "Adobe subscription analytics using SUM aggregation for recurring revenue analysis across Creative Cloud plans.",
      "created_at": "2025-08-11T17:08:07.820Z",
      "expected_output": [
        {
          "plan_name": "Creative Cloud Individual",
          "total_revenue": "23845500.00"
        },
        {
          "plan_name": "Photography Plan",
          "total_revenue": "15992000.00"
        },
        {
          "plan_name": "Creative Cloud Business",
          "total_revenue": "9598800.00"
        },
        {
          "plan_name": "Creative Cloud Teams",
          "total_revenue": "7224150.00"
        },
        {
          "plan_name": "Student Plan",
          "total_revenue": "5997000.00"
        },
        {
          "plan_name": "Single App Plan",
          "total_revenue": "4598000.00"
        },
        {
          "plan_name": "Creative Cloud Enterprise",
          "total_revenue": "4499550.00"
        },
        {
          "plan_name": "Acrobat Pro DC",
          "total_revenue": "4318200.00"
        },
        {
          "plan_name": "Stock Standard",
          "total_revenue": "2699100.00"
        },
        {
          "plan_name": "Stock Premium",
          "total_revenue": "2499750.00"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Adobe Creative Cloud Subscription Analytics",
      "problem_slug": "adobe-revenue-analysis"
    },
    {
      "id": "3a717ae0-b748-4c28-8160-1fcc2b2e12fb",
      "problem_id": "55c0bc97-b6bc-42ae-a1dd-b08f0cec5e82",
      "sql_dialect": "mysql",
      "setup_sql": "\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    email VARCHAR(100),\n    registration_date DATE,\n    customer_tier VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10,2),\n    product_category VARCHAR(50),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nINSERT INTO customers VALUES\n(1, 'Alice Johnson', 'alice@email.com', '2023-01-15', 'Premium'),\n(2, 'Bob Smith', 'bob@email.com', '2023-02-20', 'Standard'),\n(3, 'Carol Davis', 'carol@email.com', '2023-03-10', 'Premium'),\n(4, 'David Wilson', 'david@email.com', '2023-01-25', 'Standard'),\n(5, 'Emma Brown', 'emma@email.com', '2023-04-05', 'Premium');\n\nINSERT INTO orders VALUES\n(1, 1, '2024-01-10', 250.00, 'Electronics'),\n(2, 1, '2024-02-15', 120.00, 'Books'),\n(3, 2, '2024-01-20', 80.00, 'Clothing'),\n(4, 3, '2024-03-05', 450.00, 'Electronics'),\n(5, 3, '2024-03-20', 200.00, 'Home'),\n(6, 4, '2024-02-10', 60.00, 'Books'),\n(7, 5, '2024-04-15', 300.00, 'Electronics'),\n(8, 1, '2024-04-20', 180.00, 'Clothing'),\n(9, 2, '2024-04-25', 95.00, 'Home'),\n(10, 3, '2024-05-01', 75.00, 'Books');",
      "solution_sql": "\nSELECT \n    c.customer_tier,\n    COUNT(DISTINCT c.customer_id) as customer_count,\n    COUNT(o.order_id) as total_orders,\n    ROUND(AVG(o.total_amount), 2) as avg_order_value,\n    ROUND(SUM(o.total_amount), 2) as total_revenue\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_tier\nORDER BY total_revenue DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.701Z",
      "expected_output": [
        {
          "total_orders": "7",
          "customer_tier": "Premium",
          "total_revenue": "1575.00",
          "customer_count": "3",
          "avg_order_value": "225.00"
        },
        {
          "total_orders": "3",
          "customer_tier": "Standard",
          "total_revenue": "235.00",
          "customer_count": "2",
          "avg_order_value": "78.33"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "E-commerce Customer Analytics",
      "problem_slug": "airbnb-revenue-analysis"
    },
    {
      "id": "f9b44e21-f93d-497e-9ef1-f64bb517c5cc",
      "problem_id": "55c0bc97-b6bc-42ae-a1dd-b08f0cec5e82",
      "sql_dialect": "postgresql",
      "setup_sql": "\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    email VARCHAR(100),\n    registration_date DATE,\n    customer_tier VARCHAR(20)\n);\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10,2),\n    product_category VARCHAR(50),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nINSERT INTO customers VALUES\n(1, 'Alice Johnson', 'alice@email.com', '2023-01-15', 'Premium'),\n(2, 'Bob Smith', 'bob@email.com', '2023-02-20', 'Standard'),\n(3, 'Carol Davis', 'carol@email.com', '2023-03-10', 'Premium'),\n(4, 'David Wilson', 'david@email.com', '2023-01-25', 'Standard'),\n(5, 'Emma Brown', 'emma@email.com', '2023-04-05', 'Premium');\n\nINSERT INTO orders VALUES\n(1, 1, '2024-01-10', 250.00, 'Electronics'),\n(2, 1, '2024-02-15', 120.00, 'Books'),\n(3, 2, '2024-01-20', 80.00, 'Clothing'),\n(4, 3, '2024-03-05', 450.00, 'Electronics'),\n(5, 3, '2024-03-20', 200.00, 'Home'),\n(6, 4, '2024-02-10', 60.00, 'Books'),\n(7, 5, '2024-04-15', 300.00, 'Electronics'),\n(8, 1, '2024-04-20', 180.00, 'Clothing'),\n(9, 2, '2024-04-25', 95.00, 'Home'),\n(10, 3, '2024-05-01', 75.00, 'Books');",
      "solution_sql": "\nSELECT \n    c.customer_tier,\n    COUNT(DISTINCT c.customer_id) as customer_count,\n    COUNT(o.order_id) as total_orders,\n    ROUND(AVG(o.total_amount), 2) as avg_order_value,\n    ROUND(SUM(o.total_amount), 2) as total_revenue\nFROM customers c\nJOIN orders o ON c.customer_id = o.customer_id\nGROUP BY c.customer_tier\nORDER BY total_revenue DESC;",
      "explanation": "Airbnb Host Revenue Optimization business analysis",
      "created_at": "2025-08-11T17:08:07.818Z",
      "expected_output": [
        {
          "total_orders": "7",
          "customer_tier": "Premium",
          "total_revenue": "1575.00",
          "customer_count": "3",
          "avg_order_value": "225.00"
        },
        {
          "total_orders": "3",
          "customer_tier": "Standard",
          "total_revenue": "235.00",
          "customer_count": "2",
          "avg_order_value": "78.33"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "E-commerce Customer Analytics",
      "problem_slug": "airbnb-revenue-analysis"
    },
    {
      "id": "03809b91-ea14-4480-a0bb-aaae93c45c3f",
      "problem_id": "2abba901-541a-4c0e-ae30-624927a7b3f3",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE amazon_prime_subscribers (\n    subscriber_id INT PRIMARY KEY,\n    region VARCHAR(50),\n    subscription_type VARCHAR(30),\n    monthly_fee DECIMAL(6,2),\n    signup_date DATE,\n    content_hours_watched INT\n) ENGINE=InnoDB;\n\nINSERT INTO amazon_prime_subscribers VALUES\n(1, \"North America\", \"Prime Video\", 8.99, \"2024-01-15\", 25),\n(2, \"North America\", \"Prime Video\", 8.99, \"2024-01-16\", 30),\n(3, \"North America\", \"Prime Video\", 8.99, \"2024-01-17\", 20),\n(4, \"North America\", \"Prime Video\", 8.99, \"2024-01-18\", 35),\n(5, \"North America\", \"Prime Video\", 8.99, \"2024-01-19\", 28),\n(6, \"North America\", \"Prime Video\", 8.99, \"2024-01-20\", 22),\n(7, \"North America\", \"Prime Video\", 8.99, \"2024-01-21\", 40),\n(8, \"North America\", \"Prime Video\", 8.99, \"2024-01-22\", 15),\n(9, \"North America\", \"Prime Video\", 8.99, \"2024-01-23\", 33),\n(10, \"North America\", \"Prime Video\", 8.99, \"2024-01-24\", 27),\n(11, \"North America\", \"Prime Video\", 8.99, \"2024-01-25\", 31),\n(12, \"North America\", \"Prime Video\", 8.99, \"2024-01-26\", 24),\n(13, \"Asia Pacific\", \"Prime Video\", 4.99, \"2024-02-01\", 32),\n(14, \"Asia Pacific\", \"Prime Video\", 4.99, \"2024-02-02\", 28),\n(15, \"Asia Pacific\", \"Prime Video\", 4.99, \"2024-02-03\", 35),\n(16, \"Asia Pacific\", \"Prime Video\", 4.99, \"2024-02-04\", 30),\n(17, \"Asia Pacific\", \"Prime Video\", 4.99, \"2024-02-05\", 25),\n(18, \"Asia Pacific\", \"Prime Video\", 4.99, \"2024-02-06\", 38),\n(19, \"Asia Pacific\", \"Prime Video\", 4.99, \"2024-02-07\", 29),\n(20, \"Asia Pacific\", \"Prime Video\", 4.99, \"2024-02-08\", 33),\n(21, \"Europe\", \"Prime Video\", 5.99, \"2024-03-01\", 18),\n(22, \"Europe\", \"Prime Video\", 5.99, \"2024-03-02\", 22),\n(23, \"Europe\", \"Prime Video\", 5.99, \"2024-03-03\", 16),\n(24, \"Europe\", \"Prime Video\", 5.99, \"2024-03-04\", 20),\n(25, \"Europe\", \"Prime Video\", 5.99, \"2024-03-05\", 24),\n(26, \"Europe\", \"Prime Video\", 5.99, \"2024-03-06\", 19),\n(27, \"Latin America\", \"Prime Video\", 3.99, \"2024-04-01\", 22),\n(28, \"Latin America\", \"Prime Video\", 3.99, \"2024-04-02\", 26),\n(29, \"Latin America\", \"Prime Video\", 3.99, \"2024-04-03\", 20),\n(30, \"Latin America\", \"Prime Video\", 3.99, \"2024-04-04\", 24);",
      "solution_sql": "SELECT region, COUNT(*) as total_subscribers \nFROM amazon_prime_subscribers \nGROUP BY region \nHAVING COUNT(*) > 5\nORDER BY total_subscribers DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.674Z",
      "expected_output": [
        {
          "region": "North America",
          "total_subscribers": "12"
        },
        {
          "region": "Asia Pacific",
          "total_subscribers": "8"
        },
        {
          "region": "Europe",
          "total_subscribers": "6"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Amazon Prime Video Content Performance",
      "problem_slug": "amazon-prime-membership-growth"
    },
    {
      "id": "f90bdc1f-0cb7-427f-9605-f825cff78f87",
      "problem_id": "2abba901-541a-4c0e-ae30-624927a7b3f3",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE amazon_prime_subscribers (\n        subscriber_id INT PRIMARY KEY,\n        region VARCHAR(50),\n        subscription_type VARCHAR(30),\n        monthly_fee DECIMAL(6,2),\n        signup_date DATE,\n        content_hours_watched INT\n    );\n    -- Create sufficient test data for each region\n    -- North America: 1.25M subscribers\n    INSERT INTO amazon_prime_subscribers \n    SELECT i as subscriber_id,\n           'North America' as region,\n           'Prime Video' as subscription_type,\n           8.99 as monthly_fee,\n           CURRENT_DATE - interval '30 days' as signup_date,\n           25 as content_hours_watched\n    FROM generate_series(1, 1250000) i;\n    \n    -- Europe: 750K subscribers  \n    INSERT INTO amazon_prime_subscribers \n    SELECT i as subscriber_id,\n           'Europe' as region,\n           'Prime Video' as subscription_type,\n           5.99 as monthly_fee,\n           CURRENT_DATE - interval '45 days' as signup_date,\n           18 as content_hours_watched\n    FROM generate_series(1250001, 2000000) i;\n    \n    -- Asia Pacific: 1.1M subscribers\n    INSERT INTO amazon_prime_subscribers \n    SELECT i as subscriber_id,\n           'Asia Pacific' as region,\n           'Prime Video' as subscription_type,\n           4.99 as monthly_fee,\n           CURRENT_DATE - interval '60 days' as signup_date,\n           32 as content_hours_watched\n    FROM generate_series(2000001, 3100000) i;\n    \n    -- Latin America: 500K subscribers (below 1M threshold)\n    INSERT INTO amazon_prime_subscribers \n    SELECT i as subscriber_id,\n           'Latin America' as region,\n           'Prime Video' as subscription_type,\n           3.99 as monthly_fee,\n           CURRENT_DATE - interval '20 days' as signup_date,\n           22 as content_hours_watched\n    FROM generate_series(3100001, 3600000) i;",
      "solution_sql": "SELECT region, COUNT(*) as total_subscribers \nFROM amazon_prime_subscribers \nGROUP BY region \nHAVING COUNT(*) > 5\nORDER BY total_subscribers DESC;",
      "explanation": "Amazon Prime Video Content Performance business analysis",
      "created_at": "2025-08-11T17:06:42.245Z",
      "expected_output": [
        {
          "region": "North America",
          "total_subscribers": "12"
        },
        {
          "region": "Asia Pacific",
          "total_subscribers": "8"
        },
        {
          "region": "Europe",
          "total_subscribers": "6"
        }
      ],
      "explanation_detailed": "This aggregation problem requires grouping data and filtering the grouped results. The key difference between WHERE and HAVING is that HAVING filters after grouping.",
      "approach_summary": "Group subscribers by region, count them, filter groups with HAVING, and order results.",
      "key_concepts": [
        "GROUP BY",
        "COUNT()",
        "HAVING clause",
        "ORDER BY"
      ],
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": [
        "Using WHERE instead of HAVING",
        "Forgetting to order results"
      ],
      "optimization_tips": [
        "Index on region column can speed up grouping operations"
      ],
      "problem_title": "Amazon Prime Video Content Performance",
      "problem_slug": "amazon-prime-membership-growth"
    },
    {
      "id": "55acd80a-ed02-4f24-bb61-e5e2e747ace9",
      "problem_id": "7ceae8af-c0b8-49de-afca-daa1af1c484c",
      "sql_dialect": "mysql",
      "setup_sql": "\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    follower_count INT,\n    account_type VARCHAR(20),\n    join_date DATE\n);\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    user_id INT,\n    post_type VARCHAR(30),\n    content_category VARCHAR(30),\n    post_date DATE,\n    likes_count INT,\n    comments_count INT,\n    shares_count INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nINSERT INTO users VALUES\n(1, 'tech_guru', 15000, 'Creator', '2022-06-15'),\n(2, 'food_lover', 8500, 'Influencer', '2022-08-20'),\n(3, 'travel_blog', 25000, 'Creator', '2022-03-10'),\n(4, 'fitness_coach', 12000, 'Influencer', '2022-09-05'),\n(5, 'art_studio', 5000, 'Business', '2022-11-15');\n\nINSERT INTO posts VALUES\n(1, 1, 'Video', 'Technology', '2024-05-01', 450, 65, 120),\n(2, 1, 'Photo', 'Technology', '2024-05-03', 320, 45, 80),\n(3, 2, 'Video', 'Food', '2024-05-02', 680, 95, 200),\n(4, 2, 'Photo', 'Food', '2024-05-04', 520, 70, 150),\n(5, 3, 'Photo', 'Travel', '2024-05-01', 890, 120, 280),\n(6, 3, 'Story', 'Travel', '2024-05-05', 340, 30, 90),\n(7, 4, 'Video', 'Fitness', '2024-05-03', 420, 85, 110),\n(8, 5, 'Photo', 'Art', '2024-05-02', 280, 40, 60);",
      "solution_sql": "\nSELECT \n    post_type,\n    content_category,\n    COUNT(post_id) as post_count,\n    ROUND(AVG(likes_count), 0) as avg_likes,\n    ROUND(AVG(comments_count), 0) as avg_comments,\n    ROUND(AVG(likes_count + comments_count + shares_count), 0) as avg_total_engagement\nFROM posts\nGROUP BY post_type, content_category\nORDER BY avg_total_engagement DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.725Z",
      "expected_output": [
        {
          "avg_likes": "890",
          "post_type": "Photo",
          "post_count": "1",
          "avg_comments": "120",
          "content_category": "Travel",
          "avg_total_engagement": "1290"
        },
        {
          "avg_likes": "680",
          "post_type": "Video",
          "post_count": "1",
          "avg_comments": "95",
          "content_category": "Food",
          "avg_total_engagement": "975"
        },
        {
          "avg_likes": "520",
          "post_type": "Photo",
          "post_count": "1",
          "avg_comments": "70",
          "content_category": "Food",
          "avg_total_engagement": "740"
        },
        {
          "avg_likes": "450",
          "post_type": "Video",
          "post_count": "1",
          "avg_comments": "65",
          "content_category": "Technology",
          "avg_total_engagement": "635"
        },
        {
          "avg_likes": "420",
          "post_type": "Video",
          "post_count": "1",
          "avg_comments": "85",
          "content_category": "Fitness",
          "avg_total_engagement": "615"
        },
        {
          "avg_likes": "340",
          "post_type": "Story",
          "post_count": "1",
          "avg_comments": "30",
          "content_category": "Travel",
          "avg_total_engagement": "460"
        },
        {
          "avg_likes": "320",
          "post_type": "Photo",
          "post_count": "1",
          "avg_comments": "45",
          "content_category": "Technology",
          "avg_total_engagement": "445"
        },
        {
          "avg_likes": "280",
          "post_type": "Photo",
          "post_count": "1",
          "avg_comments": "40",
          "content_category": "Art",
          "avg_total_engagement": "380"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Social Media Engagement Analysis",
      "problem_slug": "spotify-revenue-analysis"
    },
    {
      "id": "a32b6e9e-d464-42c1-b239-35c179836fd6",
      "problem_id": "7ceae8af-c0b8-49de-afca-daa1af1c484c",
      "sql_dialect": "postgresql",
      "setup_sql": "\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    follower_count INT,\n    account_type VARCHAR(20),\n    join_date DATE\n);\n\nCREATE TABLE posts (\n    post_id INT PRIMARY KEY,\n    user_id INT,\n    post_type VARCHAR(30),\n    content_category VARCHAR(30),\n    post_date DATE,\n    likes_count INT,\n    comments_count INT,\n    shares_count INT,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n);\n\nINSERT INTO users VALUES\n(1, 'tech_guru', 15000, 'Creator', '2022-06-15'),\n(2, 'food_lover', 8500, 'Influencer', '2022-08-20'),\n(3, 'travel_blog', 25000, 'Creator', '2022-03-10'),\n(4, 'fitness_coach', 12000, 'Influencer', '2022-09-05'),\n(5, 'art_studio', 5000, 'Business', '2022-11-15');\n\nINSERT INTO posts VALUES\n(1, 1, 'Video', 'Technology', '2024-05-01', 450, 65, 120),\n(2, 1, 'Photo', 'Technology', '2024-05-03', 320, 45, 80),\n(3, 2, 'Video', 'Food', '2024-05-02', 680, 95, 200),\n(4, 2, 'Photo', 'Food', '2024-05-04', 520, 70, 150),\n(5, 3, 'Photo', 'Travel', '2024-05-01', 890, 120, 280),\n(6, 3, 'Story', 'Travel', '2024-05-05', 340, 30, 90),\n(7, 4, 'Video', 'Fitness', '2024-05-03', 420, 85, 110),\n(8, 5, 'Photo', 'Art', '2024-05-02', 280, 40, 60);",
      "solution_sql": "\nSELECT \n    post_type,\n    content_category,\n    COUNT(post_id) as post_count,\n    ROUND(AVG(likes_count), 0) as avg_likes,\n    ROUND(AVG(comments_count), 0) as avg_comments,\n    ROUND(AVG(likes_count + comments_count + shares_count), 0) as avg_total_engagement\nFROM posts\nGROUP BY post_type, content_category\nORDER BY avg_total_engagement DESC;",
      "explanation": "This advanced solution demonstrates sophisticated edge case handling: NULL-safe ROI calculations, logarithmic rating weighting, multi-tier classification, and separate analysis of unusual patterns that require business attention.",
      "created_at": "2025-08-11T17:08:07.819Z",
      "expected_output": [
        {
          "avg_likes": "890",
          "post_type": "Photo",
          "post_count": "1",
          "avg_comments": "120",
          "content_category": "Travel",
          "avg_total_engagement": "1290"
        },
        {
          "avg_likes": "680",
          "post_type": "Video",
          "post_count": "1",
          "avg_comments": "95",
          "content_category": "Food",
          "avg_total_engagement": "975"
        },
        {
          "avg_likes": "520",
          "post_type": "Photo",
          "post_count": "1",
          "avg_comments": "70",
          "content_category": "Food",
          "avg_total_engagement": "740"
        },
        {
          "avg_likes": "450",
          "post_type": "Video",
          "post_count": "1",
          "avg_comments": "65",
          "content_category": "Technology",
          "avg_total_engagement": "635"
        },
        {
          "avg_likes": "420",
          "post_type": "Video",
          "post_count": "1",
          "avg_comments": "85",
          "content_category": "Fitness",
          "avg_total_engagement": "615"
        },
        {
          "avg_likes": "340",
          "post_type": "Story",
          "post_count": "1",
          "avg_comments": "30",
          "content_category": "Travel",
          "avg_total_engagement": "460"
        },
        {
          "avg_likes": "320",
          "post_type": "Photo",
          "post_count": "1",
          "avg_comments": "45",
          "content_category": "Technology",
          "avg_total_engagement": "445"
        },
        {
          "avg_likes": "280",
          "post_type": "Photo",
          "post_count": "1",
          "avg_comments": "40",
          "content_category": "Art",
          "avg_total_engagement": "380"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Social Media Engagement Analysis",
      "problem_slug": "spotify-revenue-analysis"
    },
    {
      "id": "a5960190-234f-42d0-b1bf-40510ca97e45",
      "problem_id": "0f14418a-640f-4711-b5a4-e5b3d81b27d3",
      "sql_dialect": "mysql",
      "setup_sql": "\n      CREATE TABLE amex_credit_portfolio (\n          account_id INT PRIMARY KEY,\n          customer_segment VARCHAR(20),\n          credit_limit DECIMAL(10,2),\n          current_balance DECIMAL(10,2),\n          payment_history_score INT,\n          account_age_months INT,\n          annual_fee DECIMAL(6,2),\n          reward_points_earned INT\n      );\n      INSERT INTO amex_credit_portfolio VALUES\n      (1, 'Premium', 50000.00, 12500.00, 850, 36, 550.00, 125000),\n      (2, 'Standard', 15000.00, 3500.00, 720, 24, 0.00, 15000),\n      (3, 'Business', 75000.00, 25000.00, 780, 48, 450.00, 85000),\n      (4, 'Premium', 40000.00, 8000.00, 800, 30, 550.00, 95000),\n      (5, 'Standard', 8000.00, 2400.00, 680, 18, 0.00, 8500),\n      (6, 'Business', 100000.00, 35000.00, 820, 60, 450.00, 150000),\n      (7, 'Premium', 60000.00, 15000.00, 880, 42, 550.00, 175000),\n      (8, 'Standard', 12000.00, 4800.00, 740, 20, 0.00, 22000),\n      (9, 'Business', 80000.00, 20000.00, 760, 36, 450.00, 95000),\n      (10, 'Premium', 35000.00, 7000.00, 840, 28, 550.00, 85000),\n      (11, 'Standard', 20000.00, 6000.00, 700, 30, 0.00, 28000),\n      (12, 'Business', 120000.00, 45000.00, 790, 72, 450.00, 210000),\n      (13, 'Premium', 45000.00, 9000.00, 860, 38, 550.00, 115000),\n      (14, 'Standard', 10000.00, 3000.00, 710, 22, 0.00, 12000),\n      (15, 'Business', 90000.00, 27000.00, 800, 54, 450.00, 125000),\n      (16, 'Premium', 55000.00, 11000.00, 870, 40, 550.00, 145000),\n      (17, 'Standard', 16000.00, 4800.00, 730, 26, 0.00, 18000),\n      (18, 'Business', 110000.00, 33000.00, 810, 66, 450.00, 180000),\n      (19, 'Premium', 65000.00, 13000.00, 850, 44, 550.00, 160000),\n      (20, 'Standard', 14000.00, 4200.00, 720, 24, 0.00, 16000),\n      (21, 'Business', 85000.00, 25500.00, 780, 48, 450.00, 115000),\n      (22, 'Premium', 70000.00, 14000.00, 890, 50, 550.00, 185000),\n      (23, 'Standard', 18000.00, 5400.00, 750, 32, 0.00, 24000),\n      (24, 'Business', 95000.00, 28500.00, 820, 58, 450.00, 140000),\n      (25, 'Premium', 48000.00, 9600.00, 830, 34, 550.00, 120000);",
      "solution_sql": "-- American Express Credit Portfolio Analytics\nSELECT \n    customer_segment,\n    ROUND(AVG(current_balance / credit_limit * 100), 2) as utilization_rate,\n    ROUND(AVG(credit_limit), 2) as avg_credit_limit,\n    COUNT(*) as account_count\nFROM amex_credit_portfolio \nGROUP BY customer_segment \nORDER BY utilization_rate DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.647Z",
      "expected_output": [
        {
          "account_count": "8",
          "avg_credit_limit": "94375.00",
          "customer_segment": "Business",
          "utilization_rate": "31.35"
        },
        {
          "account_count": "8",
          "avg_credit_limit": "14125.00",
          "customer_segment": "Standard",
          "utilization_rate": "30.42"
        },
        {
          "account_count": "9",
          "avg_credit_limit": "52000.00",
          "customer_segment": "Premium",
          "utilization_rate": "21.11"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "American Express Credit Portfolio Analytics",
      "problem_slug": "american-express-portfolio-analytics"
    },
    {
      "id": "50ff5704-c4c6-43f7-836c-a2df36847241",
      "problem_id": "0f14418a-640f-4711-b5a4-e5b3d81b27d3",
      "sql_dialect": "postgresql",
      "setup_sql": "\n      CREATE TABLE amex_credit_portfolio (\n          account_id INT PRIMARY KEY,\n          customer_segment VARCHAR(20),\n          credit_limit DECIMAL(10,2),\n          current_balance DECIMAL(10,2),\n          payment_history_score INT,\n          account_age_months INT,\n          annual_fee DECIMAL(6,2),\n          reward_points_earned INT\n      );\n      INSERT INTO amex_credit_portfolio VALUES\n      (1, 'Premium', 50000.00, 12500.00, 850, 36, 550.00, 125000),\n      (2, 'Standard', 15000.00, 3500.00, 720, 24, 0.00, 15000),\n      (3, 'Business', 75000.00, 25000.00, 780, 48, 450.00, 85000),\n      (4, 'Premium', 40000.00, 8000.00, 800, 30, 550.00, 95000),\n      (5, 'Standard', 8000.00, 2400.00, 680, 18, 0.00, 8500),\n      (6, 'Business', 100000.00, 35000.00, 820, 60, 450.00, 150000),\n      (7, 'Premium', 60000.00, 15000.00, 880, 42, 550.00, 175000),\n      (8, 'Standard', 12000.00, 4800.00, 740, 20, 0.00, 22000),\n      (9, 'Business', 80000.00, 20000.00, 760, 36, 450.00, 95000),\n      (10, 'Premium', 35000.00, 7000.00, 840, 28, 550.00, 85000),\n      (11, 'Standard', 20000.00, 6000.00, 700, 30, 0.00, 28000),\n      (12, 'Business', 120000.00, 45000.00, 790, 72, 450.00, 210000),\n      (13, 'Premium', 45000.00, 9000.00, 860, 38, 550.00, 115000),\n      (14, 'Standard', 10000.00, 3000.00, 710, 22, 0.00, 12000),\n      (15, 'Business', 90000.00, 27000.00, 800, 54, 450.00, 125000),\n      (16, 'Premium', 55000.00, 11000.00, 870, 40, 550.00, 145000),\n      (17, 'Standard', 16000.00, 4800.00, 730, 26, 0.00, 18000),\n      (18, 'Business', 110000.00, 33000.00, 810, 66, 450.00, 180000),\n      (19, 'Premium', 65000.00, 13000.00, 850, 44, 550.00, 160000),\n      (20, 'Standard', 14000.00, 4200.00, 720, 24, 0.00, 16000),\n      (21, 'Business', 85000.00, 25500.00, 780, 48, 450.00, 115000),\n      (22, 'Premium', 70000.00, 14000.00, 890, 50, 550.00, 185000),\n      (23, 'Standard', 18000.00, 5400.00, 750, 32, 0.00, 24000),\n      (24, 'Business', 95000.00, 28500.00, 820, 58, 450.00, 140000),\n      (25, 'Premium', 48000.00, 9600.00, 830, 34, 550.00, 120000);",
      "solution_sql": "-- American Express Credit Portfolio Analytics\nSELECT \n    customer_segment,\n    ROUND(AVG(current_balance / credit_limit * 100), 2) as utilization_rate,\n    ROUND(AVG(credit_limit), 2) as avg_credit_limit,\n    COUNT(*) as account_count\nFROM amex_credit_portfolio \nGROUP BY customer_segment \nORDER BY utilization_rate DESC;",
      "explanation": "American Express credit portfolio analytics using allocation and return metrics for risk management optimization.",
      "created_at": "2025-08-11T17:08:07.874Z",
      "expected_output": [
        {
          "account_count": "8",
          "avg_credit_limit": "94375.00",
          "customer_segment": "Business",
          "utilization_rate": "31.35"
        },
        {
          "account_count": "8",
          "avg_credit_limit": "14125.00",
          "customer_segment": "Standard",
          "utilization_rate": "30.42"
        },
        {
          "account_count": "9",
          "avg_credit_limit": "52000.00",
          "customer_segment": "Premium",
          "utilization_rate": "21.11"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "American Express Credit Portfolio Analytics",
      "problem_slug": "american-express-portfolio-analytics"
    },
    {
      "id": "8d617b92-ca97-434e-bdf4-4cdd7eda6f9e",
      "problem_id": "4e721623-1caa-49da-ad07-cf77cb0fdfc0",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE appstore_revenue (\n        app_id INT PRIMARY KEY,\n        app_category VARCHAR(50),\n        quarterly_revenue DECIMAL(12,2),\n        download_count INT,\n        quarter VARCHAR(20),\n        developer_tier VARCHAR(20)\n    );\n      INSERT INTO appstore_revenue  VALUES\n      (1, 'Games', 125000000.50, 15000000, 'Q1 2024', 'Premium'),\n      (2, 'Social Media', 78000000.75, 25000000, 'Q1 2024', 'Standard'),\n      (3, 'Productivity', 45000000.25, 8000000, 'Q1 2024', 'Premium'),\n      (4, 'Entertainment', 92000000.80, 18000000, 'Q1 2024', 'Standard'),\n      (5, 'Finance', 67000000.60, 12000000, 'Q1 2024', 'Premium'),\n      (7, 'Games_v1', 125000000.60, 15000010, 'Q1 2024_v1', 'Premium_v1'),\n      (9, 'Social Media_v2', 78000000.95, 25000020, 'Q1 2024_v2', 'Standard_v2'),\n      (11, 'Productivity_v3', 45000000.55, 8000030, 'Q1 2024_v3', 'Premium_v3'),\n      (13, 'Entertainment_v4', 92000001.20, 18000040, 'Q1 2024_v4', 'Standard_v4'),\n      (15, 'Finance_v5', 67000001.10, 12000050, 'Q1 2024_v5', 'Premium_v5'),\n      (12, 'Games_v6', 125000001.10, 15000060, 'Q1 2024_v6', 'Premium_v6'),\n      (14, 'Social Media_v7', 78000001.45, 25000070, 'Q1 2024_v7', 'Standard_v7'),\n      (16, 'Productivity_v8', 45000001.05, 8000080, 'Q1 2024_v8', 'Premium_v8'),\n      (18, 'Entertainment_v9', 92000001.70, 18000090, 'Q1 2024_v9', 'Standard_v9'),\n      (20, 'Finance_v10', 67000001.60, 12000100, 'Q1 2024_v10', 'Premium_v10'),\n      (17, 'Games_v11', 125000001.60, 15000110, 'Q1 2024_v11', 'Premium_v11'),\n      (19, 'Social Media_v12', 78000001.95, 25000120, 'Q1 2024_v12', 'Standard_v12'),\n      (21, 'Productivity_v13', 45000001.55, 8000130, 'Q1 2024_v13', 'Premium_v13'),\n      (23, 'Entertainment_v14', 92000002.20, 18000140, 'Q1 2024_v14', 'Standard_v14'),\n      (25, 'Finance_v15', 67000002.10, 12000150, 'Q1 2024_v15', 'Premium_v15'),\n      (22, 'Games_v16', 125000002.10, 15000160, 'Q1 2024_v16', 'Premium_v16'),\n      (24, 'Social Media_v17', 78000002.45, 25000170, 'Q1 2024_v17', 'Standard_v17'),\n      (26, 'Productivity_v18', 45000002.05, 8000180, 'Q1 2024_v18', 'Premium_v18'),\n      (28, 'Entertainment_v19', 92000002.70, 18000190, 'Q1 2024_v19', 'Standard_v19'),\n      (30, 'Finance_v20', 67000002.60, 12000200, 'Q1 2024_v20', 'Premium_v20');",
      "solution_sql": "SELECT app_category, SUM(quarterly_revenue) as total_revenue\nFROM appstore_revenue \nGROUP BY app_category \nHAVING SUM(quarterly_revenue) > 50000000 \nORDER BY total_revenue DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.696Z",
      "expected_output": [
        {
          "app_category": "Games_v16",
          "total_revenue": "125000002.10"
        },
        {
          "app_category": "Games_v11",
          "total_revenue": "125000001.60"
        },
        {
          "app_category": "Games_v6",
          "total_revenue": "125000001.10"
        },
        {
          "app_category": "Games_v1",
          "total_revenue": "125000000.60"
        },
        {
          "app_category": "Games",
          "total_revenue": "125000000.50"
        },
        {
          "app_category": "Entertainment_v19",
          "total_revenue": "92000002.70"
        },
        {
          "app_category": "Entertainment_v14",
          "total_revenue": "92000002.20"
        },
        {
          "app_category": "Entertainment_v9",
          "total_revenue": "92000001.70"
        },
        {
          "app_category": "Entertainment_v4",
          "total_revenue": "92000001.20"
        },
        {
          "app_category": "Entertainment",
          "total_revenue": "92000000.80"
        },
        {
          "app_category": "Social Media_v17",
          "total_revenue": "78000002.45"
        },
        {
          "app_category": "Social Media_v12",
          "total_revenue": "78000001.95"
        },
        {
          "app_category": "Social Media_v7",
          "total_revenue": "78000001.45"
        },
        {
          "app_category": "Social Media_v2",
          "total_revenue": "78000000.95"
        },
        {
          "app_category": "Social Media",
          "total_revenue": "78000000.75"
        },
        {
          "app_category": "Finance_v20",
          "total_revenue": "67000002.60"
        },
        {
          "app_category": "Finance_v15",
          "total_revenue": "67000002.10"
        },
        {
          "app_category": "Finance_v10",
          "total_revenue": "67000001.60"
        },
        {
          "app_category": "Finance_v5",
          "total_revenue": "67000001.10"
        },
        {
          "app_category": "Finance",
          "total_revenue": "67000000.60"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Apple App Store Revenue Analytics",
      "problem_slug": "apple-iphone-sales-by-quarter"
    },
    {
      "id": "932a0274-eb18-4fe3-8e5d-41bca45161cd",
      "problem_id": "4e721623-1caa-49da-ad07-cf77cb0fdfc0",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE appstore_revenue (\n        app_id INT PRIMARY KEY,\n        app_category VARCHAR(50),\n        quarterly_revenue DECIMAL(12,2),\n        download_count INT,\n        quarter VARCHAR(20),\n        developer_tier VARCHAR(20)\n    );\n      INSERT INTO appstore_revenue  VALUES\n      (1, 'Games', 125000000.50, 15000000, 'Q1 2024', 'Premium'),\n      (2, 'Social Media', 78000000.75, 25000000, 'Q1 2024', 'Standard'),\n      (3, 'Productivity', 45000000.25, 8000000, 'Q1 2024', 'Premium'),\n      (4, 'Entertainment', 92000000.80, 18000000, 'Q1 2024', 'Standard'),\n      (5, 'Finance', 67000000.60, 12000000, 'Q1 2024', 'Premium'),\n      (7, 'Games_v1', 125000000.60, 15000010, 'Q1 2024_v1', 'Premium_v1'),\n      (9, 'Social Media_v2', 78000000.95, 25000020, 'Q1 2024_v2', 'Standard_v2'),\n      (11, 'Productivity_v3', 45000000.55, 8000030, 'Q1 2024_v3', 'Premium_v3'),\n      (13, 'Entertainment_v4', 92000001.20, 18000040, 'Q1 2024_v4', 'Standard_v4'),\n      (15, 'Finance_v5', 67000001.10, 12000050, 'Q1 2024_v5', 'Premium_v5'),\n      (12, 'Games_v6', 125000001.10, 15000060, 'Q1 2024_v6', 'Premium_v6'),\n      (14, 'Social Media_v7', 78000001.45, 25000070, 'Q1 2024_v7', 'Standard_v7'),\n      (16, 'Productivity_v8', 45000001.05, 8000080, 'Q1 2024_v8', 'Premium_v8'),\n      (18, 'Entertainment_v9', 92000001.70, 18000090, 'Q1 2024_v9', 'Standard_v9'),\n      (20, 'Finance_v10', 67000001.60, 12000100, 'Q1 2024_v10', 'Premium_v10'),\n      (17, 'Games_v11', 125000001.60, 15000110, 'Q1 2024_v11', 'Premium_v11'),\n      (19, 'Social Media_v12', 78000001.95, 25000120, 'Q1 2024_v12', 'Standard_v12'),\n      (21, 'Productivity_v13', 45000001.55, 8000130, 'Q1 2024_v13', 'Premium_v13'),\n      (23, 'Entertainment_v14', 92000002.20, 18000140, 'Q1 2024_v14', 'Standard_v14'),\n      (25, 'Finance_v15', 67000002.10, 12000150, 'Q1 2024_v15', 'Premium_v15'),\n      (22, 'Games_v16', 125000002.10, 15000160, 'Q1 2024_v16', 'Premium_v16'),\n      (24, 'Social Media_v17', 78000002.45, 25000170, 'Q1 2024_v17', 'Standard_v17'),\n      (26, 'Productivity_v18', 45000002.05, 8000180, 'Q1 2024_v18', 'Premium_v18'),\n      (28, 'Entertainment_v19', 92000002.70, 18000190, 'Q1 2024_v19', 'Standard_v19'),\n      (30, 'Finance_v20', 67000002.60, 12000200, 'Q1 2024_v20', 'Premium_v20');",
      "solution_sql": "SELECT app_category, SUM(quarterly_revenue) as total_revenue\nFROM appstore_revenue \nGROUP BY app_category \nHAVING SUM(quarterly_revenue) > 50000000 \nORDER BY total_revenue DESC;",
      "explanation": "Apple App Store Revenue Analytics business analysis",
      "created_at": "2025-08-11T17:06:42.243Z",
      "expected_output": [
        {
          "app_category": "Games_v16",
          "total_revenue": "125000002.10"
        },
        {
          "app_category": "Games_v11",
          "total_revenue": "125000001.60"
        },
        {
          "app_category": "Games_v6",
          "total_revenue": "125000001.10"
        },
        {
          "app_category": "Games_v1",
          "total_revenue": "125000000.60"
        },
        {
          "app_category": "Games",
          "total_revenue": "125000000.50"
        },
        {
          "app_category": "Entertainment_v19",
          "total_revenue": "92000002.70"
        },
        {
          "app_category": "Entertainment_v14",
          "total_revenue": "92000002.20"
        },
        {
          "app_category": "Entertainment_v9",
          "total_revenue": "92000001.70"
        },
        {
          "app_category": "Entertainment_v4",
          "total_revenue": "92000001.20"
        },
        {
          "app_category": "Entertainment",
          "total_revenue": "92000000.80"
        },
        {
          "app_category": "Social Media_v17",
          "total_revenue": "78000002.45"
        },
        {
          "app_category": "Social Media_v12",
          "total_revenue": "78000001.95"
        },
        {
          "app_category": "Social Media_v7",
          "total_revenue": "78000001.45"
        },
        {
          "app_category": "Social Media_v2",
          "total_revenue": "78000000.95"
        },
        {
          "app_category": "Social Media",
          "total_revenue": "78000000.75"
        },
        {
          "app_category": "Finance_v20",
          "total_revenue": "67000002.60"
        },
        {
          "app_category": "Finance_v15",
          "total_revenue": "67000002.10"
        },
        {
          "app_category": "Finance_v10",
          "total_revenue": "67000001.60"
        },
        {
          "app_category": "Finance_v5",
          "total_revenue": "67000001.10"
        },
        {
          "app_category": "Finance",
          "total_revenue": "67000000.60"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Apple App Store Revenue Analytics",
      "problem_slug": "apple-iphone-sales-by-quarter"
    },
    {
      "id": "f136cab1-376a-43f4-9249-a552cbe4a023",
      "problem_id": "ad4cdc97-b86c-47f2-aaf5-4bb66bab4b20",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE bbva_digital_banking (\n        market_id INT PRIMARY KEY,\n        geographic_market VARCHAR(50),\n        total_customers INT,\n        digital_active_customers INT,\n        mobile_transactions_monthly BIGINT,\n        total_transactions_monthly BIGINT,\n        customer_lifetime_value DECIMAL(10,2),\n        digital_revenue DECIMAL(12,2),\n        customer_acquisition_cost DECIMAL(8,2),\n        nps_score INT,\n        market_date DATE\n    );\n      INSERT INTO bbva_digital_banking  VALUES\n      (1, 'Spain', 12000000, 9600000, 450000000, 650000000, 5800.50, 2500000000.50, 125.50, 72, '2024-01-15'),\n      (2, 'Mexico', 18000000, 14400000, 580000000, 750000000, 4200.75, 3200000000.75, 89.75, 68, '2024-01-15'),\n      (3, 'Argentina', 8500000, 6375000, 220000000, 320000000, 3500.25, 1250000000.25, 95.25, 65, '2024-01-16'),\n      (4, 'Colombia', 6200000, 4960000, 180000000, 280000000, 3800.80, 950000000.80, 85.80, 70, '2024-01-16'),\n      (5, 'Turkey', 9800000, 7840000, 290000000, 420000000, 5200.60, 1800000000.60, 110.60, 69, '2024-01-17'),\n      (7, 'Spain_v1', 12000010, 9600010, 450000010, 650000010, 5800.60, 2500000000.60, 125.60, 82, '2024-01-16'),\n      (9, 'Mexico_v2', 18000020, 14400020, 580000020, 750000020, 4200.95, 3200000000.95, 89.95, 88, '2024-01-17'),\n      (11, 'Argentina_v3', 8500030, 6375030, 220000030, 320000030, 3500.55, 1250000000.55, 95.55, 95, '2024-01-19'),\n      (13, 'Colombia_v4', 6200040, 4960040, 180000040, 280000040, 3801.20, 950000001.20, 86.20, 110, '2024-01-20'),\n      (15, 'Turkey_v5', 9800050, 7840050, 290000050, 420000050, 5201.10, 1800000001.10, 111.10, 119, '2024-01-22'),\n      (12, 'Spain_v6', 12000060, 9600060, 450000060, 650000060, 5801.10, 2500000001.10, 126.10, 132, '2024-01-21'),\n      (14, 'Mexico_v7', 18000070, 14400070, 580000070, 750000070, 4201.45, 3200000001.45, 90.45, 138, '2024-01-22'),\n      (16, 'Argentina_v8', 8500080, 6375080, 220000080, 320000080, 3501.05, 1250000001.05, 96.05, 145, '2024-01-24'),\n      (18, 'Colombia_v9', 6200090, 4960090, 180000090, 280000090, 3801.70, 950000001.70, 86.70, 160, '2024-01-25'),\n      (20, 'Turkey_v10', 9800100, 7840100, 290000100, 420000100, 5201.60, 1800000001.60, 111.60, 169, '2024-01-27'),\n      (17, 'Spain_v11', 12000110, 9600110, 450000110, 650000110, 5801.60, 2500000001.60, 126.60, 182, '2024-01-26'),\n      (19, 'Mexico_v12', 18000120, 14400120, 580000120, 750000120, 4201.95, 3200000001.95, 90.95, 188, '2024-01-27'),\n      (21, 'Argentina_v13', 8500130, 6375130, 220000130, 320000130, 3501.55, 1250000001.55, 96.55, 195, '2024-01-29'),\n      (23, 'Colombia_v14', 6200140, 4960140, 180000140, 280000140, 3802.20, 950000002.20, 87.20, 210, '2024-01-30'),\n      (25, 'Turkey_v15', 9800150, 7840150, 290000150, 420000150, 5202.10, 1800000002.10, 112.10, 219, '2024-02-01'),\n      (22, 'Spain_v16', 12000160, 9600160, 450000160, 650000160, 5802.10, 2500000002.10, 127.10, 232, '2024-01-31'),\n      (24, 'Mexico_v17', 18000170, 14400170, 580000170, 750000170, 4202.45, 3200000002.45, 91.45, 238, '2024-02-01'),\n      (26, 'Argentina_v18', 8500180, 6375180, 220000180, 320000180, 3502.05, 1250000002.05, 97.05, 245, '2024-02-03'),\n      (28, 'Colombia_v19', 6200190, 4960190, 180000190, 280000190, 3802.70, 950000002.70, 87.70, 260, '2024-02-04'),\n      (30, 'Turkey_v20', 9800200, 7840200, 290000200, 420000200, 5202.60, 1800000002.60, 112.60, 269, '2024-02-06');",
      "solution_sql": "WITH digital_metrics AS (\n        SELECT \n            geographic_market,\n            total_customers,\n            digital_active_customers,\n            mobile_transactions_monthly,\n            total_transactions_monthly,\n            customer_lifetime_value,\n            -- Digital adoption rate\n            ROUND((CAST(digital_active_customers AS DECIMAL) / total_customers) * 100, 2) as digital_adoption_pct,\n            -- Mobile transaction penetration\n            ROUND((CAST(mobile_transactions_monthly AS DECIMAL) / total_transactions_monthly) * 100, 2) as mobile_penetration_pct,\n            -- Revenue per customer\n            ROUND(digital_revenue / digital_active_customers, 2) as revenue_per_customer\n        FROM bbva_digital_banking\n    )\n    SELECT \n        geographic_market,\n        ROUND(total_customers / 1000000, 2) as total_customers_millions,\n        digital_adoption_pct,\n        mobile_penetration_pct,\n        ROUND(customer_lifetime_value, 2) as clv_euros,\n        revenue_per_customer\n    FROM digital_metrics\n    WHERE digital_adoption_pct > 75.0 \n        AND mobile_penetration_pct > 60.0 \n        AND customer_lifetime_value > 5000\n    ORDER BY clv_euros DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.748Z",
      "expected_output": [
        {
          "clv_euros": "5802.10",
          "geographic_market": "Spain_v16",
          "digital_adoption_pct": "80.00",
          "revenue_per_customer": "260.41",
          "mobile_penetration_pct": "69.23",
          "total_customers_millions": "12.00"
        },
        {
          "clv_euros": "5801.60",
          "geographic_market": "Spain_v11",
          "digital_adoption_pct": "80.00",
          "revenue_per_customer": "260.41",
          "mobile_penetration_pct": "69.23",
          "total_customers_millions": "12.00"
        },
        {
          "clv_euros": "5801.10",
          "geographic_market": "Spain_v6",
          "digital_adoption_pct": "80.00",
          "revenue_per_customer": "260.42",
          "mobile_penetration_pct": "69.23",
          "total_customers_millions": "12.00"
        },
        {
          "clv_euros": "5800.60",
          "geographic_market": "Spain_v1",
          "digital_adoption_pct": "80.00",
          "revenue_per_customer": "260.42",
          "mobile_penetration_pct": "69.23",
          "total_customers_millions": "12.00"
        },
        {
          "clv_euros": "5800.50",
          "geographic_market": "Spain",
          "digital_adoption_pct": "80.00",
          "revenue_per_customer": "260.42",
          "mobile_penetration_pct": "69.23",
          "total_customers_millions": "12.00"
        },
        {
          "clv_euros": "5202.60",
          "geographic_market": "Turkey_v20",
          "digital_adoption_pct": "80.00",
          "revenue_per_customer": "229.59",
          "mobile_penetration_pct": "69.05",
          "total_customers_millions": "9.80"
        },
        {
          "clv_euros": "5202.10",
          "geographic_market": "Turkey_v15",
          "digital_adoption_pct": "80.00",
          "revenue_per_customer": "229.59",
          "mobile_penetration_pct": "69.05",
          "total_customers_millions": "9.80"
        },
        {
          "clv_euros": "5201.60",
          "geographic_market": "Turkey_v10",
          "digital_adoption_pct": "80.00",
          "revenue_per_customer": "229.59",
          "mobile_penetration_pct": "69.05",
          "total_customers_millions": "9.80"
        },
        {
          "clv_euros": "5201.10",
          "geographic_market": "Turkey_v5",
          "digital_adoption_pct": "80.00",
          "revenue_per_customer": "229.59",
          "mobile_penetration_pct": "69.05",
          "total_customers_millions": "9.80"
        },
        {
          "clv_euros": "5200.60",
          "geographic_market": "Turkey",
          "digital_adoption_pct": "80.00",
          "revenue_per_customer": "229.59",
          "mobile_penetration_pct": "69.05",
          "total_customers_millions": "9.80"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "BBVA Digital Banking Transformation Analytics",
      "problem_slug": "bbva-risk-management-system"
    },
    {
      "id": "4d99d054-8b9c-4eba-8b10-2fa05e97f1d0",
      "problem_id": "ad4cdc97-b86c-47f2-aaf5-4bb66bab4b20",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE bbva_digital_banking (\n        market_id INT PRIMARY KEY,\n        geographic_market VARCHAR(50),\n        total_customers INT,\n        digital_active_customers INT,\n        mobile_transactions_monthly BIGINT,\n        total_transactions_monthly BIGINT,\n        customer_lifetime_value DECIMAL(10,2),\n        digital_revenue DECIMAL(12,2),\n        customer_acquisition_cost DECIMAL(8,2),\n        nps_score INT,\n        market_date DATE\n    );\n      INSERT INTO bbva_digital_banking  VALUES\n      (1, 'Spain', 12000000, 9600000, 450000000, 650000000, 5800.50, 2500000000.50, 125.50, 72, '2024-01-15'),\n      (2, 'Mexico', 18000000, 14400000, 580000000, 750000000, 4200.75, 3200000000.75, 89.75, 68, '2024-01-15'),\n      (3, 'Argentina', 8500000, 6375000, 220000000, 320000000, 3500.25, 1250000000.25, 95.25, 65, '2024-01-16'),\n      (4, 'Colombia', 6200000, 4960000, 180000000, 280000000, 3800.80, 950000000.80, 85.80, 70, '2024-01-16'),\n      (5, 'Turkey', 9800000, 7840000, 290000000, 420000000, 5200.60, 1800000000.60, 110.60, 69, '2024-01-17'),\n      (7, 'Spain_v1', 12000010, 9600010, 450000010, 650000010, 5800.60, 2500000000.60, 125.60, 82, '2024-01-16'),\n      (9, 'Mexico_v2', 18000020, 14400020, 580000020, 750000020, 4200.95, 3200000000.95, 89.95, 88, '2024-01-17'),\n      (11, 'Argentina_v3', 8500030, 6375030, 220000030, 320000030, 3500.55, 1250000000.55, 95.55, 95, '2024-01-19'),\n      (13, 'Colombia_v4', 6200040, 4960040, 180000040, 280000040, 3801.20, 950000001.20, 86.20, 110, '2024-01-20'),\n      (15, 'Turkey_v5', 9800050, 7840050, 290000050, 420000050, 5201.10, 1800000001.10, 111.10, 119, '2024-01-22'),\n      (12, 'Spain_v6', 12000060, 9600060, 450000060, 650000060, 5801.10, 2500000001.10, 126.10, 132, '2024-01-21'),\n      (14, 'Mexico_v7', 18000070, 14400070, 580000070, 750000070, 4201.45, 3200000001.45, 90.45, 138, '2024-01-22'),\n      (16, 'Argentina_v8', 8500080, 6375080, 220000080, 320000080, 3501.05, 1250000001.05, 96.05, 145, '2024-01-24'),\n      (18, 'Colombia_v9', 6200090, 4960090, 180000090, 280000090, 3801.70, 950000001.70, 86.70, 160, '2024-01-25'),\n      (20, 'Turkey_v10', 9800100, 7840100, 290000100, 420000100, 5201.60, 1800000001.60, 111.60, 169, '2024-01-27'),\n      (17, 'Spain_v11', 12000110, 9600110, 450000110, 650000110, 5801.60, 2500000001.60, 126.60, 182, '2024-01-26'),\n      (19, 'Mexico_v12', 18000120, 14400120, 580000120, 750000120, 4201.95, 3200000001.95, 90.95, 188, '2024-01-27'),\n      (21, 'Argentina_v13', 8500130, 6375130, 220000130, 320000130, 3501.55, 1250000001.55, 96.55, 195, '2024-01-29'),\n      (23, 'Colombia_v14', 6200140, 4960140, 180000140, 280000140, 3802.20, 950000002.20, 87.20, 210, '2024-01-30'),\n      (25, 'Turkey_v15', 9800150, 7840150, 290000150, 420000150, 5202.10, 1800000002.10, 112.10, 219, '2024-02-01'),\n      (22, 'Spain_v16', 12000160, 9600160, 450000160, 650000160, 5802.10, 2500000002.10, 127.10, 232, '2024-01-31'),\n      (24, 'Mexico_v17', 18000170, 14400170, 580000170, 750000170, 4202.45, 3200000002.45, 91.45, 238, '2024-02-01'),\n      (26, 'Argentina_v18', 8500180, 6375180, 220000180, 320000180, 3502.05, 1250000002.05, 97.05, 245, '2024-02-03'),\n      (28, 'Colombia_v19', 6200190, 4960190, 180000190, 280000190, 3802.70, 950000002.70, 87.70, 260, '2024-02-04'),\n      (30, 'Turkey_v20', 9800200, 7840200, 290000200, 420000200, 5202.60, 1800000002.60, 112.60, 269, '2024-02-06');",
      "solution_sql": "WITH digital_metrics AS (\n        SELECT \n            geographic_market,\n            total_customers,\n            digital_active_customers,\n            mobile_transactions_monthly,\n            total_transactions_monthly,\n            customer_lifetime_value,\n            -- Digital adoption rate\n            ROUND((CAST(digital_active_customers AS DECIMAL) / total_customers) * 100, 2) as digital_adoption_pct,\n            -- Mobile transaction penetration\n            ROUND((CAST(mobile_transactions_monthly AS DECIMAL) / total_transactions_monthly) * 100, 2) as mobile_penetration_pct,\n            -- Revenue per customer\n            ROUND(digital_revenue / digital_active_customers, 2) as revenue_per_customer\n        FROM bbva_digital_banking\n    )\n    SELECT \n        geographic_market,\n        ROUND(total_customers / 1000000, 2) as total_customers_millions,\n        digital_adoption_pct,\n        mobile_penetration_pct,\n        ROUND(customer_lifetime_value, 2) as clv_euros,\n        revenue_per_customer\n    FROM digital_metrics\n    WHERE digital_adoption_pct > 75.0 \n        AND mobile_penetration_pct > 60.0 \n        AND customer_lifetime_value > 5000\n    ORDER BY clv_euros DESC;",
      "explanation": "Advanced digital banking transformation analytics using adoption metrics and customer lifetime value for strategic investment optimization.",
      "created_at": "2025-08-11T17:08:07.889Z",
      "expected_output": [
        {
          "clv_euros": "5802.10",
          "geographic_market": "Spain_v16",
          "digital_adoption_pct": "80.00",
          "revenue_per_customer": "260.41",
          "mobile_penetration_pct": "69.23",
          "total_customers_millions": "12.00"
        },
        {
          "clv_euros": "5801.60",
          "geographic_market": "Spain_v11",
          "digital_adoption_pct": "80.00",
          "revenue_per_customer": "260.41",
          "mobile_penetration_pct": "69.23",
          "total_customers_millions": "12.00"
        },
        {
          "clv_euros": "5801.10",
          "geographic_market": "Spain_v6",
          "digital_adoption_pct": "80.00",
          "revenue_per_customer": "260.42",
          "mobile_penetration_pct": "69.23",
          "total_customers_millions": "12.00"
        },
        {
          "clv_euros": "5800.60",
          "geographic_market": "Spain_v1",
          "digital_adoption_pct": "80.00",
          "revenue_per_customer": "260.42",
          "mobile_penetration_pct": "69.23",
          "total_customers_millions": "12.00"
        },
        {
          "clv_euros": "5800.50",
          "geographic_market": "Spain",
          "digital_adoption_pct": "80.00",
          "revenue_per_customer": "260.42",
          "mobile_penetration_pct": "69.23",
          "total_customers_millions": "12.00"
        },
        {
          "clv_euros": "5202.60",
          "geographic_market": "Turkey_v20",
          "digital_adoption_pct": "80.00",
          "revenue_per_customer": "229.59",
          "mobile_penetration_pct": "69.05",
          "total_customers_millions": "9.00"
        },
        {
          "clv_euros": "5202.10",
          "geographic_market": "Turkey_v15",
          "digital_adoption_pct": "80.00",
          "revenue_per_customer": "229.59",
          "mobile_penetration_pct": "69.05",
          "total_customers_millions": "9.00"
        },
        {
          "clv_euros": "5201.60",
          "geographic_market": "Turkey_v10",
          "digital_adoption_pct": "80.00",
          "revenue_per_customer": "229.59",
          "mobile_penetration_pct": "69.05",
          "total_customers_millions": "9.00"
        },
        {
          "clv_euros": "5201.10",
          "geographic_market": "Turkey_v5",
          "digital_adoption_pct": "80.00",
          "revenue_per_customer": "229.59",
          "mobile_penetration_pct": "69.05",
          "total_customers_millions": "9.00"
        },
        {
          "clv_euros": "5200.60",
          "geographic_market": "Turkey",
          "digital_adoption_pct": "80.00",
          "revenue_per_customer": "229.59",
          "mobile_penetration_pct": "69.05",
          "total_customers_millions": "9.00"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "BBVA Digital Banking Transformation Analytics",
      "problem_slug": "bbva-risk-management-system"
    },
    {
      "id": "1a67ab1f-e113-42ff-8dd3-e2bf42a04ae3",
      "problem_id": "d52d9256-38a1-4a27-9d80-9cc3edb2e076",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE bnpparibas_investment_banking (\n        deal_id INT PRIMARY KEY,\n        service_line VARCHAR(50),\n        geographic_region VARCHAR(30),\n        deal_value DECIMAL(15,2),\n        advisory_fees DECIMAL(12,2),\n        deal_status VARCHAR(20),\n        completion_probability DECIMAL(5,3),\n        client_relationship_years INT,\n        competitive_position INT,\n        sector_expertise_score DECIMAL(4,2),\n        deal_date DATE\n    );\n      INSERT INTO bnpparibas_investment_banking  VALUES\n      (1, 'M&A Advisory', 'Europe', 2800000000.00, 145600000.50, 'Completed', 0.920, 12, 2, 9.5, '2024-01-15'),\n      (2, 'Equity Capital Markets', 'Asia Pacific', 1650000000.00, 82500000.75, 'Completed', 0.885, 8, 3, 8.8, '2024-01-15'),\n      (3, 'Debt Capital Markets', 'North America', 3200000000.00, 128000000.25, 'Completed', 0.945, 15, 1, 9.2, '2024-01-16'),\n      (4, 'Leveraged Finance', 'Europe', 950000000.00, 47500000.80, 'In Progress', 0.825, 6, 4, 8.5, '2024-01-16'),\n      (5, 'Restructuring', 'Latin America', 750000000.00, 52500000.60, 'Completed', 0.875, 9, 2, 9.1, '2024-01-17'),\n      (7, 'M&A Advisory_v1', 'Europe_v1', 2800000000.10, 145600000.60, 'Completed_v1', 1.02, 22, 12, 9.60, '2024-01-16'),\n      (9, 'Equity Capital Markets_v2', 'Asia Pacific_v2', 1650000000.20, 82500000.95, 'Completed_v2', 1.08, 28, 23, 9.00, '2024-01-17'),\n      (11, 'Debt Capital Markets_v3', 'North America_v3', 3200000000.30, 128000000.55, 'Completed_v3', 1.25, 45, 31, 9.50, '2024-01-19'),\n      (13, 'Leveraged Finance_v4', 'Europe_v4', 950000000.40, 47500001.20, 'In Progress_v4', 1.23, 46, 44, 8.90, '2024-01-20'),\n      (15, 'Restructuring_v5', 'Latin America_v5', 750000000.50, 52500001.10, 'Completed_v5', 1.38, 59, 52, 9.60, '2024-01-22'),\n      (12, 'M&A Advisory_v6', 'Europe_v6', 2800000000.60, 145600001.10, 'Completed_v6', 1.52, 72, 62, 10.10, '2024-01-21'),\n      (14, 'Equity Capital Markets_v7', 'Asia Pacific_v7', 1650000000.70, 82500001.45, 'Completed_v7', 1.58, 78, 73, 9.50, '2024-01-22'),\n      (16, 'Debt Capital Markets_v8', 'North America_v8', 3200000000.80, 128000001.05, 'Completed_v8', 1.75, 95, 81, 10.00, '2024-01-24'),\n      (18, 'Leveraged Finance_v9', 'Europe_v9', 950000000.90, 47500001.70, 'In Progress_v9', 1.73, 96, 94, 9.40, '2024-01-25'),\n      (20, 'Restructuring_v10', 'Latin America_v10', 750000001.00, 52500001.60, 'Completed_v10', 1.88, 109, 102, 10.10, '2024-01-27'),\n      (17, 'M&A Advisory_v11', 'Europe_v11', 2800000001.10, 145600001.60, 'Completed_v11', 2.02, 122, 112, 10.60, '2024-01-26'),\n      (19, 'Equity Capital Markets_v12', 'Asia Pacific_v12', 1650000001.20, 82500001.95, 'Completed_v12', 2.08, 128, 123, 10.00, '2024-01-27'),\n      (21, 'Debt Capital Markets_v13', 'North America_v13', 3200000001.30, 128000001.55, 'Completed_v13', 2.25, 145, 131, 10.50, '2024-01-29'),\n      (23, 'Leveraged Finance_v14', 'Europe_v14', 950000001.40, 47500002.20, 'In Progress_v14', 2.23, 146, 144, 9.90, '2024-01-30'),\n      (25, 'Restructuring_v15', 'Latin America_v15', 750000001.50, 52500002.10, 'Completed_v15', 2.38, 159, 152, 10.60, '2024-02-01'),\n      (22, 'M&A Advisory_v16', 'Europe_v16', 2800000001.60, 145600002.10, 'Completed_v16', 2.52, 172, 162, 11.10, '2024-01-31'),\n      (24, 'Equity Capital Markets_v17', 'Asia Pacific_v17', 1650000001.70, 82500002.45, 'Completed_v17', 2.58, 178, 173, 10.50, '2024-02-01'),\n      (26, 'Debt Capital Markets_v18', 'North America_v18', 3200000001.80, 128000002.05, 'Completed_v18', 2.75, 195, 181, 11.00, '2024-02-03'),\n      (28, 'Leveraged Finance_v19', 'Europe_v19', 950000001.90, 47500002.70, 'In Progress_v19', 2.73, 196, 194, 10.40, '2024-02-04'),\n      (30, 'Restructuring_v20', 'Latin America_v20', 750000002.00, 52500002.60, 'Completed_v20', 2.88, 209, 202, 11.10, '2024-02-06');",
      "solution_sql": "WITH banking_performance AS (\n        SELECT \n            service_line,\n            geographic_region,\n            deal_value,\n            advisory_fees,\n            deal_status,\n            completion_probability,\n            -- Fee margin calculation\n            ROUND((advisory_fees / deal_value) * 100, 3) as fee_margin_pct,\n            sector_expertise_score,\n            competitive_position,\n            client_relationship_years\n        FROM bnpparibas_investment_banking\n        WHERE deal_status = 'Completed'\n    ),\n    aggregated_metrics AS (\n        SELECT \n            service_line,\n            COUNT(*) as deal_count,\n            ROUND(AVG(deal_value) / 1000000, 2) as avg_deal_value_millions,\n            ROUND(AVG(fee_margin_pct), 3) as avg_fee_margin_pct,\n            ROUND(AVG(completion_probability) * 100, 2) as avg_completion_rate_pct,\n            ROUND(AVG(sector_expertise_score), 2) as avg_expertise_score,\n            ROUND(AVG(client_relationship_years), 1) as avg_relationship_years\n        FROM banking_performance\n        GROUP BY service_line\n    )\n    SELECT \n        service_line,\n        deal_count,\n        avg_deal_value_millions,\n        avg_fee_margin_pct,\n        avg_completion_rate_pct,\n        avg_expertise_score,\n        avg_relationship_years\n    FROM aggregated_metrics\n    WHERE avg_fee_margin_pct > 4.0 \n        AND avg_completion_rate_pct > 85.0 \n        AND avg_deal_value_millions > 500\n    ORDER BY avg_deal_value_millions DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.777Z",
      "expected_output": [
        {
          "deal_count": "1",
          "service_line": "M&A Advisory",
          "avg_fee_margin_pct": "5.200",
          "avg_expertise_score": "9.50",
          "avg_relationship_years": "12.0",
          "avg_completion_rate_pct": "92.00",
          "avg_deal_value_millions": "2800.00"
        },
        {
          "deal_count": "1",
          "service_line": "Equity Capital Markets",
          "avg_fee_margin_pct": "5.000",
          "avg_expertise_score": "8.80",
          "avg_relationship_years": "8.0",
          "avg_completion_rate_pct": "88.50",
          "avg_deal_value_millions": "1650.00"
        },
        {
          "deal_count": "1",
          "service_line": "Restructuring",
          "avg_fee_margin_pct": "7.000",
          "avg_expertise_score": "9.10",
          "avg_relationship_years": "9.0",
          "avg_completion_rate_pct": "87.50",
          "avg_deal_value_millions": "750.00"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "BNP Paribas Investment Banking Analytics",
      "problem_slug": "bnp-paribas-risk-management-system"
    },
    {
      "id": "ec2cd8cd-04cc-4cfa-925d-ad86d1f1b60c",
      "problem_id": "d52d9256-38a1-4a27-9d80-9cc3edb2e076",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE bnpparibas_investment_banking (\n        deal_id INT PRIMARY KEY,\n        service_line VARCHAR(50),\n        geographic_region VARCHAR(30),\n        deal_value DECIMAL(15,2),\n        advisory_fees DECIMAL(12,2),\n        deal_status VARCHAR(20),\n        completion_probability DECIMAL(5,3),\n        client_relationship_years INT,\n        competitive_position INT,\n        sector_expertise_score DECIMAL(4,2),\n        deal_date DATE\n    );\n      INSERT INTO bnpparibas_investment_banking  VALUES\n      (1, 'M&A Advisory', 'Europe', 2800000000.00, 145600000.50, 'Completed', 0.920, 12, 2, 9.5, '2024-01-15'),\n      (2, 'Equity Capital Markets', 'Asia Pacific', 1650000000.00, 82500000.75, 'Completed', 0.885, 8, 3, 8.8, '2024-01-15'),\n      (3, 'Debt Capital Markets', 'North America', 3200000000.00, 128000000.25, 'Completed', 0.945, 15, 1, 9.2, '2024-01-16'),\n      (4, 'Leveraged Finance', 'Europe', 950000000.00, 47500000.80, 'In Progress', 0.825, 6, 4, 8.5, '2024-01-16'),\n      (5, 'Restructuring', 'Latin America', 750000000.00, 52500000.60, 'Completed', 0.875, 9, 2, 9.1, '2024-01-17'),\n      (7, 'M&A Advisory_v1', 'Europe_v1', 2800000000.10, 145600000.60, 'Completed_v1', 1.02, 22, 12, 9.60, '2024-01-16'),\n      (9, 'Equity Capital Markets_v2', 'Asia Pacific_v2', 1650000000.20, 82500000.95, 'Completed_v2', 1.08, 28, 23, 9.00, '2024-01-17'),\n      (11, 'Debt Capital Markets_v3', 'North America_v3', 3200000000.30, 128000000.55, 'Completed_v3', 1.25, 45, 31, 9.50, '2024-01-19'),\n      (13, 'Leveraged Finance_v4', 'Europe_v4', 950000000.40, 47500001.20, 'In Progress_v4', 1.23, 46, 44, 8.90, '2024-01-20'),\n      (15, 'Restructuring_v5', 'Latin America_v5', 750000000.50, 52500001.10, 'Completed_v5', 1.38, 59, 52, 9.60, '2024-01-22'),\n      (12, 'M&A Advisory_v6', 'Europe_v6', 2800000000.60, 145600001.10, 'Completed_v6', 1.52, 72, 62, 10.10, '2024-01-21'),\n      (14, 'Equity Capital Markets_v7', 'Asia Pacific_v7', 1650000000.70, 82500001.45, 'Completed_v7', 1.58, 78, 73, 9.50, '2024-01-22'),\n      (16, 'Debt Capital Markets_v8', 'North America_v8', 3200000000.80, 128000001.05, 'Completed_v8', 1.75, 95, 81, 10.00, '2024-01-24'),\n      (18, 'Leveraged Finance_v9', 'Europe_v9', 950000000.90, 47500001.70, 'In Progress_v9', 1.73, 96, 94, 9.40, '2024-01-25'),\n      (20, 'Restructuring_v10', 'Latin America_v10', 750000001.00, 52500001.60, 'Completed_v10', 1.88, 109, 102, 10.10, '2024-01-27'),\n      (17, 'M&A Advisory_v11', 'Europe_v11', 2800000001.10, 145600001.60, 'Completed_v11', 2.02, 122, 112, 10.60, '2024-01-26'),\n      (19, 'Equity Capital Markets_v12', 'Asia Pacific_v12', 1650000001.20, 82500001.95, 'Completed_v12', 2.08, 128, 123, 10.00, '2024-01-27'),\n      (21, 'Debt Capital Markets_v13', 'North America_v13', 3200000001.30, 128000001.55, 'Completed_v13', 2.25, 145, 131, 10.50, '2024-01-29'),\n      (23, 'Leveraged Finance_v14', 'Europe_v14', 950000001.40, 47500002.20, 'In Progress_v14', 2.23, 146, 144, 9.90, '2024-01-30'),\n      (25, 'Restructuring_v15', 'Latin America_v15', 750000001.50, 52500002.10, 'Completed_v15', 2.38, 159, 152, 10.60, '2024-02-01'),\n      (22, 'M&A Advisory_v16', 'Europe_v16', 2800000001.60, 145600002.10, 'Completed_v16', 2.52, 172, 162, 11.10, '2024-01-31'),\n      (24, 'Equity Capital Markets_v17', 'Asia Pacific_v17', 1650000001.70, 82500002.45, 'Completed_v17', 2.58, 178, 173, 10.50, '2024-02-01'),\n      (26, 'Debt Capital Markets_v18', 'North America_v18', 3200000001.80, 128000002.05, 'Completed_v18', 2.75, 195, 181, 11.00, '2024-02-03'),\n      (28, 'Leveraged Finance_v19', 'Europe_v19', 950000001.90, 47500002.70, 'In Progress_v19', 2.73, 196, 194, 10.40, '2024-02-04'),\n      (30, 'Restructuring_v20', 'Latin America_v20', 750000002.00, 52500002.60, 'Completed_v20', 2.88, 209, 202, 11.10, '2024-02-06');",
      "solution_sql": "WITH banking_performance AS (\n        SELECT \n            service_line,\n            geographic_region,\n            deal_value,\n            advisory_fees,\n            deal_status,\n            completion_probability,\n            -- Fee margin calculation\n            ROUND((advisory_fees / deal_value) * 100, 3) as fee_margin_pct,\n            sector_expertise_score,\n            competitive_position,\n            client_relationship_years\n        FROM bnpparibas_investment_banking\n        WHERE deal_status = 'Completed'\n    ),\n    aggregated_metrics AS (\n        SELECT \n            service_line,\n            COUNT(*) as deal_count,\n            ROUND(AVG(deal_value) / 1000000, 2) as avg_deal_value_millions,\n            ROUND(AVG(fee_margin_pct), 3) as avg_fee_margin_pct,\n            ROUND(AVG(completion_probability) * 100, 2) as avg_completion_rate_pct,\n            ROUND(AVG(sector_expertise_score), 2) as avg_expertise_score,\n            ROUND(AVG(client_relationship_years), 1) as avg_relationship_years\n        FROM banking_performance\n        GROUP BY service_line\n    )\n    SELECT \n        service_line,\n        deal_count,\n        avg_deal_value_millions,\n        avg_fee_margin_pct,\n        avg_completion_rate_pct,\n        avg_expertise_score,\n        avg_relationship_years\n    FROM aggregated_metrics\n    WHERE avg_fee_margin_pct > 4.0 \n        AND avg_completion_rate_pct > 85.0 \n        AND avg_deal_value_millions > 500\n    ORDER BY avg_deal_value_millions DESC;",
      "explanation": "Advanced investment banking analytics using fee margins, completion rates, and deal value metrics for strategic service line optimization.",
      "created_at": "2025-08-11T17:08:07.886Z",
      "expected_output": [
        {
          "deal_count": "1",
          "service_line": "M&A Advisory",
          "avg_fee_margin_pct": "5.200",
          "avg_expertise_score": "9.50",
          "avg_relationship_years": "12.0",
          "avg_completion_rate_pct": "92.00",
          "avg_deal_value_millions": "2800.00"
        },
        {
          "deal_count": "1",
          "service_line": "Equity Capital Markets",
          "avg_fee_margin_pct": "5.000",
          "avg_expertise_score": "8.80",
          "avg_relationship_years": "8.0",
          "avg_completion_rate_pct": "88.50",
          "avg_deal_value_millions": "1650.00"
        },
        {
          "deal_count": "1",
          "service_line": "Restructuring",
          "avg_fee_margin_pct": "7.000",
          "avg_expertise_score": "9.10",
          "avg_relationship_years": "9.0",
          "avg_completion_rate_pct": "87.50",
          "avg_deal_value_millions": "750.00"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "BNP Paribas Investment Banking Analytics",
      "problem_slug": "bnp-paribas-risk-management-system"
    },
    {
      "id": "e28954dc-c1ec-42ec-8b8a-05c3c6bc3713",
      "problem_id": "c13c9bc3-408d-46b8-8c64-340768bcd065",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE blackrock_alternatives (\n        strategy_id INT PRIMARY KEY,\n        strategy_name VARCHAR(50),\n        asset_class VARCHAR(30),\n        annual_return DECIMAL(8,4),\n        volatility DECIMAL(8,4),\n        sharpe_ratio DECIMAL(6,4),\n        assets_under_management DECIMAL(15,2),\n        benchmark_return DECIMAL(8,4),\n        strategy_date DATE\n    );\n      INSERT INTO blackrock_alternatives  VALUES\n      (1, 'Global Infrastructure', 'Real Estate', 0.1450, 0.1200, 1.2083, 45000000000.50, 0.0885, '2024-01-15'),\n      (2, 'Private Credit Fund', 'Credit', 0.1350, 0.0950, 1.4211, 32000000000.75, 0.0750, '2024-01-15'),\n      (3, 'Energy Transition Fund', 'Private Equity', 0.1680, 0.1850, 0.9081, 28000000000.25, 0.1125, '2024-01-16'),\n      (4, 'Multi-Strategy Hedge', 'Hedge Fund', 0.1250, 0.0850, 1.4706, 18000000000.80, 0.0680, '2024-01-16'),\n      (5, 'Asia Pacific RE', 'Real Estate', 0.1150, 0.1450, 0.7931, 22000000000.60, 0.0920, '2024-01-17'),\n      (7, 'Global Infrastructure_v1', 'Real Estate_v1', 0.24, 0.22, 1.31, 45000000000.60, 0.19, '2024-01-16'),\n      (9, 'Private Credit Fund_v2', 'Credit_v2', 0.34, 0.30, 1.62, 32000000000.95, 0.28, '2024-01-17'),\n      (11, 'Energy Transition Fund_v3', 'Private Equity_v3', 0.47, 0.49, 1.21, 28000000000.55, 0.41, '2024-01-19'),\n      (13, 'Multi-Strategy Hedge_v4', 'Hedge Fund_v4', 0.53, 0.49, 1.87, 18000000001.20, 0.47, '2024-01-20'),\n      (15, 'Asia Pacific RE_v5', 'Real Estate_v5', 0.61, 0.65, 1.29, 22000000001.10, 0.59, '2024-01-22'),\n      (12, 'Global Infrastructure_v6', 'Real Estate_v6', 0.75, 0.72, 1.81, 45000000001.10, 0.69, '2024-01-21'),\n      (14, 'Private Credit Fund_v7', 'Credit_v7', 0.84, 0.80, 2.12, 32000000001.45, 0.78, '2024-01-22'),\n      (16, 'Energy Transition Fund_v8', 'Private Equity_v8', 0.97, 0.99, 1.71, 28000000001.05, 0.91, '2024-01-24'),\n      (18, 'Multi-Strategy Hedge_v9', 'Hedge Fund_v9', 1.02, 0.98, 2.37, 18000000001.70, 0.97, '2024-01-25'),\n      (20, 'Asia Pacific RE_v10', 'Real Estate_v10', 1.11, 1.15, 1.79, 22000000001.60, 1.09, '2024-01-27'),\n      (17, 'Global Infrastructure_v11', 'Real Estate_v11', 1.25, 1.22, 2.31, 45000000001.60, 1.19, '2024-01-26'),\n      (19, 'Private Credit Fund_v12', 'Credit_v12', 1.34, 1.30, 2.62, 32000000001.95, 1.28, '2024-01-27'),\n      (21, 'Energy Transition Fund_v13', 'Private Equity_v13', 1.47, 1.49, 2.21, 28000000001.55, 1.41, '2024-01-29'),\n      (23, 'Multi-Strategy Hedge_v14', 'Hedge Fund_v14', 1.53, 1.49, 2.87, 18000000002.20, 1.47, '2024-01-30'),\n      (25, 'Asia Pacific RE_v15', 'Real Estate_v15', 1.61, 1.65, 2.29, 22000000002.10, 1.59, '2024-02-01'),\n      (22, 'Global Infrastructure_v16', 'Real Estate_v16', 1.75, 1.72, 2.81, 45000000002.10, 1.69, '2024-01-31'),\n      (24, 'Private Credit Fund_v17', 'Credit_v17', 1.84, 1.80, 3.12, 32000000002.45, 1.78, '2024-02-01'),\n      (26, 'Energy Transition Fund_v18', 'Private Equity_v18', 1.97, 1.99, 2.71, 28000000002.05, 1.91, '2024-02-03'),\n      (28, 'Multi-Strategy Hedge_v19', 'Hedge Fund_v19', 2.03, 1.99, 3.37, 18000000002.70, 1.97, '2024-02-04'),\n      (30, 'Asia Pacific RE_v20', 'Real Estate_v20', 2.12, 2.15, 2.79, 22000000002.60, 2.09, '2024-02-06');",
      "solution_sql": "SELECT \n        strategy_name,\n        asset_class,\n        ROUND(CAST(annual_return * 100 AS NUMERIC), 2) as annual_return_pct,\n        ROUND(CAST(volatility * 100 AS NUMERIC), 2) as volatility_pct,\n        ROUND(CAST(sharpe_ratio AS NUMERIC), 4) as sharpe_ratio,\n        ROUND(assets_under_management / 1000000000, 2) as aum_billions\n    FROM blackrock_alternatives \n    WHERE annual_return > 0.12 AND sharpe_ratio > 1.2\n    ORDER BY sharpe_ratio DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.757Z",
      "expected_output": [
        {
          "asset_class": "Hedge Fund_v19",
          "aum_billions": "18.00",
          "sharpe_ratio": "3.3700",
          "strategy_name": "Multi-Strategy Hedge_v19",
          "volatility_pct": "199.00",
          "annual_return_pct": "203.00"
        },
        {
          "asset_class": "Credit_v17",
          "aum_billions": "32.00",
          "sharpe_ratio": "3.1200",
          "strategy_name": "Private Credit Fund_v17",
          "volatility_pct": "180.00",
          "annual_return_pct": "184.00"
        },
        {
          "asset_class": "Hedge Fund_v14",
          "aum_billions": "18.00",
          "sharpe_ratio": "2.8700",
          "strategy_name": "Multi-Strategy Hedge_v14",
          "volatility_pct": "149.00",
          "annual_return_pct": "153.00"
        },
        {
          "asset_class": "Real Estate_v16",
          "aum_billions": "45.00",
          "sharpe_ratio": "2.8100",
          "strategy_name": "Global Infrastructure_v16",
          "volatility_pct": "172.00",
          "annual_return_pct": "175.00"
        },
        {
          "asset_class": "Real Estate_v20",
          "aum_billions": "22.00",
          "sharpe_ratio": "2.7900",
          "strategy_name": "Asia Pacific RE_v20",
          "volatility_pct": "215.00",
          "annual_return_pct": "212.00"
        },
        {
          "asset_class": "Private Equity_v18",
          "aum_billions": "28.00",
          "sharpe_ratio": "2.7100",
          "strategy_name": "Energy Transition Fund_v18",
          "volatility_pct": "199.00",
          "annual_return_pct": "197.00"
        },
        {
          "asset_class": "Credit_v12",
          "aum_billions": "32.00",
          "sharpe_ratio": "2.6200",
          "strategy_name": "Private Credit Fund_v12",
          "volatility_pct": "130.00",
          "annual_return_pct": "134.00"
        },
        {
          "asset_class": "Hedge Fund_v9",
          "aum_billions": "18.00",
          "sharpe_ratio": "2.3700",
          "strategy_name": "Multi-Strategy Hedge_v9",
          "volatility_pct": "98.00",
          "annual_return_pct": "102.00"
        },
        {
          "asset_class": "Real Estate_v11",
          "aum_billions": "45.00",
          "sharpe_ratio": "2.3100",
          "strategy_name": "Global Infrastructure_v11",
          "volatility_pct": "122.00",
          "annual_return_pct": "125.00"
        },
        {
          "asset_class": "Real Estate_v15",
          "aum_billions": "22.00",
          "sharpe_ratio": "2.2900",
          "strategy_name": "Asia Pacific RE_v15",
          "volatility_pct": "165.00",
          "annual_return_pct": "161.00"
        },
        {
          "asset_class": "Private Equity_v13",
          "aum_billions": "28.00",
          "sharpe_ratio": "2.2100",
          "strategy_name": "Energy Transition Fund_v13",
          "volatility_pct": "149.00",
          "annual_return_pct": "147.00"
        },
        {
          "asset_class": "Credit_v7",
          "aum_billions": "32.00",
          "sharpe_ratio": "2.1200",
          "strategy_name": "Private Credit Fund_v7",
          "volatility_pct": "80.00",
          "annual_return_pct": "84.00"
        },
        {
          "asset_class": "Hedge Fund_v4",
          "aum_billions": "18.00",
          "sharpe_ratio": "1.8700",
          "strategy_name": "Multi-Strategy Hedge_v4",
          "volatility_pct": "49.00",
          "annual_return_pct": "53.00"
        },
        {
          "asset_class": "Real Estate_v6",
          "aum_billions": "45.00",
          "sharpe_ratio": "1.8100",
          "strategy_name": "Global Infrastructure_v6",
          "volatility_pct": "72.00",
          "annual_return_pct": "75.00"
        },
        {
          "asset_class": "Real Estate_v10",
          "aum_billions": "22.00",
          "sharpe_ratio": "1.7900",
          "strategy_name": "Asia Pacific RE_v10",
          "volatility_pct": "115.00",
          "annual_return_pct": "111.00"
        },
        {
          "asset_class": "Private Equity_v8",
          "aum_billions": "28.00",
          "sharpe_ratio": "1.7100",
          "strategy_name": "Energy Transition Fund_v8",
          "volatility_pct": "99.00",
          "annual_return_pct": "97.00"
        },
        {
          "asset_class": "Credit_v2",
          "aum_billions": "32.00",
          "sharpe_ratio": "1.6200",
          "strategy_name": "Private Credit Fund_v2",
          "volatility_pct": "30.00",
          "annual_return_pct": "34.00"
        },
        {
          "asset_class": "Hedge Fund",
          "aum_billions": "18.00",
          "sharpe_ratio": "1.4706",
          "strategy_name": "Multi-Strategy Hedge",
          "volatility_pct": "8.50",
          "annual_return_pct": "12.50"
        },
        {
          "asset_class": "Credit",
          "aum_billions": "32.00",
          "sharpe_ratio": "1.4211",
          "strategy_name": "Private Credit Fund",
          "volatility_pct": "9.50",
          "annual_return_pct": "13.50"
        },
        {
          "asset_class": "Real Estate_v1",
          "aum_billions": "45.00",
          "sharpe_ratio": "1.3100",
          "strategy_name": "Global Infrastructure_v1",
          "volatility_pct": "22.00",
          "annual_return_pct": "24.00"
        },
        {
          "asset_class": "Real Estate_v5",
          "aum_billions": "22.00",
          "sharpe_ratio": "1.2900",
          "strategy_name": "Asia Pacific RE_v5",
          "volatility_pct": "65.00",
          "annual_return_pct": "61.00"
        },
        {
          "asset_class": "Private Equity_v3",
          "aum_billions": "28.00",
          "sharpe_ratio": "1.2100",
          "strategy_name": "Energy Transition Fund_v3",
          "volatility_pct": "49.00",
          "annual_return_pct": "47.00"
        },
        {
          "asset_class": "Real Estate",
          "aum_billions": "45.00",
          "sharpe_ratio": "1.2083",
          "strategy_name": "Global Infrastructure",
          "volatility_pct": "12.00",
          "annual_return_pct": "14.50"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "BlackRock Alternative Investment Analytics",
      "problem_slug": "blackrock-portfolio-analytics"
    },
    {
      "id": "ee225772-8120-4aad-820a-af87b9f23f90",
      "problem_id": "c13c9bc3-408d-46b8-8c64-340768bcd065",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE blackrock_alternatives (\n        strategy_id INT PRIMARY KEY,\n        strategy_name VARCHAR(50),\n        asset_class VARCHAR(30),\n        annual_return DECIMAL(8,4),\n        volatility DECIMAL(8,4),\n        sharpe_ratio DECIMAL(6,4),\n        assets_under_management DECIMAL(15,2),\n        benchmark_return DECIMAL(8,4),\n        strategy_date DATE\n    );\n      INSERT INTO blackrock_alternatives  VALUES\n      (1, 'Global Infrastructure', 'Real Estate', 0.1450, 0.1200, 1.2083, 45000000000.50, 0.0885, '2024-01-15'),\n      (2, 'Private Credit Fund', 'Credit', 0.1350, 0.0950, 1.4211, 32000000000.75, 0.0750, '2024-01-15'),\n      (3, 'Energy Transition Fund', 'Private Equity', 0.1680, 0.1850, 0.9081, 28000000000.25, 0.1125, '2024-01-16'),\n      (4, 'Multi-Strategy Hedge', 'Hedge Fund', 0.1250, 0.0850, 1.4706, 18000000000.80, 0.0680, '2024-01-16'),\n      (5, 'Asia Pacific RE', 'Real Estate', 0.1150, 0.1450, 0.7931, 22000000000.60, 0.0920, '2024-01-17'),\n      (7, 'Global Infrastructure_v1', 'Real Estate_v1', 0.24, 0.22, 1.31, 45000000000.60, 0.19, '2024-01-16'),\n      (9, 'Private Credit Fund_v2', 'Credit_v2', 0.34, 0.30, 1.62, 32000000000.95, 0.28, '2024-01-17'),\n      (11, 'Energy Transition Fund_v3', 'Private Equity_v3', 0.47, 0.49, 1.21, 28000000000.55, 0.41, '2024-01-19'),\n      (13, 'Multi-Strategy Hedge_v4', 'Hedge Fund_v4', 0.53, 0.49, 1.87, 18000000001.20, 0.47, '2024-01-20'),\n      (15, 'Asia Pacific RE_v5', 'Real Estate_v5', 0.61, 0.65, 1.29, 22000000001.10, 0.59, '2024-01-22'),\n      (12, 'Global Infrastructure_v6', 'Real Estate_v6', 0.75, 0.72, 1.81, 45000000001.10, 0.69, '2024-01-21'),\n      (14, 'Private Credit Fund_v7', 'Credit_v7', 0.84, 0.80, 2.12, 32000000001.45, 0.78, '2024-01-22'),\n      (16, 'Energy Transition Fund_v8', 'Private Equity_v8', 0.97, 0.99, 1.71, 28000000001.05, 0.91, '2024-01-24'),\n      (18, 'Multi-Strategy Hedge_v9', 'Hedge Fund_v9', 1.02, 0.98, 2.37, 18000000001.70, 0.97, '2024-01-25'),\n      (20, 'Asia Pacific RE_v10', 'Real Estate_v10', 1.11, 1.15, 1.79, 22000000001.60, 1.09, '2024-01-27'),\n      (17, 'Global Infrastructure_v11', 'Real Estate_v11', 1.25, 1.22, 2.31, 45000000001.60, 1.19, '2024-01-26'),\n      (19, 'Private Credit Fund_v12', 'Credit_v12', 1.34, 1.30, 2.62, 32000000001.95, 1.28, '2024-01-27'),\n      (21, 'Energy Transition Fund_v13', 'Private Equity_v13', 1.47, 1.49, 2.21, 28000000001.55, 1.41, '2024-01-29'),\n      (23, 'Multi-Strategy Hedge_v14', 'Hedge Fund_v14', 1.53, 1.49, 2.87, 18000000002.20, 1.47, '2024-01-30'),\n      (25, 'Asia Pacific RE_v15', 'Real Estate_v15', 1.61, 1.65, 2.29, 22000000002.10, 1.59, '2024-02-01'),\n      (22, 'Global Infrastructure_v16', 'Real Estate_v16', 1.75, 1.72, 2.81, 45000000002.10, 1.69, '2024-01-31'),\n      (24, 'Private Credit Fund_v17', 'Credit_v17', 1.84, 1.80, 3.12, 32000000002.45, 1.78, '2024-02-01'),\n      (26, 'Energy Transition Fund_v18', 'Private Equity_v18', 1.97, 1.99, 2.71, 28000000002.05, 1.91, '2024-02-03'),\n      (28, 'Multi-Strategy Hedge_v19', 'Hedge Fund_v19', 2.03, 1.99, 3.37, 18000000002.70, 1.97, '2024-02-04'),\n      (30, 'Asia Pacific RE_v20', 'Real Estate_v20', 2.12, 2.15, 2.79, 22000000002.60, 2.09, '2024-02-06');",
      "solution_sql": "SELECT \n        strategy_name,\n        asset_class,\n        ROUND(CAST(annual_return * 100 AS NUMERIC), 2) as annual_return_pct,\n        ROUND(CAST(volatility * 100 AS NUMERIC), 2) as volatility_pct,\n        ROUND(CAST(sharpe_ratio AS NUMERIC), 4) as sharpe_ratio,\n        ROUND(assets_under_management / 1000000000, 2) as aum_billions\n    FROM blackrock_alternatives \n    WHERE annual_return > 0.12 AND sharpe_ratio > 1.2\n    ORDER BY sharpe_ratio DESC;",
      "explanation": "BlackRock alternative investment analytics using Sharpe ratio and return metrics for institutional portfolio optimization.",
      "created_at": "2025-08-11T17:08:07.867Z",
      "expected_output": [
        {
          "asset_class": "Hedge Fund_v19",
          "aum_billions": "18.00",
          "sharpe_ratio": "3.3700",
          "strategy_name": "Multi-Strategy Hedge_v19",
          "volatility_pct": "199.00",
          "annual_return_pct": "203.00"
        },
        {
          "asset_class": "Credit_v17",
          "aum_billions": "32.00",
          "sharpe_ratio": "3.1200",
          "strategy_name": "Private Credit Fund_v17",
          "volatility_pct": "180.00",
          "annual_return_pct": "184.00"
        },
        {
          "asset_class": "Hedge Fund_v14",
          "aum_billions": "18.00",
          "sharpe_ratio": "2.8700",
          "strategy_name": "Multi-Strategy Hedge_v14",
          "volatility_pct": "149.00",
          "annual_return_pct": "153.00"
        },
        {
          "asset_class": "Real Estate_v16",
          "aum_billions": "45.00",
          "sharpe_ratio": "2.8100",
          "strategy_name": "Global Infrastructure_v16",
          "volatility_pct": "172.00",
          "annual_return_pct": "175.00"
        },
        {
          "asset_class": "Real Estate_v20",
          "aum_billions": "22.00",
          "sharpe_ratio": "2.7900",
          "strategy_name": "Asia Pacific RE_v20",
          "volatility_pct": "215.00",
          "annual_return_pct": "212.00"
        },
        {
          "asset_class": "Private Equity_v18",
          "aum_billions": "28.00",
          "sharpe_ratio": "2.7100",
          "strategy_name": "Energy Transition Fund_v18",
          "volatility_pct": "199.00",
          "annual_return_pct": "197.00"
        },
        {
          "asset_class": "Credit_v12",
          "aum_billions": "32.00",
          "sharpe_ratio": "2.6200",
          "strategy_name": "Private Credit Fund_v12",
          "volatility_pct": "130.00",
          "annual_return_pct": "134.00"
        },
        {
          "asset_class": "Hedge Fund_v9",
          "aum_billions": "18.00",
          "sharpe_ratio": "2.3700",
          "strategy_name": "Multi-Strategy Hedge_v9",
          "volatility_pct": "98.00",
          "annual_return_pct": "102.00"
        },
        {
          "asset_class": "Real Estate_v11",
          "aum_billions": "45.00",
          "sharpe_ratio": "2.3100",
          "strategy_name": "Global Infrastructure_v11",
          "volatility_pct": "122.00",
          "annual_return_pct": "125.00"
        },
        {
          "asset_class": "Real Estate_v15",
          "aum_billions": "22.00",
          "sharpe_ratio": "2.2900",
          "strategy_name": "Asia Pacific RE_v15",
          "volatility_pct": "165.00",
          "annual_return_pct": "161.00"
        },
        {
          "asset_class": "Private Equity_v13",
          "aum_billions": "28.00",
          "sharpe_ratio": "2.2100",
          "strategy_name": "Energy Transition Fund_v13",
          "volatility_pct": "149.00",
          "annual_return_pct": "147.00"
        },
        {
          "asset_class": "Credit_v7",
          "aum_billions": "32.00",
          "sharpe_ratio": "2.1200",
          "strategy_name": "Private Credit Fund_v7",
          "volatility_pct": "80.00",
          "annual_return_pct": "84.00"
        },
        {
          "asset_class": "Hedge Fund_v4",
          "aum_billions": "18.00",
          "sharpe_ratio": "1.8700",
          "strategy_name": "Multi-Strategy Hedge_v4",
          "volatility_pct": "49.00",
          "annual_return_pct": "53.00"
        },
        {
          "asset_class": "Real Estate_v6",
          "aum_billions": "45.00",
          "sharpe_ratio": "1.8100",
          "strategy_name": "Global Infrastructure_v6",
          "volatility_pct": "72.00",
          "annual_return_pct": "75.00"
        },
        {
          "asset_class": "Real Estate_v10",
          "aum_billions": "22.00",
          "sharpe_ratio": "1.7900",
          "strategy_name": "Asia Pacific RE_v10",
          "volatility_pct": "115.00",
          "annual_return_pct": "111.00"
        },
        {
          "asset_class": "Private Equity_v8",
          "aum_billions": "28.00",
          "sharpe_ratio": "1.7100",
          "strategy_name": "Energy Transition Fund_v8",
          "volatility_pct": "99.00",
          "annual_return_pct": "97.00"
        },
        {
          "asset_class": "Credit_v2",
          "aum_billions": "32.00",
          "sharpe_ratio": "1.6200",
          "strategy_name": "Private Credit Fund_v2",
          "volatility_pct": "30.00",
          "annual_return_pct": "34.00"
        },
        {
          "asset_class": "Hedge Fund",
          "aum_billions": "18.00",
          "sharpe_ratio": "1.4706",
          "strategy_name": "Multi-Strategy Hedge",
          "volatility_pct": "8.50",
          "annual_return_pct": "12.50"
        },
        {
          "asset_class": "Credit",
          "aum_billions": "32.00",
          "sharpe_ratio": "1.4211",
          "strategy_name": "Private Credit Fund",
          "volatility_pct": "9.50",
          "annual_return_pct": "13.50"
        },
        {
          "asset_class": "Real Estate_v1",
          "aum_billions": "45.00",
          "sharpe_ratio": "1.3100",
          "strategy_name": "Global Infrastructure_v1",
          "volatility_pct": "22.00",
          "annual_return_pct": "24.00"
        },
        {
          "asset_class": "Real Estate_v5",
          "aum_billions": "22.00",
          "sharpe_ratio": "1.2900",
          "strategy_name": "Asia Pacific RE_v5",
          "volatility_pct": "65.00",
          "annual_return_pct": "61.00"
        },
        {
          "asset_class": "Private Equity_v3",
          "aum_billions": "28.00",
          "sharpe_ratio": "1.2100",
          "strategy_name": "Energy Transition Fund_v3",
          "volatility_pct": "49.00",
          "annual_return_pct": "47.00"
        },
        {
          "asset_class": "Real Estate",
          "aum_billions": "45.00",
          "sharpe_ratio": "1.2083",
          "strategy_name": "Global Infrastructure",
          "volatility_pct": "12.00",
          "annual_return_pct": "14.50"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "BlackRock Alternative Investment Analytics",
      "problem_slug": "blackrock-portfolio-analytics"
    },
    {
      "id": "f0b5101e-94d7-4d47-b3d5-e72c6324e605",
      "problem_id": "7770d8bd-25ce-4caf-908f-6371e1a43e3c",
      "sql_dialect": "mysql",
      "setup_sql": "\nCREATE TABLE stores (\n    store_id INT PRIMARY KEY,\n    store_name VARCHAR(100),\n    location VARCHAR(100),\n    store_size VARCHAR(20)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    category VARCHAR(50),\n    unit_cost DECIMAL(8,2),\n    supplier VARCHAR(100)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    store_id INT,\n    product_id INT,\n    current_stock INT,\n    min_stock_level INT,\n    last_restock_date DATE,\n    units_sold_last_month INT,\n    FOREIGN KEY (store_id) REFERENCES stores(store_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nINSERT INTO stores VALUES\n(1, 'Downtown Store', 'New York, NY', 'Large'),\n(2, 'Mall Location', 'Los Angeles, CA', 'Medium'),\n(3, 'Suburban Store', 'Chicago, IL', 'Large'),\n(4, 'Express Store', 'Houston, TX', 'Small');\n\nINSERT INTO products VALUES\n(1, 'Wireless Headphones', 'Electronics', 75.00, 'TechCorp'),\n(2, 'Running Shoes', 'Footwear', 120.00, 'SportsBrand'),\n(3, 'Coffee Maker', 'Appliances', 85.00, 'HomeGoods'),\n(4, 'Smartphone Case', 'Electronics', 25.00, 'TechCorp'),\n(5, 'Yoga Mat', 'Fitness', 45.00, 'FitnessCo');\n\nINSERT INTO inventory VALUES\n(1, 1, 1, 25, 10, '2024-04-15', 18),\n(2, 1, 2, 15, 8, '2024-04-20', 12),\n(3, 1, 3, 8, 5, '2024-04-10', 6),\n(4, 2, 1, 30, 12, '2024-04-18', 22),\n(5, 2, 4, 45, 15, '2024-04-12', 35),\n(6, 3, 2, 20, 10, '2024-04-25', 15),\n(7, 3, 5, 12, 6, '2024-04-22', 8),\n(8, 4, 3, 6, 4, '2024-04-08', 5),\n(9, 4, 4, 25, 10, '2024-04-16', 20);",
      "solution_sql": "\nSELECT \n    s.store_name,\n    p.category,\n    COUNT(i.inventory_id) as products_in_category,\n    SUM(i.current_stock) as total_stock,\n    SUM(i.units_sold_last_month) as total_monthly_sales,\n    ROUND(AVG(CASE WHEN i.current_stock > 0 THEN i.units_sold_last_month::DECIMAL / i.current_stock ELSE 0 END), 2) as avg_turnover_ratio\nFROM stores s\nJOIN inventory i ON s.store_id = i.store_id\nJOIN products p ON i.product_id = p.product_id\nGROUP BY s.store_name, p.category\nORDER BY avg_turnover_ratio DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.719Z",
      "expected_output": [
        {
          "category": "Appliances",
          "store_name": "Express Store",
          "total_stock": "6",
          "avg_turnover_ratio": "0.83",
          "total_monthly_sales": "5",
          "products_in_category": "1"
        },
        {
          "category": "Footwear",
          "store_name": "Downtown Store",
          "total_stock": "15",
          "avg_turnover_ratio": "0.80",
          "total_monthly_sales": "12",
          "products_in_category": "1"
        },
        {
          "category": "Electronics",
          "store_name": "Express Store",
          "total_stock": "25",
          "avg_turnover_ratio": "0.80",
          "total_monthly_sales": "20",
          "products_in_category": "1"
        },
        {
          "category": "Electronics",
          "store_name": "Mall Location",
          "total_stock": "75",
          "avg_turnover_ratio": "0.76",
          "total_monthly_sales": "57",
          "products_in_category": "2"
        },
        {
          "category": "Appliances",
          "store_name": "Downtown Store",
          "total_stock": "8",
          "avg_turnover_ratio": "0.75",
          "total_monthly_sales": "6",
          "products_in_category": "1"
        },
        {
          "category": "Footwear",
          "store_name": "Suburban Store",
          "total_stock": "20",
          "avg_turnover_ratio": "0.75",
          "total_monthly_sales": "15",
          "products_in_category": "1"
        },
        {
          "category": "Electronics",
          "store_name": "Downtown Store",
          "total_stock": "25",
          "avg_turnover_ratio": "0.72",
          "total_monthly_sales": "18",
          "products_in_category": "1"
        },
        {
          "category": "Fitness",
          "store_name": "Suburban Store",
          "total_stock": "12",
          "avg_turnover_ratio": "0.67",
          "total_monthly_sales": "8",
          "products_in_category": "1"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Inventory Management System",
      "problem_slug": "cvs-health-pharmacy-inventory-management"
    },
    {
      "id": "170623e2-c78e-47e9-834c-715b73d33821",
      "problem_id": "7770d8bd-25ce-4caf-908f-6371e1a43e3c",
      "sql_dialect": "postgresql",
      "setup_sql": "\nCREATE TABLE stores (\n    store_id INT PRIMARY KEY,\n    store_name VARCHAR(100),\n    location VARCHAR(100),\n    store_size VARCHAR(20)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    category VARCHAR(50),\n    unit_cost DECIMAL(8,2),\n    supplier VARCHAR(100)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT PRIMARY KEY,\n    store_id INT,\n    product_id INT,\n    current_stock INT,\n    min_stock_level INT,\n    last_restock_date DATE,\n    units_sold_last_month INT,\n    FOREIGN KEY (store_id) REFERENCES stores(store_id),\n    FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\nINSERT INTO stores VALUES\n(1, 'Downtown Store', 'New York, NY', 'Large'),\n(2, 'Mall Location', 'Los Angeles, CA', 'Medium'),\n(3, 'Suburban Store', 'Chicago, IL', 'Large'),\n(4, 'Express Store', 'Houston, TX', 'Small');\n\nINSERT INTO products VALUES\n(1, 'Wireless Headphones', 'Electronics', 75.00, 'TechCorp'),\n(2, 'Running Shoes', 'Footwear', 120.00, 'SportsBrand'),\n(3, 'Coffee Maker', 'Appliances', 85.00, 'HomeGoods'),\n(4, 'Smartphone Case', 'Electronics', 25.00, 'TechCorp'),\n(5, 'Yoga Mat', 'Fitness', 45.00, 'FitnessCo');\n\nINSERT INTO inventory VALUES\n(1, 1, 1, 25, 10, '2024-04-15', 18),\n(2, 1, 2, 15, 8, '2024-04-20', 12),\n(3, 1, 3, 8, 5, '2024-04-10', 6),\n(4, 2, 1, 30, 12, '2024-04-18', 22),\n(5, 2, 4, 45, 15, '2024-04-12', 35),\n(6, 3, 2, 20, 10, '2024-04-25', 15),\n(7, 3, 5, 12, 6, '2024-04-22', 8),\n(8, 4, 3, 6, 4, '2024-04-08', 5),\n(9, 4, 4, 25, 10, '2024-04-16', 20);",
      "solution_sql": "\nSELECT \n    s.store_name,\n    p.category,\n    COUNT(i.inventory_id) as products_in_category,\n    SUM(i.current_stock) as total_stock,\n    SUM(i.units_sold_last_month) as total_monthly_sales,\n    ROUND(AVG(CASE WHEN i.current_stock > 0 THEN i.units_sold_last_month::DECIMAL / i.current_stock ELSE 0 END), 2) as avg_turnover_ratio\nFROM stores s\nJOIN inventory i ON s.store_id = i.store_id\nJOIN products p ON i.product_id = p.product_id\nGROUP BY s.store_name, p.category\nORDER BY avg_turnover_ratio DESC;",
      "explanation": "Healthcare supply chain analysis using CTEs and JOINs to identify multi-category inventory shortages across pharmacy locations.",
      "created_at": "2025-08-11T13:51:15.995Z",
      "expected_output": [
        {
          "category": "Appliances",
          "store_name": "Express Store",
          "total_stock": "6",
          "avg_turnover_ratio": "0.83",
          "total_monthly_sales": "5",
          "products_in_category": "1"
        },
        {
          "category": "Footwear",
          "store_name": "Downtown Store",
          "total_stock": "15",
          "avg_turnover_ratio": "0.80",
          "total_monthly_sales": "12",
          "products_in_category": "1"
        },
        {
          "category": "Electronics",
          "store_name": "Express Store",
          "total_stock": "25",
          "avg_turnover_ratio": "0.80",
          "total_monthly_sales": "20",
          "products_in_category": "1"
        },
        {
          "category": "Electronics",
          "store_name": "Mall Location",
          "total_stock": "75",
          "avg_turnover_ratio": "0.76",
          "total_monthly_sales": "57",
          "products_in_category": "2"
        },
        {
          "category": "Appliances",
          "store_name": "Downtown Store",
          "total_stock": "8",
          "avg_turnover_ratio": "0.75",
          "total_monthly_sales": "6",
          "products_in_category": "1"
        },
        {
          "category": "Footwear",
          "store_name": "Suburban Store",
          "total_stock": "20",
          "avg_turnover_ratio": "0.75",
          "total_monthly_sales": "15",
          "products_in_category": "1"
        },
        {
          "category": "Electronics",
          "store_name": "Downtown Store",
          "total_stock": "25",
          "avg_turnover_ratio": "0.72",
          "total_monthly_sales": "18",
          "products_in_category": "1"
        },
        {
          "category": "Fitness",
          "store_name": "Suburban Store",
          "total_stock": "12",
          "avg_turnover_ratio": "0.67",
          "total_monthly_sales": "8",
          "products_in_category": "1"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Inventory Management System",
      "problem_slug": "cvs-health-pharmacy-inventory-management"
    },
    {
      "id": "7487110c-00ed-4089-a93c-acf596e412f7",
      "problem_id": "20b87983-9952-4f6b-ad79-96cce189c2e2",
      "sql_dialect": "mysql",
      "setup_sql": "\nCREATE TABLE departments (\n    dept_id INT PRIMARY KEY,\n    dept_name VARCHAR(100),\n    manager_name VARCHAR(100),\n    budget DECIMAL(12,2)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(100),\n    dept_id INT,\n    position VARCHAR(100),\n    hire_date DATE,\n    salary DECIMAL(10,2),\n    FOREIGN KEY (dept_id) REFERENCES departments(dept_id)\n);\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    employee_id INT,\n    quarter VARCHAR(10),\n    projects_completed INT,\n    avg_project_rating DECIMAL(3,2),\n    skill_assessment_score INT,\n    peer_review_score DECIMAL(3,2),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nINSERT INTO departments VALUES\n(1, 'Engineering', 'Sarah Johnson', 2500000.00),\n(2, 'Marketing', 'Mike Chen', 800000.00),\n(3, 'Sales', 'Lisa Rodriguez', 1200000.00),\n(4, 'Design', 'Alex Kim', 600000.00);\n\nINSERT INTO employees VALUES\n(1, 'John Smith', 1, 'Senior Developer', '2022-03-15', 95000.00),\n(2, 'Emma Wilson', 1, 'DevOps Engineer', '2022-06-20', 88000.00),\n(3, 'David Brown', 2, 'Marketing Manager', '2021-11-10', 75000.00),\n(4, 'Jessica Lee', 3, 'Sales Representative', '2023-01-08', 65000.00),\n(5, 'Mark Taylor', 4, 'UX Designer', '2022-09-12', 72000.00);\n\nINSERT INTO performance_metrics VALUES\n(1, 1, '2024-Q1', 8, 4.5, 92, 4.3),\n(2, 2, '2024-Q1', 6, 4.2, 88, 4.1),\n(3, 3, '2024-Q1', 12, 4.0, 85, 3.9),\n(4, 4, '2024-Q1', 15, 3.8, 82, 3.7),\n(5, 5, '2024-Q1', 5, 4.6, 90, 4.4),\n(6, 1, '2024-Q2', 7, 4.4, 94, 4.2),\n(7, 2, '2024-Q2', 8, 4.3, 89, 4.0),\n(8, 3, '2024-Q2', 10, 4.1, 87, 4.0);",
      "solution_sql": "\nSELECT \n    d.dept_name,\n    COUNT(e.employee_id) as employee_count,\n    ROUND(AVG(pm.projects_completed), 1) as avg_projects_completed,\n    ROUND(AVG(pm.avg_project_rating), 2) as avg_project_rating,\n    ROUND(AVG(pm.skill_assessment_score), 1) as avg_skill_score,\n    ROUND(AVG(pm.peer_review_score), 2) as avg_peer_review\nFROM departments d\nJOIN employees e ON d.dept_id = e.dept_id\nJOIN performance_metrics pm ON e.employee_id = pm.employee_id\nGROUP BY d.dept_name\nORDER BY avg_project_rating DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.667Z",
      "expected_output": [
        {
          "dept_name": "Design",
          "employee_count": "1",
          "avg_peer_review": "4.40",
          "avg_skill_score": "90.0",
          "avg_project_rating": "4.60",
          "avg_projects_completed": "5.0"
        },
        {
          "dept_name": "Engineering",
          "employee_count": "4",
          "avg_peer_review": "4.15",
          "avg_skill_score": "90.8",
          "avg_project_rating": "4.35",
          "avg_projects_completed": "7.3"
        },
        {
          "dept_name": "Marketing",
          "employee_count": "2",
          "avg_peer_review": "3.95",
          "avg_skill_score": "86.0",
          "avg_project_rating": "4.05",
          "avg_projects_completed": "11.0"
        },
        {
          "dept_name": "Sales",
          "employee_count": "1",
          "avg_peer_review": "3.70",
          "avg_skill_score": "82.0",
          "avg_project_rating": "3.80",
          "avg_projects_completed": "15.0"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Employee Performance Analytics",
      "problem_slug": "capital-one-credit-risk-modeling"
    },
    {
      "id": "c31ddc6e-15a7-460a-8e12-d6163f618341",
      "problem_id": "20b87983-9952-4f6b-ad79-96cce189c2e2",
      "sql_dialect": "postgresql",
      "setup_sql": "\nCREATE TABLE departments (\n    dept_id INT PRIMARY KEY,\n    dept_name VARCHAR(100),\n    manager_name VARCHAR(100),\n    budget DECIMAL(12,2)\n);\n\nCREATE TABLE employees (\n    employee_id INT PRIMARY KEY,\n    employee_name VARCHAR(100),\n    dept_id INT,\n    position VARCHAR(100),\n    hire_date DATE,\n    salary DECIMAL(10,2),\n    FOREIGN KEY (dept_id) REFERENCES departments(dept_id)\n);\n\nCREATE TABLE performance_metrics (\n    metric_id INT PRIMARY KEY,\n    employee_id INT,\n    quarter VARCHAR(10),\n    projects_completed INT,\n    avg_project_rating DECIMAL(3,2),\n    skill_assessment_score INT,\n    peer_review_score DECIMAL(3,2),\n    FOREIGN KEY (employee_id) REFERENCES employees(employee_id)\n);\n\nINSERT INTO departments VALUES\n(1, 'Engineering', 'Sarah Johnson', 2500000.00),\n(2, 'Marketing', 'Mike Chen', 800000.00),\n(3, 'Sales', 'Lisa Rodriguez', 1200000.00),\n(4, 'Design', 'Alex Kim', 600000.00);\n\nINSERT INTO employees VALUES\n(1, 'John Smith', 1, 'Senior Developer', '2022-03-15', 95000.00),\n(2, 'Emma Wilson', 1, 'DevOps Engineer', '2022-06-20', 88000.00),\n(3, 'David Brown', 2, 'Marketing Manager', '2021-11-10', 75000.00),\n(4, 'Jessica Lee', 3, 'Sales Representative', '2023-01-08', 65000.00),\n(5, 'Mark Taylor', 4, 'UX Designer', '2022-09-12', 72000.00);\n\nINSERT INTO performance_metrics VALUES\n(1, 1, '2024-Q1', 8, 4.5, 92, 4.3),\n(2, 2, '2024-Q1', 6, 4.2, 88, 4.1),\n(3, 3, '2024-Q1', 12, 4.0, 85, 3.9),\n(4, 4, '2024-Q1', 15, 3.8, 82, 3.7),\n(5, 5, '2024-Q1', 5, 4.6, 90, 4.4),\n(6, 1, '2024-Q2', 7, 4.4, 94, 4.2),\n(7, 2, '2024-Q2', 8, 4.3, 89, 4.0),\n(8, 3, '2024-Q2', 10, 4.1, 87, 4.0);",
      "solution_sql": "\nSELECT \n    d.dept_name,\n    COUNT(e.employee_id) as employee_count,\n    ROUND(AVG(pm.projects_completed), 1) as avg_projects_completed,\n    ROUND(AVG(pm.avg_project_rating), 2) as avg_project_rating,\n    ROUND(AVG(pm.skill_assessment_score), 1) as avg_skill_score,\n    ROUND(AVG(pm.peer_review_score), 2) as avg_peer_review\nFROM departments d\nJOIN employees e ON d.dept_id = e.dept_id\nJOIN performance_metrics pm ON e.employee_id = pm.employee_id\nGROUP BY d.dept_name\nORDER BY avg_project_rating DESC;",
      "explanation": "Credit risk analysis using income segmentation, utilization ratio calculations, and window functions for borrower ranking within risk categories.",
      "created_at": "2025-08-11T13:51:21.532Z",
      "expected_output": [
        {
          "dept_name": "Design",
          "employee_count": "1",
          "avg_peer_review": "4.40",
          "avg_skill_score": "90.0",
          "avg_project_rating": "4.60",
          "avg_projects_completed": "5.0"
        },
        {
          "dept_name": "Engineering",
          "employee_count": "4",
          "avg_peer_review": "4.15",
          "avg_skill_score": "90.8",
          "avg_project_rating": "4.35",
          "avg_projects_completed": "7.3"
        },
        {
          "dept_name": "Marketing",
          "employee_count": "2",
          "avg_peer_review": "3.95",
          "avg_skill_score": "86.0",
          "avg_project_rating": "4.05",
          "avg_projects_completed": "11.0"
        },
        {
          "dept_name": "Sales",
          "employee_count": "1",
          "avg_peer_review": "3.70",
          "avg_skill_score": "82.0",
          "avg_project_rating": "3.80",
          "avg_projects_completed": "15.0"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Employee Performance Analytics",
      "problem_slug": "capital-one-credit-risk-modeling"
    },
    {
      "id": "523530b9-7fc4-4c23-8a54-7a24d2993a2e",
      "problem_id": "7cd37118-1e89-4efb-b6a7-8b195e927f66",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE schwab_wealth_management (\n        client_id INT PRIMARY KEY,\n        wealth_tier VARCHAR(30),\n        portfolio_value DECIMAL(12,2),\n        annual_return DECIMAL(8,4),\n        portfolio_volatility DECIMAL(8,4),\n        advisory_fees DECIMAL(8,2),\n        tax_efficiency DECIMAL(6,4),\n        client_date DATE\n    );\n      INSERT INTO schwab_wealth_management  VALUES\n      (1, 'Ultra High Net Worth', 25000000.50, 0.1250, 0.1650, 250000.50, 0.8500, '2024-01-15'),\n      (2, 'High Net Worth', 8500000.75, 0.1150, 0.1750, 85000.75, 0.8200, '2024-01-15'),\n      (3, 'Affluent', 3200000.25, 0.1050, 0.1550, 32000.25, 0.7900, '2024-01-16'),\n      (4, 'Mass Affluent', 1500000.80, 0.0950, 0.1850, 15000.80, 0.7600, '2024-01-16'),\n      (5, 'Emerging Wealth', 750000.60, 0.0850, 0.1950, 7500.60, 0.7200, '2024-01-17'),\n      (7, 'Ultra High Net Worth_v1', 25000000.60, 0.23, 0.27, 250000.60, 0.95, '2024-01-16'),\n      (9, 'High Net Worth_v2', 8500000.95, 0.32, 0.38, 85000.95, 1.02, '2024-01-17'),\n      (11, 'Affluent_v3', 3200000.55, 0.41, 0.46, 32000.55, 1.09, '2024-01-19'),\n      (13, 'Mass Affluent_v4', 1500001.20, 0.49, 0.58, 15001.20, 1.16, '2024-01-20'),\n      (15, 'Emerging Wealth_v5', 750001.10, 0.58, 0.70, 7501.10, 1.22, '2024-01-22'),\n      (12, 'Ultra High Net Worth_v6', 25000001.10, 0.73, 0.77, 250001.10, 1.45, '2024-01-21'),\n      (14, 'High Net Worth_v7', 8500001.45, 0.82, 0.88, 85001.45, 1.52, '2024-01-22'),\n      (16, 'Affluent_v8', 3200001.05, 0.91, 0.96, 32001.05, 1.59, '2024-01-24'),\n      (18, 'Mass Affluent_v9', 1500001.70, 0.99, 1.08, 15001.70, 1.66, '2024-01-25'),\n      (20, 'Emerging Wealth_v10', 750001.60, 1.08, 1.20, 7501.60, 1.72, '2024-01-27'),\n      (17, 'Ultra High Net Worth_v11', 25000001.60, 1.23, 1.27, 250001.60, 1.95, '2024-01-26'),\n      (19, 'High Net Worth_v12', 8500001.95, 1.32, 1.38, 85001.95, 2.02, '2024-01-27'),\n      (21, 'Affluent_v13', 3200001.55, 1.41, 1.46, 32001.55, 2.09, '2024-01-29'),\n      (23, 'Mass Affluent_v14', 1500002.20, 1.50, 1.59, 15002.20, 2.16, '2024-01-30'),\n      (25, 'Emerging Wealth_v15', 750002.10, 1.58, 1.70, 7502.10, 2.22, '2024-02-01'),\n      (22, 'Ultra High Net Worth_v16', 25000002.10, 1.73, 1.77, 250002.10, 2.45, '2024-01-31'),\n      (24, 'High Net Worth_v17', 8500002.45, 1.82, 1.88, 85002.45, 2.52, '2024-02-01'),\n      (26, 'Affluent_v18', 3200002.05, 1.91, 1.96, 32002.05, 2.59, '2024-02-03'),\n      (28, 'Mass Affluent_v19', 1500002.70, 2.00, 2.08, 15002.70, 2.66, '2024-02-04'),\n      (30, 'Emerging Wealth_v20', 750002.60, 2.08, 2.19, 7502.60, 2.72, '2024-02-06');",
      "solution_sql": "SELECT \n        wealth_tier,\n        ROUND(portfolio_value / 1000000, 2) as portfolio_millions,\n        ROUND(CAST(annual_return * 100 AS NUMERIC), 2) as annual_return_pct,\n        ROUND(CAST(portfolio_volatility * 100 AS NUMERIC), 2) as volatility_pct,\n        ROUND(CAST(tax_efficiency * 100 AS NUMERIC), 2) as tax_efficiency_pct\n    FROM schwab_wealth_management \n    WHERE annual_return > 0.10 AND portfolio_volatility < 0.18\n    ORDER BY annual_return_pct DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.723Z",
      "expected_output": [
        {
          "wealth_tier": "Ultra High Net Worth",
          "volatility_pct": "16.50",
          "annual_return_pct": "12.50",
          "portfolio_millions": "25.00",
          "tax_efficiency_pct": "85.00"
        },
        {
          "wealth_tier": "High Net Worth",
          "volatility_pct": "17.50",
          "annual_return_pct": "11.50",
          "portfolio_millions": "8.50",
          "tax_efficiency_pct": "82.00"
        },
        {
          "wealth_tier": "Affluent",
          "volatility_pct": "15.50",
          "annual_return_pct": "10.50",
          "portfolio_millions": "3.20",
          "tax_efficiency_pct": "79.00"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Charles Schwab Wealth Management Analytics",
      "problem_slug": "charles-schwab-portfolio-analytics"
    },
    {
      "id": "43607949-a863-4c57-9618-74cb5685b703",
      "problem_id": "7cd37118-1e89-4efb-b6a7-8b195e927f66",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE schwab_wealth_management (\n        client_id INT PRIMARY KEY,\n        wealth_tier VARCHAR(30),\n        portfolio_value DECIMAL(12,2),\n        annual_return DECIMAL(8,4),\n        portfolio_volatility DECIMAL(8,4),\n        advisory_fees DECIMAL(8,2),\n        tax_efficiency DECIMAL(6,4),\n        client_date DATE\n    );\n      INSERT INTO schwab_wealth_management  VALUES\n      (1, 'Ultra High Net Worth', 25000000.50, 0.1250, 0.1650, 250000.50, 0.8500, '2024-01-15'),\n      (2, 'High Net Worth', 8500000.75, 0.1150, 0.1750, 85000.75, 0.8200, '2024-01-15'),\n      (3, 'Affluent', 3200000.25, 0.1050, 0.1550, 32000.25, 0.7900, '2024-01-16'),\n      (4, 'Mass Affluent', 1500000.80, 0.0950, 0.1850, 15000.80, 0.7600, '2024-01-16'),\n      (5, 'Emerging Wealth', 750000.60, 0.0850, 0.1950, 7500.60, 0.7200, '2024-01-17'),\n      (7, 'Ultra High Net Worth_v1', 25000000.60, 0.23, 0.27, 250000.60, 0.95, '2024-01-16'),\n      (9, 'High Net Worth_v2', 8500000.95, 0.32, 0.38, 85000.95, 1.02, '2024-01-17'),\n      (11, 'Affluent_v3', 3200000.55, 0.41, 0.46, 32000.55, 1.09, '2024-01-19'),\n      (13, 'Mass Affluent_v4', 1500001.20, 0.49, 0.58, 15001.20, 1.16, '2024-01-20'),\n      (15, 'Emerging Wealth_v5', 750001.10, 0.58, 0.70, 7501.10, 1.22, '2024-01-22'),\n      (12, 'Ultra High Net Worth_v6', 25000001.10, 0.73, 0.77, 250001.10, 1.45, '2024-01-21'),\n      (14, 'High Net Worth_v7', 8500001.45, 0.82, 0.88, 85001.45, 1.52, '2024-01-22'),\n      (16, 'Affluent_v8', 3200001.05, 0.91, 0.96, 32001.05, 1.59, '2024-01-24'),\n      (18, 'Mass Affluent_v9', 1500001.70, 0.99, 1.08, 15001.70, 1.66, '2024-01-25'),\n      (20, 'Emerging Wealth_v10', 750001.60, 1.08, 1.20, 7501.60, 1.72, '2024-01-27'),\n      (17, 'Ultra High Net Worth_v11', 25000001.60, 1.23, 1.27, 250001.60, 1.95, '2024-01-26'),\n      (19, 'High Net Worth_v12', 8500001.95, 1.32, 1.38, 85001.95, 2.02, '2024-01-27'),\n      (21, 'Affluent_v13', 3200001.55, 1.41, 1.46, 32001.55, 2.09, '2024-01-29'),\n      (23, 'Mass Affluent_v14', 1500002.20, 1.50, 1.59, 15002.20, 2.16, '2024-01-30'),\n      (25, 'Emerging Wealth_v15', 750002.10, 1.58, 1.70, 7502.10, 2.22, '2024-02-01'),\n      (22, 'Ultra High Net Worth_v16', 25000002.10, 1.73, 1.77, 250002.10, 2.45, '2024-01-31'),\n      (24, 'High Net Worth_v17', 8500002.45, 1.82, 1.88, 85002.45, 2.52, '2024-02-01'),\n      (26, 'Affluent_v18', 3200002.05, 1.91, 1.96, 32002.05, 2.59, '2024-02-03'),\n      (28, 'Mass Affluent_v19', 1500002.70, 2.00, 2.08, 15002.70, 2.66, '2024-02-04'),\n      (30, 'Emerging Wealth_v20', 750002.60, 2.08, 2.19, 7502.60, 2.72, '2024-02-06');",
      "solution_sql": "SELECT \n        wealth_tier,\n        ROUND(portfolio_value / 1000000, 2) as portfolio_millions,\n        ROUND(CAST(annual_return * 100 AS NUMERIC), 2) as annual_return_pct,\n        ROUND(CAST(portfolio_volatility * 100 AS NUMERIC), 2) as volatility_pct,\n        ROUND(CAST(tax_efficiency * 100 AS NUMERIC), 2) as tax_efficiency_pct\n    FROM schwab_wealth_management \n    WHERE annual_return > 0.10 AND portfolio_volatility < 0.18\n    ORDER BY annual_return_pct DESC;",
      "explanation": "Charles Schwab wealth management analytics using return and volatility metrics for advisory optimization.",
      "created_at": "2025-08-11T17:08:07.871Z",
      "expected_output": [
        {
          "wealth_tier": "Ultra High Net Worth",
          "volatility_pct": "16.50",
          "annual_return_pct": "12.50",
          "portfolio_millions": "25.00",
          "tax_efficiency_pct": "85.00"
        },
        {
          "wealth_tier": "High Net Worth",
          "volatility_pct": "17.50",
          "annual_return_pct": "11.50",
          "portfolio_millions": "8.50",
          "tax_efficiency_pct": "82.00"
        },
        {
          "wealth_tier": "Affluent",
          "volatility_pct": "15.50",
          "annual_return_pct": "10.50",
          "portfolio_millions": "3.20",
          "tax_efficiency_pct": "79.00"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Charles Schwab Wealth Management Analytics",
      "problem_slug": "charles-schwab-portfolio-analytics"
    },
    {
      "id": "b582542b-ddc1-4e6c-b08a-457b04a87c61",
      "problem_id": "41facc79-e158-4b9f-a70d-05908d560d3e",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE citadel_positions (\n        position_id INT PRIMARY KEY,\n        asset_name VARCHAR(100),\n        asset_class VARCHAR(30),\n        geographic_region VARCHAR(30),\n        current_weight DECIMAL(8,4),\n        expected_return DECIMAL(8,4),\n        volatility DECIMAL(8,4),\n        beta_to_portfolio DECIMAL(6,4)\n    );\n      INSERT INTO citadel_positions  VALUES\n      (1, 'S&P 500 Futures', 'Equities', 'North America', 0.2500, 0.0850, 0.1820, 1.0000),\n      (2, 'FTSE 100 Futures', 'Equities', 'Europe', 0.1500, 0.0720, 0.1950, 0.8500),\n      (3, '10Y Treasury Futures', 'Fixed Income', 'North America', 0.3000, 0.0320, 0.0850, -0.2500),\n      (4, 'German Bund Futures', 'Fixed Income', 'Europe', 0.1200, 0.0280, 0.0920, -0.1800),\n      (5, 'Gold Futures', 'Commodities', 'Global', 0.0800, 0.0450, 0.2200, 0.1200),\n      (6, 'EUR/USD Currency', 'Currencies', 'Global', 0.0500, 0.0150, 0.1100, 0.0800),\n      (7, 'Emerging Markets ETF', 'Equities', 'Asia Pacific', 0.0500, 0.0920, 0.2800, 1.2500),\n      (9, 'S&P 500 Futures_v1', 'Equities_v1', 'North America_v1', 0.35, 0.18, 0.28, 1.10),\n      (11, 'FTSE 100 Futures_v2', 'Equities_v2', 'Europe_v2', 0.35, 0.27, 0.40, 1.05),\n      (13, '10Y Treasury Futures_v3', 'Fixed Income_v3', 'North America_v3', 0.60, 0.33, 0.39, 0.05),\n      (15, 'German Bund Futures_v4', 'Fixed Income_v4', 'Europe_v4', 0.52, 0.43, 0.49, 0.22),\n      (17, 'Gold Futures_v5', 'Commodities_v5', 'Global_v5', 0.58, 0.55, 0.72, 0.62),\n      (19, 'EUR/USD Currency_v6', 'Currencies_v6', 'Global_v6', 0.65, 0.62, 0.71, 0.68),\n      (21, 'Emerging Markets ETF_v7', 'Equities_v7', 'Asia Pacific_v7', 0.75, 0.79, 0.98, 1.95),\n      (16, 'S&P 500 Futures_v8', 'Equities_v8', 'North America_v8', 1.05, 0.89, 0.98, 1.80),\n      (18, 'FTSE 100 Futures_v9', 'Equities_v9', 'Europe_v9', 1.05, 0.97, 1.09, 1.75),\n      (20, '10Y Treasury Futures_v10', 'Fixed Income_v10', 'North America_v10', 1.30, 1.03, 1.08, 0.75),\n      (22, 'German Bund Futures_v11', 'Fixed Income_v11', 'Europe_v11', 1.22, 1.13, 1.19, 0.92),\n      (24, 'Gold Futures_v12', 'Commodities_v12', 'Global_v12', 1.28, 1.25, 1.42, 1.32),\n      (26, 'EUR/USD Currency_v13', 'Currencies_v13', 'Global_v13', 1.35, 1.31, 1.41, 1.38),\n      (28, 'Emerging Markets ETF_v14', 'Equities_v14', 'Asia Pacific_v14', 1.45, 1.49, 1.68, 2.65),\n      (23, 'S&P 500 Futures_v15', 'Equities_v15', 'North America_v15', 1.75, 1.58, 1.68, 2.50),\n      (25, 'FTSE 100 Futures_v16', 'Equities_v16', 'Europe_v16', 1.75, 1.67, 1.80, 2.45),\n      (27, '10Y Treasury Futures_v17', 'Fixed Income_v17', 'North America_v17', 2.00, 1.73, 1.79, 1.45),\n      (29, 'German Bund Futures_v18', 'Fixed Income_v18', 'Europe_v18', 1.92, 1.83, 1.89, 1.62);",
      "solution_sql": "WITH portfolio_metrics AS (\n        SELECT \n            0.1650 as portfolio_volatility, -- Calculated portfolio volatility\n            COUNT(*) as total_positions\n        FROM citadel_positions\n    ),\n    risk_contributions AS (\n        SELECT \n            p.position_id,\n            p.asset_name,\n            p.asset_class,\n            p.geographic_region,\n            p.current_weight,\n            p.beta_to_portfolio,\n            pm.portfolio_volatility,\n            -- Risk Contribution = Weight × Beta × Portfolio Volatility\n            (p.current_weight * p.beta_to_portfolio * pm.portfolio_volatility) as risk_contribution,\n            -- Marginal risk contribution\n            (p.beta_to_portfolio * pm.portfolio_volatility) as marginal_risk_contribution\n        FROM citadel_positions p\n        CROSS JOIN portfolio_metrics pm\n    ),\n    total_risk AS (\n        SELECT SUM(ABS(risk_contribution)) as total_portfolio_risk\n        FROM risk_contributions\n    ),\n    risk_analysis AS (\n        SELECT \n            rc.*,\n            tr.total_portfolio_risk,\n            (ABS(rc.risk_contribution) / tr.total_portfolio_risk) as risk_contribution_pct,\n            -- Optimal weight for equal risk contribution\n            (1.0 / COUNT(*) OVER()) / rc.marginal_risk_contribution as optimal_weight\n        FROM risk_contributions rc\n        CROSS JOIN total_risk tr\n    )\n    SELECT \n        asset_name,\n        asset_class,\n        geographic_region,\n        ROUND(current_weight * 100, 2) as current_weight_pct,\n        ROUND(risk_contribution_pct * 100, 2) as risk_contribution_pct,\n        ROUND(optimal_weight * 100, 2) as optimal_weight_pct,\n        ROUND((optimal_weight - current_weight) * 100, 2) as rebalancing_delta_pct,\n        CASE \n            WHEN optimal_weight > current_weight THEN 'Increase Position'\n            WHEN optimal_weight < current_weight THEN 'Decrease Position'\n            ELSE 'Maintain Position'\n        END as rebalancing_action\n    FROM risk_analysis\n    WHERE risk_contribution_pct > 0.05\n    ORDER BY risk_contribution_pct DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.688Z",
      "expected_output": [
        {
          "asset_name": "S&P 500 Futures_v15",
          "asset_class": "Equities_v15",
          "geographic_region": "North America_v15",
          "current_weight_pct": "175.00",
          "optimal_weight_pct": "9.70",
          "rebalancing_action": "Decrease Position",
          "rebalancing_delta_pct": "-165.30",
          "risk_contribution_pct": "13.84"
        },
        {
          "asset_name": "FTSE 100 Futures_v16",
          "asset_class": "Equities_v16",
          "geographic_region": "Europe_v16",
          "current_weight_pct": "175.00",
          "optimal_weight_pct": "9.89",
          "rebalancing_action": "Decrease Position",
          "rebalancing_delta_pct": "-165.11",
          "risk_contribution_pct": "13.57"
        },
        {
          "asset_name": "Emerging Markets ETF_v14",
          "asset_class": "Equities_v14",
          "geographic_region": "Asia Pacific_v14",
          "current_weight_pct": "145.00",
          "optimal_weight_pct": "9.15",
          "rebalancing_action": "Decrease Position",
          "rebalancing_delta_pct": "-135.85",
          "risk_contribution_pct": "12.16"
        },
        {
          "asset_name": "German Bund Futures_v18",
          "asset_class": "Fixed Income_v18",
          "geographic_region": "Europe_v18",
          "current_weight_pct": "192.00",
          "optimal_weight_pct": "14.96",
          "rebalancing_action": "Decrease Position",
          "rebalancing_delta_pct": "-177.04",
          "risk_contribution_pct": "9.84"
        },
        {
          "asset_name": "10Y Treasury Futures_v17",
          "asset_class": "Fixed Income_v17",
          "geographic_region": "North America_v17",
          "current_weight_pct": "200.00",
          "optimal_weight_pct": "16.72",
          "rebalancing_action": "Decrease Position",
          "rebalancing_delta_pct": "-183.28",
          "risk_contribution_pct": "9.18"
        },
        {
          "asset_name": "S&P 500 Futures_v8",
          "asset_class": "Equities_v8",
          "geographic_region": "North America_v8",
          "current_weight_pct": "105.00",
          "optimal_weight_pct": "13.47",
          "rebalancing_action": "Decrease Position",
          "rebalancing_delta_pct": "-91.53",
          "risk_contribution_pct": "5.98"
        },
        {
          "asset_name": "EUR/USD Currency_v13",
          "asset_class": "Currencies_v13",
          "geographic_region": "Global_v13",
          "current_weight_pct": "135.00",
          "optimal_weight_pct": "17.57",
          "rebalancing_action": "Decrease Position",
          "rebalancing_delta_pct": "-117.43",
          "risk_contribution_pct": "5.89"
        },
        {
          "asset_name": "FTSE 100 Futures_v9",
          "asset_class": "Equities_v9",
          "geographic_region": "Europe_v9",
          "current_weight_pct": "105.00",
          "optimal_weight_pct": "13.85",
          "rebalancing_action": "Decrease Position",
          "rebalancing_delta_pct": "-91.15",
          "risk_contribution_pct": "5.81"
        },
        {
          "asset_name": "Gold Futures_v12",
          "asset_class": "Commodities_v12",
          "geographic_region": "Global_v12",
          "current_weight_pct": "128.00",
          "optimal_weight_pct": "18.37",
          "rebalancing_action": "Decrease Position",
          "rebalancing_delta_pct": "-109.63",
          "risk_contribution_pct": "5.35"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Citadel Hedge Fund Risk Parity Analysis",
      "problem_slug": "citadel-hedge-fund-risk-parity-analysis"
    },
    {
      "id": "6e751fa2-a14e-49bd-86bd-c0694acbd19c",
      "problem_id": "41facc79-e158-4b9f-a70d-05908d560d3e",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE citadel_positions (\n        position_id INT PRIMARY KEY,\n        asset_name VARCHAR(100),\n        asset_class VARCHAR(30),\n        geographic_region VARCHAR(30),\n        current_weight DECIMAL(8,4),\n        expected_return DECIMAL(8,4),\n        volatility DECIMAL(8,4),\n        beta_to_portfolio DECIMAL(6,4)\n    );\n      INSERT INTO citadel_positions  VALUES\n      (1, 'S&P 500 Futures', 'Equities', 'North America', 0.2500, 0.0850, 0.1820, 1.0000),\n      (2, 'FTSE 100 Futures', 'Equities', 'Europe', 0.1500, 0.0720, 0.1950, 0.8500),\n      (3, '10Y Treasury Futures', 'Fixed Income', 'North America', 0.3000, 0.0320, 0.0850, -0.2500),\n      (4, 'German Bund Futures', 'Fixed Income', 'Europe', 0.1200, 0.0280, 0.0920, -0.1800),\n      (5, 'Gold Futures', 'Commodities', 'Global', 0.0800, 0.0450, 0.2200, 0.1200),\n      (6, 'EUR/USD Currency', 'Currencies', 'Global', 0.0500, 0.0150, 0.1100, 0.0800),\n      (7, 'Emerging Markets ETF', 'Equities', 'Asia Pacific', 0.0500, 0.0920, 0.2800, 1.2500),\n      (9, 'S&P 500 Futures_v1', 'Equities_v1', 'North America_v1', 0.35, 0.18, 0.28, 1.10),\n      (11, 'FTSE 100 Futures_v2', 'Equities_v2', 'Europe_v2', 0.35, 0.27, 0.40, 1.05),\n      (13, '10Y Treasury Futures_v3', 'Fixed Income_v3', 'North America_v3', 0.60, 0.33, 0.39, 0.05),\n      (15, 'German Bund Futures_v4', 'Fixed Income_v4', 'Europe_v4', 0.52, 0.43, 0.49, 0.22),\n      (17, 'Gold Futures_v5', 'Commodities_v5', 'Global_v5', 0.58, 0.55, 0.72, 0.62),\n      (19, 'EUR/USD Currency_v6', 'Currencies_v6', 'Global_v6', 0.65, 0.62, 0.71, 0.68),\n      (21, 'Emerging Markets ETF_v7', 'Equities_v7', 'Asia Pacific_v7', 0.75, 0.79, 0.98, 1.95),\n      (16, 'S&P 500 Futures_v8', 'Equities_v8', 'North America_v8', 1.05, 0.89, 0.98, 1.80),\n      (18, 'FTSE 100 Futures_v9', 'Equities_v9', 'Europe_v9', 1.05, 0.97, 1.09, 1.75),\n      (20, '10Y Treasury Futures_v10', 'Fixed Income_v10', 'North America_v10', 1.30, 1.03, 1.08, 0.75),\n      (22, 'German Bund Futures_v11', 'Fixed Income_v11', 'Europe_v11', 1.22, 1.13, 1.19, 0.92),\n      (24, 'Gold Futures_v12', 'Commodities_v12', 'Global_v12', 1.28, 1.25, 1.42, 1.32),\n      (26, 'EUR/USD Currency_v13', 'Currencies_v13', 'Global_v13', 1.35, 1.31, 1.41, 1.38),\n      (28, 'Emerging Markets ETF_v14', 'Equities_v14', 'Asia Pacific_v14', 1.45, 1.49, 1.68, 2.65),\n      (23, 'S&P 500 Futures_v15', 'Equities_v15', 'North America_v15', 1.75, 1.58, 1.68, 2.50),\n      (25, 'FTSE 100 Futures_v16', 'Equities_v16', 'Europe_v16', 1.75, 1.67, 1.80, 2.45),\n      (27, '10Y Treasury Futures_v17', 'Fixed Income_v17', 'North America_v17', 2.00, 1.73, 1.79, 1.45),\n      (29, 'German Bund Futures_v18', 'Fixed Income_v18', 'Europe_v18', 1.92, 1.83, 1.89, 1.62);",
      "solution_sql": "WITH portfolio_metrics AS (\n        SELECT \n            0.1650 as portfolio_volatility, -- Calculated portfolio volatility\n            COUNT(*) as total_positions\n        FROM citadel_positions\n    ),\n    risk_contributions AS (\n        SELECT \n            p.position_id,\n            p.asset_name,\n            p.asset_class,\n            p.geographic_region,\n            p.current_weight,\n            p.beta_to_portfolio,\n            pm.portfolio_volatility,\n            -- Risk Contribution = Weight × Beta × Portfolio Volatility\n            (p.current_weight * p.beta_to_portfolio * pm.portfolio_volatility) as risk_contribution,\n            -- Marginal risk contribution\n            (p.beta_to_portfolio * pm.portfolio_volatility) as marginal_risk_contribution\n        FROM citadel_positions p\n        CROSS JOIN portfolio_metrics pm\n    ),\n    total_risk AS (\n        SELECT SUM(ABS(risk_contribution)) as total_portfolio_risk\n        FROM risk_contributions\n    ),\n    risk_analysis AS (\n        SELECT \n            rc.*,\n            tr.total_portfolio_risk,\n            (ABS(rc.risk_contribution) / tr.total_portfolio_risk) as risk_contribution_pct,\n            -- Optimal weight for equal risk contribution\n            (1.0 / COUNT(*) OVER()) / rc.marginal_risk_contribution as optimal_weight\n        FROM risk_contributions rc\n        CROSS JOIN total_risk tr\n    )\n    SELECT \n        asset_name,\n        asset_class,\n        geographic_region,\n        ROUND(current_weight * 100, 2) as current_weight_pct,\n        ROUND(risk_contribution_pct * 100, 2) as risk_contribution_pct,\n        ROUND(optimal_weight * 100, 2) as optimal_weight_pct,\n        ROUND((optimal_weight - current_weight) * 100, 2) as rebalancing_delta_pct,\n        CASE \n            WHEN optimal_weight > current_weight THEN 'Increase Position'\n            WHEN optimal_weight < current_weight THEN 'Decrease Position'\n            ELSE 'Maintain Position'\n        END as rebalancing_action\n    FROM risk_analysis\n    WHERE risk_contribution_pct > 0.05\n    ORDER BY risk_contribution_pct DESC;",
      "explanation": "Advanced quantitative finance using risk parity methodology, portfolio risk decomposition, and optimal weight calculations for hedge fund portfolio management.",
      "created_at": "2025-08-11T13:51:15.997Z",
      "expected_output": [
        {
          "asset_name": "S&P 500 Futures_v15",
          "asset_class": "Equities_v15",
          "geographic_region": "North America_v15",
          "current_weight_pct": "175.00",
          "optimal_weight_pct": "9.70",
          "rebalancing_action": "Decrease Position",
          "rebalancing_delta_pct": "-165.30",
          "risk_contribution_pct": "13.84"
        },
        {
          "asset_name": "FTSE 100 Futures_v16",
          "asset_class": "Equities_v16",
          "geographic_region": "Europe_v16",
          "current_weight_pct": "175.00",
          "optimal_weight_pct": "9.89",
          "rebalancing_action": "Decrease Position",
          "rebalancing_delta_pct": "-165.11",
          "risk_contribution_pct": "13.57"
        },
        {
          "asset_name": "Emerging Markets ETF_v14",
          "asset_class": "Equities_v14",
          "geographic_region": "Asia Pacific_v14",
          "current_weight_pct": "145.00",
          "optimal_weight_pct": "9.15",
          "rebalancing_action": "Decrease Position",
          "rebalancing_delta_pct": "-135.85",
          "risk_contribution_pct": "12.16"
        },
        {
          "asset_name": "German Bund Futures_v18",
          "asset_class": "Fixed Income_v18",
          "geographic_region": "Europe_v18",
          "current_weight_pct": "192.00",
          "optimal_weight_pct": "14.96",
          "rebalancing_action": "Decrease Position",
          "rebalancing_delta_pct": "-177.04",
          "risk_contribution_pct": "9.84"
        },
        {
          "asset_name": "10Y Treasury Futures_v17",
          "asset_class": "Fixed Income_v17",
          "geographic_region": "North America_v17",
          "current_weight_pct": "200.00",
          "optimal_weight_pct": "16.72",
          "rebalancing_action": "Decrease Position",
          "rebalancing_delta_pct": "-183.28",
          "risk_contribution_pct": "9.18"
        },
        {
          "asset_name": "S&P 500 Futures_v8",
          "asset_class": "Equities_v8",
          "geographic_region": "North America_v8",
          "current_weight_pct": "105.00",
          "optimal_weight_pct": "13.47",
          "rebalancing_action": "Decrease Position",
          "rebalancing_delta_pct": "-91.53",
          "risk_contribution_pct": "5.98"
        },
        {
          "asset_name": "EUR/USD Currency_v13",
          "asset_class": "Currencies_v13",
          "geographic_region": "Global_v13",
          "current_weight_pct": "135.00",
          "optimal_weight_pct": "17.57",
          "rebalancing_action": "Decrease Position",
          "rebalancing_delta_pct": "-117.43",
          "risk_contribution_pct": "5.89"
        },
        {
          "asset_name": "FTSE 100 Futures_v9",
          "asset_class": "Equities_v9",
          "geographic_region": "Europe_v9",
          "current_weight_pct": "105.00",
          "optimal_weight_pct": "13.85",
          "rebalancing_action": "Decrease Position",
          "rebalancing_delta_pct": "-91.15",
          "risk_contribution_pct": "5.81"
        },
        {
          "asset_name": "Gold Futures_v12",
          "asset_class": "Commodities_v12",
          "geographic_region": "Global_v12",
          "current_weight_pct": "128.00",
          "optimal_weight_pct": "18.37",
          "rebalancing_action": "Decrease Position",
          "rebalancing_delta_pct": "-109.63",
          "risk_contribution_pct": "5.35"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Citadel Hedge Fund Risk Parity Analysis",
      "problem_slug": "citadel-hedge-fund-risk-parity-analysis"
    },
    {
      "id": "a281da8d-142e-479b-adb6-8f7a62f5fdbd",
      "problem_id": "ebd41598-6542-40d8-9b54-c7b010de4ca5",
      "sql_dialect": "mysql",
      "setup_sql": "\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    opening_date DATE\n);\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(100),\n    category VARCHAR(50),\n    price DECIMAL(6,2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    restaurant_id INT,\n    item_id INT,\n    sale_date DATE,\n    quantity INT,\n    total_amount DECIMAL(8,2),\n    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id),\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id)\n);\n\nINSERT INTO restaurants VALUES\n(1, 'Downtown Bistro', 'New York', 'NY', '2022-01-15'),\n(2, 'Sunset Grill', 'Los Angeles', 'CA', '2022-03-20'),\n(3, 'City Center Cafe', 'Chicago', 'IL', '2022-02-10'),\n(4, 'Harbor View Restaurant', 'Miami', 'FL', '2022-04-05');\n\nINSERT INTO menu_items VALUES\n(1, 'Grilled Salmon', 'Main Course', 24.99),\n(2, 'Caesar Salad', 'Appetizer', 12.99),\n(3, 'Chocolate Cake', 'Dessert', 8.99),\n(4, 'Pasta Primavera', 'Main Course', 18.99),\n(5, 'Chicken Wings', 'Appetizer', 14.99),\n(6, 'Tiramisu', 'Dessert', 9.99);\n\nINSERT INTO sales VALUES\n(1, 1, 1, '2024-05-01', 2, 49.98),\n(2, 1, 2, '2024-05-01', 1, 12.99),\n(3, 2, 4, '2024-05-02', 3, 56.97),\n(4, 2, 5, '2024-05-02', 2, 29.98),\n(5, 3, 1, '2024-05-03', 1, 24.99),\n(6, 3, 6, '2024-05-03', 2, 19.98),\n(7, 4, 2, '2024-05-04', 2, 25.98),\n(8, 4, 3, '2024-05-04', 1, 8.99),\n(9, 1, 4, '2024-05-05', 2, 37.98),\n(10, 2, 1, '2024-05-05', 1, 24.99);",
      "solution_sql": "\nSELECT \n    r.city,\n    m.category,\n    COUNT(s.sale_id) as total_orders,\n    SUM(s.quantity) as total_items_sold,\n    ROUND(SUM(s.total_amount), 2) as total_revenue,\n    ROUND(AVG(s.total_amount), 2) as avg_order_value\nFROM restaurants r\nJOIN sales s ON r.restaurant_id = s.restaurant_id\nJOIN menu_items m ON s.item_id = m.item_id\nGROUP BY r.city, m.category\nORDER BY total_revenue DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.790Z",
      "expected_output": [
        {
          "city": "New York",
          "category": "Main Course",
          "total_orders": "2",
          "total_revenue": "87.96",
          "avg_order_value": "43.98",
          "total_items_sold": "4"
        },
        {
          "city": "Los Angeles",
          "category": "Main Course",
          "total_orders": "2",
          "total_revenue": "81.96",
          "avg_order_value": "40.98",
          "total_items_sold": "4"
        },
        {
          "city": "Los Angeles",
          "category": "Appetizer",
          "total_orders": "1",
          "total_revenue": "29.98",
          "avg_order_value": "29.98",
          "total_items_sold": "2"
        },
        {
          "city": "Miami",
          "category": "Appetizer",
          "total_orders": "1",
          "total_revenue": "25.98",
          "avg_order_value": "25.98",
          "total_items_sold": "2"
        },
        {
          "city": "Chicago",
          "category": "Main Course",
          "total_orders": "1",
          "total_revenue": "24.99",
          "avg_order_value": "24.99",
          "total_items_sold": "1"
        },
        {
          "city": "Chicago",
          "category": "Dessert",
          "total_orders": "1",
          "total_revenue": "19.98",
          "avg_order_value": "19.98",
          "total_items_sold": "2"
        },
        {
          "city": "New York",
          "category": "Appetizer",
          "total_orders": "1",
          "total_revenue": "12.99",
          "avg_order_value": "12.99",
          "total_items_sold": "1"
        },
        {
          "city": "Miami",
          "category": "Dessert",
          "total_orders": "1",
          "total_revenue": "8.99",
          "avg_order_value": "8.99",
          "total_items_sold": "1"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Restaurant Chain Sales Analysis",
      "problem_slug": "citibank-credit-card-fraud-detection"
    },
    {
      "id": "61818094-7930-4aea-81ce-e7872e2d2375",
      "problem_id": "ebd41598-6542-40d8-9b54-c7b010de4ca5",
      "sql_dialect": "postgresql",
      "setup_sql": "\nCREATE TABLE restaurants (\n    restaurant_id INT PRIMARY KEY,\n    restaurant_name VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    opening_date DATE\n);\n\nCREATE TABLE menu_items (\n    item_id INT PRIMARY KEY,\n    item_name VARCHAR(100),\n    category VARCHAR(50),\n    price DECIMAL(6,2)\n);\n\nCREATE TABLE sales (\n    sale_id INT PRIMARY KEY,\n    restaurant_id INT,\n    item_id INT,\n    sale_date DATE,\n    quantity INT,\n    total_amount DECIMAL(8,2),\n    FOREIGN KEY (restaurant_id) REFERENCES restaurants(restaurant_id),\n    FOREIGN KEY (item_id) REFERENCES menu_items(item_id)\n);\n\nINSERT INTO restaurants VALUES\n(1, 'Downtown Bistro', 'New York', 'NY', '2022-01-15'),\n(2, 'Sunset Grill', 'Los Angeles', 'CA', '2022-03-20'),\n(3, 'City Center Cafe', 'Chicago', 'IL', '2022-02-10'),\n(4, 'Harbor View Restaurant', 'Miami', 'FL', '2022-04-05');\n\nINSERT INTO menu_items VALUES\n(1, 'Grilled Salmon', 'Main Course', 24.99),\n(2, 'Caesar Salad', 'Appetizer', 12.99),\n(3, 'Chocolate Cake', 'Dessert', 8.99),\n(4, 'Pasta Primavera', 'Main Course', 18.99),\n(5, 'Chicken Wings', 'Appetizer', 14.99),\n(6, 'Tiramisu', 'Dessert', 9.99);\n\nINSERT INTO sales VALUES\n(1, 1, 1, '2024-05-01', 2, 49.98),\n(2, 1, 2, '2024-05-01', 1, 12.99),\n(3, 2, 4, '2024-05-02', 3, 56.97),\n(4, 2, 5, '2024-05-02', 2, 29.98),\n(5, 3, 1, '2024-05-03', 1, 24.99),\n(6, 3, 6, '2024-05-03', 2, 19.98),\n(7, 4, 2, '2024-05-04', 2, 25.98),\n(8, 4, 3, '2024-05-04', 1, 8.99),\n(9, 1, 4, '2024-05-05', 2, 37.98),\n(10, 2, 1, '2024-05-05', 1, 24.99);",
      "solution_sql": "\nSELECT \n    r.city,\n    m.category,\n    COUNT(s.sale_id) as total_orders,\n    SUM(s.quantity) as total_items_sold,\n    ROUND(SUM(s.total_amount), 2) as total_revenue,\n    ROUND(AVG(s.total_amount), 2) as avg_order_value\nFROM restaurants r\nJOIN sales s ON r.restaurant_id = s.restaurant_id\nJOIN menu_items m ON s.item_id = m.item_id\nGROUP BY r.city, m.category\nORDER BY total_revenue DESC;",
      "explanation": "Advanced fraud detection using window functions for rolling averages and transaction anomaly identification based on spending velocity patterns.",
      "created_at": "2025-08-11T13:51:12.115Z",
      "expected_output": [
        {
          "city": "New York",
          "category": "Main Course",
          "total_orders": "2",
          "total_revenue": "87.96",
          "avg_order_value": "43.98",
          "total_items_sold": "4"
        },
        {
          "city": "Los Angeles",
          "category": "Main Course",
          "total_orders": "2",
          "total_revenue": "81.96",
          "avg_order_value": "40.98",
          "total_items_sold": "4"
        },
        {
          "city": "Los Angeles",
          "category": "Appetizer",
          "total_orders": "1",
          "total_revenue": "29.98",
          "avg_order_value": "29.98",
          "total_items_sold": "2"
        },
        {
          "city": "Miami",
          "category": "Appetizer",
          "total_orders": "1",
          "total_revenue": "25.98",
          "avg_order_value": "25.98",
          "total_items_sold": "2"
        },
        {
          "city": "Chicago",
          "category": "Main Course",
          "total_orders": "1",
          "total_revenue": "24.99",
          "avg_order_value": "24.99",
          "total_items_sold": "1"
        },
        {
          "city": "Chicago",
          "category": "Dessert",
          "total_orders": "1",
          "total_revenue": "19.98",
          "avg_order_value": "19.98",
          "total_items_sold": "2"
        },
        {
          "city": "New York",
          "category": "Appetizer",
          "total_orders": "1",
          "total_revenue": "12.99",
          "avg_order_value": "12.99",
          "total_items_sold": "1"
        },
        {
          "city": "Miami",
          "category": "Dessert",
          "total_orders": "1",
          "total_revenue": "8.99",
          "avg_order_value": "8.99",
          "total_items_sold": "1"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Restaurant Chain Sales Analysis",
      "problem_slug": "citibank-credit-card-fraud-detection"
    },
    {
      "id": "96c772ac-0d4b-473b-a137-0436d563bdfb",
      "problem_id": "c0a60c80-ad7b-45ff-b137-8d138d785a29",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE citigroup_investment_banking (\n        transaction_id INT PRIMARY KEY,\n        service_line VARCHAR(50),\n        transaction_value DECIMAL(15,2),\n        advisory_fees DECIMAL(12,2),\n        deal_type VARCHAR(40),\n        client_tier VARCHAR(20),\n        geographic_region VARCHAR(30),\n        completion_status VARCHAR(20),\n        transaction_date DATE\n    );\n      INSERT INTO citigroup_investment_banking  VALUES\n      (1, 'M&A Advisory', 2500000000.00, 62500000.50, 'Cross-border M&A', 'Fortune 500', 'North America', 'Completed', '2024-01-15'),\n      (2, 'Debt Capital Markets', 1200000000.00, 36000000.75, 'Investment Grade Bond', 'Large Cap', 'Europe', 'Completed', '2024-01-15'),\n      (3, 'Equity Capital Markets', 800000000.00, 24000000.25, 'IPO Underwriting', 'Mid Cap', 'Asia Pacific', 'Completed', '2024-01-16'),\n      (4, 'Leveraged Finance', 1500000000.00, 52500000.80, 'LBO Financing', 'Private Equity', 'North America', 'Completed', '2024-01-16'),\n      (5, 'Restructuring', 600000000.00, 18000000.60, 'Debt Restructuring', 'Distressed', 'Europe', 'Completed', '2024-01-17'),\n      (7, 'M&A Advisory_v1', 2500000000.10, 62500000.60, 'Cross-border M&A_v1', 'Fortune 500_v1', 'North America_v1', 'Completed_v1', '2024-01-16'),\n      (9, 'Debt Capital Markets_v2', 1200000000.20, 36000000.95, 'Investment Grade Bond_v2', 'Large Cap_v2', 'Europe_v2', 'Completed_v2', '2024-01-17'),\n      (11, 'Equity Capital Markets_v3', 800000000.30, 24000000.55, 'IPO Underwriting_v3', 'Mid Cap_v3', 'Asia Pacific_v3', 'Completed_v3', '2024-01-19'),\n      (13, 'Leveraged Finance_v4', 1500000000.40, 52500001.20, 'LBO Financing_v4', 'Private Equity_v4', 'North America_v4', 'Completed_v4', '2024-01-20'),\n      (15, 'Restructuring_v5', 600000000.50, 18000001.10, 'Debt Restructuring_v5', 'Distressed_v5', 'Europe_v5', 'Completed_v5', '2024-01-22'),\n      (12, 'M&A Advisory_v6', 2500000000.60, 62500001.10, 'Cross-border M&A_v6', 'Fortune 500_v6', 'North America_v6', 'Completed_v6', '2024-01-21'),\n      (14, 'Debt Capital Markets_v7', 1200000000.70, 36000001.45, 'Investment Grade Bond_v7', 'Large Cap_v7', 'Europe_v7', 'Completed_v7', '2024-01-22'),\n      (16, 'Equity Capital Markets_v8', 800000000.80, 24000001.05, 'IPO Underwriting_v8', 'Mid Cap_v8', 'Asia Pacific_v8', 'Completed_v8', '2024-01-24'),\n      (18, 'Leveraged Finance_v9', 1500000000.90, 52500001.70, 'LBO Financing_v9', 'Private Equity_v9', 'North America_v9', 'Completed_v9', '2024-01-25'),\n      (20, 'Restructuring_v10', 600000001.00, 18000001.60, 'Debt Restructuring_v10', 'Distressed_v10', 'Europe_v10', 'Completed_v10', '2024-01-27'),\n      (17, 'M&A Advisory_v11', 2500000001.10, 62500001.60, 'Cross-border M&A_v11', 'Fortune 500_v11', 'North America_v11', 'Completed_v11', '2024-01-26'),\n      (19, 'Debt Capital Markets_v12', 1200000001.20, 36000001.95, 'Investment Grade Bond_v12', 'Large Cap_v12', 'Europe_v12', 'Completed_v12', '2024-01-27'),\n      (21, 'Equity Capital Markets_v13', 800000001.30, 24000001.55, 'IPO Underwriting_v13', 'Mid Cap_v13', 'Asia Pacific_v13', 'Completed_v13', '2024-01-29'),\n      (23, 'Leveraged Finance_v14', 1500000001.40, 52500002.20, 'LBO Financing_v14', 'Private Equity_v14', 'North America_v14', 'Completed_v14', '2024-01-30'),\n      (25, 'Restructuring_v15', 600000001.50, 18000002.10, 'Debt Restructuring_v15', 'Distressed_v15', 'Europe_v15', 'Completed_v15', '2024-02-01'),\n      (22, 'M&A Advisory_v16', 2500000001.60, 62500002.10, 'Cross-border M&A_v16', 'Fortune 500_v16', 'North America_v16', 'Completed_v16', '2024-01-31'),\n      (24, 'Debt Capital Markets_v17', 1200000001.70, 36000002.45, 'Investment Grade Bond_v17', 'Large Cap_v17', 'Europe_v17', 'Completed_v17', '2024-02-01'),\n      (26, 'Equity Capital Markets_v18', 800000001.80, 24000002.05, 'IPO Underwriting_v18', 'Mid Cap_v18', 'Asia Pacific_v18', 'Completed_v18', '2024-02-03'),\n      (28, 'Leveraged Finance_v19', 1500000001.90, 52500002.70, 'LBO Financing_v19', 'Private Equity_v19', 'North America_v19', 'Completed_v19', '2024-02-04'),\n      (30, 'Restructuring_v20', 600000002.00, 18000002.60, 'Debt Restructuring_v20', 'Distressed_v20', 'Europe_v20', 'Completed_v20', '2024-02-06');",
      "solution_sql": "SELECT \n        service_line,\n        ROUND(AVG(transaction_value) / 1000000, 2) as avg_transaction_millions,\n        ROUND(AVG(advisory_fees) / 1000000, 2) as avg_fees_millions,\n        ROUND((AVG(advisory_fees) / AVG(transaction_value)) * 100, 3) as avg_fee_rate_pct,\n        COUNT(*) as transaction_count\n    FROM citigroup_investment_banking \n    WHERE completion_status = 'Completed'\n    GROUP BY service_line \n    HAVING AVG(transaction_value) > 100000000 AND (AVG(advisory_fees) / AVG(transaction_value)) > 0.02\n    ORDER BY avg_fee_rate_pct DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.756Z",
      "expected_output": [
        {
          "service_line": "Leveraged Finance",
          "avg_fee_rate_pct": "3.500",
          "avg_fees_millions": "52.50",
          "transaction_count": "1",
          "avg_transaction_millions": "1500.00"
        },
        {
          "service_line": "Debt Capital Markets",
          "avg_fee_rate_pct": "3.000",
          "avg_fees_millions": "36.00",
          "transaction_count": "1",
          "avg_transaction_millions": "1200.00"
        },
        {
          "service_line": "Equity Capital Markets",
          "avg_fee_rate_pct": "3.000",
          "avg_fees_millions": "24.00",
          "transaction_count": "1",
          "avg_transaction_millions": "800.00"
        },
        {
          "service_line": "Restructuring",
          "avg_fee_rate_pct": "3.000",
          "avg_fees_millions": "18.00",
          "transaction_count": "1",
          "avg_transaction_millions": "600.00"
        },
        {
          "service_line": "M&A Advisory",
          "avg_fee_rate_pct": "2.500",
          "avg_fees_millions": "62.50",
          "transaction_count": "1",
          "avg_transaction_millions": "2500.00"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Citigroup Global Investment Banking Analytics",
      "problem_slug": "citigroup-portfolio-analytics"
    },
    {
      "id": "688596b9-1fed-481b-a3b6-a9cdc1a48f91",
      "problem_id": "c0a60c80-ad7b-45ff-b137-8d138d785a29",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE citigroup_investment_banking (\n        transaction_id INT PRIMARY KEY,\n        service_line VARCHAR(50),\n        transaction_value DECIMAL(15,2),\n        advisory_fees DECIMAL(12,2),\n        deal_type VARCHAR(40),\n        client_tier VARCHAR(20),\n        geographic_region VARCHAR(30),\n        completion_status VARCHAR(20),\n        transaction_date DATE\n    );\n      INSERT INTO citigroup_investment_banking  VALUES\n      (1, 'M&A Advisory', 2500000000.00, 62500000.50, 'Cross-border M&A', 'Fortune 500', 'North America', 'Completed', '2024-01-15'),\n      (2, 'Debt Capital Markets', 1200000000.00, 36000000.75, 'Investment Grade Bond', 'Large Cap', 'Europe', 'Completed', '2024-01-15'),\n      (3, 'Equity Capital Markets', 800000000.00, 24000000.25, 'IPO Underwriting', 'Mid Cap', 'Asia Pacific', 'Completed', '2024-01-16'),\n      (4, 'Leveraged Finance', 1500000000.00, 52500000.80, 'LBO Financing', 'Private Equity', 'North America', 'Completed', '2024-01-16'),\n      (5, 'Restructuring', 600000000.00, 18000000.60, 'Debt Restructuring', 'Distressed', 'Europe', 'Completed', '2024-01-17'),\n      (7, 'M&A Advisory_v1', 2500000000.10, 62500000.60, 'Cross-border M&A_v1', 'Fortune 500_v1', 'North America_v1', 'Completed_v1', '2024-01-16'),\n      (9, 'Debt Capital Markets_v2', 1200000000.20, 36000000.95, 'Investment Grade Bond_v2', 'Large Cap_v2', 'Europe_v2', 'Completed_v2', '2024-01-17'),\n      (11, 'Equity Capital Markets_v3', 800000000.30, 24000000.55, 'IPO Underwriting_v3', 'Mid Cap_v3', 'Asia Pacific_v3', 'Completed_v3', '2024-01-19'),\n      (13, 'Leveraged Finance_v4', 1500000000.40, 52500001.20, 'LBO Financing_v4', 'Private Equity_v4', 'North America_v4', 'Completed_v4', '2024-01-20'),\n      (15, 'Restructuring_v5', 600000000.50, 18000001.10, 'Debt Restructuring_v5', 'Distressed_v5', 'Europe_v5', 'Completed_v5', '2024-01-22'),\n      (12, 'M&A Advisory_v6', 2500000000.60, 62500001.10, 'Cross-border M&A_v6', 'Fortune 500_v6', 'North America_v6', 'Completed_v6', '2024-01-21'),\n      (14, 'Debt Capital Markets_v7', 1200000000.70, 36000001.45, 'Investment Grade Bond_v7', 'Large Cap_v7', 'Europe_v7', 'Completed_v7', '2024-01-22'),\n      (16, 'Equity Capital Markets_v8', 800000000.80, 24000001.05, 'IPO Underwriting_v8', 'Mid Cap_v8', 'Asia Pacific_v8', 'Completed_v8', '2024-01-24'),\n      (18, 'Leveraged Finance_v9', 1500000000.90, 52500001.70, 'LBO Financing_v9', 'Private Equity_v9', 'North America_v9', 'Completed_v9', '2024-01-25'),\n      (20, 'Restructuring_v10', 600000001.00, 18000001.60, 'Debt Restructuring_v10', 'Distressed_v10', 'Europe_v10', 'Completed_v10', '2024-01-27'),\n      (17, 'M&A Advisory_v11', 2500000001.10, 62500001.60, 'Cross-border M&A_v11', 'Fortune 500_v11', 'North America_v11', 'Completed_v11', '2024-01-26'),\n      (19, 'Debt Capital Markets_v12', 1200000001.20, 36000001.95, 'Investment Grade Bond_v12', 'Large Cap_v12', 'Europe_v12', 'Completed_v12', '2024-01-27'),\n      (21, 'Equity Capital Markets_v13', 800000001.30, 24000001.55, 'IPO Underwriting_v13', 'Mid Cap_v13', 'Asia Pacific_v13', 'Completed_v13', '2024-01-29'),\n      (23, 'Leveraged Finance_v14', 1500000001.40, 52500002.20, 'LBO Financing_v14', 'Private Equity_v14', 'North America_v14', 'Completed_v14', '2024-01-30'),\n      (25, 'Restructuring_v15', 600000001.50, 18000002.10, 'Debt Restructuring_v15', 'Distressed_v15', 'Europe_v15', 'Completed_v15', '2024-02-01'),\n      (22, 'M&A Advisory_v16', 2500000001.60, 62500002.10, 'Cross-border M&A_v16', 'Fortune 500_v16', 'North America_v16', 'Completed_v16', '2024-01-31'),\n      (24, 'Debt Capital Markets_v17', 1200000001.70, 36000002.45, 'Investment Grade Bond_v17', 'Large Cap_v17', 'Europe_v17', 'Completed_v17', '2024-02-01'),\n      (26, 'Equity Capital Markets_v18', 800000001.80, 24000002.05, 'IPO Underwriting_v18', 'Mid Cap_v18', 'Asia Pacific_v18', 'Completed_v18', '2024-02-03'),\n      (28, 'Leveraged Finance_v19', 1500000001.90, 52500002.70, 'LBO Financing_v19', 'Private Equity_v19', 'North America_v19', 'Completed_v19', '2024-02-04'),\n      (30, 'Restructuring_v20', 600000002.00, 18000002.60, 'Debt Restructuring_v20', 'Distressed_v20', 'Europe_v20', 'Completed_v20', '2024-02-06');",
      "solution_sql": "SELECT \n        service_line,\n        ROUND(AVG(transaction_value) / 1000000, 2) as avg_transaction_millions,\n        ROUND(AVG(advisory_fees) / 1000000, 2) as avg_fees_millions,\n        ROUND((AVG(advisory_fees) / AVG(transaction_value)) * 100, 3) as avg_fee_rate_pct,\n        COUNT(*) as transaction_count\n    FROM citigroup_investment_banking \n    WHERE completion_status = 'Completed'\n    GROUP BY service_line \n    HAVING AVG(transaction_value) > 100000000 AND (AVG(advisory_fees) / AVG(transaction_value)) > 0.02\n    ORDER BY avg_fee_rate_pct DESC;",
      "explanation": "Citigroup investment banking analytics using fee margin calculations and transaction value analysis for capital markets optimization.",
      "created_at": "2025-08-11T17:08:07.873Z",
      "expected_output": [
        {
          "service_line": "Leveraged Finance",
          "avg_fee_rate_pct": "3.500",
          "avg_fees_millions": "52.50",
          "transaction_count": "1",
          "avg_transaction_millions": "1500.00"
        },
        {
          "service_line": "Debt Capital Markets",
          "avg_fee_rate_pct": "3.000",
          "avg_fees_millions": "36.00",
          "transaction_count": "1",
          "avg_transaction_millions": "1200.00"
        },
        {
          "service_line": "Equity Capital Markets",
          "avg_fee_rate_pct": "3.000",
          "avg_fees_millions": "24.00",
          "transaction_count": "1",
          "avg_transaction_millions": "800.00"
        },
        {
          "service_line": "Restructuring",
          "avg_fee_rate_pct": "3.000",
          "avg_fees_millions": "18.00",
          "transaction_count": "1",
          "avg_transaction_millions": "600.00"
        },
        {
          "service_line": "M&A Advisory",
          "avg_fee_rate_pct": "2.500",
          "avg_fees_millions": "62.50",
          "transaction_count": "1",
          "avg_transaction_millions": "2500.00"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Citigroup Global Investment Banking Analytics",
      "problem_slug": "citigroup-portfolio-analytics"
    },
    {
      "id": "1300d170-e290-4a26-b083-0d416fee7fc8",
      "problem_id": "c28cd914-6ca0-4082-9358-090d21a4d66c",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE costco_memberships (\n        member_id INT PRIMARY KEY,\n        membership_type VARCHAR(30),\n        annual_spending DECIMAL(10,2),\n        membership_fee DECIMAL(6,2),\n        renewal_status VARCHAR(20),\n        member_since_date DATE\n    );\n      INSERT INTO costco_memberships  VALUES\n      (1, 'Executive', 4500.75, 120.00, 'Active', '2022-01-15'),\n      (2, 'Gold Star', 1850.25, 60.00, 'Active', '2023-03-20'),\n      (3, 'Business', 6200.50, 60.00, 'Active', '2021-06-10'),\n      (4, 'Executive', 5100.80, 120.00, 'Renewed', '2022-08-05'),\n      (5, 'Gold Star', 2200.40, 60.00, 'Active', '2023-01-12'),\n      (7, 'Executive_v1', 4500.85, 120.10, 'Active_v1', '2022-01-16'),\n      (9, 'Gold Star_v2', 1850.45, 60.20, 'Active_v2', '2023-03-22'),\n      (11, 'Business_v3', 6200.80, 60.30, 'Active_v3', '2021-06-13'),\n      (13, 'Executive_v4', 5101.20, 120.40, 'Renewed_v4', '2022-08-09'),\n      (15, 'Gold Star_v5', 2200.90, 60.50, 'Active_v5', '2023-01-17'),\n      (12, 'Executive_v6', 4501.35, 120.60, 'Active_v6', '2022-01-21'),\n      (14, 'Gold Star_v7', 1850.95, 60.70, 'Active_v7', '2023-03-27'),\n      (16, 'Business_v8', 6201.30, 60.80, 'Active_v8', '2021-06-18'),\n      (18, 'Executive_v9', 5101.70, 120.90, 'Renewed_v9', '2022-08-14'),\n      (20, 'Gold Star_v10', 2201.40, 61.00, 'Active_v10', '2023-01-22'),\n      (17, 'Executive_v11', 4501.85, 121.10, 'Active_v11', '2022-01-26'),\n      (19, 'Gold Star_v12', 1851.45, 61.20, 'Active_v12', '2023-04-01'),\n      (21, 'Business_v13', 6201.80, 61.30, 'Active_v13', '2021-06-23'),\n      (23, 'Executive_v14', 5102.20, 121.40, 'Renewed_v14', '2022-08-19'),\n      (25, 'Gold Star_v15', 2201.90, 61.50, 'Active_v15', '2023-01-27'),\n      (22, 'Executive_v16', 4502.35, 121.60, 'Active_v16', '2022-01-31'),\n      (24, 'Gold Star_v17', 1851.95, 61.70, 'Active_v17', '2023-04-06'),\n      (26, 'Business_v18', 6202.30, 61.80, 'Active_v18', '2021-06-28'),\n      (28, 'Executive_v19', 5102.70, 121.90, 'Renewed_v19', '2022-08-24'),\n      (30, 'Gold Star_v20', 2202.40, 62.00, 'Active_v20', '2023-02-01');",
      "solution_sql": "SELECT membership_type, ROUND(AVG(annual_spending), 2) as avg_annual_spending\nFROM costco_memberships \nGROUP BY membership_type \nHAVING AVG(annual_spending) > 2500 \nORDER BY avg_annual_spending DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.760Z",
      "expected_output": [
        {
          "membership_type": "Business_v18",
          "avg_annual_spending": "6202.30"
        },
        {
          "membership_type": "Business_v13",
          "avg_annual_spending": "6201.80"
        },
        {
          "membership_type": "Business_v8",
          "avg_annual_spending": "6201.30"
        },
        {
          "membership_type": "Business_v3",
          "avg_annual_spending": "6200.80"
        },
        {
          "membership_type": "Business",
          "avg_annual_spending": "6200.50"
        },
        {
          "membership_type": "Executive_v19",
          "avg_annual_spending": "5102.70"
        },
        {
          "membership_type": "Executive_v14",
          "avg_annual_spending": "5102.20"
        },
        {
          "membership_type": "Executive_v9",
          "avg_annual_spending": "5101.70"
        },
        {
          "membership_type": "Executive_v4",
          "avg_annual_spending": "5101.20"
        },
        {
          "membership_type": "Executive",
          "avg_annual_spending": "4800.78"
        },
        {
          "membership_type": "Executive_v16",
          "avg_annual_spending": "4502.35"
        },
        {
          "membership_type": "Executive_v11",
          "avg_annual_spending": "4501.85"
        },
        {
          "membership_type": "Executive_v6",
          "avg_annual_spending": "4501.35"
        },
        {
          "membership_type": "Executive_v1",
          "avg_annual_spending": "4500.85"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Costco Wholesale Membership Analytics",
      "problem_slug": "costco-revenue-analysis"
    },
    {
      "id": "e10d33cb-a8dc-4069-9846-26e5f15929d7",
      "problem_id": "c28cd914-6ca0-4082-9358-090d21a4d66c",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE costco_memberships (\n        member_id INT PRIMARY KEY,\n        membership_type VARCHAR(30),\n        annual_spending DECIMAL(10,2),\n        membership_fee DECIMAL(6,2),\n        renewal_status VARCHAR(20),\n        member_since_date DATE\n    );\n      INSERT INTO costco_memberships  VALUES\n      (1, 'Executive', 4500.75, 120.00, 'Active', '2022-01-15'),\n      (2, 'Gold Star', 1850.25, 60.00, 'Active', '2023-03-20'),\n      (3, 'Business', 6200.50, 60.00, 'Active', '2021-06-10'),\n      (4, 'Executive', 5100.80, 120.00, 'Renewed', '2022-08-05'),\n      (5, 'Gold Star', 2200.40, 60.00, 'Active', '2023-01-12'),\n      (7, 'Executive_v1', 4500.85, 120.10, 'Active_v1', '2022-01-16'),\n      (9, 'Gold Star_v2', 1850.45, 60.20, 'Active_v2', '2023-03-22'),\n      (11, 'Business_v3', 6200.80, 60.30, 'Active_v3', '2021-06-13'),\n      (13, 'Executive_v4', 5101.20, 120.40, 'Renewed_v4', '2022-08-09'),\n      (15, 'Gold Star_v5', 2200.90, 60.50, 'Active_v5', '2023-01-17'),\n      (12, 'Executive_v6', 4501.35, 120.60, 'Active_v6', '2022-01-21'),\n      (14, 'Gold Star_v7', 1850.95, 60.70, 'Active_v7', '2023-03-27'),\n      (16, 'Business_v8', 6201.30, 60.80, 'Active_v8', '2021-06-18'),\n      (18, 'Executive_v9', 5101.70, 120.90, 'Renewed_v9', '2022-08-14'),\n      (20, 'Gold Star_v10', 2201.40, 61.00, 'Active_v10', '2023-01-22'),\n      (17, 'Executive_v11', 4501.85, 121.10, 'Active_v11', '2022-01-26'),\n      (19, 'Gold Star_v12', 1851.45, 61.20, 'Active_v12', '2023-04-01'),\n      (21, 'Business_v13', 6201.80, 61.30, 'Active_v13', '2021-06-23'),\n      (23, 'Executive_v14', 5102.20, 121.40, 'Renewed_v14', '2022-08-19'),\n      (25, 'Gold Star_v15', 2201.90, 61.50, 'Active_v15', '2023-01-27'),\n      (22, 'Executive_v16', 4502.35, 121.60, 'Active_v16', '2022-01-31'),\n      (24, 'Gold Star_v17', 1851.95, 61.70, 'Active_v17', '2023-04-06'),\n      (26, 'Business_v18', 6202.30, 61.80, 'Active_v18', '2021-06-28'),\n      (28, 'Executive_v19', 5102.70, 121.90, 'Renewed_v19', '2022-08-24'),\n      (30, 'Gold Star_v20', 2202.40, 62.00, 'Active_v20', '2023-02-01');",
      "solution_sql": "SELECT membership_type, ROUND(AVG(annual_spending), 2) as avg_annual_spending\nFROM costco_memberships \nGROUP BY membership_type \nHAVING AVG(annual_spending) > 2500 \nORDER BY avg_annual_spending DESC;",
      "explanation": "Costco membership analytics using average spending calculations for retention strategy optimization.",
      "created_at": "2025-08-11T17:08:07.749Z",
      "expected_output": [
        {
          "membership_type": "Business_v18",
          "avg_annual_spending": "6202.30"
        },
        {
          "membership_type": "Business_v13",
          "avg_annual_spending": "6201.80"
        },
        {
          "membership_type": "Business_v8",
          "avg_annual_spending": "6201.30"
        },
        {
          "membership_type": "Business_v3",
          "avg_annual_spending": "6200.80"
        },
        {
          "membership_type": "Business",
          "avg_annual_spending": "6200.50"
        },
        {
          "membership_type": "Executive_v19",
          "avg_annual_spending": "5102.70"
        },
        {
          "membership_type": "Executive_v14",
          "avg_annual_spending": "5102.20"
        },
        {
          "membership_type": "Executive_v9",
          "avg_annual_spending": "5101.70"
        },
        {
          "membership_type": "Executive_v4",
          "avg_annual_spending": "5101.20"
        },
        {
          "membership_type": "Executive",
          "avg_annual_spending": "4800.78"
        },
        {
          "membership_type": "Executive_v16",
          "avg_annual_spending": "4502.35"
        },
        {
          "membership_type": "Executive_v11",
          "avg_annual_spending": "4501.85"
        },
        {
          "membership_type": "Executive_v6",
          "avg_annual_spending": "4501.35"
        },
        {
          "membership_type": "Executive_v1",
          "avg_annual_spending": "4500.85"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Costco Wholesale Membership Analytics",
      "problem_slug": "costco-revenue-analysis"
    },
    {
      "id": "8f75fc58-2cfb-4759-b000-8ad32fbb56f1",
      "problem_id": "1f1ecb19-0ca8-4831-918f-0385bda358bf",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE creditsuisse_ma_deals (\n        deal_id INT PRIMARY KEY,\n        industry_sector VARCHAR(50),\n        deal_value DECIMAL(15,2),\n        advisory_fees DECIMAL(12,2),\n        transaction_multiple DECIMAL(6,2),\n        deal_status VARCHAR(20),\n        deal_duration_months INT,\n        target_ebitda DECIMAL(12,2),\n        announcement_date DATE\n    );\n      INSERT INTO creditsuisse_ma_deals  VALUES\n      (1, 'Technology', 15000000000.50, 225000000.50, 18.50, 'Completed', 8, 750000000.25, '2024-01-15'),\n      (2, 'Healthcare', 8500000000.75, 127500000.75, 22.25, 'Completed', 12, 380000000.50, '2024-01-15'),\n      (3, 'Financial Services', 12000000000.25, 180000000.25, 15.75, 'Pending', 6, 890000000.80, '2024-01-16'),\n      (4, 'Energy & Utilities', 6500000000.80, 97500000.80, 12.50, 'Completed', 10, 520000000.60, '2024-01-16'),\n      (5, 'Consumer Goods', 4200000000.60, 63000000.60, 16.25, 'Completed', 9, 285000000.40, '2024-01-17'),\n      (7, 'Technology_v1', 15000000000.60, 225000000.60, 18.60, 'Completed_v1', 18, 750000000.35, '2024-01-16'),\n      (9, 'Healthcare_v2', 8500000000.95, 127500000.95, 22.45, 'Completed_v2', 32, 380000000.70, '2024-01-17'),\n      (11, 'Financial Services_v3', 12000000000.55, 180000000.55, 16.05, 'Pending_v3', 36, 890000001.10, '2024-01-19'),\n      (13, 'Energy & Utilities_v4', 6500000001.20, 97500001.20, 12.90, 'Completed_v4', 50, 520000001.00, '2024-01-20'),\n      (15, 'Consumer Goods_v5', 4200000001.10, 63000001.10, 16.75, 'Completed_v5', 59, 285000000.90, '2024-01-22'),\n      (12, 'Technology_v6', 15000000001.10, 225000001.10, 19.10, 'Completed_v6', 68, 750000000.85, '2024-01-21'),\n      (14, 'Healthcare_v7', 8500000001.45, 127500001.45, 22.95, 'Completed_v7', 82, 380000001.20, '2024-01-22'),\n      (16, 'Financial Services_v8', 12000000001.05, 180000001.05, 16.55, 'Pending_v8', 86, 890000001.60, '2024-01-24'),\n      (18, 'Energy & Utilities_v9', 6500000001.70, 97500001.70, 13.40, 'Completed_v9', 100, 520000001.50, '2024-01-25'),\n      (20, 'Consumer Goods_v10', 4200000001.60, 63000001.60, 17.25, 'Completed_v10', 109, 285000001.40, '2024-01-27'),\n      (17, 'Technology_v11', 15000000001.60, 225000001.60, 19.60, 'Completed_v11', 118, 750000001.35, '2024-01-26'),\n      (19, 'Healthcare_v12', 8500000001.95, 127500001.95, 23.45, 'Completed_v12', 132, 380000001.70, '2024-01-27'),\n      (21, 'Financial Services_v13', 12000000001.55, 180000001.55, 17.05, 'Pending_v13', 136, 890000002.10, '2024-01-29'),\n      (23, 'Energy & Utilities_v14', 6500000002.20, 97500002.20, 13.90, 'Completed_v14', 150, 520000002.00, '2024-01-30'),\n      (25, 'Consumer Goods_v15', 4200000002.10, 63000002.10, 17.75, 'Completed_v15', 159, 285000001.90, '2024-02-01'),\n      (22, 'Technology_v16', 15000000002.10, 225000002.10, 20.10, 'Completed_v16', 168, 750000001.85, '2024-01-31'),\n      (24, 'Healthcare_v17', 8500000002.45, 127500002.45, 23.95, 'Completed_v17', 182, 380000002.20, '2024-02-01'),\n      (26, 'Financial Services_v18', 12000000002.05, 180000002.05, 17.55, 'Pending_v18', 186, 890000002.60, '2024-02-03'),\n      (28, 'Energy & Utilities_v19', 6500000002.70, 97500002.70, 14.40, 'Completed_v19', 200, 520000002.50, '2024-02-04'),\n      (30, 'Consumer Goods_v20', 4200000002.60, 63000002.60, 18.25, 'Completed_v20', 209, 285000002.40, '2024-02-06');",
      "solution_sql": "WITH ma_metrics AS (\n        SELECT \n            industry_sector,\n            COUNT(*) as total_deals,\n            AVG(deal_value) as avg_deal_value,\n            SUM(deal_value) as total_deal_value,\n            AVG((advisory_fees / deal_value) * 100) as avg_fee_rate_pct,\n            SUM(advisory_fees) as total_fees,\n            AVG(transaction_multiple) as avg_multiple,\n            AVG(deal_duration_months) as avg_duration_months,\n            -- Completion rate\n            (COUNT(CASE WHEN deal_status = 'Completed' THEN 1 END)::DECIMAL / COUNT(*)) * 100 as completion_rate_pct\n        FROM creditsuisse_ma_deals\n        GROUP BY industry_sector\n    )\n    SELECT \n        industry_sector,\n        total_deals,\n        ROUND(avg_deal_value / 1000000000, 2) as avg_deal_billions,\n        ROUND(total_deal_value / 1000000000, 2) as total_deal_billions,\n        ROUND(CAST(avg_fee_rate_pct AS NUMERIC), 3) as avg_fee_rate_pct,\n        ROUND(total_fees / 1000000, 2) as total_fees_millions,\n        ROUND(CAST(avg_multiple AS NUMERIC), 2) as avg_ev_ebitda_multiple,\n        ROUND(avg_duration_months, 1) as avg_duration_months,\n        ROUND(CAST(completion_rate_pct AS NUMERIC), 1) as completion_rate_pct\n    FROM ma_metrics\n    WHERE avg_deal_value > 1000000000 \n        AND avg_fee_rate_pct > 1.5\n    ORDER BY avg_deal_billions DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.664Z",
      "expected_output": [
        {
          "total_deals": "1",
          "industry_sector": "Technology_v6",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "15.00",
          "avg_duration_months": "68.0",
          "completion_rate_pct": "0.0",
          "total_deal_billions": "15.00",
          "total_fees_millions": "225.00",
          "avg_ev_ebitda_multiple": "19.10"
        },
        {
          "total_deals": "1",
          "industry_sector": "Technology_v16",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "15.00",
          "avg_duration_months": "168.0",
          "completion_rate_pct": "0.0",
          "total_deal_billions": "15.00",
          "total_fees_millions": "225.00",
          "avg_ev_ebitda_multiple": "20.10"
        },
        {
          "total_deals": "1",
          "industry_sector": "Technology",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "15.00",
          "avg_duration_months": "8.0",
          "completion_rate_pct": "100.0",
          "total_deal_billions": "15.00",
          "total_fees_millions": "225.00",
          "avg_ev_ebitda_multiple": "18.50"
        },
        {
          "total_deals": "1",
          "industry_sector": "Technology_v11",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "15.00",
          "avg_duration_months": "118.0",
          "completion_rate_pct": "0.0",
          "total_deal_billions": "15.00",
          "total_fees_millions": "225.00",
          "avg_ev_ebitda_multiple": "19.60"
        },
        {
          "total_deals": "1",
          "industry_sector": "Technology_v1",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "15.00",
          "avg_duration_months": "18.0",
          "completion_rate_pct": "0.0",
          "total_deal_billions": "15.00",
          "total_fees_millions": "225.00",
          "avg_ev_ebitda_multiple": "18.60"
        },
        {
          "total_deals": "1",
          "industry_sector": "Financial Services_v18",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "12.00",
          "avg_duration_months": "186.0",
          "completion_rate_pct": "0.0",
          "total_deal_billions": "12.00",
          "total_fees_millions": "180.00",
          "avg_ev_ebitda_multiple": "17.55"
        },
        {
          "total_deals": "1",
          "industry_sector": "Financial Services_v13",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "12.00",
          "avg_duration_months": "136.0",
          "completion_rate_pct": "0.0",
          "total_deal_billions": "12.00",
          "total_fees_millions": "180.00",
          "avg_ev_ebitda_multiple": "17.05"
        },
        {
          "total_deals": "1",
          "industry_sector": "Financial Services_v3",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "12.00",
          "avg_duration_months": "36.0",
          "completion_rate_pct": "0.0",
          "total_deal_billions": "12.00",
          "total_fees_millions": "180.00",
          "avg_ev_ebitda_multiple": "16.05"
        },
        {
          "total_deals": "1",
          "industry_sector": "Financial Services",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "12.00",
          "avg_duration_months": "6.0",
          "completion_rate_pct": "0.0",
          "total_deal_billions": "12.00",
          "total_fees_millions": "180.00",
          "avg_ev_ebitda_multiple": "15.75"
        },
        {
          "total_deals": "1",
          "industry_sector": "Financial Services_v8",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "12.00",
          "avg_duration_months": "86.0",
          "completion_rate_pct": "0.0",
          "total_deal_billions": "12.00",
          "total_fees_millions": "180.00",
          "avg_ev_ebitda_multiple": "16.55"
        },
        {
          "total_deals": "1",
          "industry_sector": "Healthcare",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "8.50",
          "avg_duration_months": "12.0",
          "completion_rate_pct": "100.0",
          "total_deal_billions": "8.50",
          "total_fees_millions": "127.50",
          "avg_ev_ebitda_multiple": "22.25"
        },
        {
          "total_deals": "1",
          "industry_sector": "Healthcare_v12",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "8.50",
          "avg_duration_months": "132.0",
          "completion_rate_pct": "0.0",
          "total_deal_billions": "8.50",
          "total_fees_millions": "127.50",
          "avg_ev_ebitda_multiple": "23.45"
        },
        {
          "total_deals": "1",
          "industry_sector": "Healthcare_v7",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "8.50",
          "avg_duration_months": "82.0",
          "completion_rate_pct": "0.0",
          "total_deal_billions": "8.50",
          "total_fees_millions": "127.50",
          "avg_ev_ebitda_multiple": "22.95"
        },
        {
          "total_deals": "1",
          "industry_sector": "Healthcare_v2",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "8.50",
          "avg_duration_months": "32.0",
          "completion_rate_pct": "0.0",
          "total_deal_billions": "8.50",
          "total_fees_millions": "127.50",
          "avg_ev_ebitda_multiple": "22.45"
        },
        {
          "total_deals": "1",
          "industry_sector": "Healthcare_v17",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "8.50",
          "avg_duration_months": "182.0",
          "completion_rate_pct": "0.0",
          "total_deal_billions": "8.50",
          "total_fees_millions": "127.50",
          "avg_ev_ebitda_multiple": "23.95"
        },
        {
          "total_deals": "1",
          "industry_sector": "Energy & Utilities_v19",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "6.50",
          "avg_duration_months": "200.0",
          "completion_rate_pct": "0.0",
          "total_deal_billions": "6.50",
          "total_fees_millions": "97.50",
          "avg_ev_ebitda_multiple": "14.40"
        },
        {
          "total_deals": "1",
          "industry_sector": "Energy & Utilities_v14",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "6.50",
          "avg_duration_months": "150.0",
          "completion_rate_pct": "0.0",
          "total_deal_billions": "6.50",
          "total_fees_millions": "97.50",
          "avg_ev_ebitda_multiple": "13.90"
        },
        {
          "total_deals": "1",
          "industry_sector": "Energy & Utilities_v4",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "6.50",
          "avg_duration_months": "50.0",
          "completion_rate_pct": "0.0",
          "total_deal_billions": "6.50",
          "total_fees_millions": "97.50",
          "avg_ev_ebitda_multiple": "12.90"
        },
        {
          "total_deals": "1",
          "industry_sector": "Energy & Utilities",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "6.50",
          "avg_duration_months": "10.0",
          "completion_rate_pct": "100.0",
          "total_deal_billions": "6.50",
          "total_fees_millions": "97.50",
          "avg_ev_ebitda_multiple": "12.50"
        },
        {
          "total_deals": "1",
          "industry_sector": "Energy & Utilities_v9",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "6.50",
          "avg_duration_months": "100.0",
          "completion_rate_pct": "0.0",
          "total_deal_billions": "6.50",
          "total_fees_millions": "97.50",
          "avg_ev_ebitda_multiple": "13.40"
        },
        {
          "total_deals": "1",
          "industry_sector": "Consumer Goods_v20",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "4.20",
          "avg_duration_months": "209.0",
          "completion_rate_pct": "0.0",
          "total_deal_billions": "4.20",
          "total_fees_millions": "63.00",
          "avg_ev_ebitda_multiple": "18.25"
        },
        {
          "total_deals": "1",
          "industry_sector": "Consumer Goods",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "4.20",
          "avg_duration_months": "9.0",
          "completion_rate_pct": "100.0",
          "total_deal_billions": "4.20",
          "total_fees_millions": "63.00",
          "avg_ev_ebitda_multiple": "16.25"
        },
        {
          "total_deals": "1",
          "industry_sector": "Consumer Goods_v15",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "4.20",
          "avg_duration_months": "159.0",
          "completion_rate_pct": "0.0",
          "total_deal_billions": "4.20",
          "total_fees_millions": "63.00",
          "avg_ev_ebitda_multiple": "17.75"
        },
        {
          "total_deals": "1",
          "industry_sector": "Consumer Goods_v10",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "4.20",
          "avg_duration_months": "109.0",
          "completion_rate_pct": "0.0",
          "total_deal_billions": "4.20",
          "total_fees_millions": "63.00",
          "avg_ev_ebitda_multiple": "17.25"
        },
        {
          "total_deals": "1",
          "industry_sector": "Consumer Goods_v5",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "4.20",
          "avg_duration_months": "59.0",
          "completion_rate_pct": "0.0",
          "total_deal_billions": "4.20",
          "total_fees_millions": "63.00",
          "avg_ev_ebitda_multiple": "16.75"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Credit Suisse Investment Banking M&A",
      "problem_slug": "ing-group-risk-management-system"
    },
    {
      "id": "53526b70-7766-4c59-b6e0-f1bea1c194cd",
      "problem_id": "1f1ecb19-0ca8-4831-918f-0385bda358bf",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE creditsuisse_ma_deals (\n        deal_id INT PRIMARY KEY,\n        industry_sector VARCHAR(50),\n        deal_value DECIMAL(15,2),\n        advisory_fees DECIMAL(12,2),\n        transaction_multiple DECIMAL(6,2),\n        deal_status VARCHAR(20),\n        deal_duration_months INT,\n        target_ebitda DECIMAL(12,2),\n        announcement_date DATE\n    );\n      INSERT INTO creditsuisse_ma_deals  VALUES\n      (1, 'Technology', 15000000000.50, 225000000.50, 18.50, 'Completed', 8, 750000000.25, '2024-01-15'),\n      (2, 'Healthcare', 8500000000.75, 127500000.75, 22.25, 'Completed', 12, 380000000.50, '2024-01-15'),\n      (3, 'Financial Services', 12000000000.25, 180000000.25, 15.75, 'Pending', 6, 890000000.80, '2024-01-16'),\n      (4, 'Energy & Utilities', 6500000000.80, 97500000.80, 12.50, 'Completed', 10, 520000000.60, '2024-01-16'),\n      (5, 'Consumer Goods', 4200000000.60, 63000000.60, 16.25, 'Completed', 9, 285000000.40, '2024-01-17'),\n      (7, 'Technology_v1', 15000000000.60, 225000000.60, 18.60, 'Completed_v1', 18, 750000000.35, '2024-01-16'),\n      (9, 'Healthcare_v2', 8500000000.95, 127500000.95, 22.45, 'Completed_v2', 32, 380000000.70, '2024-01-17'),\n      (11, 'Financial Services_v3', 12000000000.55, 180000000.55, 16.05, 'Pending_v3', 36, 890000001.10, '2024-01-19'),\n      (13, 'Energy & Utilities_v4', 6500000001.20, 97500001.20, 12.90, 'Completed_v4', 50, 520000001.00, '2024-01-20'),\n      (15, 'Consumer Goods_v5', 4200000001.10, 63000001.10, 16.75, 'Completed_v5', 59, 285000000.90, '2024-01-22'),\n      (12, 'Technology_v6', 15000000001.10, 225000001.10, 19.10, 'Completed_v6', 68, 750000000.85, '2024-01-21'),\n      (14, 'Healthcare_v7', 8500000001.45, 127500001.45, 22.95, 'Completed_v7', 82, 380000001.20, '2024-01-22'),\n      (16, 'Financial Services_v8', 12000000001.05, 180000001.05, 16.55, 'Pending_v8', 86, 890000001.60, '2024-01-24'),\n      (18, 'Energy & Utilities_v9', 6500000001.70, 97500001.70, 13.40, 'Completed_v9', 100, 520000001.50, '2024-01-25'),\n      (20, 'Consumer Goods_v10', 4200000001.60, 63000001.60, 17.25, 'Completed_v10', 109, 285000001.40, '2024-01-27'),\n      (17, 'Technology_v11', 15000000001.60, 225000001.60, 19.60, 'Completed_v11', 118, 750000001.35, '2024-01-26'),\n      (19, 'Healthcare_v12', 8500000001.95, 127500001.95, 23.45, 'Completed_v12', 132, 380000001.70, '2024-01-27'),\n      (21, 'Financial Services_v13', 12000000001.55, 180000001.55, 17.05, 'Pending_v13', 136, 890000002.10, '2024-01-29'),\n      (23, 'Energy & Utilities_v14', 6500000002.20, 97500002.20, 13.90, 'Completed_v14', 150, 520000002.00, '2024-01-30'),\n      (25, 'Consumer Goods_v15', 4200000002.10, 63000002.10, 17.75, 'Completed_v15', 159, 285000001.90, '2024-02-01'),\n      (22, 'Technology_v16', 15000000002.10, 225000002.10, 20.10, 'Completed_v16', 168, 750000001.85, '2024-01-31'),\n      (24, 'Healthcare_v17', 8500000002.45, 127500002.45, 23.95, 'Completed_v17', 182, 380000002.20, '2024-02-01'),\n      (26, 'Financial Services_v18', 12000000002.05, 180000002.05, 17.55, 'Pending_v18', 186, 890000002.60, '2024-02-03'),\n      (28, 'Energy & Utilities_v19', 6500000002.70, 97500002.70, 14.40, 'Completed_v19', 200, 520000002.50, '2024-02-04'),\n      (30, 'Consumer Goods_v20', 4200000002.60, 63000002.60, 18.25, 'Completed_v20', 209, 285000002.40, '2024-02-06');",
      "solution_sql": "WITH ma_metrics AS (\n        SELECT \n            industry_sector,\n            COUNT(*) as total_deals,\n            AVG(deal_value) as avg_deal_value,\n            SUM(deal_value) as total_deal_value,\n            AVG((advisory_fees / deal_value) * 100) as avg_fee_rate_pct,\n            SUM(advisory_fees) as total_fees,\n            AVG(transaction_multiple) as avg_multiple,\n            AVG(deal_duration_months) as avg_duration_months,\n            -- Completion rate\n            (COUNT(CASE WHEN deal_status = 'Completed' THEN 1 END)::DECIMAL / COUNT(*)) * 100 as completion_rate_pct\n        FROM creditsuisse_ma_deals\n        GROUP BY industry_sector\n    )\n    SELECT \n        industry_sector,\n        total_deals,\n        ROUND(avg_deal_value / 1000000000, 2) as avg_deal_billions,\n        ROUND(total_deal_value / 1000000000, 2) as total_deal_billions,\n        ROUND(CAST(avg_fee_rate_pct AS NUMERIC), 3) as avg_fee_rate_pct,\n        ROUND(total_fees / 1000000, 2) as total_fees_millions,\n        ROUND(CAST(avg_multiple AS NUMERIC), 2) as avg_ev_ebitda_multiple,\n        ROUND(avg_duration_months, 1) as avg_duration_months,\n        ROUND(CAST(completion_rate_pct AS NUMERIC), 1) as completion_rate_pct\n    FROM ma_metrics\n    WHERE avg_deal_value > 1000000000 \n        AND avg_fee_rate_pct > 1.5\n    ORDER BY avg_deal_billions DESC;",
      "explanation": "Advanced investment banking M&A analytics using deal valuation metrics and fee rate calculations for transaction advisory services.",
      "created_at": "2025-08-11T17:08:07.887Z",
      "expected_output": [
        {
          "total_deals": "1",
          "industry_sector": "Technology_v6",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "15.00",
          "avg_duration_months": "68.0",
          "completion_rate_pct": "0.0",
          "total_deal_billions": "15.00",
          "total_fees_millions": "225.00",
          "avg_ev_ebitda_multiple": "19.10"
        },
        {
          "total_deals": "1",
          "industry_sector": "Technology_v16",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "15.00",
          "avg_duration_months": "168.0",
          "completion_rate_pct": "0.0",
          "total_deal_billions": "15.00",
          "total_fees_millions": "225.00",
          "avg_ev_ebitda_multiple": "20.10"
        },
        {
          "total_deals": "1",
          "industry_sector": "Technology",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "15.00",
          "avg_duration_months": "8.0",
          "completion_rate_pct": "100.0",
          "total_deal_billions": "15.00",
          "total_fees_millions": "225.00",
          "avg_ev_ebitda_multiple": "18.50"
        },
        {
          "total_deals": "1",
          "industry_sector": "Technology_v11",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "15.00",
          "avg_duration_months": "118.0",
          "completion_rate_pct": "0.0",
          "total_deal_billions": "15.00",
          "total_fees_millions": "225.00",
          "avg_ev_ebitda_multiple": "19.60"
        },
        {
          "total_deals": "1",
          "industry_sector": "Technology_v1",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "15.00",
          "avg_duration_months": "18.0",
          "completion_rate_pct": "0.0",
          "total_deal_billions": "15.00",
          "total_fees_millions": "225.00",
          "avg_ev_ebitda_multiple": "18.60"
        },
        {
          "total_deals": "1",
          "industry_sector": "Financial Services_v18",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "12.00",
          "avg_duration_months": "186.0",
          "completion_rate_pct": "0.0",
          "total_deal_billions": "12.00",
          "total_fees_millions": "180.00",
          "avg_ev_ebitda_multiple": "17.55"
        },
        {
          "total_deals": "1",
          "industry_sector": "Financial Services_v13",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "12.00",
          "avg_duration_months": "136.0",
          "completion_rate_pct": "0.0",
          "total_deal_billions": "12.00",
          "total_fees_millions": "180.00",
          "avg_ev_ebitda_multiple": "17.05"
        },
        {
          "total_deals": "1",
          "industry_sector": "Financial Services_v3",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "12.00",
          "avg_duration_months": "36.0",
          "completion_rate_pct": "0.0",
          "total_deal_billions": "12.00",
          "total_fees_millions": "180.00",
          "avg_ev_ebitda_multiple": "16.05"
        },
        {
          "total_deals": "1",
          "industry_sector": "Financial Services",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "12.00",
          "avg_duration_months": "6.0",
          "completion_rate_pct": "0.0",
          "total_deal_billions": "12.00",
          "total_fees_millions": "180.00",
          "avg_ev_ebitda_multiple": "15.75"
        },
        {
          "total_deals": "1",
          "industry_sector": "Financial Services_v8",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "12.00",
          "avg_duration_months": "86.0",
          "completion_rate_pct": "0.0",
          "total_deal_billions": "12.00",
          "total_fees_millions": "180.00",
          "avg_ev_ebitda_multiple": "16.55"
        },
        {
          "total_deals": "1",
          "industry_sector": "Healthcare",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "8.50",
          "avg_duration_months": "12.0",
          "completion_rate_pct": "100.0",
          "total_deal_billions": "8.50",
          "total_fees_millions": "127.50",
          "avg_ev_ebitda_multiple": "22.25"
        },
        {
          "total_deals": "1",
          "industry_sector": "Healthcare_v12",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "8.50",
          "avg_duration_months": "132.0",
          "completion_rate_pct": "0.0",
          "total_deal_billions": "8.50",
          "total_fees_millions": "127.50",
          "avg_ev_ebitda_multiple": "23.45"
        },
        {
          "total_deals": "1",
          "industry_sector": "Healthcare_v7",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "8.50",
          "avg_duration_months": "82.0",
          "completion_rate_pct": "0.0",
          "total_deal_billions": "8.50",
          "total_fees_millions": "127.50",
          "avg_ev_ebitda_multiple": "22.95"
        },
        {
          "total_deals": "1",
          "industry_sector": "Healthcare_v2",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "8.50",
          "avg_duration_months": "32.0",
          "completion_rate_pct": "0.0",
          "total_deal_billions": "8.50",
          "total_fees_millions": "127.50",
          "avg_ev_ebitda_multiple": "22.45"
        },
        {
          "total_deals": "1",
          "industry_sector": "Healthcare_v17",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "8.50",
          "avg_duration_months": "182.0",
          "completion_rate_pct": "0.0",
          "total_deal_billions": "8.50",
          "total_fees_millions": "127.50",
          "avg_ev_ebitda_multiple": "23.95"
        },
        {
          "total_deals": "1",
          "industry_sector": "Energy & Utilities_v19",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "6.50",
          "avg_duration_months": "200.0",
          "completion_rate_pct": "0.0",
          "total_deal_billions": "6.50",
          "total_fees_millions": "97.50",
          "avg_ev_ebitda_multiple": "14.40"
        },
        {
          "total_deals": "1",
          "industry_sector": "Energy & Utilities_v14",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "6.50",
          "avg_duration_months": "150.0",
          "completion_rate_pct": "0.0",
          "total_deal_billions": "6.50",
          "total_fees_millions": "97.50",
          "avg_ev_ebitda_multiple": "13.90"
        },
        {
          "total_deals": "1",
          "industry_sector": "Energy & Utilities_v4",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "6.50",
          "avg_duration_months": "50.0",
          "completion_rate_pct": "0.0",
          "total_deal_billions": "6.50",
          "total_fees_millions": "97.50",
          "avg_ev_ebitda_multiple": "12.90"
        },
        {
          "total_deals": "1",
          "industry_sector": "Energy & Utilities",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "6.50",
          "avg_duration_months": "10.0",
          "completion_rate_pct": "100.0",
          "total_deal_billions": "6.50",
          "total_fees_millions": "97.50",
          "avg_ev_ebitda_multiple": "12.50"
        },
        {
          "total_deals": "1",
          "industry_sector": "Energy & Utilities_v9",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "6.50",
          "avg_duration_months": "100.0",
          "completion_rate_pct": "0.0",
          "total_deal_billions": "6.50",
          "total_fees_millions": "97.50",
          "avg_ev_ebitda_multiple": "13.40"
        },
        {
          "total_deals": "1",
          "industry_sector": "Consumer Goods_v20",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "4.20",
          "avg_duration_months": "209.0",
          "completion_rate_pct": "0.0",
          "total_deal_billions": "4.20",
          "total_fees_millions": "63.00",
          "avg_ev_ebitda_multiple": "18.25"
        },
        {
          "total_deals": "1",
          "industry_sector": "Consumer Goods",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "4.20",
          "avg_duration_months": "9.0",
          "completion_rate_pct": "100.0",
          "total_deal_billions": "4.20",
          "total_fees_millions": "63.00",
          "avg_ev_ebitda_multiple": "16.25"
        },
        {
          "total_deals": "1",
          "industry_sector": "Consumer Goods_v15",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "4.20",
          "avg_duration_months": "159.0",
          "completion_rate_pct": "0.0",
          "total_deal_billions": "4.20",
          "total_fees_millions": "63.00",
          "avg_ev_ebitda_multiple": "17.75"
        },
        {
          "total_deals": "1",
          "industry_sector": "Consumer Goods_v10",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "4.20",
          "avg_duration_months": "109.0",
          "completion_rate_pct": "0.0",
          "total_deal_billions": "4.20",
          "total_fees_millions": "63.00",
          "avg_ev_ebitda_multiple": "17.25"
        },
        {
          "total_deals": "1",
          "industry_sector": "Consumer Goods_v5",
          "avg_fee_rate_pct": "1.500",
          "avg_deal_billions": "4.20",
          "avg_duration_months": "59.0",
          "completion_rate_pct": "0.0",
          "total_deal_billions": "4.20",
          "total_fees_millions": "63.00",
          "avg_ev_ebitda_multiple": "16.75"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Credit Suisse Investment Banking M&A",
      "problem_slug": "ing-group-risk-management-system"
    },
    {
      "id": "730fba8f-0ec6-41ff-b489-cd327822269a",
      "problem_id": "35bf652f-f0c5-42b7-a1df-6c7936a7bf19",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE creditsuisse_private_banking (\n        client_id INT PRIMARY KEY,\n        wealth_segment VARCHAR(50),\n        geographic_region VARCHAR(30),\n        assets_under_management DECIMAL(15,2),\n        annual_fee_revenue DECIMAL(10,2),\n        portfolio_performance DECIMAL(8,4),\n        risk_adjusted_return DECIMAL(8,4),\n        client_satisfaction_score DECIMAL(3,1),\n        relationship_manager_score DECIMAL(3,1),\n        years_as_client INT,\n        client_date DATE\n    );\n      INSERT INTO creditsuisse_private_banking  VALUES\n      (1, 'Ultra High Net Worth', 'Switzerland', 285000000.00, 4275000.50, 0.1285, 0.1125, 9.2, 9.5, 18, '2024-01-15'),\n      (2, 'Family Office', 'Asia Pacific', 520000000.00, 6240000.75, 0.1425, 0.1285, 8.8, 9.1, 12, '2024-01-15'),\n      (3, 'Institutional Wealth', 'North America', 180000000.00, 2340000.25, 0.1155, 0.0985, 8.6, 8.8, 15, '2024-01-16'),\n      (4, 'High Net Worth', 'Europe', 85000000.00, 1105000.80, 0.1085, 0.0925, 8.2, 8.5, 9, '2024-01-16'),\n      (5, 'Sovereign Wealth', 'Middle East', 750000000.00, 9750000.60, 0.1525, 0.1385, 9.1, 9.3, 22, '2024-01-17'),\n      (7, 'Ultra High Net Worth_v1', 'Switzerland_v1', 285000000.10, 4275000.60, 0.23, 0.21, 9.30, 9.60, 28, '2024-01-16'),\n      (9, 'Family Office_v2', 'Asia Pacific_v2', 520000000.20, 6240000.95, 0.34, 0.33, 9.00, 9.30, 32, '2024-01-17'),\n      (11, 'Institutional Wealth_v3', 'North America_v3', 180000000.30, 2340000.55, 0.42, 0.40, 8.90, 9.10, 45, '2024-01-19'),\n      (13, 'High Net Worth_v4', 'Europe_v4', 85000000.40, 1105001.20, 0.51, 0.49, 8.60, 8.90, 49, '2024-01-20'),\n      (15, 'Sovereign Wealth_v5', 'Middle East_v5', 750000000.50, 9750001.10, 0.65, 0.64, 9.60, 9.80, 72, '2024-01-22'),\n      (12, 'Ultra High Net Worth_v6', 'Switzerland_v6', 285000000.60, 4275001.10, 0.73, 0.71, 9.80, 10.10, 78, '2024-01-21'),\n      (14, 'Family Office_v7', 'Asia Pacific_v7', 520000000.70, 6240001.45, 0.84, 0.83, 9.50, 9.80, 82, '2024-01-22'),\n      (16, 'Institutional Wealth_v8', 'North America_v8', 180000000.80, 2340001.05, 0.92, 0.90, 9.40, 9.60, 95, '2024-01-24'),\n      (18, 'High Net Worth_v9', 'Europe_v9', 85000000.90, 1105001.70, 1.01, 0.99, 9.10, 9.40, 99, '2024-01-25'),\n      (20, 'Sovereign Wealth_v10', 'Middle East_v10', 750000001.00, 9750001.60, 1.15, 1.14, 10.10, 10.30, 122, '2024-01-27'),\n      (17, 'Ultra High Net Worth_v11', 'Switzerland_v11', 285000001.10, 4275001.60, 1.23, 1.21, 10.30, 10.60, 128, '2024-01-26'),\n      (19, 'Family Office_v12', 'Asia Pacific_v12', 520000001.20, 6240001.95, 1.34, 1.33, 10.00, 10.30, 132, '2024-01-27'),\n      (21, 'Institutional Wealth_v13', 'North America_v13', 180000001.30, 2340001.55, 1.42, 1.40, 9.90, 10.10, 145, '2024-01-29'),\n      (23, 'High Net Worth_v14', 'Europe_v14', 85000001.40, 1105002.20, 1.51, 1.49, 9.60, 9.90, 149, '2024-01-30'),\n      (25, 'Sovereign Wealth_v15', 'Middle East_v15', 750000001.50, 9750002.10, 1.65, 1.64, 10.60, 10.80, 172, '2024-02-01'),\n      (22, 'Ultra High Net Worth_v16', 'Switzerland_v16', 285000001.60, 4275002.10, 1.73, 1.71, 10.80, 11.10, 178, '2024-01-31'),\n      (24, 'Family Office_v17', 'Asia Pacific_v17', 520000001.70, 6240002.45, 1.84, 1.83, 10.50, 10.80, 182, '2024-02-01'),\n      (26, 'Institutional Wealth_v18', 'North America_v18', 180000001.80, 2340002.05, 1.92, 1.90, 10.40, 10.60, 195, '2024-02-03'),\n      (28, 'High Net Worth_v19', 'Europe_v19', 85000001.90, 1105002.70, 2.01, 1.99, 10.10, 10.40, 199, '2024-02-04'),\n      (30, 'Sovereign Wealth_v20', 'Middle East_v20', 750000002.00, 9750002.60, 2.15, 2.14, 11.10, 11.30, 222, '2024-02-06');",
      "solution_sql": "WITH wealth_performance AS (\n        SELECT \n            wealth_segment,\n            geographic_region,\n            assets_under_management,\n            annual_fee_revenue,\n            portfolio_performance,\n            risk_adjusted_return,\n            client_satisfaction_score,\n            -- Fee margin calculation\n            ROUND((annual_fee_revenue / assets_under_management) * 100, 3) as fee_margin_pct,\n            -- AUM growth estimation based on performance\n            ROUND(portfolio_performance * 100, 2) as portfolio_return_pct,\n            relationship_manager_score,\n            years_as_client\n        FROM creditsuisse_private_banking\n    ),\n    aggregated_wealth AS (\n        SELECT \n            wealth_segment,\n            COUNT(*) as client_count,\n            ROUND(AVG(assets_under_management) / 1000000, 2) as avg_aum_millions,\n            ROUND(AVG(fee_margin_pct), 3) as avg_fee_margin_pct,\n            ROUND(AVG(portfolio_return_pct), 2) as avg_portfolio_return_pct,\n            ROUND(AVG(client_satisfaction_score), 2) as avg_satisfaction_score,\n            ROUND(AVG(relationship_manager_score), 2) as avg_rm_score,\n            ROUND(AVG(years_as_client), 1) as avg_relationship_years\n        FROM wealth_performance\n        GROUP BY wealth_segment\n    )\n    SELECT \n        wealth_segment,\n        client_count,\n        avg_aum_millions,\n        avg_fee_margin_pct,\n        avg_portfolio_return_pct,\n        avg_satisfaction_score,\n        avg_rm_score,\n        avg_relationship_years\n    FROM aggregated_wealth\n    WHERE avg_aum_millions > 50 \n        AND avg_fee_margin_pct > 1.2 \n        AND avg_satisfaction_score > 8.5\n    ORDER BY avg_portfolio_return_pct DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.679Z",
      "expected_output": [
        {
          "avg_rm_score": "11.30",
          "client_count": "1",
          "wealth_segment": "Sovereign Wealth_v20",
          "avg_aum_millions": "750.00",
          "avg_fee_margin_pct": "1.300",
          "avg_relationship_years": "222.0",
          "avg_satisfaction_score": "11.10",
          "avg_portfolio_return_pct": "215.00"
        },
        {
          "avg_rm_score": "10.40",
          "client_count": "1",
          "wealth_segment": "High Net Worth_v19",
          "avg_aum_millions": "85.00",
          "avg_fee_margin_pct": "1.300",
          "avg_relationship_years": "199.0",
          "avg_satisfaction_score": "10.10",
          "avg_portfolio_return_pct": "201.00"
        },
        {
          "avg_rm_score": "10.60",
          "client_count": "1",
          "wealth_segment": "Institutional Wealth_v18",
          "avg_aum_millions": "180.00",
          "avg_fee_margin_pct": "1.300",
          "avg_relationship_years": "195.0",
          "avg_satisfaction_score": "10.40",
          "avg_portfolio_return_pct": "192.00"
        },
        {
          "avg_rm_score": "11.10",
          "client_count": "1",
          "wealth_segment": "Ultra High Net Worth_v16",
          "avg_aum_millions": "285.00",
          "avg_fee_margin_pct": "1.500",
          "avg_relationship_years": "178.0",
          "avg_satisfaction_score": "10.80",
          "avg_portfolio_return_pct": "173.00"
        },
        {
          "avg_rm_score": "10.80",
          "client_count": "1",
          "wealth_segment": "Sovereign Wealth_v15",
          "avg_aum_millions": "750.00",
          "avg_fee_margin_pct": "1.300",
          "avg_relationship_years": "172.0",
          "avg_satisfaction_score": "10.60",
          "avg_portfolio_return_pct": "165.00"
        },
        {
          "avg_rm_score": "9.90",
          "client_count": "1",
          "wealth_segment": "High Net Worth_v14",
          "avg_aum_millions": "85.00",
          "avg_fee_margin_pct": "1.300",
          "avg_relationship_years": "149.0",
          "avg_satisfaction_score": "9.60",
          "avg_portfolio_return_pct": "151.00"
        },
        {
          "avg_rm_score": "10.10",
          "client_count": "1",
          "wealth_segment": "Institutional Wealth_v13",
          "avg_aum_millions": "180.00",
          "avg_fee_margin_pct": "1.300",
          "avg_relationship_years": "145.0",
          "avg_satisfaction_score": "9.90",
          "avg_portfolio_return_pct": "142.00"
        },
        {
          "avg_rm_score": "10.60",
          "client_count": "1",
          "wealth_segment": "Ultra High Net Worth_v11",
          "avg_aum_millions": "285.00",
          "avg_fee_margin_pct": "1.500",
          "avg_relationship_years": "128.0",
          "avg_satisfaction_score": "10.30",
          "avg_portfolio_return_pct": "123.00"
        },
        {
          "avg_rm_score": "10.30",
          "client_count": "1",
          "wealth_segment": "Sovereign Wealth_v10",
          "avg_aum_millions": "750.00",
          "avg_fee_margin_pct": "1.300",
          "avg_relationship_years": "122.0",
          "avg_satisfaction_score": "10.10",
          "avg_portfolio_return_pct": "115.00"
        },
        {
          "avg_rm_score": "9.40",
          "client_count": "1",
          "wealth_segment": "High Net Worth_v9",
          "avg_aum_millions": "85.00",
          "avg_fee_margin_pct": "1.300",
          "avg_relationship_years": "99.0",
          "avg_satisfaction_score": "9.10",
          "avg_portfolio_return_pct": "101.00"
        },
        {
          "avg_rm_score": "9.60",
          "client_count": "1",
          "wealth_segment": "Institutional Wealth_v8",
          "avg_aum_millions": "180.00",
          "avg_fee_margin_pct": "1.300",
          "avg_relationship_years": "95.0",
          "avg_satisfaction_score": "9.40",
          "avg_portfolio_return_pct": "92.00"
        },
        {
          "avg_rm_score": "10.10",
          "client_count": "1",
          "wealth_segment": "Ultra High Net Worth_v6",
          "avg_aum_millions": "285.00",
          "avg_fee_margin_pct": "1.500",
          "avg_relationship_years": "78.0",
          "avg_satisfaction_score": "9.80",
          "avg_portfolio_return_pct": "73.00"
        },
        {
          "avg_rm_score": "9.80",
          "client_count": "1",
          "wealth_segment": "Sovereign Wealth_v5",
          "avg_aum_millions": "750.00",
          "avg_fee_margin_pct": "1.300",
          "avg_relationship_years": "72.0",
          "avg_satisfaction_score": "9.60",
          "avg_portfolio_return_pct": "65.00"
        },
        {
          "avg_rm_score": "8.90",
          "client_count": "1",
          "wealth_segment": "High Net Worth_v4",
          "avg_aum_millions": "85.00",
          "avg_fee_margin_pct": "1.300",
          "avg_relationship_years": "49.0",
          "avg_satisfaction_score": "8.60",
          "avg_portfolio_return_pct": "51.00"
        },
        {
          "avg_rm_score": "9.10",
          "client_count": "1",
          "wealth_segment": "Institutional Wealth_v3",
          "avg_aum_millions": "180.00",
          "avg_fee_margin_pct": "1.300",
          "avg_relationship_years": "45.0",
          "avg_satisfaction_score": "8.90",
          "avg_portfolio_return_pct": "42.00"
        },
        {
          "avg_rm_score": "9.60",
          "client_count": "1",
          "wealth_segment": "Ultra High Net Worth_v1",
          "avg_aum_millions": "285.00",
          "avg_fee_margin_pct": "1.500",
          "avg_relationship_years": "28.0",
          "avg_satisfaction_score": "9.30",
          "avg_portfolio_return_pct": "23.00"
        },
        {
          "avg_rm_score": "9.30",
          "client_count": "1",
          "wealth_segment": "Sovereign Wealth",
          "avg_aum_millions": "750.00",
          "avg_fee_margin_pct": "1.300",
          "avg_relationship_years": "22.0",
          "avg_satisfaction_score": "9.10",
          "avg_portfolio_return_pct": "15.25"
        },
        {
          "avg_rm_score": "9.50",
          "client_count": "1",
          "wealth_segment": "Ultra High Net Worth",
          "avg_aum_millions": "285.00",
          "avg_fee_margin_pct": "1.500",
          "avg_relationship_years": "18.0",
          "avg_satisfaction_score": "9.20",
          "avg_portfolio_return_pct": "12.85"
        },
        {
          "avg_rm_score": "8.80",
          "client_count": "1",
          "wealth_segment": "Institutional Wealth",
          "avg_aum_millions": "180.00",
          "avg_fee_margin_pct": "1.300",
          "avg_relationship_years": "15.0",
          "avg_satisfaction_score": "8.60",
          "avg_portfolio_return_pct": "11.55"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Credit Suisse Private Banking Analytics",
      "problem_slug": "barclays-risk-management-system"
    },
    {
      "id": "e07a60ca-0c62-415b-a371-dcdddfb14bbd",
      "problem_id": "35bf652f-f0c5-42b7-a1df-6c7936a7bf19",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE creditsuisse_private_banking (\n        client_id INT PRIMARY KEY,\n        wealth_segment VARCHAR(50),\n        geographic_region VARCHAR(30),\n        assets_under_management DECIMAL(15,2),\n        annual_fee_revenue DECIMAL(10,2),\n        portfolio_performance DECIMAL(8,4),\n        risk_adjusted_return DECIMAL(8,4),\n        client_satisfaction_score DECIMAL(3,1),\n        relationship_manager_score DECIMAL(3,1),\n        years_as_client INT,\n        client_date DATE\n    );\n      INSERT INTO creditsuisse_private_banking  VALUES\n      (1, 'Ultra High Net Worth', 'Switzerland', 285000000.00, 4275000.50, 0.1285, 0.1125, 9.2, 9.5, 18, '2024-01-15'),\n      (2, 'Family Office', 'Asia Pacific', 520000000.00, 6240000.75, 0.1425, 0.1285, 8.8, 9.1, 12, '2024-01-15'),\n      (3, 'Institutional Wealth', 'North America', 180000000.00, 2340000.25, 0.1155, 0.0985, 8.6, 8.8, 15, '2024-01-16'),\n      (4, 'High Net Worth', 'Europe', 85000000.00, 1105000.80, 0.1085, 0.0925, 8.2, 8.5, 9, '2024-01-16'),\n      (5, 'Sovereign Wealth', 'Middle East', 750000000.00, 9750000.60, 0.1525, 0.1385, 9.1, 9.3, 22, '2024-01-17'),\n      (7, 'Ultra High Net Worth_v1', 'Switzerland_v1', 285000000.10, 4275000.60, 0.23, 0.21, 9.30, 9.60, 28, '2024-01-16'),\n      (9, 'Family Office_v2', 'Asia Pacific_v2', 520000000.20, 6240000.95, 0.34, 0.33, 9.00, 9.30, 32, '2024-01-17'),\n      (11, 'Institutional Wealth_v3', 'North America_v3', 180000000.30, 2340000.55, 0.42, 0.40, 8.90, 9.10, 45, '2024-01-19'),\n      (13, 'High Net Worth_v4', 'Europe_v4', 85000000.40, 1105001.20, 0.51, 0.49, 8.60, 8.90, 49, '2024-01-20'),\n      (15, 'Sovereign Wealth_v5', 'Middle East_v5', 750000000.50, 9750001.10, 0.65, 0.64, 9.60, 9.80, 72, '2024-01-22'),\n      (12, 'Ultra High Net Worth_v6', 'Switzerland_v6', 285000000.60, 4275001.10, 0.73, 0.71, 9.80, 10.10, 78, '2024-01-21'),\n      (14, 'Family Office_v7', 'Asia Pacific_v7', 520000000.70, 6240001.45, 0.84, 0.83, 9.50, 9.80, 82, '2024-01-22'),\n      (16, 'Institutional Wealth_v8', 'North America_v8', 180000000.80, 2340001.05, 0.92, 0.90, 9.40, 9.60, 95, '2024-01-24'),\n      (18, 'High Net Worth_v9', 'Europe_v9', 85000000.90, 1105001.70, 1.01, 0.99, 9.10, 9.40, 99, '2024-01-25'),\n      (20, 'Sovereign Wealth_v10', 'Middle East_v10', 750000001.00, 9750001.60, 1.15, 1.14, 10.10, 10.30, 122, '2024-01-27'),\n      (17, 'Ultra High Net Worth_v11', 'Switzerland_v11', 285000001.10, 4275001.60, 1.23, 1.21, 10.30, 10.60, 128, '2024-01-26'),\n      (19, 'Family Office_v12', 'Asia Pacific_v12', 520000001.20, 6240001.95, 1.34, 1.33, 10.00, 10.30, 132, '2024-01-27'),\n      (21, 'Institutional Wealth_v13', 'North America_v13', 180000001.30, 2340001.55, 1.42, 1.40, 9.90, 10.10, 145, '2024-01-29'),\n      (23, 'High Net Worth_v14', 'Europe_v14', 85000001.40, 1105002.20, 1.51, 1.49, 9.60, 9.90, 149, '2024-01-30'),\n      (25, 'Sovereign Wealth_v15', 'Middle East_v15', 750000001.50, 9750002.10, 1.65, 1.64, 10.60, 10.80, 172, '2024-02-01'),\n      (22, 'Ultra High Net Worth_v16', 'Switzerland_v16', 285000001.60, 4275002.10, 1.73, 1.71, 10.80, 11.10, 178, '2024-01-31'),\n      (24, 'Family Office_v17', 'Asia Pacific_v17', 520000001.70, 6240002.45, 1.84, 1.83, 10.50, 10.80, 182, '2024-02-01'),\n      (26, 'Institutional Wealth_v18', 'North America_v18', 180000001.80, 2340002.05, 1.92, 1.90, 10.40, 10.60, 195, '2024-02-03'),\n      (28, 'High Net Worth_v19', 'Europe_v19', 85000001.90, 1105002.70, 2.01, 1.99, 10.10, 10.40, 199, '2024-02-04'),\n      (30, 'Sovereign Wealth_v20', 'Middle East_v20', 750000002.00, 9750002.60, 2.15, 2.14, 11.10, 11.30, 222, '2024-02-06');",
      "solution_sql": "WITH wealth_performance AS (\n        SELECT \n            wealth_segment,\n            geographic_region,\n            assets_under_management,\n            annual_fee_revenue,\n            portfolio_performance,\n            risk_adjusted_return,\n            client_satisfaction_score,\n            -- Fee margin calculation\n            ROUND((annual_fee_revenue / assets_under_management) * 100, 3) as fee_margin_pct,\n            -- AUM growth estimation based on performance\n            ROUND(portfolio_performance * 100, 2) as portfolio_return_pct,\n            relationship_manager_score,\n            years_as_client\n        FROM creditsuisse_private_banking\n    ),\n    aggregated_wealth AS (\n        SELECT \n            wealth_segment,\n            COUNT(*) as client_count,\n            ROUND(AVG(assets_under_management) / 1000000, 2) as avg_aum_millions,\n            ROUND(AVG(fee_margin_pct), 3) as avg_fee_margin_pct,\n            ROUND(AVG(portfolio_return_pct), 2) as avg_portfolio_return_pct,\n            ROUND(AVG(client_satisfaction_score), 2) as avg_satisfaction_score,\n            ROUND(AVG(relationship_manager_score), 2) as avg_rm_score,\n            ROUND(AVG(years_as_client), 1) as avg_relationship_years\n        FROM wealth_performance\n        GROUP BY wealth_segment\n    )\n    SELECT \n        wealth_segment,\n        client_count,\n        avg_aum_millions,\n        avg_fee_margin_pct,\n        avg_portfolio_return_pct,\n        avg_satisfaction_score,\n        avg_rm_score,\n        avg_relationship_years\n    FROM aggregated_wealth\n    WHERE avg_aum_millions > 50 \n        AND avg_fee_margin_pct > 1.2 \n        AND avg_satisfaction_score > 8.5\n    ORDER BY avg_portfolio_return_pct DESC;",
      "explanation": "Advanced private banking analytics using AUM growth, fee margins, and client satisfaction metrics for wealth segment optimization.",
      "created_at": "2025-08-11T17:08:07.884Z",
      "expected_output": [
        {
          "avg_rm_score": "11.30",
          "client_count": "1",
          "wealth_segment": "Sovereign Wealth_v20",
          "avg_aum_millions": "750.00",
          "avg_fee_margin_pct": "1.300",
          "avg_relationship_years": "222.0",
          "avg_satisfaction_score": "11.10",
          "avg_portfolio_return_pct": "215.00"
        },
        {
          "avg_rm_score": "10.40",
          "client_count": "1",
          "wealth_segment": "High Net Worth_v19",
          "avg_aum_millions": "85.00",
          "avg_fee_margin_pct": "1.300",
          "avg_relationship_years": "199.0",
          "avg_satisfaction_score": "10.10",
          "avg_portfolio_return_pct": "201.00"
        },
        {
          "avg_rm_score": "10.60",
          "client_count": "1",
          "wealth_segment": "Institutional Wealth_v18",
          "avg_aum_millions": "180.00",
          "avg_fee_margin_pct": "1.300",
          "avg_relationship_years": "195.0",
          "avg_satisfaction_score": "10.40",
          "avg_portfolio_return_pct": "192.00"
        },
        {
          "avg_rm_score": "11.10",
          "client_count": "1",
          "wealth_segment": "Ultra High Net Worth_v16",
          "avg_aum_millions": "285.00",
          "avg_fee_margin_pct": "1.500",
          "avg_relationship_years": "178.0",
          "avg_satisfaction_score": "10.80",
          "avg_portfolio_return_pct": "173.00"
        },
        {
          "avg_rm_score": "10.80",
          "client_count": "1",
          "wealth_segment": "Sovereign Wealth_v15",
          "avg_aum_millions": "750.00",
          "avg_fee_margin_pct": "1.300",
          "avg_relationship_years": "172.0",
          "avg_satisfaction_score": "10.60",
          "avg_portfolio_return_pct": "165.00"
        },
        {
          "avg_rm_score": "9.90",
          "client_count": "1",
          "wealth_segment": "High Net Worth_v14",
          "avg_aum_millions": "85.00",
          "avg_fee_margin_pct": "1.300",
          "avg_relationship_years": "149.0",
          "avg_satisfaction_score": "9.60",
          "avg_portfolio_return_pct": "151.00"
        },
        {
          "avg_rm_score": "10.10",
          "client_count": "1",
          "wealth_segment": "Institutional Wealth_v13",
          "avg_aum_millions": "180.00",
          "avg_fee_margin_pct": "1.300",
          "avg_relationship_years": "145.0",
          "avg_satisfaction_score": "9.90",
          "avg_portfolio_return_pct": "142.00"
        },
        {
          "avg_rm_score": "10.60",
          "client_count": "1",
          "wealth_segment": "Ultra High Net Worth_v11",
          "avg_aum_millions": "285.00",
          "avg_fee_margin_pct": "1.500",
          "avg_relationship_years": "128.0",
          "avg_satisfaction_score": "10.30",
          "avg_portfolio_return_pct": "123.00"
        },
        {
          "avg_rm_score": "10.30",
          "client_count": "1",
          "wealth_segment": "Sovereign Wealth_v10",
          "avg_aum_millions": "750.00",
          "avg_fee_margin_pct": "1.300",
          "avg_relationship_years": "122.0",
          "avg_satisfaction_score": "10.10",
          "avg_portfolio_return_pct": "115.00"
        },
        {
          "avg_rm_score": "9.40",
          "client_count": "1",
          "wealth_segment": "High Net Worth_v9",
          "avg_aum_millions": "85.00",
          "avg_fee_margin_pct": "1.300",
          "avg_relationship_years": "99.0",
          "avg_satisfaction_score": "9.10",
          "avg_portfolio_return_pct": "101.00"
        },
        {
          "avg_rm_score": "9.60",
          "client_count": "1",
          "wealth_segment": "Institutional Wealth_v8",
          "avg_aum_millions": "180.00",
          "avg_fee_margin_pct": "1.300",
          "avg_relationship_years": "95.0",
          "avg_satisfaction_score": "9.40",
          "avg_portfolio_return_pct": "92.00"
        },
        {
          "avg_rm_score": "10.10",
          "client_count": "1",
          "wealth_segment": "Ultra High Net Worth_v6",
          "avg_aum_millions": "285.00",
          "avg_fee_margin_pct": "1.500",
          "avg_relationship_years": "78.0",
          "avg_satisfaction_score": "9.80",
          "avg_portfolio_return_pct": "73.00"
        },
        {
          "avg_rm_score": "9.80",
          "client_count": "1",
          "wealth_segment": "Sovereign Wealth_v5",
          "avg_aum_millions": "750.00",
          "avg_fee_margin_pct": "1.300",
          "avg_relationship_years": "72.0",
          "avg_satisfaction_score": "9.60",
          "avg_portfolio_return_pct": "65.00"
        },
        {
          "avg_rm_score": "8.90",
          "client_count": "1",
          "wealth_segment": "High Net Worth_v4",
          "avg_aum_millions": "85.00",
          "avg_fee_margin_pct": "1.300",
          "avg_relationship_years": "49.0",
          "avg_satisfaction_score": "8.60",
          "avg_portfolio_return_pct": "51.00"
        },
        {
          "avg_rm_score": "9.10",
          "client_count": "1",
          "wealth_segment": "Institutional Wealth_v3",
          "avg_aum_millions": "180.00",
          "avg_fee_margin_pct": "1.300",
          "avg_relationship_years": "45.0",
          "avg_satisfaction_score": "8.90",
          "avg_portfolio_return_pct": "42.00"
        },
        {
          "avg_rm_score": "9.60",
          "client_count": "1",
          "wealth_segment": "Ultra High Net Worth_v1",
          "avg_aum_millions": "285.00",
          "avg_fee_margin_pct": "1.500",
          "avg_relationship_years": "28.0",
          "avg_satisfaction_score": "9.30",
          "avg_portfolio_return_pct": "23.00"
        },
        {
          "avg_rm_score": "9.30",
          "client_count": "1",
          "wealth_segment": "Sovereign Wealth",
          "avg_aum_millions": "750.00",
          "avg_fee_margin_pct": "1.300",
          "avg_relationship_years": "22.0",
          "avg_satisfaction_score": "9.10",
          "avg_portfolio_return_pct": "15.25"
        },
        {
          "avg_rm_score": "9.50",
          "client_count": "1",
          "wealth_segment": "Ultra High Net Worth",
          "avg_aum_millions": "285.00",
          "avg_fee_margin_pct": "1.500",
          "avg_relationship_years": "18.0",
          "avg_satisfaction_score": "9.20",
          "avg_portfolio_return_pct": "12.85"
        },
        {
          "avg_rm_score": "8.80",
          "client_count": "1",
          "wealth_segment": "Institutional Wealth",
          "avg_aum_millions": "180.00",
          "avg_fee_margin_pct": "1.300",
          "avg_relationship_years": "15.0",
          "avg_satisfaction_score": "8.60",
          "avg_portfolio_return_pct": "11.55"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Credit Suisse Private Banking Analytics",
      "problem_slug": "barclays-risk-management-system"
    },
    {
      "id": "257ad75d-fe48-4a9c-a506-2790e726e18b",
      "problem_id": "f2ba73f5-2964-42ae-8705-2ea1aff2001b",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE deutschebank_credit_portfolio (\n        loan_id INT PRIMARY KEY,\n        borrower_sector VARCHAR(50),\n        exposure_at_default DECIMAL(15,2),\n        probability_of_default DECIMAL(8,5),\n        loss_given_default DECIMAL(6,3),\n        credit_rating VARCHAR(10),\n        maturity_years INT,\n        economic_capital DECIMAL(12,2),\n        loan_date DATE\n    );\n      INSERT INTO deutschebank_credit_portfolio  VALUES\n      (1, 'Energy & Utilities', 2500000000.50, 0.03250, 0.450, 'BB+', 5, 85000000.50, '2024-01-15'),\n      (2, 'Real Estate', 1800000000.75, 0.02850, 0.380, 'BBB-', 7, 65000000.75, '2024-01-15'),\n      (3, 'Manufacturing', 3200000000.25, 0.01950, 0.320, 'A-', 4, 45000000.25, '2024-01-16'),\n      (4, 'Technology', 950000000.80, 0.01250, 0.250, 'A+', 3, 25000000.80, '2024-01-16'),\n      (5, 'Retail & Consumer', 1650000000.60, 0.04150, 0.520, 'B+', 6, 125000000.60, '2024-01-17'),\n      (7, 'Energy & Utilities_v1', 2500000000.60, 0.13, 0.55, 'BB+_v1', 15, 85000000.60, '2024-01-16'),\n      (9, 'Real Estate_v2', 1800000000.95, 0.23, 0.58, 'BBB-_v2', 27, 65000000.95, '2024-01-17'),\n      (11, 'Manufacturing_v3', 3200000000.55, 0.32, 0.62, 'A-_v3', 34, 45000000.55, '2024-01-19'),\n      (13, 'Technology_v4', 950000001.20, 0.41, 0.65, 'A+_v4', 43, 25000001.20, '2024-01-20'),\n      (15, 'Retail & Consumer_v5', 1650000001.10, 0.54, 1.02, 'B+_v5', 56, 125000001.10, '2024-01-22'),\n      (12, 'Energy & Utilities_v6', 2500000001.10, 0.63, 1.05, 'BB+_v6', 65, 85000001.10, '2024-01-21'),\n      (14, 'Real Estate_v7', 1800000001.45, 0.73, 1.08, 'BBB-_v7', 77, 65000001.45, '2024-01-22'),\n      (16, 'Manufacturing_v8', 3200000001.05, 0.82, 1.12, 'A-_v8', 84, 45000001.05, '2024-01-24'),\n      (18, 'Technology_v9', 950000001.70, 0.91, 1.15, 'A+_v9', 93, 25000001.70, '2024-01-25'),\n      (20, 'Retail & Consumer_v10', 1650000001.60, 1.04, 1.52, 'B+_v10', 106, 125000001.60, '2024-01-27'),\n      (17, 'Energy & Utilities_v11', 2500000001.60, 1.13, 1.55, 'BB+_v11', 115, 85000001.60, '2024-01-26'),\n      (19, 'Real Estate_v12', 1800000001.95, 1.23, 1.58, 'BBB-_v12', 127, 65000001.95, '2024-01-27'),\n      (21, 'Manufacturing_v13', 3200000001.55, 1.32, 1.62, 'A-_v13', 134, 45000001.55, '2024-01-29'),\n      (23, 'Technology_v14', 950000002.20, 1.41, 1.65, 'A+_v14', 143, 25000002.20, '2024-01-30'),\n      (25, 'Retail & Consumer_v15', 1650000002.10, 1.54, 2.02, 'B+_v15', 156, 125000002.10, '2024-02-01'),\n      (22, 'Energy & Utilities_v16', 2500000002.10, 1.63, 2.05, 'BB+_v16', 165, 85000002.10, '2024-01-31'),\n      (24, 'Real Estate_v17', 1800000002.45, 1.73, 2.08, 'BBB-_v17', 177, 65000002.45, '2024-02-01'),\n      (26, 'Manufacturing_v18', 3200000002.05, 1.82, 2.12, 'A-_v18', 184, 45000002.05, '2024-02-03'),\n      (28, 'Technology_v19', 950000002.70, 1.91, 2.15, 'A+_v19', 193, 25000002.70, '2024-02-04'),\n      (30, 'Retail & Consumer_v20', 1650000002.60, 2.04, 2.52, 'B+_v20', 206, 125000002.60, '2024-02-06');",
      "solution_sql": "WITH sector_risk_metrics AS (\n        SELECT \n            borrower_sector,\n            COUNT(*) as loan_count,\n            SUM(exposure_at_default) as total_exposure,\n            AVG(probability_of_default) as avg_pd,\n            AVG(loss_given_default) as avg_lgd,\n            SUM(economic_capital) as total_economic_capital,\n            -- Expected Loss calculation\n            AVG(probability_of_default * loss_given_default) as expected_loss_rate,\n            -- Risk-weighted exposure\n            SUM(exposure_at_default * probability_of_default * loss_given_default) as total_expected_loss\n        FROM deutschebank_credit_portfolio\n        GROUP BY borrower_sector\n    )\n    SELECT \n        borrower_sector,\n        loan_count,\n        ROUND(total_exposure / 1000000000, 2) as exposure_billions,\n        ROUND(CAST(avg_pd * 100 AS NUMERIC), 3) as avg_pd_pct,\n        ROUND(CAST(avg_lgd * 100 AS NUMERIC), 2) as avg_lgd_pct,\n        ROUND(CAST(expected_loss_rate * 100 AS NUMERIC), 4) as expected_loss_rate_pct,\n        ROUND(total_economic_capital / 1000000, 2) as economic_capital_millions,\n        ROUND(total_expected_loss / 1000000, 2) as expected_loss_millions\n    FROM sector_risk_metrics\n    WHERE avg_pd > 0.025\n    ORDER BY avg_pd_pct DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.792Z",
      "expected_output": [
        {
          "avg_pd_pct": "204.000",
          "loan_count": "1",
          "avg_lgd_pct": "252.00",
          "borrower_sector": "Retail & Consumer_v20",
          "exposure_billions": "1.65",
          "expected_loss_millions": "8482.32",
          "expected_loss_rate_pct": "514.0800",
          "economic_capital_millions": "125.00"
        },
        {
          "avg_pd_pct": "191.000",
          "loan_count": "1",
          "avg_lgd_pct": "215.00",
          "borrower_sector": "Technology_v19",
          "exposure_billions": "0.95",
          "expected_loss_millions": "3901.18",
          "expected_loss_rate_pct": "410.6500",
          "economic_capital_millions": "25.00"
        },
        {
          "avg_pd_pct": "182.000",
          "loan_count": "1",
          "avg_lgd_pct": "212.00",
          "borrower_sector": "Manufacturing_v18",
          "exposure_billions": "3.20",
          "expected_loss_millions": "12346.88",
          "expected_loss_rate_pct": "385.8400",
          "economic_capital_millions": "45.00"
        },
        {
          "avg_pd_pct": "173.000",
          "loan_count": "1",
          "avg_lgd_pct": "208.00",
          "borrower_sector": "Real Estate_v17",
          "exposure_billions": "1.80",
          "expected_loss_millions": "6477.12",
          "expected_loss_rate_pct": "359.8400",
          "economic_capital_millions": "65.00"
        },
        {
          "avg_pd_pct": "163.000",
          "loan_count": "1",
          "avg_lgd_pct": "205.00",
          "borrower_sector": "Energy & Utilities_v16",
          "exposure_billions": "2.50",
          "expected_loss_millions": "8353.75",
          "expected_loss_rate_pct": "334.1500",
          "economic_capital_millions": "85.00"
        },
        {
          "avg_pd_pct": "154.000",
          "loan_count": "1",
          "avg_lgd_pct": "202.00",
          "borrower_sector": "Retail & Consumer_v15",
          "exposure_billions": "1.65",
          "expected_loss_millions": "5132.82",
          "expected_loss_rate_pct": "311.0800",
          "economic_capital_millions": "125.00"
        },
        {
          "avg_pd_pct": "141.000",
          "loan_count": "1",
          "avg_lgd_pct": "165.00",
          "borrower_sector": "Technology_v14",
          "exposure_billions": "0.95",
          "expected_loss_millions": "2210.18",
          "expected_loss_rate_pct": "232.6500",
          "economic_capital_millions": "25.00"
        },
        {
          "avg_pd_pct": "132.000",
          "loan_count": "1",
          "avg_lgd_pct": "162.00",
          "borrower_sector": "Manufacturing_v13",
          "exposure_billions": "3.20",
          "expected_loss_millions": "6842.88",
          "expected_loss_rate_pct": "213.8400",
          "economic_capital_millions": "45.00"
        },
        {
          "avg_pd_pct": "123.000",
          "loan_count": "1",
          "avg_lgd_pct": "158.00",
          "borrower_sector": "Real Estate_v12",
          "exposure_billions": "1.80",
          "expected_loss_millions": "3498.12",
          "expected_loss_rate_pct": "194.3400",
          "economic_capital_millions": "65.00"
        },
        {
          "avg_pd_pct": "113.000",
          "loan_count": "1",
          "avg_lgd_pct": "155.00",
          "borrower_sector": "Energy & Utilities_v11",
          "exposure_billions": "2.50",
          "expected_loss_millions": "4378.75",
          "expected_loss_rate_pct": "175.1500",
          "economic_capital_millions": "85.00"
        },
        {
          "avg_pd_pct": "104.000",
          "loan_count": "1",
          "avg_lgd_pct": "152.00",
          "borrower_sector": "Retail & Consumer_v10",
          "exposure_billions": "1.65",
          "expected_loss_millions": "2608.32",
          "expected_loss_rate_pct": "158.0800",
          "economic_capital_millions": "125.00"
        },
        {
          "avg_pd_pct": "91.000",
          "loan_count": "1",
          "avg_lgd_pct": "115.00",
          "borrower_sector": "Technology_v9",
          "exposure_billions": "0.95",
          "expected_loss_millions": "994.18",
          "expected_loss_rate_pct": "104.6500",
          "economic_capital_millions": "25.00"
        },
        {
          "avg_pd_pct": "82.000",
          "loan_count": "1",
          "avg_lgd_pct": "112.00",
          "borrower_sector": "Manufacturing_v8",
          "exposure_billions": "3.20",
          "expected_loss_millions": "2938.88",
          "expected_loss_rate_pct": "91.8400",
          "economic_capital_millions": "45.00"
        },
        {
          "avg_pd_pct": "73.000",
          "loan_count": "1",
          "avg_lgd_pct": "108.00",
          "borrower_sector": "Real Estate_v7",
          "exposure_billions": "1.80",
          "expected_loss_millions": "1419.12",
          "expected_loss_rate_pct": "78.8400",
          "economic_capital_millions": "65.00"
        },
        {
          "avg_pd_pct": "63.000",
          "loan_count": "1",
          "avg_lgd_pct": "105.00",
          "borrower_sector": "Energy & Utilities_v6",
          "exposure_billions": "2.50",
          "expected_loss_millions": "1653.75",
          "expected_loss_rate_pct": "66.1500",
          "economic_capital_millions": "85.00"
        },
        {
          "avg_pd_pct": "54.000",
          "loan_count": "1",
          "avg_lgd_pct": "102.00",
          "borrower_sector": "Retail & Consumer_v5",
          "exposure_billions": "1.65",
          "expected_loss_millions": "908.82",
          "expected_loss_rate_pct": "55.0800",
          "economic_capital_millions": "125.00"
        },
        {
          "avg_pd_pct": "41.000",
          "loan_count": "1",
          "avg_lgd_pct": "65.00",
          "borrower_sector": "Technology_v4",
          "exposure_billions": "0.95",
          "expected_loss_millions": "253.18",
          "expected_loss_rate_pct": "26.6500",
          "economic_capital_millions": "25.00"
        },
        {
          "avg_pd_pct": "32.000",
          "loan_count": "1",
          "avg_lgd_pct": "62.00",
          "borrower_sector": "Manufacturing_v3",
          "exposure_billions": "3.20",
          "expected_loss_millions": "634.88",
          "expected_loss_rate_pct": "19.8400",
          "economic_capital_millions": "45.00"
        },
        {
          "avg_pd_pct": "23.000",
          "loan_count": "1",
          "avg_lgd_pct": "58.00",
          "borrower_sector": "Real Estate_v2",
          "exposure_billions": "1.80",
          "expected_loss_millions": "240.12",
          "expected_loss_rate_pct": "13.3400",
          "economic_capital_millions": "65.00"
        },
        {
          "avg_pd_pct": "13.000",
          "loan_count": "1",
          "avg_lgd_pct": "55.00",
          "borrower_sector": "Energy & Utilities_v1",
          "exposure_billions": "2.50",
          "expected_loss_millions": "178.75",
          "expected_loss_rate_pct": "7.1500",
          "economic_capital_millions": "85.00"
        },
        {
          "avg_pd_pct": "4.150",
          "loan_count": "1",
          "avg_lgd_pct": "52.00",
          "borrower_sector": "Retail & Consumer",
          "exposure_billions": "1.65",
          "expected_loss_millions": "35.61",
          "expected_loss_rate_pct": "2.1580",
          "economic_capital_millions": "125.00"
        },
        {
          "avg_pd_pct": "3.250",
          "loan_count": "1",
          "avg_lgd_pct": "45.00",
          "borrower_sector": "Energy & Utilities",
          "exposure_billions": "2.50",
          "expected_loss_millions": "36.56",
          "expected_loss_rate_pct": "1.4625",
          "economic_capital_millions": "85.00"
        },
        {
          "avg_pd_pct": "2.850",
          "loan_count": "1",
          "avg_lgd_pct": "38.00",
          "borrower_sector": "Real Estate",
          "exposure_billions": "1.80",
          "expected_loss_millions": "19.49",
          "expected_loss_rate_pct": "1.0830",
          "economic_capital_millions": "65.00"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Deutsche Bank Credit Risk Analytics",
      "problem_slug": "credit-suisse-risk-management-system"
    },
    {
      "id": "43801967-b3c2-4f2e-89cf-4b75b3356489",
      "problem_id": "f2ba73f5-2964-42ae-8705-2ea1aff2001b",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE deutschebank_credit_portfolio (\n        loan_id INT PRIMARY KEY,\n        borrower_sector VARCHAR(50),\n        exposure_at_default DECIMAL(15,2),\n        probability_of_default DECIMAL(8,5),\n        loss_given_default DECIMAL(6,3),\n        credit_rating VARCHAR(10),\n        maturity_years INT,\n        economic_capital DECIMAL(12,2),\n        loan_date DATE\n    );\n      INSERT INTO deutschebank_credit_portfolio  VALUES\n      (1, 'Energy & Utilities', 2500000000.50, 0.03250, 0.450, 'BB+', 5, 85000000.50, '2024-01-15'),\n      (2, 'Real Estate', 1800000000.75, 0.02850, 0.380, 'BBB-', 7, 65000000.75, '2024-01-15'),\n      (3, 'Manufacturing', 3200000000.25, 0.01950, 0.320, 'A-', 4, 45000000.25, '2024-01-16'),\n      (4, 'Technology', 950000000.80, 0.01250, 0.250, 'A+', 3, 25000000.80, '2024-01-16'),\n      (5, 'Retail & Consumer', 1650000000.60, 0.04150, 0.520, 'B+', 6, 125000000.60, '2024-01-17'),\n      (7, 'Energy & Utilities_v1', 2500000000.60, 0.13, 0.55, 'BB+_v1', 15, 85000000.60, '2024-01-16'),\n      (9, 'Real Estate_v2', 1800000000.95, 0.23, 0.58, 'BBB-_v2', 27, 65000000.95, '2024-01-17'),\n      (11, 'Manufacturing_v3', 3200000000.55, 0.32, 0.62, 'A-_v3', 34, 45000000.55, '2024-01-19'),\n      (13, 'Technology_v4', 950000001.20, 0.41, 0.65, 'A+_v4', 43, 25000001.20, '2024-01-20'),\n      (15, 'Retail & Consumer_v5', 1650000001.10, 0.54, 1.02, 'B+_v5', 56, 125000001.10, '2024-01-22'),\n      (12, 'Energy & Utilities_v6', 2500000001.10, 0.63, 1.05, 'BB+_v6', 65, 85000001.10, '2024-01-21'),\n      (14, 'Real Estate_v7', 1800000001.45, 0.73, 1.08, 'BBB-_v7', 77, 65000001.45, '2024-01-22'),\n      (16, 'Manufacturing_v8', 3200000001.05, 0.82, 1.12, 'A-_v8', 84, 45000001.05, '2024-01-24'),\n      (18, 'Technology_v9', 950000001.70, 0.91, 1.15, 'A+_v9', 93, 25000001.70, '2024-01-25'),\n      (20, 'Retail & Consumer_v10', 1650000001.60, 1.04, 1.52, 'B+_v10', 106, 125000001.60, '2024-01-27'),\n      (17, 'Energy & Utilities_v11', 2500000001.60, 1.13, 1.55, 'BB+_v11', 115, 85000001.60, '2024-01-26'),\n      (19, 'Real Estate_v12', 1800000001.95, 1.23, 1.58, 'BBB-_v12', 127, 65000001.95, '2024-01-27'),\n      (21, 'Manufacturing_v13', 3200000001.55, 1.32, 1.62, 'A-_v13', 134, 45000001.55, '2024-01-29'),\n      (23, 'Technology_v14', 950000002.20, 1.41, 1.65, 'A+_v14', 143, 25000002.20, '2024-01-30'),\n      (25, 'Retail & Consumer_v15', 1650000002.10, 1.54, 2.02, 'B+_v15', 156, 125000002.10, '2024-02-01'),\n      (22, 'Energy & Utilities_v16', 2500000002.10, 1.63, 2.05, 'BB+_v16', 165, 85000002.10, '2024-01-31'),\n      (24, 'Real Estate_v17', 1800000002.45, 1.73, 2.08, 'BBB-_v17', 177, 65000002.45, '2024-02-01'),\n      (26, 'Manufacturing_v18', 3200000002.05, 1.82, 2.12, 'A-_v18', 184, 45000002.05, '2024-02-03'),\n      (28, 'Technology_v19', 950000002.70, 1.91, 2.15, 'A+_v19', 193, 25000002.70, '2024-02-04'),\n      (30, 'Retail & Consumer_v20', 1650000002.60, 2.04, 2.52, 'B+_v20', 206, 125000002.60, '2024-02-06');",
      "solution_sql": "WITH sector_risk_metrics AS (\n        SELECT \n            borrower_sector,\n            COUNT(*) as loan_count,\n            SUM(exposure_at_default) as total_exposure,\n            AVG(probability_of_default) as avg_pd,\n            AVG(loss_given_default) as avg_lgd,\n            SUM(economic_capital) as total_economic_capital,\n            -- Expected Loss calculation\n            AVG(probability_of_default * loss_given_default) as expected_loss_rate,\n            -- Risk-weighted exposure\n            SUM(exposure_at_default * probability_of_default * loss_given_default) as total_expected_loss\n        FROM deutschebank_credit_portfolio\n        GROUP BY borrower_sector\n    )\n    SELECT \n        borrower_sector,\n        loan_count,\n        ROUND(total_exposure / 1000000000, 2) as exposure_billions,\n        ROUND(CAST(avg_pd * 100 AS NUMERIC), 3) as avg_pd_pct,\n        ROUND(CAST(avg_lgd * 100 AS NUMERIC), 2) as avg_lgd_pct,\n        ROUND(CAST(expected_loss_rate * 100 AS NUMERIC), 4) as expected_loss_rate_pct,\n        ROUND(total_economic_capital / 1000000, 2) as economic_capital_millions,\n        ROUND(total_expected_loss / 1000000, 2) as expected_loss_millions\n    FROM sector_risk_metrics\n    WHERE avg_pd > 0.025\n    ORDER BY avg_pd_pct DESC;",
      "explanation": "Advanced credit risk analytics using probability of default modeling and economic capital allocation for regulatory compliance.",
      "created_at": "2025-08-11T17:08:07.882Z",
      "expected_output": [
        {
          "avg_pd_pct": "204.000",
          "loan_count": "1",
          "avg_lgd_pct": "252.00",
          "borrower_sector": "Retail & Consumer_v20",
          "exposure_billions": "1.65",
          "expected_loss_millions": "8482.32",
          "expected_loss_rate_pct": "514.0800",
          "economic_capital_millions": "125.00"
        },
        {
          "avg_pd_pct": "191.000",
          "loan_count": "1",
          "avg_lgd_pct": "215.00",
          "borrower_sector": "Technology_v19",
          "exposure_billions": "0.95",
          "expected_loss_millions": "3901.18",
          "expected_loss_rate_pct": "410.6500",
          "economic_capital_millions": "25.00"
        },
        {
          "avg_pd_pct": "182.000",
          "loan_count": "1",
          "avg_lgd_pct": "212.00",
          "borrower_sector": "Manufacturing_v18",
          "exposure_billions": "3.20",
          "expected_loss_millions": "12346.88",
          "expected_loss_rate_pct": "385.8400",
          "economic_capital_millions": "45.00"
        },
        {
          "avg_pd_pct": "173.000",
          "loan_count": "1",
          "avg_lgd_pct": "208.00",
          "borrower_sector": "Real Estate_v17",
          "exposure_billions": "1.80",
          "expected_loss_millions": "6477.12",
          "expected_loss_rate_pct": "359.8400",
          "economic_capital_millions": "65.00"
        },
        {
          "avg_pd_pct": "163.000",
          "loan_count": "1",
          "avg_lgd_pct": "205.00",
          "borrower_sector": "Energy & Utilities_v16",
          "exposure_billions": "2.50",
          "expected_loss_millions": "8353.75",
          "expected_loss_rate_pct": "334.1500",
          "economic_capital_millions": "85.00"
        },
        {
          "avg_pd_pct": "154.000",
          "loan_count": "1",
          "avg_lgd_pct": "202.00",
          "borrower_sector": "Retail & Consumer_v15",
          "exposure_billions": "1.65",
          "expected_loss_millions": "5132.82",
          "expected_loss_rate_pct": "311.0800",
          "economic_capital_millions": "125.00"
        },
        {
          "avg_pd_pct": "141.000",
          "loan_count": "1",
          "avg_lgd_pct": "165.00",
          "borrower_sector": "Technology_v14",
          "exposure_billions": "0.95",
          "expected_loss_millions": "2210.18",
          "expected_loss_rate_pct": "232.6500",
          "economic_capital_millions": "25.00"
        },
        {
          "avg_pd_pct": "132.000",
          "loan_count": "1",
          "avg_lgd_pct": "162.00",
          "borrower_sector": "Manufacturing_v13",
          "exposure_billions": "3.20",
          "expected_loss_millions": "6842.88",
          "expected_loss_rate_pct": "213.8400",
          "economic_capital_millions": "45.00"
        },
        {
          "avg_pd_pct": "123.000",
          "loan_count": "1",
          "avg_lgd_pct": "158.00",
          "borrower_sector": "Real Estate_v12",
          "exposure_billions": "1.80",
          "expected_loss_millions": "3498.12",
          "expected_loss_rate_pct": "194.3400",
          "economic_capital_millions": "65.00"
        },
        {
          "avg_pd_pct": "113.000",
          "loan_count": "1",
          "avg_lgd_pct": "155.00",
          "borrower_sector": "Energy & Utilities_v11",
          "exposure_billions": "2.50",
          "expected_loss_millions": "4378.75",
          "expected_loss_rate_pct": "175.1500",
          "economic_capital_millions": "85.00"
        },
        {
          "avg_pd_pct": "104.000",
          "loan_count": "1",
          "avg_lgd_pct": "152.00",
          "borrower_sector": "Retail & Consumer_v10",
          "exposure_billions": "1.65",
          "expected_loss_millions": "2608.32",
          "expected_loss_rate_pct": "158.0800",
          "economic_capital_millions": "125.00"
        },
        {
          "avg_pd_pct": "91.000",
          "loan_count": "1",
          "avg_lgd_pct": "115.00",
          "borrower_sector": "Technology_v9",
          "exposure_billions": "0.95",
          "expected_loss_millions": "994.18",
          "expected_loss_rate_pct": "104.6500",
          "economic_capital_millions": "25.00"
        },
        {
          "avg_pd_pct": "82.000",
          "loan_count": "1",
          "avg_lgd_pct": "112.00",
          "borrower_sector": "Manufacturing_v8",
          "exposure_billions": "3.20",
          "expected_loss_millions": "2938.88",
          "expected_loss_rate_pct": "91.8400",
          "economic_capital_millions": "45.00"
        },
        {
          "avg_pd_pct": "73.000",
          "loan_count": "1",
          "avg_lgd_pct": "108.00",
          "borrower_sector": "Real Estate_v7",
          "exposure_billions": "1.80",
          "expected_loss_millions": "1419.12",
          "expected_loss_rate_pct": "78.8400",
          "economic_capital_millions": "65.00"
        },
        {
          "avg_pd_pct": "63.000",
          "loan_count": "1",
          "avg_lgd_pct": "105.00",
          "borrower_sector": "Energy & Utilities_v6",
          "exposure_billions": "2.50",
          "expected_loss_millions": "1653.75",
          "expected_loss_rate_pct": "66.1500",
          "economic_capital_millions": "85.00"
        },
        {
          "avg_pd_pct": "54.000",
          "loan_count": "1",
          "avg_lgd_pct": "102.00",
          "borrower_sector": "Retail & Consumer_v5",
          "exposure_billions": "1.65",
          "expected_loss_millions": "908.82",
          "expected_loss_rate_pct": "55.0800",
          "economic_capital_millions": "125.00"
        },
        {
          "avg_pd_pct": "41.000",
          "loan_count": "1",
          "avg_lgd_pct": "65.00",
          "borrower_sector": "Technology_v4",
          "exposure_billions": "0.95",
          "expected_loss_millions": "253.18",
          "expected_loss_rate_pct": "26.6500",
          "economic_capital_millions": "25.00"
        },
        {
          "avg_pd_pct": "32.000",
          "loan_count": "1",
          "avg_lgd_pct": "62.00",
          "borrower_sector": "Manufacturing_v3",
          "exposure_billions": "3.20",
          "expected_loss_millions": "634.88",
          "expected_loss_rate_pct": "19.8400",
          "economic_capital_millions": "45.00"
        },
        {
          "avg_pd_pct": "23.000",
          "loan_count": "1",
          "avg_lgd_pct": "58.00",
          "borrower_sector": "Real Estate_v2",
          "exposure_billions": "1.80",
          "expected_loss_millions": "240.12",
          "expected_loss_rate_pct": "13.3400",
          "economic_capital_millions": "65.00"
        },
        {
          "avg_pd_pct": "13.000",
          "loan_count": "1",
          "avg_lgd_pct": "55.00",
          "borrower_sector": "Energy & Utilities_v1",
          "exposure_billions": "2.50",
          "expected_loss_millions": "178.75",
          "expected_loss_rate_pct": "7.1500",
          "economic_capital_millions": "85.00"
        },
        {
          "avg_pd_pct": "4.150",
          "loan_count": "1",
          "avg_lgd_pct": "52.00",
          "borrower_sector": "Retail & Consumer",
          "exposure_billions": "1.65",
          "expected_loss_millions": "35.61",
          "expected_loss_rate_pct": "2.1580",
          "economic_capital_millions": "125.00"
        },
        {
          "avg_pd_pct": "3.250",
          "loan_count": "1",
          "avg_lgd_pct": "45.00",
          "borrower_sector": "Energy & Utilities",
          "exposure_billions": "2.50",
          "expected_loss_millions": "36.56",
          "expected_loss_rate_pct": "1.4625",
          "economic_capital_millions": "85.00"
        },
        {
          "avg_pd_pct": "2.850",
          "loan_count": "1",
          "avg_lgd_pct": "38.00",
          "borrower_sector": "Real Estate",
          "exposure_billions": "1.80",
          "expected_loss_millions": "19.49",
          "expected_loss_rate_pct": "1.0830",
          "economic_capital_millions": "65.00"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Deutsche Bank Credit Risk Analytics",
      "problem_slug": "credit-suisse-risk-management-system"
    },
    {
      "id": "f41f3973-658e-47ee-82e5-3eeb5a2cfad9",
      "problem_id": "f8b1fc39-54aa-469b-ad12-af368903bb47",
      "sql_dialect": "mysql",
      "setup_sql": "\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_title VARCHAR(100),\n    instructor VARCHAR(100),\n    category VARCHAR(50),\n    difficulty_level VARCHAR(20),\n    price DECIMAL(8,2)\n);\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100),\n    email VARCHAR(100),\n    registration_date DATE,\n    subscription_type VARCHAR(20)\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    completion_status VARCHAR(20),\n    progress_percentage INT,\n    hours_studied DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nINSERT INTO courses VALUES\n(1, 'Python for Beginners', 'Dr. Sarah Johnson', 'Programming', 'Beginner', 99.99),\n(2, 'Advanced SQL Queries', 'Prof. Mike Chen', 'Database', 'Advanced', 149.99),\n(3, 'Web Development Basics', 'Lisa Rodriguez', 'Web Dev', 'Beginner', 79.99),\n(4, 'Data Science Fundamentals', 'Dr. Alex Kim', 'Data Science', 'Intermediate', 199.99);\n\nINSERT INTO students VALUES\n(1, 'John Smith', 'john@email.com', '2024-01-15', 'Premium'),\n(2, 'Emma Wilson', 'emma@email.com', '2024-02-20', 'Basic'),\n(3, 'David Brown', 'david@email.com', '2024-03-10', 'Premium'),\n(4, 'Jessica Lee', 'jessica@email.com', '2024-01-25', 'Basic'),\n(5, 'Mark Taylor', 'mark@email.com', '2024-04-05', 'Premium');\n\nINSERT INTO enrollments VALUES\n(1, 1, 1, '2024-05-01', 'Completed', 100, 25.5),\n(2, 1, 3, '2024-05-05', 'In Progress', 60, 15.0),\n(3, 2, 1, '2024-05-02', 'Completed', 100, 30.0),\n(4, 3, 2, '2024-05-03', 'In Progress', 75, 40.5),\n(5, 3, 4, '2024-05-04', 'Completed', 100, 50.0),\n(6, 4, 3, '2024-05-06', 'In Progress', 45, 12.0),\n(7, 5, 1, '2024-05-07', 'Completed', 100, 28.0),\n(8, 5, 2, '2024-05-08', 'In Progress', 30, 18.5);",
      "solution_sql": "\nSELECT \n    c.category,\n    c.difficulty_level,\n    COUNT(e.enrollment_id) as total_enrollments,\n    COUNT(CASE WHEN e.completion_status = 'Completed' THEN 1 END) as completions,\n    ROUND(\n        COUNT(CASE WHEN e.completion_status = 'Completed' THEN 1 END) * 100.0 / COUNT(e.enrollment_id), \n        2\n    ) as completion_rate,\n    ROUND(AVG(e.hours_studied), 2) as avg_study_hours\nFROM courses c\nJOIN enrollments e ON c.course_id = e.course_id\nGROUP BY c.category, c.difficulty_level\nORDER BY completion_rate DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.798Z",
      "expected_output": [
        {
          "category": "Programming",
          "completions": "3",
          "avg_study_hours": "27.83",
          "completion_rate": "100.00",
          "difficulty_level": "Beginner",
          "total_enrollments": "3"
        },
        {
          "category": "Data Science",
          "completions": "1",
          "avg_study_hours": "50.00",
          "completion_rate": "100.00",
          "difficulty_level": "Intermediate",
          "total_enrollments": "1"
        },
        {
          "category": "Database",
          "completions": "0",
          "avg_study_hours": "29.50",
          "completion_rate": "0.00",
          "difficulty_level": "Advanced",
          "total_enrollments": "2"
        },
        {
          "category": "Web Dev",
          "completions": "0",
          "avg_study_hours": "13.50",
          "completion_rate": "0.00",
          "difficulty_level": "Beginner",
          "total_enrollments": "2"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Online Learning Platform Analytics",
      "problem_slug": "disney-revenue-analysis"
    },
    {
      "id": "00cc1e76-7a72-45af-a110-7c079826b812",
      "problem_id": "f8b1fc39-54aa-469b-ad12-af368903bb47",
      "sql_dialect": "postgresql",
      "setup_sql": "\nCREATE TABLE courses (\n    course_id INT PRIMARY KEY,\n    course_title VARCHAR(100),\n    instructor VARCHAR(100),\n    category VARCHAR(50),\n    difficulty_level VARCHAR(20),\n    price DECIMAL(8,2)\n);\n\nCREATE TABLE students (\n    student_id INT PRIMARY KEY,\n    student_name VARCHAR(100),\n    email VARCHAR(100),\n    registration_date DATE,\n    subscription_type VARCHAR(20)\n);\n\nCREATE TABLE enrollments (\n    enrollment_id INT PRIMARY KEY,\n    student_id INT,\n    course_id INT,\n    enrollment_date DATE,\n    completion_status VARCHAR(20),\n    progress_percentage INT,\n    hours_studied DECIMAL(5,2),\n    FOREIGN KEY (student_id) REFERENCES students(student_id),\n    FOREIGN KEY (course_id) REFERENCES courses(course_id)\n);\n\nINSERT INTO courses VALUES\n(1, 'Python for Beginners', 'Dr. Sarah Johnson', 'Programming', 'Beginner', 99.99),\n(2, 'Advanced SQL Queries', 'Prof. Mike Chen', 'Database', 'Advanced', 149.99),\n(3, 'Web Development Basics', 'Lisa Rodriguez', 'Web Dev', 'Beginner', 79.99),\n(4, 'Data Science Fundamentals', 'Dr. Alex Kim', 'Data Science', 'Intermediate', 199.99);\n\nINSERT INTO students VALUES\n(1, 'John Smith', 'john@email.com', '2024-01-15', 'Premium'),\n(2, 'Emma Wilson', 'emma@email.com', '2024-02-20', 'Basic'),\n(3, 'David Brown', 'david@email.com', '2024-03-10', 'Premium'),\n(4, 'Jessica Lee', 'jessica@email.com', '2024-01-25', 'Basic'),\n(5, 'Mark Taylor', 'mark@email.com', '2024-04-05', 'Premium');\n\nINSERT INTO enrollments VALUES\n(1, 1, 1, '2024-05-01', 'Completed', 100, 25.5),\n(2, 1, 3, '2024-05-05', 'In Progress', 60, 15.0),\n(3, 2, 1, '2024-05-02', 'Completed', 100, 30.0),\n(4, 3, 2, '2024-05-03', 'In Progress', 75, 40.5),\n(5, 3, 4, '2024-05-04', 'Completed', 100, 50.0),\n(6, 4, 3, '2024-05-06', 'In Progress', 45, 12.0),\n(7, 5, 1, '2024-05-07', 'Completed', 100, 28.0),\n(8, 5, 2, '2024-05-08', 'In Progress', 30, 18.5);",
      "solution_sql": "\nSELECT \n    c.category,\n    c.difficulty_level,\n    COUNT(e.enrollment_id) as total_enrollments,\n    COUNT(CASE WHEN e.completion_status = 'Completed' THEN 1 END) as completions,\n    ROUND(\n        COUNT(CASE WHEN e.completion_status = 'Completed' THEN 1 END) * 100.0 / COUNT(e.enrollment_id), \n        2\n    ) as completion_rate,\n    ROUND(AVG(e.hours_studied), 2) as avg_study_hours\nFROM courses c\nJOIN enrollments e ON c.course_id = e.course_id\nGROUP BY c.category, c.difficulty_level\nORDER BY completion_rate DESC;",
      "explanation": "Disney streaming analytics using subscriber aggregation for regional content strategy optimization.",
      "created_at": "2025-08-11T17:08:07.774Z",
      "expected_output": [
        {
          "category": "Programming",
          "completions": "3",
          "avg_study_hours": "27.83",
          "completion_rate": "100.00",
          "difficulty_level": "Beginner",
          "total_enrollments": "3"
        },
        {
          "category": "Data Science",
          "completions": "1",
          "avg_study_hours": "50.00",
          "completion_rate": "100.00",
          "difficulty_level": "Intermediate",
          "total_enrollments": "1"
        },
        {
          "category": "Web Dev",
          "completions": "0",
          "avg_study_hours": "13.50",
          "completion_rate": "0.00",
          "difficulty_level": "Beginner",
          "total_enrollments": "2"
        },
        {
          "category": "Database",
          "completions": "0",
          "avg_study_hours": "29.50",
          "completion_rate": "0.00",
          "difficulty_level": "Advanced",
          "total_enrollments": "2"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Online Learning Platform Analytics",
      "problem_slug": "disney-revenue-analysis"
    },
    {
      "id": "9327e954-428f-4cd6-9133-58da46cae78a",
      "problem_id": "5b8ca9e4-c845-416a-bb0b-6429619dcbcc",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE solar_installations (\n          installation_id INT,\n          location VARCHAR(50),\n          panel_capacity_kw DECIMAL(8,2),\n          daily_production_kwh DECIMAL(10,2),\n          installation_date DATE\n      );\n      INSERT INTO solar_installations  VALUES\n      (1, 'California', 25.0, 120.5, '2023-06-15'),\n      (2, 'Arizona', 30.0, 135.2, '2023-07-20'),\n      (3, 'Nevada', 20.0, 85.8, '2023-08-10'),\n      (4, 'Texas', 35.0, 145.6, '2023-05-25'),\n      (5, 'Florida', 28.0, 98.4, '2023-09-12'),\n      (6, 'Colorado', 22.0, 102.3, '2023-07-08'),\n      (8, 'California_v1', 25.10, 120.60, '2023-06-16'),\n      (10, 'Arizona_v2', 30.20, 135.40, '2023-07-22'),\n      (12, 'Nevada_v3', 20.30, 86.10, '2023-08-13'),\n      (14, 'Texas_v4', 35.40, 146.00, '2023-05-29'),\n      (16, 'Florida_v5', 28.50, 98.90, '2023-09-17'),\n      (18, 'Colorado_v6', 22.60, 102.90, '2023-07-14'),\n      (14, 'California_v7', 25.70, 121.20, '2023-06-22'),\n      (16, 'Arizona_v8', 30.80, 136.00, '2023-07-28'),\n      (18, 'Nevada_v9', 20.90, 86.70, '2023-08-19'),\n      (20, 'Texas_v10', 36.00, 146.60, '2023-06-04'),\n      (22, 'Florida_v11', 29.10, 99.50, '2023-09-23'),\n      (24, 'Colorado_v12', 23.20, 103.50, '2023-07-20'),\n      (20, 'California_v13', 26.30, 121.80, '2023-06-28'),\n      (22, 'Arizona_v14', 31.40, 136.60, '2023-08-03'),\n      (24, 'Nevada_v15', 21.50, 87.30, '2023-08-25'),\n      (26, 'Texas_v16', 36.60, 147.20, '2023-06-10'),\n      (28, 'Florida_v17', 29.70, 100.10, '2023-09-29'),\n      (30, 'Colorado_v18', 23.80, 104.10, '2023-07-26'),\n      (26, 'California_v19', 26.90, 122.40, '2023-07-04');",
      "solution_sql": "\n      WITH efficiency_metrics AS (\n        SELECT \n          installation_id,\n          location,\n          daily_production_kwh as avg_daily_production,\n          ROUND(daily_production_kwh / panel_capacity_kw, 2) as efficiency_rating,\n          AVG(daily_production_kwh / panel_capacity_kw) OVER() as overall_avg_efficiency\n        FROM solar_installations\n      )\n      SELECT \n        installation_id,\n        avg_daily_production,\n        efficiency_rating,\n        CASE \n          WHEN efficiency_rating >= overall_avg_efficiency THEN 'Above Average'\n          ELSE 'Below Average'\n        END as performance_category\n      FROM efficiency_metrics\n      WHERE efficiency_rating < overall_avg_efficiency\n      ORDER BY efficiency_rating;\n    ",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.707Z",
      "expected_output": [
        {
          "installation_id": "28",
          "efficiency_rating": "3.37",
          "avg_daily_production": "100.10",
          "performance_category": "Below Average"
        },
        {
          "installation_id": "22",
          "efficiency_rating": "3.42",
          "avg_daily_production": "99.50",
          "performance_category": "Below Average"
        },
        {
          "installation_id": "16",
          "efficiency_rating": "3.47",
          "avg_daily_production": "98.90",
          "performance_category": "Below Average"
        },
        {
          "installation_id": "5",
          "efficiency_rating": "3.51",
          "avg_daily_production": "98.40",
          "performance_category": "Below Average"
        },
        {
          "installation_id": "26",
          "efficiency_rating": "4.02",
          "avg_daily_production": "147.20",
          "performance_category": "Below Average"
        },
        {
          "installation_id": "24",
          "efficiency_rating": "4.06",
          "avg_daily_production": "87.30",
          "performance_category": "Below Average"
        },
        {
          "installation_id": "20",
          "efficiency_rating": "4.07",
          "avg_daily_production": "146.60",
          "performance_category": "Below Average"
        },
        {
          "installation_id": "14",
          "efficiency_rating": "4.12",
          "avg_daily_production": "146.00",
          "performance_category": "Below Average"
        },
        {
          "installation_id": "18",
          "efficiency_rating": "4.15",
          "avg_daily_production": "86.70",
          "performance_category": "Below Average"
        },
        {
          "installation_id": "4",
          "efficiency_rating": "4.16",
          "avg_daily_production": "145.60",
          "performance_category": "Below Average"
        },
        {
          "installation_id": "12",
          "efficiency_rating": "4.24",
          "avg_daily_production": "86.10",
          "performance_category": "Below Average"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Energy Consumption Analysis",
      "problem_slug": "energy-consumption-analysis"
    },
    {
      "id": "9c0baea2-8250-4bd7-9161-eccc5dcaca8e",
      "problem_id": "5b8ca9e4-c845-416a-bb0b-6429619dcbcc",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE solar_installations (\n          installation_id INT,\n          location VARCHAR(50),\n          panel_capacity_kw DECIMAL(8,2),\n          daily_production_kwh DECIMAL(10,2),\n          installation_date DATE\n      );\n      INSERT INTO solar_installations  VALUES\n      (1, 'California', 25.0, 120.5, '2023-06-15'),\n      (2, 'Arizona', 30.0, 135.2, '2023-07-20'),\n      (3, 'Nevada', 20.0, 85.8, '2023-08-10'),\n      (4, 'Texas', 35.0, 145.6, '2023-05-25'),\n      (5, 'Florida', 28.0, 98.4, '2023-09-12'),\n      (6, 'Colorado', 22.0, 102.3, '2023-07-08'),\n      (8, 'California_v1', 25.10, 120.60, '2023-06-16'),\n      (10, 'Arizona_v2', 30.20, 135.40, '2023-07-22'),\n      (12, 'Nevada_v3', 20.30, 86.10, '2023-08-13'),\n      (14, 'Texas_v4', 35.40, 146.00, '2023-05-29'),\n      (16, 'Florida_v5', 28.50, 98.90, '2023-09-17'),\n      (18, 'Colorado_v6', 22.60, 102.90, '2023-07-14'),\n      (14, 'California_v7', 25.70, 121.20, '2023-06-22'),\n      (16, 'Arizona_v8', 30.80, 136.00, '2023-07-28'),\n      (18, 'Nevada_v9', 20.90, 86.70, '2023-08-19'),\n      (20, 'Texas_v10', 36.00, 146.60, '2023-06-04'),\n      (22, 'Florida_v11', 29.10, 99.50, '2023-09-23'),\n      (24, 'Colorado_v12', 23.20, 103.50, '2023-07-20'),\n      (20, 'California_v13', 26.30, 121.80, '2023-06-28'),\n      (22, 'Arizona_v14', 31.40, 136.60, '2023-08-03'),\n      (24, 'Nevada_v15', 21.50, 87.30, '2023-08-25'),\n      (26, 'Texas_v16', 36.60, 147.20, '2023-06-10'),\n      (28, 'Florida_v17', 29.70, 100.10, '2023-09-29'),\n      (30, 'Colorado_v18', 23.80, 104.10, '2023-07-26'),\n      (26, 'California_v19', 26.90, 122.40, '2023-07-04');",
      "solution_sql": "\n      WITH efficiency_metrics AS (\n        SELECT \n          installation_id,\n          location,\n          daily_production_kwh as avg_daily_production,\n          ROUND(daily_production_kwh / panel_capacity_kw, 2) as efficiency_rating,\n          AVG(daily_production_kwh / panel_capacity_kw) OVER() as overall_avg_efficiency\n        FROM solar_installations\n      )\n      SELECT \n        installation_id,\n        avg_daily_production,\n        efficiency_rating,\n        CASE \n          WHEN efficiency_rating >= overall_avg_efficiency THEN 'Above Average'\n          ELSE 'Below Average'\n        END as performance_category\n      FROM efficiency_metrics\n      WHERE efficiency_rating < overall_avg_efficiency\n      ORDER BY efficiency_rating;\n    ",
      "explanation": "Advanced Energy Analytics problem with real business applications.",
      "created_at": "2025-08-11T13:51:10.032Z",
      "expected_output": [
        {
          "installation_id": "28",
          "efficiency_rating": "3.37",
          "avg_daily_production": "100.10",
          "performance_category": "Below Average"
        },
        {
          "installation_id": "22",
          "efficiency_rating": "3.42",
          "avg_daily_production": "99.50",
          "performance_category": "Below Average"
        },
        {
          "installation_id": "16",
          "efficiency_rating": "3.47",
          "avg_daily_production": "98.90",
          "performance_category": "Below Average"
        },
        {
          "installation_id": "5",
          "efficiency_rating": "3.51",
          "avg_daily_production": "98.40",
          "performance_category": "Below Average"
        },
        {
          "installation_id": "26",
          "efficiency_rating": "4.02",
          "avg_daily_production": "147.20",
          "performance_category": "Below Average"
        },
        {
          "installation_id": "24",
          "efficiency_rating": "4.06",
          "avg_daily_production": "87.30",
          "performance_category": "Below Average"
        },
        {
          "installation_id": "20",
          "efficiency_rating": "4.07",
          "avg_daily_production": "146.60",
          "performance_category": "Below Average"
        },
        {
          "installation_id": "14",
          "efficiency_rating": "4.12",
          "avg_daily_production": "146.00",
          "performance_category": "Below Average"
        },
        {
          "installation_id": "18",
          "efficiency_rating": "4.15",
          "avg_daily_production": "86.70",
          "performance_category": "Below Average"
        },
        {
          "installation_id": "4",
          "efficiency_rating": "4.16",
          "avg_daily_production": "145.60",
          "performance_category": "Below Average"
        },
        {
          "installation_id": "12",
          "efficiency_rating": "4.24",
          "avg_daily_production": "86.10",
          "performance_category": "Below Average"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Energy Consumption Analysis",
      "problem_slug": "energy-consumption-analysis"
    },
    {
      "id": "a108de78-a135-497e-a83a-8fcef3ca365d",
      "problem_id": "642f18fd-a78f-49d2-aded-f876ab91e6e2",
      "sql_dialect": "mysql",
      "setup_sql": "\n            CREATE TABLE fidelity_portfolio_optimization (\n                asset_id INT PRIMARY KEY,\n                asset_class VARCHAR(50),\n                portfolio_allocation DECIMAL(8,4),\n                annual_return_rate DECIMAL(8,6),\n                volatility DECIMAL(8,6),\n                sharpe_ratio DECIMAL(6,4),\n                risk_score DECIMAL(6,4),\n                benchmark_return DECIMAL(8,6),\n                portfolio_date DATE\n            );\n            \n            INSERT INTO fidelity_portfolio_optimization VALUES\n            (1, 'US Large Cap Equities', 0.3500, 0.1050, 0.1650, 0.6364, 12.5000, 0.0925, '2024-01-15'),\n            (2, 'International Equities', 0.2500, 0.0875, 0.1825, 0.4795, 16.2500, 0.0785, '2024-01-15'),\n            (3, 'Fixed Income', 0.2000, 0.0425, 0.0650, 0.6538, 8.7500, 0.0385, '2024-01-16'),\n            (4, 'REITs', 0.1000, 0.0950, 0.2250, 0.4222, 18.5000, 0.0825, '2024-01-16'),\n            (5, 'Private Equity', 0.1500, 0.1250, 0.2850, 0.4386, 22.8000, 0.1050, '2024-01-17');\n        ",
      "solution_sql": "SELECT \n        asset_class,\n        ROUND(CAST(portfolio_allocation * 100 AS NUMERIC), 2) as allocation_pct,\n        ROUND(CAST(annual_return_rate * 100 AS NUMERIC), 2) as annual_return_pct,\n        ROUND(CAST(volatility * 100 AS NUMERIC), 2) as volatility_pct,\n        ROUND(CAST(sharpe_ratio AS NUMERIC), 4) as sharpe_ratio,\n        ROUND(CAST(risk_score AS NUMERIC), 2) as risk_score\n    FROM fidelity_portfolio_optimization \n    WHERE annual_return_rate > 0.08 AND risk_score < 15\n    ORDER BY annual_return_pct DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.711Z",
      "expected_output": [
        {
          "risk_score": "12.50",
          "asset_class": "US Large Cap Equities",
          "sharpe_ratio": "0.6364",
          "allocation_pct": "35.00",
          "volatility_pct": "16.50",
          "annual_return_pct": "10.50"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Fidelity Investment Portfolio Optimization",
      "problem_slug": "fidelity-portfolio-analytics"
    },
    {
      "id": "2bdacf78-1acb-4ccf-89b5-686ee0d863cb",
      "problem_id": "642f18fd-a78f-49d2-aded-f876ab91e6e2",
      "sql_dialect": "postgresql",
      "setup_sql": "\n            CREATE TABLE fidelity_portfolio_optimization (\n                asset_id INT PRIMARY KEY,\n                asset_class VARCHAR(50),\n                portfolio_allocation DECIMAL(8,4),\n                annual_return_rate DECIMAL(8,6),\n                volatility DECIMAL(8,6),\n                sharpe_ratio DECIMAL(6,4),\n                risk_score DECIMAL(6,4),\n                benchmark_return DECIMAL(8,6),\n                portfolio_date DATE\n            );\n            \n            INSERT INTO fidelity_portfolio_optimization VALUES\n            (1, 'US Large Cap Equities', 0.3500, 0.1050, 0.1650, 0.6364, 12.5000, 0.0925, '2024-01-15'),\n            (2, 'International Equities', 0.2500, 0.0875, 0.1825, 0.4795, 16.2500, 0.0785, '2024-01-15'),\n            (3, 'Fixed Income', 0.2000, 0.0425, 0.0650, 0.6538, 8.7500, 0.0385, '2024-01-16'),\n            (4, 'REITs', 0.1000, 0.0950, 0.2250, 0.4222, 18.5000, 0.0825, '2024-01-16'),\n            (5, 'Private Equity', 0.1500, 0.1250, 0.2850, 0.4386, 22.8000, 0.1050, '2024-01-17');\n        ",
      "solution_sql": "SELECT \n        asset_class,\n        ROUND(CAST(portfolio_allocation * 100 AS NUMERIC), 2) as allocation_pct,\n        ROUND(CAST(annual_return_rate * 100 AS NUMERIC), 2) as annual_return_pct,\n        ROUND(CAST(volatility * 100 AS NUMERIC), 2) as volatility_pct,\n        ROUND(CAST(sharpe_ratio AS NUMERIC), 4) as sharpe_ratio,\n        ROUND(CAST(risk_score AS NUMERIC), 2) as risk_score\n    FROM fidelity_portfolio_optimization \n    WHERE annual_return_rate > 0.08 AND risk_score < 15\n    ORDER BY annual_return_pct DESC;",
      "explanation": "Advanced portfolio optimization analytics using risk-adjusted performance metrics for institutional asset allocation strategies.",
      "created_at": "2025-08-11T17:08:07.870Z",
      "expected_output": [
        {
          "risk_score": "12.50",
          "asset_class": "US Large Cap Equities",
          "sharpe_ratio": "0.6364",
          "allocation_pct": "35.00",
          "volatility_pct": "16.50",
          "annual_return_pct": "10.50"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Fidelity Investment Portfolio Optimization",
      "problem_slug": "fidelity-portfolio-analytics"
    },
    {
      "id": "43bc73e7-7ae7-47b9-80ef-35b021c54e68",
      "problem_id": "58a7cb0d-634f-408b-a5b0-36c0599c2b50",
      "sql_dialect": "mysql",
      "setup_sql": "\nCREATE TABLE production_lines (\n    line_id INT PRIMARY KEY,\n    line_name VARCHAR(100),\n    product_type VARCHAR(50),\n    capacity_per_hour INT,\n    supervisor VARCHAR(100)\n);\n\nCREATE TABLE quality_inspections (\n    inspection_id INT PRIMARY KEY,\n    line_id INT,\n    inspection_date DATE,\n    units_produced INT,\n    units_passed INT,\n    defect_type VARCHAR(50),\n    defect_count INT,\n    inspector_name VARCHAR(100),\n    FOREIGN KEY (line_id) REFERENCES production_lines(line_id)\n);\n\nINSERT INTO production_lines VALUES\n(1, 'Assembly Line A', 'Electronics', 100, 'Maria Garcia'),\n(2, 'Assembly Line B', 'Electronics', 120, 'James Wilson'),\n(3, 'Packaging Line 1', 'Consumer Goods', 200, 'Sarah Johnson'),\n(4, 'Packaging Line 2', 'Consumer Goods', 180, 'David Chen');\n\nINSERT INTO quality_inspections VALUES\n(1, 1, '2024-05-01', 800, 785, 'Component Failure', 15, 'Inspector A'),\n(2, 1, '2024-05-02', 820, 810, 'Assembly Error', 10, 'Inspector A'),\n(3, 2, '2024-05-01', 960, 945, 'Component Failure', 12, 'Inspector B'),\n(4, 2, '2024-05-02', 940, 932, 'Wiring Issue', 8, 'Inspector B'),\n(5, 3, '2024-05-01', 1600, 1590, 'Packaging Defect', 10, 'Inspector C'),\n(6, 3, '2024-05-02', 1580, 1575, 'Label Error', 5, 'Inspector C'),\n(7, 4, '2024-05-01', 1440, 1430, 'Packaging Defect', 8, 'Inspector D'),\n(8, 4, '2024-05-02', 1460, 1455, 'Seal Issue', 5, 'Inspector D');",
      "solution_sql": "\nSELECT \n    pl.product_type,\n    qi.defect_type,\n    COUNT(qi.inspection_id) as inspection_count,\n    SUM(qi.units_produced) as total_units_produced,\n    SUM(qi.defect_count) as total_defects,\n    ROUND(\n        SUM(qi.defect_count) * 100.0 / SUM(qi.units_produced), \n        3\n    ) as defect_rate_percentage,\n    ROUND(\n        SUM(qi.units_passed) * 100.0 / SUM(qi.units_produced), \n        2\n    ) as pass_rate_percentage\nFROM production_lines pl\nJOIN quality_inspections qi ON pl.line_id = qi.line_id\nGROUP BY pl.product_type, qi.defect_type\nORDER BY defect_rate_percentage DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.703Z",
      "expected_output": [
        {
          "defect_type": "Component Failure",
          "product_type": "Electronics",
          "total_defects": "27",
          "inspection_count": "2",
          "pass_rate_percentage": "98.30",
          "total_units_produced": "1760",
          "defect_rate_percentage": "1.534"
        },
        {
          "defect_type": "Assembly Error",
          "product_type": "Electronics",
          "total_defects": "10",
          "inspection_count": "1",
          "pass_rate_percentage": "98.78",
          "total_units_produced": "820",
          "defect_rate_percentage": "1.220"
        },
        {
          "defect_type": "Wiring Issue",
          "product_type": "Electronics",
          "total_defects": "8",
          "inspection_count": "1",
          "pass_rate_percentage": "99.15",
          "total_units_produced": "940",
          "defect_rate_percentage": "0.851"
        },
        {
          "defect_type": "Packaging Defect",
          "product_type": "Consumer Goods",
          "total_defects": "18",
          "inspection_count": "2",
          "pass_rate_percentage": "99.34",
          "total_units_produced": "3040",
          "defect_rate_percentage": "0.592"
        },
        {
          "defect_type": "Seal Issue",
          "product_type": "Consumer Goods",
          "total_defects": "5",
          "inspection_count": "1",
          "pass_rate_percentage": "99.66",
          "total_units_produced": "1460",
          "defect_rate_percentage": "0.342"
        },
        {
          "defect_type": "Label Error",
          "product_type": "Consumer Goods",
          "total_defects": "5",
          "inspection_count": "1",
          "pass_rate_percentage": "99.68",
          "total_units_produced": "1580",
          "defect_rate_percentage": "0.316"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Manufacturing Quality Control Analysis",
      "problem_slug": "ford-vehicle-sales-performance"
    },
    {
      "id": "fdf8a0fe-aa02-4723-880f-d9d35706e235",
      "problem_id": "58a7cb0d-634f-408b-a5b0-36c0599c2b50",
      "sql_dialect": "postgresql",
      "setup_sql": "\nCREATE TABLE production_lines (\n    line_id INT PRIMARY KEY,\n    line_name VARCHAR(100),\n    product_type VARCHAR(50),\n    capacity_per_hour INT,\n    supervisor VARCHAR(100)\n);\n\nCREATE TABLE quality_inspections (\n    inspection_id INT PRIMARY KEY,\n    line_id INT,\n    inspection_date DATE,\n    units_produced INT,\n    units_passed INT,\n    defect_type VARCHAR(50),\n    defect_count INT,\n    inspector_name VARCHAR(100),\n    FOREIGN KEY (line_id) REFERENCES production_lines(line_id)\n);\n\nINSERT INTO production_lines VALUES\n(1, 'Assembly Line A', 'Electronics', 100, 'Maria Garcia'),\n(2, 'Assembly Line B', 'Electronics', 120, 'James Wilson'),\n(3, 'Packaging Line 1', 'Consumer Goods', 200, 'Sarah Johnson'),\n(4, 'Packaging Line 2', 'Consumer Goods', 180, 'David Chen');\n\nINSERT INTO quality_inspections VALUES\n(1, 1, '2024-05-01', 800, 785, 'Component Failure', 15, 'Inspector A'),\n(2, 1, '2024-05-02', 820, 810, 'Assembly Error', 10, 'Inspector A'),\n(3, 2, '2024-05-01', 960, 945, 'Component Failure', 12, 'Inspector B'),\n(4, 2, '2024-05-02', 940, 932, 'Wiring Issue', 8, 'Inspector B'),\n(5, 3, '2024-05-01', 1600, 1590, 'Packaging Defect', 10, 'Inspector C'),\n(6, 3, '2024-05-02', 1580, 1575, 'Label Error', 5, 'Inspector C'),\n(7, 4, '2024-05-01', 1440, 1430, 'Packaging Defect', 8, 'Inspector D'),\n(8, 4, '2024-05-02', 1460, 1455, 'Seal Issue', 5, 'Inspector D');",
      "solution_sql": "\nSELECT \n    pl.product_type,\n    qi.defect_type,\n    COUNT(qi.inspection_id) as inspection_count,\n    SUM(qi.units_produced) as total_units_produced,\n    SUM(qi.defect_count) as total_defects,\n    ROUND(\n        SUM(qi.defect_count) * 100.0 / SUM(qi.units_produced), \n        3\n    ) as defect_rate_percentage,\n    ROUND(\n        SUM(qi.units_passed) * 100.0 / SUM(qi.units_produced), \n        2\n    ) as pass_rate_percentage\nFROM production_lines pl\nJOIN quality_inspections qi ON pl.line_id = qi.line_id\nGROUP BY pl.product_type, qi.defect_type\nORDER BY defect_rate_percentage DESC;",
      "explanation": "Automotive sales analysis using SUM aggregation with HAVING clause for production planning insights.",
      "created_at": "2025-08-11T13:51:15.992Z",
      "expected_output": [
        {
          "defect_type": "Component Failure",
          "product_type": "Electronics",
          "total_defects": "27",
          "inspection_count": "2",
          "pass_rate_percentage": "98.30",
          "total_units_produced": "1760",
          "defect_rate_percentage": "1.534"
        },
        {
          "defect_type": "Assembly Error",
          "product_type": "Electronics",
          "total_defects": "10",
          "inspection_count": "1",
          "pass_rate_percentage": "98.78",
          "total_units_produced": "820",
          "defect_rate_percentage": "1.220"
        },
        {
          "defect_type": "Wiring Issue",
          "product_type": "Electronics",
          "total_defects": "8",
          "inspection_count": "1",
          "pass_rate_percentage": "99.15",
          "total_units_produced": "940",
          "defect_rate_percentage": "0.851"
        },
        {
          "defect_type": "Packaging Defect",
          "product_type": "Consumer Goods",
          "total_defects": "18",
          "inspection_count": "2",
          "pass_rate_percentage": "99.34",
          "total_units_produced": "3040",
          "defect_rate_percentage": "0.592"
        },
        {
          "defect_type": "Seal Issue",
          "product_type": "Consumer Goods",
          "total_defects": "5",
          "inspection_count": "1",
          "pass_rate_percentage": "99.66",
          "total_units_produced": "1460",
          "defect_rate_percentage": "0.342"
        },
        {
          "defect_type": "Label Error",
          "product_type": "Consumer Goods",
          "total_defects": "5",
          "inspection_count": "1",
          "pass_rate_percentage": "99.68",
          "total_units_produced": "1580",
          "defect_rate_percentage": "0.316"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Manufacturing Quality Control Analysis",
      "problem_slug": "ford-vehicle-sales-performance"
    },
    {
      "id": "0bf82e06-2804-4143-bc54-94a60958706c",
      "problem_id": "fefcc89f-08b7-4473-857b-67a895af8b8b",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE goldmansachs_algo_trading (\n        strategy_id INT PRIMARY KEY,\n        strategy_name VARCHAR(100),\n        asset_class VARCHAR(50),\n        total_pnl DECIMAL(12,2),\n        total_trades INT,\n        winning_trades INT,\n        gross_profit DECIMAL(12,2),\n        gross_loss DECIMAL(12,2),\n        max_drawdown_pct DECIMAL(6,3),\n        volatility_annual DECIMAL(6,3),\n        risk_free_rate DECIMAL(6,3),\n        strategy_date DATE\n    );\n      INSERT INTO goldmansachs_algo_trading  VALUES\n      (1, 'Statistical Arbitrage US Equities', 'US Equities', 125000000.50, 125000, 75000, 200000000.00, 75000000.00, 8.500, 12.500, 2.250, '2024-01-15'),\n      (2, 'Market Making Fixed Income', 'Fixed Income', 85000000.75, 85000, 55000, 140000000.00, 55000000.00, 15.200, 18.750, 2.250, '2024-01-15'),\n      (3, 'Cross-Asset Momentum', 'Multi-Asset', 95000000.25, 65000, 42000, 165000000.00, 70000000.00, 10.800, 16.250, 2.250, '2024-01-16'),\n      (4, 'High Frequency ETF Arbitrage', 'ETFs', 65000000.80, 450000, 280000, 120000000.00, 55000000.00, 6.500, 8.750, 2.250, '2024-01-16'),\n      (5, 'Options Market Making', 'Derivatives', 105000000.60, 95000, 58000, 175000000.00, 70000000.00, 14.500, 22.500, 2.250, '2024-01-17'),\n      (7, 'Statistical Arbitrage US Equities_v1', 'US Equities_v1', 125000000.60, 125010, 75010, 200000000.10, 75000000.10, 8.60, 12.60, 2.35, '2024-01-16'),\n      (9, 'Market Making Fixed Income_v2', 'Fixed Income_v2', 85000000.95, 85020, 55020, 140000000.20, 55000000.20, 15.40, 18.95, 2.45, '2024-01-17'),\n      (11, 'Cross-Asset Momentum_v3', 'Multi-Asset_v3', 95000000.55, 65030, 42030, 165000000.30, 70000000.30, 11.10, 16.55, 2.55, '2024-01-19'),\n      (13, 'High Frequency ETF Arbitrage_v4', 'ETFs_v4', 65000001.20, 450040, 280040, 120000000.40, 55000000.40, 6.90, 9.15, 2.65, '2024-01-20'),\n      (15, 'Options Market Making_v5', 'Derivatives_v5', 105000001.10, 95050, 58050, 175000000.50, 70000000.50, 15.00, 23.00, 2.75, '2024-01-22'),\n      (12, 'Statistical Arbitrage US Equities_v6', 'US Equities_v6', 125000001.10, 125060, 75060, 200000000.60, 75000000.60, 9.10, 13.10, 2.85, '2024-01-21'),\n      (14, 'Market Making Fixed Income_v7', 'Fixed Income_v7', 85000001.45, 85070, 55070, 140000000.70, 55000000.70, 15.90, 19.45, 2.95, '2024-01-22'),\n      (16, 'Cross-Asset Momentum_v8', 'Multi-Asset_v8', 95000001.05, 65080, 42080, 165000000.80, 70000000.80, 11.60, 17.05, 3.05, '2024-01-24'),\n      (18, 'High Frequency ETF Arbitrage_v9', 'ETFs_v9', 65000001.70, 450090, 280090, 120000000.90, 55000000.90, 7.40, 9.65, 3.15, '2024-01-25'),\n      (20, 'Options Market Making_v10', 'Derivatives_v10', 105000001.60, 95100, 58100, 175000001.00, 70000001.00, 15.50, 23.50, 3.25, '2024-01-27'),\n      (17, 'Statistical Arbitrage US Equities_v11', 'US Equities_v11', 125000001.60, 125110, 75110, 200000001.10, 75000001.10, 9.60, 13.60, 3.35, '2024-01-26'),\n      (19, 'Market Making Fixed Income_v12', 'Fixed Income_v12', 85000001.95, 85120, 55120, 140000001.20, 55000001.20, 16.40, 19.95, 3.45, '2024-01-27'),\n      (21, 'Cross-Asset Momentum_v13', 'Multi-Asset_v13', 95000001.55, 65130, 42130, 165000001.30, 70000001.30, 12.10, 17.55, 3.55, '2024-01-29'),\n      (23, 'High Frequency ETF Arbitrage_v14', 'ETFs_v14', 65000002.20, 450140, 280140, 120000001.40, 55000001.40, 7.90, 10.15, 3.65, '2024-01-30'),\n      (25, 'Options Market Making_v15', 'Derivatives_v15', 105000002.10, 95150, 58150, 175000001.50, 70000001.50, 16.00, 24.00, 3.75, '2024-02-01'),\n      (22, 'Statistical Arbitrage US Equities_v16', 'US Equities_v16', 125000002.10, 125160, 75160, 200000001.60, 75000001.60, 10.10, 14.10, 3.85, '2024-01-31'),\n      (24, 'Market Making Fixed Income_v17', 'Fixed Income_v17', 85000002.45, 85170, 55170, 140000001.70, 55000001.70, 16.90, 20.45, 3.95, '2024-02-01'),\n      (26, 'Cross-Asset Momentum_v18', 'Multi-Asset_v18', 95000002.05, 65180, 42180, 165000001.80, 70000001.80, 12.60, 18.05, 4.05, '2024-02-03'),\n      (28, 'High Frequency ETF Arbitrage_v19', 'ETFs_v19', 65000002.70, 450190, 280190, 120000001.90, 55000001.90, 8.40, 10.65, 4.15, '2024-02-04'),\n      (30, 'Options Market Making_v20', 'Derivatives_v20', 105000002.60, 95200, 58200, 175000002.00, 70000002.00, 16.50, 24.50, 4.25, '2024-02-06');",
      "solution_sql": "WITH strategy_metrics AS (\n        SELECT \n            strategy_id,\n            strategy_name,\n            asset_class,\n            total_pnl,\n            total_trades,\n            winning_trades,\n            -- Win rate calculation\n            ROUND((CAST(winning_trades AS DECIMAL) / total_trades) * 100, 2) as win_rate_pct,\n            -- Profit factor calculation\n            CASE \n                WHEN gross_loss > 0 THEN gross_profit / gross_loss\n                ELSE 0\n            END as profit_factor,\n            -- Sharpe ratio calculation (annualized)\n            CASE \n                WHEN volatility_annual > 0 THEN \n                    ((total_pnl / 100000000.0) * 100 - risk_free_rate) / volatility_annual\n                ELSE 0\n            END as sharpe_ratio,\n            max_drawdown_pct,\n            -- Return on capital\n            ROUND((total_pnl / 1000000000.0) * 100, 2) as return_pct\n        FROM goldmansachs_algo_trading\n    )\n    SELECT \n        strategy_name,\n        asset_class,\n        ROUND(CAST(total_pnl / 1000000 AS NUMERIC), 2) as pnl_millions,\n        total_trades,\n        win_rate_pct,\n        ROUND(CAST(profit_factor AS NUMERIC), 2) as profit_factor,\n        ROUND(CAST(sharpe_ratio AS NUMERIC), 3) as sharpe_ratio,\n        ROUND(CAST(max_drawdown_pct AS NUMERIC), 2) as max_drawdown_pct,\n        return_pct\n    FROM strategy_metrics\n    WHERE sharpe_ratio > 1.8 \n        AND max_drawdown_pct < 12.0\n        AND profit_factor > 1.5\n    ORDER BY sharpe_ratio DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.799Z",
      "expected_output": [
        {
          "return_pct": "12.50",
          "asset_class": "US Equities",
          "pnl_millions": "125.00",
          "sharpe_ratio": "9.820",
          "total_trades": "125000",
          "win_rate_pct": "60.00",
          "profit_factor": "2.67",
          "strategy_name": "Statistical Arbitrage US Equities",
          "max_drawdown_pct": "8.50"
        },
        {
          "return_pct": "12.50",
          "asset_class": "US Equities_v1",
          "pnl_millions": "125.00",
          "sharpe_ratio": "9.734",
          "total_trades": "125010",
          "win_rate_pct": "60.00",
          "profit_factor": "2.67",
          "strategy_name": "Statistical Arbitrage US Equities_v1",
          "max_drawdown_pct": "8.60"
        },
        {
          "return_pct": "12.50",
          "asset_class": "US Equities_v6",
          "pnl_millions": "125.00",
          "sharpe_ratio": "9.324",
          "total_trades": "125060",
          "win_rate_pct": "60.02",
          "profit_factor": "2.67",
          "strategy_name": "Statistical Arbitrage US Equities_v6",
          "max_drawdown_pct": "9.10"
        },
        {
          "return_pct": "12.50",
          "asset_class": "US Equities_v11",
          "pnl_millions": "125.00",
          "sharpe_ratio": "8.945",
          "total_trades": "125110",
          "win_rate_pct": "60.04",
          "profit_factor": "2.67",
          "strategy_name": "Statistical Arbitrage US Equities_v11",
          "max_drawdown_pct": "9.60"
        },
        {
          "return_pct": "12.50",
          "asset_class": "US Equities_v16",
          "pnl_millions": "125.00",
          "sharpe_ratio": "8.592",
          "total_trades": "125160",
          "win_rate_pct": "60.05",
          "profit_factor": "2.67",
          "strategy_name": "Statistical Arbitrage US Equities_v16",
          "max_drawdown_pct": "10.10"
        },
        {
          "return_pct": "6.50",
          "asset_class": "ETFs",
          "pnl_millions": "65.00",
          "sharpe_ratio": "7.171",
          "total_trades": "450000",
          "win_rate_pct": "62.22",
          "profit_factor": "2.18",
          "strategy_name": "High Frequency ETF Arbitrage",
          "max_drawdown_pct": "6.50"
        },
        {
          "return_pct": "6.50",
          "asset_class": "ETFs_v4",
          "pnl_millions": "65.00",
          "sharpe_ratio": "6.814",
          "total_trades": "450040",
          "win_rate_pct": "62.23",
          "profit_factor": "2.18",
          "strategy_name": "High Frequency ETF Arbitrage_v4",
          "max_drawdown_pct": "6.90"
        },
        {
          "return_pct": "6.50",
          "asset_class": "ETFs_v9",
          "pnl_millions": "65.00",
          "sharpe_ratio": "6.409",
          "total_trades": "450090",
          "win_rate_pct": "62.23",
          "profit_factor": "2.18",
          "strategy_name": "High Frequency ETF Arbitrage_v9",
          "max_drawdown_pct": "7.40"
        },
        {
          "return_pct": "6.50",
          "asset_class": "ETFs_v14",
          "pnl_millions": "65.00",
          "sharpe_ratio": "6.044",
          "total_trades": "450140",
          "win_rate_pct": "62.23",
          "profit_factor": "2.18",
          "strategy_name": "High Frequency ETF Arbitrage_v14",
          "max_drawdown_pct": "7.90"
        },
        {
          "return_pct": "6.50",
          "asset_class": "ETFs_v19",
          "pnl_millions": "65.00",
          "sharpe_ratio": "5.714",
          "total_trades": "450190",
          "win_rate_pct": "62.24",
          "profit_factor": "2.18",
          "strategy_name": "High Frequency ETF Arbitrage_v19",
          "max_drawdown_pct": "8.40"
        },
        {
          "return_pct": "9.50",
          "asset_class": "Multi-Asset",
          "pnl_millions": "95.00",
          "sharpe_ratio": "5.708",
          "total_trades": "65000",
          "win_rate_pct": "64.62",
          "profit_factor": "2.36",
          "strategy_name": "Cross-Asset Momentum",
          "max_drawdown_pct": "10.80"
        },
        {
          "return_pct": "9.50",
          "asset_class": "Multi-Asset_v3",
          "pnl_millions": "95.00",
          "sharpe_ratio": "5.586",
          "total_trades": "65030",
          "win_rate_pct": "64.63",
          "profit_factor": "2.36",
          "strategy_name": "Cross-Asset Momentum_v3",
          "max_drawdown_pct": "11.10"
        },
        {
          "return_pct": "9.50",
          "asset_class": "Multi-Asset_v8",
          "pnl_millions": "95.00",
          "sharpe_ratio": "5.393",
          "total_trades": "65080",
          "win_rate_pct": "64.66",
          "profit_factor": "2.36",
          "strategy_name": "Cross-Asset Momentum_v8",
          "max_drawdown_pct": "11.60"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Goldman Sachs Algorithmic Trading Performance",
      "problem_slug": "berkshire-hathaway-insurance-float-optimization"
    },
    {
      "id": "07f3a466-1be4-4445-abe7-d36d40f6be0f",
      "problem_id": "fefcc89f-08b7-4473-857b-67a895af8b8b",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE goldmansachs_algo_trading (\n        strategy_id INT PRIMARY KEY,\n        strategy_name VARCHAR(100),\n        asset_class VARCHAR(50),\n        total_pnl DECIMAL(12,2),\n        total_trades INT,\n        winning_trades INT,\n        gross_profit DECIMAL(12,2),\n        gross_loss DECIMAL(12,2),\n        max_drawdown_pct DECIMAL(6,3),\n        volatility_annual DECIMAL(6,3),\n        risk_free_rate DECIMAL(6,3),\n        strategy_date DATE\n    );\n      INSERT INTO goldmansachs_algo_trading  VALUES\n      (1, 'Statistical Arbitrage US Equities', 'US Equities', 125000000.50, 125000, 75000, 200000000.00, 75000000.00, 8.500, 12.500, 2.250, '2024-01-15'),\n      (2, 'Market Making Fixed Income', 'Fixed Income', 85000000.75, 85000, 55000, 140000000.00, 55000000.00, 15.200, 18.750, 2.250, '2024-01-15'),\n      (3, 'Cross-Asset Momentum', 'Multi-Asset', 95000000.25, 65000, 42000, 165000000.00, 70000000.00, 10.800, 16.250, 2.250, '2024-01-16'),\n      (4, 'High Frequency ETF Arbitrage', 'ETFs', 65000000.80, 450000, 280000, 120000000.00, 55000000.00, 6.500, 8.750, 2.250, '2024-01-16'),\n      (5, 'Options Market Making', 'Derivatives', 105000000.60, 95000, 58000, 175000000.00, 70000000.00, 14.500, 22.500, 2.250, '2024-01-17'),\n      (7, 'Statistical Arbitrage US Equities_v1', 'US Equities_v1', 125000000.60, 125010, 75010, 200000000.10, 75000000.10, 8.60, 12.60, 2.35, '2024-01-16'),\n      (9, 'Market Making Fixed Income_v2', 'Fixed Income_v2', 85000000.95, 85020, 55020, 140000000.20, 55000000.20, 15.40, 18.95, 2.45, '2024-01-17'),\n      (11, 'Cross-Asset Momentum_v3', 'Multi-Asset_v3', 95000000.55, 65030, 42030, 165000000.30, 70000000.30, 11.10, 16.55, 2.55, '2024-01-19'),\n      (13, 'High Frequency ETF Arbitrage_v4', 'ETFs_v4', 65000001.20, 450040, 280040, 120000000.40, 55000000.40, 6.90, 9.15, 2.65, '2024-01-20'),\n      (15, 'Options Market Making_v5', 'Derivatives_v5', 105000001.10, 95050, 58050, 175000000.50, 70000000.50, 15.00, 23.00, 2.75, '2024-01-22'),\n      (12, 'Statistical Arbitrage US Equities_v6', 'US Equities_v6', 125000001.10, 125060, 75060, 200000000.60, 75000000.60, 9.10, 13.10, 2.85, '2024-01-21'),\n      (14, 'Market Making Fixed Income_v7', 'Fixed Income_v7', 85000001.45, 85070, 55070, 140000000.70, 55000000.70, 15.90, 19.45, 2.95, '2024-01-22'),\n      (16, 'Cross-Asset Momentum_v8', 'Multi-Asset_v8', 95000001.05, 65080, 42080, 165000000.80, 70000000.80, 11.60, 17.05, 3.05, '2024-01-24'),\n      (18, 'High Frequency ETF Arbitrage_v9', 'ETFs_v9', 65000001.70, 450090, 280090, 120000000.90, 55000000.90, 7.40, 9.65, 3.15, '2024-01-25'),\n      (20, 'Options Market Making_v10', 'Derivatives_v10', 105000001.60, 95100, 58100, 175000001.00, 70000001.00, 15.50, 23.50, 3.25, '2024-01-27'),\n      (17, 'Statistical Arbitrage US Equities_v11', 'US Equities_v11', 125000001.60, 125110, 75110, 200000001.10, 75000001.10, 9.60, 13.60, 3.35, '2024-01-26'),\n      (19, 'Market Making Fixed Income_v12', 'Fixed Income_v12', 85000001.95, 85120, 55120, 140000001.20, 55000001.20, 16.40, 19.95, 3.45, '2024-01-27'),\n      (21, 'Cross-Asset Momentum_v13', 'Multi-Asset_v13', 95000001.55, 65130, 42130, 165000001.30, 70000001.30, 12.10, 17.55, 3.55, '2024-01-29'),\n      (23, 'High Frequency ETF Arbitrage_v14', 'ETFs_v14', 65000002.20, 450140, 280140, 120000001.40, 55000001.40, 7.90, 10.15, 3.65, '2024-01-30'),\n      (25, 'Options Market Making_v15', 'Derivatives_v15', 105000002.10, 95150, 58150, 175000001.50, 70000001.50, 16.00, 24.00, 3.75, '2024-02-01'),\n      (22, 'Statistical Arbitrage US Equities_v16', 'US Equities_v16', 125000002.10, 125160, 75160, 200000001.60, 75000001.60, 10.10, 14.10, 3.85, '2024-01-31'),\n      (24, 'Market Making Fixed Income_v17', 'Fixed Income_v17', 85000002.45, 85170, 55170, 140000001.70, 55000001.70, 16.90, 20.45, 3.95, '2024-02-01'),\n      (26, 'Cross-Asset Momentum_v18', 'Multi-Asset_v18', 95000002.05, 65180, 42180, 165000001.80, 70000001.80, 12.60, 18.05, 4.05, '2024-02-03'),\n      (28, 'High Frequency ETF Arbitrage_v19', 'ETFs_v19', 65000002.70, 450190, 280190, 120000001.90, 55000001.90, 8.40, 10.65, 4.15, '2024-02-04'),\n      (30, 'Options Market Making_v20', 'Derivatives_v20', 105000002.60, 95200, 58200, 175000002.00, 70000002.00, 16.50, 24.50, 4.25, '2024-02-06');",
      "solution_sql": "WITH strategy_metrics AS (\n        SELECT \n            strategy_id,\n            strategy_name,\n            asset_class,\n            total_pnl,\n            total_trades,\n            winning_trades,\n            -- Win rate calculation\n            ROUND((CAST(winning_trades AS DECIMAL) / total_trades) * 100, 2) as win_rate_pct,\n            -- Profit factor calculation\n            CASE \n                WHEN gross_loss > 0 THEN gross_profit / gross_loss\n                ELSE 0\n            END as profit_factor,\n            -- Sharpe ratio calculation (annualized)\n            CASE \n                WHEN volatility_annual > 0 THEN \n                    ((total_pnl / 100000000.0) * 100 - risk_free_rate) / volatility_annual\n                ELSE 0\n            END as sharpe_ratio,\n            max_drawdown_pct,\n            -- Return on capital\n            ROUND((total_pnl / 1000000000.0) * 100, 2) as return_pct\n        FROM goldmansachs_algo_trading\n    )\n    SELECT \n        strategy_name,\n        asset_class,\n        ROUND(CAST(total_pnl / 1000000 AS NUMERIC), 2) as pnl_millions,\n        total_trades,\n        win_rate_pct,\n        ROUND(CAST(profit_factor AS NUMERIC), 2) as profit_factor,\n        ROUND(CAST(sharpe_ratio AS NUMERIC), 3) as sharpe_ratio,\n        ROUND(CAST(max_drawdown_pct AS NUMERIC), 2) as max_drawdown_pct,\n        return_pct\n    FROM strategy_metrics\n    WHERE sharpe_ratio > 1.8 \n        AND max_drawdown_pct < 12.0\n        AND profit_factor > 1.5\n    ORDER BY sharpe_ratio DESC;",
      "explanation": "Advanced algorithmic trading performance analysis using comprehensive risk-adjusted metrics for institutional trading strategies.",
      "created_at": "2025-08-11T13:51:21.538Z",
      "expected_output": [
        {
          "return_pct": "12.50",
          "asset_class": "US Equities",
          "pnl_millions": "125.00",
          "sharpe_ratio": "9.820",
          "total_trades": "125000",
          "win_rate_pct": "60.00",
          "profit_factor": "2.67",
          "strategy_name": "Statistical Arbitrage US Equities",
          "max_drawdown_pct": "8.50"
        },
        {
          "return_pct": "12.50",
          "asset_class": "US Equities_v1",
          "pnl_millions": "125.00",
          "sharpe_ratio": "9.734",
          "total_trades": "125010",
          "win_rate_pct": "60.00",
          "profit_factor": "2.67",
          "strategy_name": "Statistical Arbitrage US Equities_v1",
          "max_drawdown_pct": "8.60"
        },
        {
          "return_pct": "12.50",
          "asset_class": "US Equities_v6",
          "pnl_millions": "125.00",
          "sharpe_ratio": "9.324",
          "total_trades": "125060",
          "win_rate_pct": "60.02",
          "profit_factor": "2.67",
          "strategy_name": "Statistical Arbitrage US Equities_v6",
          "max_drawdown_pct": "9.10"
        },
        {
          "return_pct": "12.50",
          "asset_class": "US Equities_v11",
          "pnl_millions": "125.00",
          "sharpe_ratio": "8.945",
          "total_trades": "125110",
          "win_rate_pct": "60.04",
          "profit_factor": "2.67",
          "strategy_name": "Statistical Arbitrage US Equities_v11",
          "max_drawdown_pct": "9.60"
        },
        {
          "return_pct": "12.50",
          "asset_class": "US Equities_v16",
          "pnl_millions": "125.00",
          "sharpe_ratio": "8.592",
          "total_trades": "125160",
          "win_rate_pct": "60.05",
          "profit_factor": "2.67",
          "strategy_name": "Statistical Arbitrage US Equities_v16",
          "max_drawdown_pct": "10.10"
        },
        {
          "return_pct": "6.50",
          "asset_class": "ETFs",
          "pnl_millions": "65.00",
          "sharpe_ratio": "7.171",
          "total_trades": "450000",
          "win_rate_pct": "62.22",
          "profit_factor": "2.18",
          "strategy_name": "High Frequency ETF Arbitrage",
          "max_drawdown_pct": "6.50"
        },
        {
          "return_pct": "6.50",
          "asset_class": "ETFs_v4",
          "pnl_millions": "65.00",
          "sharpe_ratio": "6.814",
          "total_trades": "450040",
          "win_rate_pct": "62.23",
          "profit_factor": "2.18",
          "strategy_name": "High Frequency ETF Arbitrage_v4",
          "max_drawdown_pct": "6.90"
        },
        {
          "return_pct": "6.50",
          "asset_class": "ETFs_v9",
          "pnl_millions": "65.00",
          "sharpe_ratio": "6.409",
          "total_trades": "450090",
          "win_rate_pct": "62.23",
          "profit_factor": "2.18",
          "strategy_name": "High Frequency ETF Arbitrage_v9",
          "max_drawdown_pct": "7.40"
        },
        {
          "return_pct": "6.50",
          "asset_class": "ETFs_v14",
          "pnl_millions": "65.00",
          "sharpe_ratio": "6.044",
          "total_trades": "450140",
          "win_rate_pct": "62.23",
          "profit_factor": "2.18",
          "strategy_name": "High Frequency ETF Arbitrage_v14",
          "max_drawdown_pct": "7.90"
        },
        {
          "return_pct": "6.50",
          "asset_class": "ETFs_v19",
          "pnl_millions": "65.00",
          "sharpe_ratio": "5.714",
          "total_trades": "450190",
          "win_rate_pct": "62.24",
          "profit_factor": "2.18",
          "strategy_name": "High Frequency ETF Arbitrage_v19",
          "max_drawdown_pct": "8.40"
        },
        {
          "return_pct": "9.50",
          "asset_class": "Multi-Asset",
          "pnl_millions": "95.00",
          "sharpe_ratio": "5.708",
          "total_trades": "65000",
          "win_rate_pct": "64.62",
          "profit_factor": "2.36",
          "strategy_name": "Cross-Asset Momentum",
          "max_drawdown_pct": "10.80"
        },
        {
          "return_pct": "9.50",
          "asset_class": "Multi-Asset_v3",
          "pnl_millions": "95.00",
          "sharpe_ratio": "5.586",
          "total_trades": "65030",
          "win_rate_pct": "64.63",
          "profit_factor": "2.36",
          "strategy_name": "Cross-Asset Momentum_v3",
          "max_drawdown_pct": "11.10"
        },
        {
          "return_pct": "9.50",
          "asset_class": "Multi-Asset_v8",
          "pnl_millions": "95.00",
          "sharpe_ratio": "5.393",
          "total_trades": "65080",
          "win_rate_pct": "64.66",
          "profit_factor": "2.36",
          "strategy_name": "Cross-Asset Momentum_v8",
          "max_drawdown_pct": "11.60"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Goldman Sachs Algorithmic Trading Performance",
      "problem_slug": "berkshire-hathaway-insurance-float-optimization"
    },
    {
      "id": "125e50a9-d966-41c6-b9ff-b327a1572682",
      "problem_id": "076d0462-bff2-4b4b-a1fb-5f4fec111ea7",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE goldmansachs_prime_brokerage (\n        client_id INT PRIMARY KEY,\n        client_segment VARCHAR(50),\n        assets_under_custody DECIMAL(15,2),\n        margin_balance DECIMAL(12,2),\n        financing_revenue DECIMAL(10,2),\n        financing_spread_bps INT,\n        counterparty_risk_score DECIMAL(3,1),\n        margin_utilization_pct DECIMAL(5,2),\n        trading_volume DECIMAL(15,2),\n        relationship_years INT,\n        client_date DATE\n    );\n      INSERT INTO goldmansachs_prime_brokerage  VALUES\n      (1, 'Large Hedge Funds', 25000.00, 8500000.00, 425000.00, 185, 2.5, 78.5, 125000.00, 12, '2024-01-15'),\n      (2, 'Quantitative Funds', 18000.00, 6200000.00, 380000.00, 195, 1.8, 82.3, 285000.00, 8, '2024-01-15'),\n      (3, 'Long/Short Equity', 12000.00, 3850000.00, 245000.00, 165, 2.2, 72.8, 85000.00, 15, '2024-01-16'),\n      (4, 'Multi-Strategy', 35000.00, 12500.00, 685000.00, 220, 2.8, 89.5, 450000.00, 18, '2024-01-16'),\n      (5, 'Event Driven', 8500000.00, 2200000.00, 135000.00, 145, 3.2, 65.8, 28000.00, 6, '2024-01-17'),\n      (7, 'Large Hedge Funds_v1', 25000.10, 8500000.10, 425000.10, 195, 2.60, 78.60, 125000.10, 22, '2024-01-16'),\n      (9, 'Quantitative Funds_v2', 18000.20, 6200000.20, 380000.20, 215, 2.00, 82.50, 285000.20, 28, '2024-01-17'),\n      (11, 'Long/Short Equity_v3', 12000.30, 3850000.30, 245000.30, 195, 2.50, 73.10, 85000.30, 45, '2024-01-19'),\n      (13, 'Multi-Strategy_v4', 35000.40, 12500.40, 685000.40, 260, 3.20, 89.90, 450000.40, 58, '2024-01-20'),\n      (15, 'Event Driven_v5', 8500000.50, 2200000.50, 135000.50, 195, 3.70, 66.30, 28000.50, 56, '2024-01-22'),\n      (12, 'Large Hedge Funds_v6', 25000.60, 8500000.60, 425000.60, 245, 3.10, 79.10, 125000.60, 72, '2024-01-21'),\n      (14, 'Quantitative Funds_v7', 18000.70, 6200000.70, 380000.70, 265, 2.50, 83.00, 285000.70, 78, '2024-01-22'),\n      (16, 'Long/Short Equity_v8', 12000.80, 3850000.80, 245000.80, 245, 3.00, 73.60, 85000.80, 95, '2024-01-24'),\n      (18, 'Multi-Strategy_v9', 35000.90, 12500.90, 685000.90, 310, 3.70, 90.40, 450000.90, 108, '2024-01-25'),\n      (20, 'Event Driven_v10', 8500001.00, 2200001.00, 135001.00, 245, 4.20, 66.80, 28001.00, 106, '2024-01-27'),\n      (17, 'Large Hedge Funds_v11', 25001.10, 8500001.10, 425001.10, 295, 3.60, 79.60, 125001.10, 122, '2024-01-26'),\n      (19, 'Quantitative Funds_v12', 18001.20, 6200001.20, 380001.20, 315, 3.00, 83.50, 285001.20, 128, '2024-01-27'),\n      (21, 'Long/Short Equity_v13', 12001.30, 3850001.30, 245001.30, 295, 3.50, 74.10, 85001.30, 145, '2024-01-29'),\n      (23, 'Multi-Strategy_v14', 35001.40, 12501.40, 685001.40, 360, 4.20, 90.90, 450001.40, 158, '2024-01-30'),\n      (25, 'Event Driven_v15', 8500001.50, 2200001.50, 135001.50, 295, 4.70, 67.30, 28001.50, 156, '2024-02-01'),\n      (22, 'Large Hedge Funds_v16', 25001.60, 8500001.60, 425001.60, 345, 4.10, 80.10, 125001.60, 172, '2024-01-31'),\n      (24, 'Quantitative Funds_v17', 18001.70, 6200001.70, 380001.70, 365, 3.50, 84.00, 285001.70, 178, '2024-02-01'),\n      (26, 'Long/Short Equity_v18', 12001.80, 3850001.80, 245001.80, 345, 4.00, 74.60, 85001.80, 195, '2024-02-03'),\n      (28, 'Multi-Strategy_v19', 35001.90, 12501.90, 685001.90, 410, 4.70, 91.40, 450001.90, 208, '2024-02-04'),\n      (30, 'Event Driven_v20', 8500002.00, 2200002.00, 135002.00, 345, 5.20, 67.80, 28002.00, 206, '2024-02-06');",
      "solution_sql": "SELECT \n        client_segment,\n        ROUND(assets_under_custody / 1000000000, 2) as custody_billions,\n        ROUND(margin_balance / 1000000000, 2) as margin_billions,\n        ROUND(financing_revenue / 1000000, 2) as financing_revenue_millions,\n        financing_spread_bps,\n        counterparty_risk_score,\n        ROUND(margin_utilization_pct, 1) as margin_utilization_pct,\n        ROUND(trading_volume / 1000000000, 2) as trading_volume_billions,\n        relationship_years\n    FROM goldmansachs_prime_brokerage \n    WHERE margin_utilization_pct > 70.0 \n        AND financing_spread_bps > 150 \n        AND counterparty_risk_score < 3.0\n    ORDER BY financing_revenue_millions DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.637Z",
      "expected_output": [
        {
          "client_segment": "Multi-Strategy",
          "margin_billions": "0.00",
          "custody_billions": "0.00",
          "relationship_years": "18",
          "financing_spread_bps": "220",
          "margin_utilization_pct": "89.5",
          "counterparty_risk_score": "2.8",
          "trading_volume_billions": "0.00",
          "financing_revenue_millions": "0.69"
        },
        {
          "client_segment": "Large Hedge Funds",
          "margin_billions": "0.01",
          "custody_billions": "0.00",
          "relationship_years": "12",
          "financing_spread_bps": "185",
          "margin_utilization_pct": "78.5",
          "counterparty_risk_score": "2.5",
          "trading_volume_billions": "0.00",
          "financing_revenue_millions": "0.43"
        },
        {
          "client_segment": "Large Hedge Funds_v1",
          "margin_billions": "0.01",
          "custody_billions": "0.00",
          "relationship_years": "22",
          "financing_spread_bps": "195",
          "margin_utilization_pct": "78.6",
          "counterparty_risk_score": "2.6",
          "trading_volume_billions": "0.00",
          "financing_revenue_millions": "0.43"
        },
        {
          "client_segment": "Quantitative Funds",
          "margin_billions": "0.01",
          "custody_billions": "0.00",
          "relationship_years": "8",
          "financing_spread_bps": "195",
          "margin_utilization_pct": "82.3",
          "counterparty_risk_score": "1.8",
          "trading_volume_billions": "0.00",
          "financing_revenue_millions": "0.38"
        },
        {
          "client_segment": "Quantitative Funds_v2",
          "margin_billions": "0.01",
          "custody_billions": "0.00",
          "relationship_years": "28",
          "financing_spread_bps": "215",
          "margin_utilization_pct": "82.5",
          "counterparty_risk_score": "2.0",
          "trading_volume_billions": "0.00",
          "financing_revenue_millions": "0.38"
        },
        {
          "client_segment": "Quantitative Funds_v7",
          "margin_billions": "0.01",
          "custody_billions": "0.00",
          "relationship_years": "78",
          "financing_spread_bps": "265",
          "margin_utilization_pct": "83.0",
          "counterparty_risk_score": "2.5",
          "trading_volume_billions": "0.00",
          "financing_revenue_millions": "0.38"
        },
        {
          "client_segment": "Long/Short Equity",
          "margin_billions": "0.00",
          "custody_billions": "0.00",
          "relationship_years": "15",
          "financing_spread_bps": "165",
          "margin_utilization_pct": "72.8",
          "counterparty_risk_score": "2.2",
          "trading_volume_billions": "0.00",
          "financing_revenue_millions": "0.25"
        },
        {
          "client_segment": "Long/Short Equity_v3",
          "margin_billions": "0.00",
          "custody_billions": "0.00",
          "relationship_years": "45",
          "financing_spread_bps": "195",
          "margin_utilization_pct": "73.1",
          "counterparty_risk_score": "2.5",
          "trading_volume_billions": "0.00",
          "financing_revenue_millions": "0.25"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Goldman Sachs Prime Brokerage Analytics",
      "problem_slug": "danske-bank-risk-management-system"
    },
    {
      "id": "d158a9ef-ddda-4dd3-9c8e-0a4528b07c35",
      "problem_id": "076d0462-bff2-4b4b-a1fb-5f4fec111ea7",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE goldmansachs_prime_brokerage (\n        client_id INT PRIMARY KEY,\n        client_segment VARCHAR(50),\n        assets_under_custody DECIMAL(15,2),\n        margin_balance DECIMAL(12,2),\n        financing_revenue DECIMAL(10,2),\n        financing_spread_bps INT,\n        counterparty_risk_score DECIMAL(3,1),\n        margin_utilization_pct DECIMAL(5,2),\n        trading_volume DECIMAL(15,2),\n        relationship_years INT,\n        client_date DATE\n    );\n      INSERT INTO goldmansachs_prime_brokerage  VALUES\n      (1, 'Large Hedge Funds', 25000.00, 8500000.00, 425000.00, 185, 2.5, 78.5, 125000.00, 12, '2024-01-15'),\n      (2, 'Quantitative Funds', 18000.00, 6200000.00, 380000.00, 195, 1.8, 82.3, 285000.00, 8, '2024-01-15'),\n      (3, 'Long/Short Equity', 12000.00, 3850000.00, 245000.00, 165, 2.2, 72.8, 85000.00, 15, '2024-01-16'),\n      (4, 'Multi-Strategy', 35000.00, 12500.00, 685000.00, 220, 2.8, 89.5, 450000.00, 18, '2024-01-16'),\n      (5, 'Event Driven', 8500000.00, 2200000.00, 135000.00, 145, 3.2, 65.8, 28000.00, 6, '2024-01-17'),\n      (7, 'Large Hedge Funds_v1', 25000.10, 8500000.10, 425000.10, 195, 2.60, 78.60, 125000.10, 22, '2024-01-16'),\n      (9, 'Quantitative Funds_v2', 18000.20, 6200000.20, 380000.20, 215, 2.00, 82.50, 285000.20, 28, '2024-01-17'),\n      (11, 'Long/Short Equity_v3', 12000.30, 3850000.30, 245000.30, 195, 2.50, 73.10, 85000.30, 45, '2024-01-19'),\n      (13, 'Multi-Strategy_v4', 35000.40, 12500.40, 685000.40, 260, 3.20, 89.90, 450000.40, 58, '2024-01-20'),\n      (15, 'Event Driven_v5', 8500000.50, 2200000.50, 135000.50, 195, 3.70, 66.30, 28000.50, 56, '2024-01-22'),\n      (12, 'Large Hedge Funds_v6', 25000.60, 8500000.60, 425000.60, 245, 3.10, 79.10, 125000.60, 72, '2024-01-21'),\n      (14, 'Quantitative Funds_v7', 18000.70, 6200000.70, 380000.70, 265, 2.50, 83.00, 285000.70, 78, '2024-01-22'),\n      (16, 'Long/Short Equity_v8', 12000.80, 3850000.80, 245000.80, 245, 3.00, 73.60, 85000.80, 95, '2024-01-24'),\n      (18, 'Multi-Strategy_v9', 35000.90, 12500.90, 685000.90, 310, 3.70, 90.40, 450000.90, 108, '2024-01-25'),\n      (20, 'Event Driven_v10', 8500001.00, 2200001.00, 135001.00, 245, 4.20, 66.80, 28001.00, 106, '2024-01-27'),\n      (17, 'Large Hedge Funds_v11', 25001.10, 8500001.10, 425001.10, 295, 3.60, 79.60, 125001.10, 122, '2024-01-26'),\n      (19, 'Quantitative Funds_v12', 18001.20, 6200001.20, 380001.20, 315, 3.00, 83.50, 285001.20, 128, '2024-01-27'),\n      (21, 'Long/Short Equity_v13', 12001.30, 3850001.30, 245001.30, 295, 3.50, 74.10, 85001.30, 145, '2024-01-29'),\n      (23, 'Multi-Strategy_v14', 35001.40, 12501.40, 685001.40, 360, 4.20, 90.90, 450001.40, 158, '2024-01-30'),\n      (25, 'Event Driven_v15', 8500001.50, 2200001.50, 135001.50, 295, 4.70, 67.30, 28001.50, 156, '2024-02-01'),\n      (22, 'Large Hedge Funds_v16', 25001.60, 8500001.60, 425001.60, 345, 4.10, 80.10, 125001.60, 172, '2024-01-31'),\n      (24, 'Quantitative Funds_v17', 18001.70, 6200001.70, 380001.70, 365, 3.50, 84.00, 285001.70, 178, '2024-02-01'),\n      (26, 'Long/Short Equity_v18', 12001.80, 3850001.80, 245001.80, 345, 4.00, 74.60, 85001.80, 195, '2024-02-03'),\n      (28, 'Multi-Strategy_v19', 35001.90, 12501.90, 685001.90, 410, 4.70, 91.40, 450001.90, 208, '2024-02-04'),\n      (30, 'Event Driven_v20', 8500002.00, 2200002.00, 135002.00, 345, 5.20, 67.80, 28002.00, 206, '2024-02-06');",
      "solution_sql": "SELECT \n        client_segment,\n        ROUND(assets_under_custody / 1000000000, 2) as custody_billions,\n        ROUND(margin_balance / 1000000000, 2) as margin_billions,\n        ROUND(financing_revenue / 1000000, 2) as financing_revenue_millions,\n        financing_spread_bps,\n        counterparty_risk_score,\n        ROUND(margin_utilization_pct, 1) as margin_utilization_pct,\n        ROUND(trading_volume / 1000000000, 2) as trading_volume_billions,\n        relationship_years\n    FROM goldmansachs_prime_brokerage \n    WHERE margin_utilization_pct > 70.0 \n        AND financing_spread_bps > 150 \n        AND counterparty_risk_score < 3.0\n    ORDER BY financing_revenue_millions DESC;",
      "explanation": "Advanced Goldman Sachs prime brokerage analytics using margin utilization, financing spreads, and counterparty risk for client segmentation.",
      "created_at": "2025-08-11T17:08:07.893Z",
      "expected_output": [
        {
          "client_segment": "Multi-Strategy",
          "margin_billions": "0.00",
          "custody_billions": "0.00",
          "relationship_years": "18",
          "financing_spread_bps": "220",
          "margin_utilization_pct": "89.5",
          "counterparty_risk_score": "2.8",
          "trading_volume_billions": "0.00",
          "financing_revenue_millions": "0.69"
        },
        {
          "client_segment": "Large Hedge Funds",
          "margin_billions": "0.01",
          "custody_billions": "0.00",
          "relationship_years": "12",
          "financing_spread_bps": "185",
          "margin_utilization_pct": "78.5",
          "counterparty_risk_score": "2.5",
          "trading_volume_billions": "0.00",
          "financing_revenue_millions": "0.43"
        },
        {
          "client_segment": "Large Hedge Funds_v1",
          "margin_billions": "0.01",
          "custody_billions": "0.00",
          "relationship_years": "22",
          "financing_spread_bps": "195",
          "margin_utilization_pct": "78.6",
          "counterparty_risk_score": "2.6",
          "trading_volume_billions": "0.00",
          "financing_revenue_millions": "0.43"
        },
        {
          "client_segment": "Quantitative Funds",
          "margin_billions": "0.01",
          "custody_billions": "0.00",
          "relationship_years": "8",
          "financing_spread_bps": "195",
          "margin_utilization_pct": "82.3",
          "counterparty_risk_score": "1.8",
          "trading_volume_billions": "0.00",
          "financing_revenue_millions": "0.38"
        },
        {
          "client_segment": "Quantitative Funds_v7",
          "margin_billions": "0.01",
          "custody_billions": "0.00",
          "relationship_years": "78",
          "financing_spread_bps": "265",
          "margin_utilization_pct": "83.0",
          "counterparty_risk_score": "2.5",
          "trading_volume_billions": "0.00",
          "financing_revenue_millions": "0.38"
        },
        {
          "client_segment": "Quantitative Funds_v2",
          "margin_billions": "0.01",
          "custody_billions": "0.00",
          "relationship_years": "28",
          "financing_spread_bps": "215",
          "margin_utilization_pct": "82.5",
          "counterparty_risk_score": "2.0",
          "trading_volume_billions": "0.00",
          "financing_revenue_millions": "0.38"
        },
        {
          "client_segment": "Long/Short Equity_v3",
          "margin_billions": "0.00",
          "custody_billions": "0.00",
          "relationship_years": "45",
          "financing_spread_bps": "195",
          "margin_utilization_pct": "73.1",
          "counterparty_risk_score": "2.5",
          "trading_volume_billions": "0.00",
          "financing_revenue_millions": "0.25"
        },
        {
          "client_segment": "Long/Short Equity",
          "margin_billions": "0.00",
          "custody_billions": "0.00",
          "relationship_years": "15",
          "financing_spread_bps": "165",
          "margin_utilization_pct": "72.8",
          "counterparty_risk_score": "2.2",
          "trading_volume_billions": "0.00",
          "financing_revenue_millions": "0.25"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Goldman Sachs Prime Brokerage Analytics",
      "problem_slug": "danske-bank-risk-management-system"
    },
    {
      "id": "0896d90b-dd3f-443d-b5ea-438d639a7af6",
      "problem_id": "2b252b01-350c-481f-a78a-b0259d68e69a",
      "sql_dialect": "mysql",
      "setup_sql": "\nCREATE TABLE departments (\n    dept_id INT PRIMARY KEY,\n    dept_name VARCHAR(100),\n    head_doctor VARCHAR(100),\n    bed_capacity INT\n);\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(100),\n    age INT,\n    admission_date DATE,\n    discharge_date DATE,\n    dept_id INT,\n    treatment_outcome VARCHAR(20),\n    satisfaction_score INT,\n    FOREIGN KEY (dept_id) REFERENCES departments(dept_id)\n);\n\nINSERT INTO departments VALUES\n(1, 'Cardiology', 'Dr. Sarah Heart', 30),\n(2, 'Orthopedics', 'Dr. Mike Bone', 25),\n(3, 'Emergency', 'Dr. Lisa Quick', 40),\n(4, 'Pediatrics', 'Dr. Alex Child', 20);\n\nINSERT INTO patients VALUES\n(1, 'John Smith', 65, '2024-04-15', '2024-04-20', 1, 'Recovered', 9),\n(2, 'Emma Wilson', 45, '2024-04-16', '2024-04-18', 2, 'Recovered', 8),\n(3, 'David Brown', 30, '2024-04-17', '2024-04-17', 3, 'Recovered', 7),\n(4, 'Jessica Lee', 8, '2024-04-18', '2024-04-22', 4, 'Recovered', 10),\n(5, 'Mark Taylor', 55, '2024-04-19', '2024-04-25', 1, 'Improved', 8),\n(6, 'Anna Davis', 35, '2024-04-20', '2024-04-23', 2, 'Recovered', 9),\n(7, 'Robert Wilson', 70, '2024-04-21', '2024-04-21', 3, 'Stable', 6),\n(8, 'Maria Garcia', 12, '2024-04-22', '2024-04-24', 4, 'Recovered', 9);",
      "solution_sql": "\nSELECT \n    d.dept_name,\n    COUNT(p.patient_id) as total_patients,\n    ROUND(AVG(p.discharge_date - p.admission_date), 1) as avg_stay_days,\n    COUNT(CASE WHEN p.treatment_outcome = 'Recovered' THEN 1 END) as recovered_patients,\n    ROUND(\n        COUNT(CASE WHEN p.treatment_outcome = 'Recovered' THEN 1 END) * 100.0 / COUNT(p.patient_id), \n        2\n    ) as recovery_rate_percentage,\n    ROUND(AVG(p.satisfaction_score), 1) as avg_satisfaction_score\nFROM departments d\nJOIN patients p ON d.dept_id = p.dept_id\nGROUP BY d.dept_name\nORDER BY recovery_rate_percentage DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.675Z",
      "expected_output": [
        {
          "dept_name": "Marketing",
          "avg_stay_days": "2.5",
          "total_patients": "2",
          "recovered_patients": "2",
          "avg_satisfaction_score": "8.5",
          "recovery_rate_percentage": "100.00"
        },
        {
          "dept_name": "Design",
          "avg_stay_days": "3.0",
          "total_patients": "2",
          "recovered_patients": "2",
          "avg_satisfaction_score": "9.5",
          "recovery_rate_percentage": "100.00"
        },
        {
          "dept_name": "Engineering",
          "avg_stay_days": "5.5",
          "total_patients": "2",
          "recovered_patients": "1",
          "avg_satisfaction_score": "8.5",
          "recovery_rate_percentage": "50.00"
        },
        {
          "dept_name": "Sales",
          "avg_stay_days": "0.0",
          "total_patients": "2",
          "recovered_patients": "1",
          "avg_satisfaction_score": "6.5",
          "recovery_rate_percentage": "50.00"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Hospital Patient Care Analytics",
      "problem_slug": "google-ad-revenue-by-platform"
    },
    {
      "id": "f0719033-7e71-416c-92d5-d36c0276644f",
      "problem_id": "2b252b01-350c-481f-a78a-b0259d68e69a",
      "sql_dialect": "postgresql",
      "setup_sql": "\nCREATE TABLE departments (\n    dept_id INT PRIMARY KEY,\n    dept_name VARCHAR(100),\n    head_doctor VARCHAR(100),\n    bed_capacity INT\n);\n\nCREATE TABLE patients (\n    patient_id INT PRIMARY KEY,\n    patient_name VARCHAR(100),\n    age INT,\n    admission_date DATE,\n    discharge_date DATE,\n    dept_id INT,\n    treatment_outcome VARCHAR(20),\n    satisfaction_score INT,\n    FOREIGN KEY (dept_id) REFERENCES departments(dept_id)\n);\n\nINSERT INTO departments VALUES\n(1, 'Cardiology', 'Dr. Sarah Heart', 30),\n(2, 'Orthopedics', 'Dr. Mike Bone', 25),\n(3, 'Emergency', 'Dr. Lisa Quick', 40),\n(4, 'Pediatrics', 'Dr. Alex Child', 20);\n\nINSERT INTO patients VALUES\n(1, 'John Smith', 65, '2024-04-15', '2024-04-20', 1, 'Recovered', 9),\n(2, 'Emma Wilson', 45, '2024-04-16', '2024-04-18', 2, 'Recovered', 8),\n(3, 'David Brown', 30, '2024-04-17', '2024-04-17', 3, 'Recovered', 7),\n(4, 'Jessica Lee', 8, '2024-04-18', '2024-04-22', 4, 'Recovered', 10),\n(5, 'Mark Taylor', 55, '2024-04-19', '2024-04-25', 1, 'Improved', 8),\n(6, 'Anna Davis', 35, '2024-04-20', '2024-04-23', 2, 'Recovered', 9),\n(7, 'Robert Wilson', 70, '2024-04-21', '2024-04-21', 3, 'Stable', 6),\n(8, 'Maria Garcia', 12, '2024-04-22', '2024-04-24', 4, 'Recovered', 9);",
      "solution_sql": "\nSELECT \n    d.dept_name,\n    COUNT(p.patient_id) as total_patients,\n    ROUND(AVG(p.discharge_date - p.admission_date), 1) as avg_stay_days,\n    COUNT(CASE WHEN p.treatment_outcome = 'Recovered' THEN 1 END) as recovered_patients,\n    ROUND(\n        COUNT(CASE WHEN p.treatment_outcome = 'Recovered' THEN 1 END) * 100.0 / COUNT(p.patient_id), \n        2\n    ) as recovery_rate_percentage,\n    ROUND(AVG(p.satisfaction_score), 1) as avg_satisfaction_score\nFROM departments d\nJOIN patients p ON d.dept_id = p.dept_id\nGROUP BY d.dept_name\nORDER BY recovery_rate_percentage DESC;",
      "explanation": "This solution showcases advanced edge case handling: safe division with NULLIF, multiple result sets with UNION ALL, service classification logic, and separate analysis streams for different scenarios.",
      "created_at": "2025-08-11T17:06:42.247Z",
      "expected_output": [
        {
          "dept_name": "Pediatrics",
          "avg_stay_days": "3.0",
          "total_patients": "2",
          "recovered_patients": "2",
          "avg_satisfaction_score": "9.5",
          "recovery_rate_percentage": "100.00"
        },
        {
          "dept_name": "Orthopedics",
          "avg_stay_days": "2.5",
          "total_patients": "2",
          "recovered_patients": "2",
          "avg_satisfaction_score": "8.5",
          "recovery_rate_percentage": "100.00"
        },
        {
          "dept_name": "Cardiology",
          "avg_stay_days": "5.5",
          "total_patients": "2",
          "recovered_patients": "1",
          "avg_satisfaction_score": "8.5",
          "recovery_rate_percentage": "50.00"
        },
        {
          "dept_name": "Emergency",
          "avg_stay_days": "0.0",
          "total_patients": "2",
          "recovered_patients": "1",
          "avg_satisfaction_score": "6.5",
          "recovery_rate_percentage": "50.00"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Hospital Patient Care Analytics",
      "problem_slug": "google-ad-revenue-by-platform"
    },
    {
      "id": "8ba68600-396e-4555-b2d2-86912c2314c1",
      "problem_id": "48c005a7-d8da-47b7-b266-8abc09bc7ba9",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE trade_transactions (\n          transaction_id INT PRIMARY KEY,\n          trade_type VARCHAR(50),\n          transaction_value_millions DECIMAL(8,2),\n          geographic_corridor VARCHAR(50),\n          processing_days INT\n      );\n      INSERT INTO trade_transactions  VALUES\n      (1, 'Letter of Credit', 2.5, 'Asia-Europe', 5),\n      (2, 'Documentary Collection', 1.8, 'Americas-Asia', 7),\n      (3, 'Trade Guarantee', 4.2, 'Europe-Middle East', 3),\n      (4, 'Supply Chain Finance', 3.6, 'Asia-Americas', 4),\n      (5, 'Export Finance', 5.8, 'Europe-Africa', 6),\n      (7, 'Letter of Credit_v1', 2.60, 'Asia-Europe_v1', 15),\n      (9, 'Documentary Collection_v2', 2.00, 'Americas-Asia_v2', 27),\n      (11, 'Trade Guarantee_v3', 4.50, 'Europe-Middle East_v3', 33),\n      (13, 'Supply Chain Finance_v4', 4.00, 'Asia-Americas_v4', 44),\n      (15, 'Export Finance_v5', 6.30, 'Europe-Africa_v5', 56),\n      (12, 'Letter of Credit_v6', 3.10, 'Asia-Europe_v6', 65),\n      (14, 'Documentary Collection_v7', 2.50, 'Americas-Asia_v7', 77),\n      (16, 'Trade Guarantee_v8', 5.00, 'Europe-Middle East_v8', 83),\n      (18, 'Supply Chain Finance_v9', 4.50, 'Asia-Americas_v9', 94),\n      (20, 'Export Finance_v10', 6.80, 'Europe-Africa_v10', 106),\n      (17, 'Letter of Credit_v11', 3.60, 'Asia-Europe_v11', 115),\n      (19, 'Documentary Collection_v12', 3.00, 'Americas-Asia_v12', 127),\n      (21, 'Trade Guarantee_v13', 5.50, 'Europe-Middle East_v13', 133),\n      (23, 'Supply Chain Finance_v14', 5.00, 'Asia-Americas_v14', 144),\n      (25, 'Export Finance_v15', 7.30, 'Europe-Africa_v15', 156),\n      (22, 'Letter of Credit_v16', 4.10, 'Asia-Europe_v16', 165),\n      (24, 'Documentary Collection_v17', 3.50, 'Americas-Asia_v17', 177),\n      (26, 'Trade Guarantee_v18', 6.00, 'Europe-Middle East_v18', 183),\n      (28, 'Supply Chain Finance_v19', 5.50, 'Asia-Americas_v19', 194),\n      (30, 'Export Finance_v20', 7.80, 'Europe-Africa_v20', 206);",
      "solution_sql": "SELECT trade_type, AVG(transaction_value_millions) as avg_value\nFROM trade_transactions \nGROUP BY trade_type \nHAVING AVG(transaction_value_millions) > 3.0 \nORDER BY avg_value DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.693Z",
      "expected_output": [
        {
          "avg_value": "7.800000",
          "trade_type": "Export Finance_v20"
        },
        {
          "avg_value": "7.300000",
          "trade_type": "Export Finance_v15"
        },
        {
          "avg_value": "6.800000",
          "trade_type": "Export Finance_v10"
        },
        {
          "avg_value": "6.300000",
          "trade_type": "Export Finance_v5"
        },
        {
          "avg_value": "6.000000",
          "trade_type": "Trade Guarantee_v18"
        },
        {
          "avg_value": "5.800000",
          "trade_type": "Export Finance"
        },
        {
          "avg_value": "5.500000",
          "trade_type": "Supply Chain Finance_v19"
        },
        {
          "avg_value": "5.500000",
          "trade_type": "Trade Guarantee_v13"
        },
        {
          "avg_value": "5.000000",
          "trade_type": "Trade Guarantee_v8"
        },
        {
          "avg_value": "5.000000",
          "trade_type": "Supply Chain Finance_v14"
        },
        {
          "avg_value": "4.500000",
          "trade_type": "Supply Chain Finance_v9"
        },
        {
          "avg_value": "4.500000",
          "trade_type": "Trade Guarantee_v3"
        },
        {
          "avg_value": "4.200000",
          "trade_type": "Trade Guarantee"
        },
        {
          "avg_value": "4.100000",
          "trade_type": "Letter of Credit_v16"
        },
        {
          "avg_value": "4.000000",
          "trade_type": "Supply Chain Finance_v4"
        },
        {
          "avg_value": "3.600000",
          "trade_type": "Letter of Credit_v11"
        },
        {
          "avg_value": "3.600000",
          "trade_type": "Supply Chain Finance"
        },
        {
          "avg_value": "3.500000",
          "trade_type": "Documentary Collection_v17"
        },
        {
          "avg_value": "3.100000",
          "trade_type": "Letter of Credit_v6"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "HSBC Trade Finance Analytics",
      "problem_slug": "deutsche-bank-risk-management-system"
    },
    {
      "id": "f114bb70-6158-4d8f-9bc9-972fa74dc895",
      "problem_id": "48c005a7-d8da-47b7-b266-8abc09bc7ba9",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE trade_transactions (\n          transaction_id INT PRIMARY KEY,\n          trade_type VARCHAR(50),\n          transaction_value_millions DECIMAL(8,2),\n          geographic_corridor VARCHAR(50),\n          processing_days INT\n      );\n      INSERT INTO trade_transactions  VALUES\n      (1, 'Letter of Credit', 2.5, 'Asia-Europe', 5),\n      (2, 'Documentary Collection', 1.8, 'Americas-Asia', 7),\n      (3, 'Trade Guarantee', 4.2, 'Europe-Middle East', 3),\n      (4, 'Supply Chain Finance', 3.6, 'Asia-Americas', 4),\n      (5, 'Export Finance', 5.8, 'Europe-Africa', 6),\n      (7, 'Letter of Credit_v1', 2.60, 'Asia-Europe_v1', 15),\n      (9, 'Documentary Collection_v2', 2.00, 'Americas-Asia_v2', 27),\n      (11, 'Trade Guarantee_v3', 4.50, 'Europe-Middle East_v3', 33),\n      (13, 'Supply Chain Finance_v4', 4.00, 'Asia-Americas_v4', 44),\n      (15, 'Export Finance_v5', 6.30, 'Europe-Africa_v5', 56),\n      (12, 'Letter of Credit_v6', 3.10, 'Asia-Europe_v6', 65),\n      (14, 'Documentary Collection_v7', 2.50, 'Americas-Asia_v7', 77),\n      (16, 'Trade Guarantee_v8', 5.00, 'Europe-Middle East_v8', 83),\n      (18, 'Supply Chain Finance_v9', 4.50, 'Asia-Americas_v9', 94),\n      (20, 'Export Finance_v10', 6.80, 'Europe-Africa_v10', 106),\n      (17, 'Letter of Credit_v11', 3.60, 'Asia-Europe_v11', 115),\n      (19, 'Documentary Collection_v12', 3.00, 'Americas-Asia_v12', 127),\n      (21, 'Trade Guarantee_v13', 5.50, 'Europe-Middle East_v13', 133),\n      (23, 'Supply Chain Finance_v14', 5.00, 'Asia-Americas_v14', 144),\n      (25, 'Export Finance_v15', 7.30, 'Europe-Africa_v15', 156),\n      (22, 'Letter of Credit_v16', 4.10, 'Asia-Europe_v16', 165),\n      (24, 'Documentary Collection_v17', 3.50, 'Americas-Asia_v17', 177),\n      (26, 'Trade Guarantee_v18', 6.00, 'Europe-Middle East_v18', 183),\n      (28, 'Supply Chain Finance_v19', 5.50, 'Asia-Americas_v19', 194),\n      (30, 'Export Finance_v20', 7.80, 'Europe-Africa_v20', 206);",
      "solution_sql": "SELECT trade_type, AVG(transaction_value_millions) as avg_value\nFROM trade_transactions \nGROUP BY trade_type \nHAVING AVG(transaction_value_millions) > 3.0 \nORDER BY avg_value DESC;",
      "explanation": "Advanced HSBC trade finance analytics using transaction volumes, country risk assessment, and profitability metrics for corridor optimization.",
      "created_at": "2025-08-11T17:08:07.883Z",
      "expected_output": [
        {
          "avg_value": "7.8000000000000000",
          "trade_type": "Export Finance_v20"
        },
        {
          "avg_value": "7.3000000000000000",
          "trade_type": "Export Finance_v15"
        },
        {
          "avg_value": "6.8000000000000000",
          "trade_type": "Export Finance_v10"
        },
        {
          "avg_value": "6.3000000000000000",
          "trade_type": "Export Finance_v5"
        },
        {
          "avg_value": "6.0000000000000000",
          "trade_type": "Trade Guarantee_v18"
        },
        {
          "avg_value": "5.8000000000000000",
          "trade_type": "Export Finance"
        },
        {
          "avg_value": "5.5000000000000000",
          "trade_type": "Trade Guarantee_v13"
        },
        {
          "avg_value": "5.5000000000000000",
          "trade_type": "Supply Chain Finance_v19"
        },
        {
          "avg_value": "5.0000000000000000",
          "trade_type": "Supply Chain Finance_v14"
        },
        {
          "avg_value": "5.0000000000000000",
          "trade_type": "Trade Guarantee_v8"
        },
        {
          "avg_value": "4.5000000000000000",
          "trade_type": "Trade Guarantee_v3"
        },
        {
          "avg_value": "4.5000000000000000",
          "trade_type": "Supply Chain Finance_v9"
        },
        {
          "avg_value": "4.2000000000000000",
          "trade_type": "Trade Guarantee"
        },
        {
          "avg_value": "4.1000000000000000",
          "trade_type": "Letter of Credit_v16"
        },
        {
          "avg_value": "4.0000000000000000",
          "trade_type": "Supply Chain Finance_v4"
        },
        {
          "avg_value": "3.6000000000000000",
          "trade_type": "Supply Chain Finance"
        },
        {
          "avg_value": "3.6000000000000000",
          "trade_type": "Letter of Credit_v11"
        },
        {
          "avg_value": "3.5000000000000000",
          "trade_type": "Documentary Collection_v17"
        },
        {
          "avg_value": "3.1000000000000000",
          "trade_type": "Letter of Credit_v6"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "HSBC Trade Finance Analytics",
      "problem_slug": "deutsche-bank-risk-management-system"
    },
    {
      "id": "beee6807-8ca6-48cf-ba53-9f9c11633c33",
      "problem_id": "9da41be0-656e-4919-8987-25e333bef4c6",
      "sql_dialect": "mysql",
      "setup_sql": "\nCREATE TABLE neighborhoods (\n    neighborhood_id INT PRIMARY KEY,\n    neighborhood_name VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    avg_income DECIMAL(10,2)\n);\n\nCREATE TABLE properties (\n    property_id INT PRIMARY KEY,\n    neighborhood_id INT,\n    property_type VARCHAR(50),\n    bedrooms INT,\n    bathrooms DECIMAL(3,1),\n    square_feet INT,\n    sale_price DECIMAL(12,2),\n    sale_date DATE,\n    FOREIGN KEY (neighborhood_id) REFERENCES neighborhoods(neighborhood_id)\n);\n\nINSERT INTO neighborhoods VALUES\n(1, 'Downtown', 'Seattle', 'WA', 85000.00),\n(2, 'Suburb Hills', 'Seattle', 'WA', 95000.00),\n(3, 'Riverside', 'Seattle', 'WA', 75000.00),\n(4, 'Tech District', 'Seattle', 'WA', 120000.00);\n\nINSERT INTO properties VALUES\n(1, 1, 'Condo', 2, 2.0, 1200, 650000.00, '2024-04-15'),\n(2, 1, 'Condo', 1, 1.0, 800, 450000.00, '2024-04-18'),\n(3, 2, 'Single Family', 4, 3.0, 2500, 850000.00, '2024-04-20'),\n(4, 2, 'Single Family', 3, 2.5, 2000, 720000.00, '2024-04-22'),\n(5, 3, 'Townhouse', 3, 2.5, 1800, 580000.00, '2024-04-25'),\n(6, 3, 'Townhouse', 2, 2.0, 1500, 480000.00, '2024-04-28'),\n(7, 4, 'Condo', 2, 2.0, 1100, 780000.00, '2024-05-01'),\n(8, 4, 'Single Family', 3, 2.5, 1900, 920000.00, '2024-05-03');",
      "solution_sql": "\nSELECT \n    n.neighborhood_name,\n    p.property_type,\n    COUNT(p.property_id) as properties_sold,\n    ROUND(AVG(p.sale_price), 0) as avg_sale_price,\n    ROUND(AVG(p.sale_price / p.square_feet), 2) as price_per_sqft,\n    ROUND(AVG(p.square_feet), 0) as avg_square_feet\nFROM neighborhoods n\nJOIN properties p ON n.neighborhood_id = p.neighborhood_id\nGROUP BY n.neighborhood_name, p.property_type\nORDER BY avg_sale_price DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.737Z",
      "expected_output": [
        {
          "property_type": "Single Family",
          "avg_sale_price": "920000",
          "price_per_sqft": "484.21",
          "avg_square_feet": "1900",
          "properties_sold": "1",
          "neighborhood_name": "Tech District"
        },
        {
          "property_type": "Single Family",
          "avg_sale_price": "785000",
          "price_per_sqft": "350.00",
          "avg_square_feet": "2250",
          "properties_sold": "2",
          "neighborhood_name": "Suburb Hills"
        },
        {
          "property_type": "Condo",
          "avg_sale_price": "780000",
          "price_per_sqft": "709.09",
          "avg_square_feet": "1100",
          "properties_sold": "1",
          "neighborhood_name": "Tech District"
        },
        {
          "property_type": "Condo",
          "avg_sale_price": "550000",
          "price_per_sqft": "552.08",
          "avg_square_feet": "1000",
          "properties_sold": "2",
          "neighborhood_name": "Downtown"
        },
        {
          "property_type": "Townhouse",
          "avg_sale_price": "530000",
          "price_per_sqft": "321.11",
          "avg_square_feet": "1650",
          "properties_sold": "2",
          "neighborhood_name": "Riverside"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Real Estate Market Analysis",
      "problem_slug": "home-depot-revenue-analysis"
    },
    {
      "id": "35dde1f9-a12f-46ab-93dc-0f0b22da3449",
      "problem_id": "9da41be0-656e-4919-8987-25e333bef4c6",
      "sql_dialect": "postgresql",
      "setup_sql": "\nCREATE TABLE neighborhoods (\n    neighborhood_id INT PRIMARY KEY,\n    neighborhood_name VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    avg_income DECIMAL(10,2)\n);\n\nCREATE TABLE properties (\n    property_id INT PRIMARY KEY,\n    neighborhood_id INT,\n    property_type VARCHAR(50),\n    bedrooms INT,\n    bathrooms DECIMAL(3,1),\n    square_feet INT,\n    sale_price DECIMAL(12,2),\n    sale_date DATE,\n    FOREIGN KEY (neighborhood_id) REFERENCES neighborhoods(neighborhood_id)\n);\n\nINSERT INTO neighborhoods VALUES\n(1, 'Downtown', 'Seattle', 'WA', 85000.00),\n(2, 'Suburb Hills', 'Seattle', 'WA', 95000.00),\n(3, 'Riverside', 'Seattle', 'WA', 75000.00),\n(4, 'Tech District', 'Seattle', 'WA', 120000.00);\n\nINSERT INTO properties VALUES\n(1, 1, 'Condo', 2, 2.0, 1200, 650000.00, '2024-04-15'),\n(2, 1, 'Condo', 1, 1.0, 800, 450000.00, '2024-04-18'),\n(3, 2, 'Single Family', 4, 3.0, 2500, 850000.00, '2024-04-20'),\n(4, 2, 'Single Family', 3, 2.5, 2000, 720000.00, '2024-04-22'),\n(5, 3, 'Townhouse', 3, 2.5, 1800, 580000.00, '2024-04-25'),\n(6, 3, 'Townhouse', 2, 2.0, 1500, 480000.00, '2024-04-28'),\n(7, 4, 'Condo', 2, 2.0, 1100, 780000.00, '2024-05-01'),\n(8, 4, 'Single Family', 3, 2.5, 1900, 920000.00, '2024-05-03');",
      "solution_sql": "\nSELECT \n    n.neighborhood_name,\n    p.property_type,\n    COUNT(p.property_id) as properties_sold,\n    ROUND(AVG(p.sale_price), 0) as avg_sale_price,\n    ROUND(AVG(p.sale_price / p.square_feet), 2) as price_per_sqft,\n    ROUND(AVG(p.square_feet), 0) as avg_square_feet\nFROM neighborhoods n\nJOIN properties p ON n.neighborhood_id = p.neighborhood_id\nGROUP BY n.neighborhood_name, p.property_type\nORDER BY avg_sale_price DESC;",
      "explanation": "Home Depot supply chain analysis using SUM aggregation with HAVING clause for inventory management optimization.",
      "created_at": "2025-08-11T17:08:07.773Z",
      "expected_output": [
        {
          "property_type": "Single Family",
          "avg_sale_price": "920000",
          "price_per_sqft": "484.21",
          "avg_square_feet": "1900",
          "properties_sold": "1",
          "neighborhood_name": "Tech District"
        },
        {
          "property_type": "Single Family",
          "avg_sale_price": "785000",
          "price_per_sqft": "350.00",
          "avg_square_feet": "2250",
          "properties_sold": "2",
          "neighborhood_name": "Suburb Hills"
        },
        {
          "property_type": "Condo",
          "avg_sale_price": "780000",
          "price_per_sqft": "709.09",
          "avg_square_feet": "1100",
          "properties_sold": "1",
          "neighborhood_name": "Tech District"
        },
        {
          "property_type": "Condo",
          "avg_sale_price": "550000",
          "price_per_sqft": "552.08",
          "avg_square_feet": "1000",
          "properties_sold": "2",
          "neighborhood_name": "Downtown"
        },
        {
          "property_type": "Townhouse",
          "avg_sale_price": "530000",
          "price_per_sqft": "321.11",
          "avg_square_feet": "1650",
          "properties_sold": "2",
          "neighborhood_name": "Riverside"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Real Estate Market Analysis",
      "problem_slug": "home-depot-revenue-analysis"
    },
    {
      "id": "55a2f5cb-5c1c-4b39-aa7b-86c1b56c18d7",
      "problem_id": "c9150191-e1c2-428e-bfa7-10cd2aca4516",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE ing_sustainable_finance (\n        product_id INT PRIMARY KEY,\n        financing_product VARCHAR(50),\n        financing_amount DECIMAL(12,2),\n        carbon_offset_tons DECIMAL(10,2),\n        esg_risk_score DECIMAL(3,1),\n        green_premium_bps INT,\n        renewable_energy_mw DECIMAL(8,2),\n        sustainability_impact_score DECIMAL(4,2),\n        regulatory_compliance_pct DECIMAL(5,2),\n        client_adoption_rate DECIMAL(5,2),\n        product_date DATE\n    );\n      INSERT INTO ing_sustainable_finance  VALUES\n      (1, 'Green Bonds', 2500000000.00, 125000.50, 8.5, 35, 1850.25, 9.2, 98.5, 82.3, '2024-01-15'),\n      (2, 'Renewable Energy Loans', 1850000000.00, 98500.75, 8.8, 28, 2250.80, 9.5, 99.2, 78.8, '2024-01-15'),\n      (3, 'ESG Corporate Bonds', 3200000000.00, 88500.25, 7.9, 42, 1250.60, 8.8, 97.8, 85.5, '2024-01-16'),\n      (4, 'Sustainable Supply Chain', 950000000.00, 45200.80, 8.2, 32, 850.40, 8.9, 98.8, 72.5, '2024-01-16'),\n      (5, 'Climate Transition Loans', 1250000000.00, 65800.60, 8.1, 55, 1580.20, 8.6, 96.5, 69.8, '2024-01-17'),\n      (7, 'Green Bonds_v1', 2500000000.10, 125000.60, 8.60, 45, 1850.35, 9.30, 98.60, 82.40, '2024-01-16'),\n      (9, 'Renewable Energy Loans_v2', 1850000000.20, 98500.95, 9.00, 48, 2251.00, 9.70, 99.40, 79.00, '2024-01-17'),\n      (11, 'ESG Corporate Bonds_v3', 3200000000.30, 88500.55, 8.20, 72, 1250.90, 9.10, 98.10, 85.80, '2024-01-19'),\n      (13, 'Sustainable Supply Chain_v4', 950000000.40, 45201.20, 8.60, 72, 850.80, 9.30, 99.20, 72.90, '2024-01-20'),\n      (15, 'Climate Transition Loans_v5', 1250000000.50, 65801.10, 8.60, 105, 1580.70, 9.10, 97.00, 70.30, '2024-01-22'),\n      (12, 'Green Bonds_v6', 2500000000.60, 125001.10, 9.10, 95, 1850.85, 9.80, 99.10, 82.90, '2024-01-21'),\n      (14, 'Renewable Energy Loans_v7', 1850000000.70, 98501.45, 9.50, 98, 2251.50, 10.20, 99.90, 79.50, '2024-01-22'),\n      (16, 'ESG Corporate Bonds_v8', 3200000000.80, 88501.05, 8.70, 122, 1251.40, 9.60, 98.60, 86.30, '2024-01-24'),\n      (18, 'Sustainable Supply Chain_v9', 950000000.90, 45201.70, 9.10, 122, 851.30, 9.80, 99.70, 73.40, '2024-01-25'),\n      (20, 'Climate Transition Loans_v10', 1250000001.00, 65801.60, 9.10, 155, 1581.20, 9.60, 97.50, 70.80, '2024-01-27'),\n      (17, 'Green Bonds_v11', 2500000001.10, 125001.60, 9.60, 145, 1851.35, 10.30, 99.60, 83.40, '2024-01-26'),\n      (19, 'Renewable Energy Loans_v12', 1850000001.20, 98501.95, 10.00, 148, 2252.00, 10.70, 100.40, 80.00, '2024-01-27'),\n      (21, 'ESG Corporate Bonds_v13', 3200000001.30, 88501.55, 9.20, 172, 1251.90, 10.10, 99.10, 86.80, '2024-01-29'),\n      (23, 'Sustainable Supply Chain_v14', 950000001.40, 45202.20, 9.60, 172, 851.80, 10.30, 100.20, 73.90, '2024-01-30'),\n      (25, 'Climate Transition Loans_v15', 1250000001.50, 65802.10, 9.60, 205, 1581.70, 10.10, 98.00, 71.30, '2024-02-01'),\n      (22, 'Green Bonds_v16', 2500000001.60, 125002.10, 10.10, 195, 1851.85, 10.80, 100.10, 83.90, '2024-01-31'),\n      (24, 'Renewable Energy Loans_v17', 1850000001.70, 98502.45, 10.50, 198, 2252.50, 11.20, 100.90, 80.50, '2024-02-01'),\n      (26, 'ESG Corporate Bonds_v18', 3200000001.80, 88502.05, 9.70, 222, 1252.40, 10.60, 99.60, 87.30, '2024-02-03'),\n      (28, 'Sustainable Supply Chain_v19', 950000001.90, 45202.70, 10.10, 222, 852.30, 10.80, 100.70, 74.40, '2024-02-04'),\n      (30, 'Climate Transition Loans_v20', 1250000002.00, 65802.60, 10.10, 255, 1582.20, 10.60, 98.50, 71.80, '2024-02-06');",
      "solution_sql": "SELECT \n        financing_product,\n        ROUND(financing_amount / 1000000000, 2) as financing_billions,\n        ROUND(carbon_offset_tons, 2) as carbon_offset_tons,\n        esg_risk_score,\n        green_premium_bps,\n        ROUND(renewable_energy_mw, 2) as renewable_mw,\n        ROUND(sustainability_impact_score, 1) as impact_score,\n        ROUND(regulatory_compliance_pct, 1) as compliance_pct,\n        ROUND(client_adoption_rate, 1) as adoption_rate_pct\n    FROM ing_sustainable_finance \n    WHERE carbon_offset_tons > 10000 \n        AND esg_risk_score > 8.0 \n        AND green_premium_bps < 50\n    ORDER BY carbon_offset_tons DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.768Z",
      "expected_output": [
        {
          "impact_score": "9.3",
          "renewable_mw": "1850.35",
          "compliance_pct": "98.6",
          "esg_risk_score": "8.6",
          "adoption_rate_pct": "82.4",
          "financing_product": "Green Bonds_v1",
          "green_premium_bps": "45",
          "carbon_offset_tons": "125000.60",
          "financing_billions": "2.50"
        },
        {
          "impact_score": "9.2",
          "renewable_mw": "1850.25",
          "compliance_pct": "98.5",
          "esg_risk_score": "8.5",
          "adoption_rate_pct": "82.3",
          "financing_product": "Green Bonds",
          "green_premium_bps": "35",
          "carbon_offset_tons": "125000.50",
          "financing_billions": "2.50"
        },
        {
          "impact_score": "9.7",
          "renewable_mw": "2251.00",
          "compliance_pct": "99.4",
          "esg_risk_score": "9.0",
          "adoption_rate_pct": "79.0",
          "financing_product": "Renewable Energy Loans_v2",
          "green_premium_bps": "48",
          "carbon_offset_tons": "98500.95",
          "financing_billions": "1.85"
        },
        {
          "impact_score": "9.5",
          "renewable_mw": "2250.80",
          "compliance_pct": "99.2",
          "esg_risk_score": "8.8",
          "adoption_rate_pct": "78.8",
          "financing_product": "Renewable Energy Loans",
          "green_premium_bps": "28",
          "carbon_offset_tons": "98500.75",
          "financing_billions": "1.85"
        },
        {
          "impact_score": "8.9",
          "renewable_mw": "850.40",
          "compliance_pct": "98.8",
          "esg_risk_score": "8.2",
          "adoption_rate_pct": "72.5",
          "financing_product": "Sustainable Supply Chain",
          "green_premium_bps": "32",
          "carbon_offset_tons": "45200.80",
          "financing_billions": "0.95"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "ING Sustainable Finance Analytics",
      "problem_slug": "goldman-sachs-risk-management-system"
    },
    {
      "id": "24e41ec7-eb7c-47f9-af5b-b3642418fbb7",
      "problem_id": "c9150191-e1c2-428e-bfa7-10cd2aca4516",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE ing_sustainable_finance (\n        product_id INT PRIMARY KEY,\n        financing_product VARCHAR(50),\n        financing_amount DECIMAL(12,2),\n        carbon_offset_tons DECIMAL(10,2),\n        esg_risk_score DECIMAL(3,1),\n        green_premium_bps INT,\n        renewable_energy_mw DECIMAL(8,2),\n        sustainability_impact_score DECIMAL(4,2),\n        regulatory_compliance_pct DECIMAL(5,2),\n        client_adoption_rate DECIMAL(5,2),\n        product_date DATE\n    );\n      INSERT INTO ing_sustainable_finance  VALUES\n      (1, 'Green Bonds', 2500000000.00, 125000.50, 8.5, 35, 1850.25, 9.2, 98.5, 82.3, '2024-01-15'),\n      (2, 'Renewable Energy Loans', 1850000000.00, 98500.75, 8.8, 28, 2250.80, 9.5, 99.2, 78.8, '2024-01-15'),\n      (3, 'ESG Corporate Bonds', 3200000000.00, 88500.25, 7.9, 42, 1250.60, 8.8, 97.8, 85.5, '2024-01-16'),\n      (4, 'Sustainable Supply Chain', 950000000.00, 45200.80, 8.2, 32, 850.40, 8.9, 98.8, 72.5, '2024-01-16'),\n      (5, 'Climate Transition Loans', 1250000000.00, 65800.60, 8.1, 55, 1580.20, 8.6, 96.5, 69.8, '2024-01-17'),\n      (7, 'Green Bonds_v1', 2500000000.10, 125000.60, 8.60, 45, 1850.35, 9.30, 98.60, 82.40, '2024-01-16'),\n      (9, 'Renewable Energy Loans_v2', 1850000000.20, 98500.95, 9.00, 48, 2251.00, 9.70, 99.40, 79.00, '2024-01-17'),\n      (11, 'ESG Corporate Bonds_v3', 3200000000.30, 88500.55, 8.20, 72, 1250.90, 9.10, 98.10, 85.80, '2024-01-19'),\n      (13, 'Sustainable Supply Chain_v4', 950000000.40, 45201.20, 8.60, 72, 850.80, 9.30, 99.20, 72.90, '2024-01-20'),\n      (15, 'Climate Transition Loans_v5', 1250000000.50, 65801.10, 8.60, 105, 1580.70, 9.10, 97.00, 70.30, '2024-01-22'),\n      (12, 'Green Bonds_v6', 2500000000.60, 125001.10, 9.10, 95, 1850.85, 9.80, 99.10, 82.90, '2024-01-21'),\n      (14, 'Renewable Energy Loans_v7', 1850000000.70, 98501.45, 9.50, 98, 2251.50, 10.20, 99.90, 79.50, '2024-01-22'),\n      (16, 'ESG Corporate Bonds_v8', 3200000000.80, 88501.05, 8.70, 122, 1251.40, 9.60, 98.60, 86.30, '2024-01-24'),\n      (18, 'Sustainable Supply Chain_v9', 950000000.90, 45201.70, 9.10, 122, 851.30, 9.80, 99.70, 73.40, '2024-01-25'),\n      (20, 'Climate Transition Loans_v10', 1250000001.00, 65801.60, 9.10, 155, 1581.20, 9.60, 97.50, 70.80, '2024-01-27'),\n      (17, 'Green Bonds_v11', 2500000001.10, 125001.60, 9.60, 145, 1851.35, 10.30, 99.60, 83.40, '2024-01-26'),\n      (19, 'Renewable Energy Loans_v12', 1850000001.20, 98501.95, 10.00, 148, 2252.00, 10.70, 100.40, 80.00, '2024-01-27'),\n      (21, 'ESG Corporate Bonds_v13', 3200000001.30, 88501.55, 9.20, 172, 1251.90, 10.10, 99.10, 86.80, '2024-01-29'),\n      (23, 'Sustainable Supply Chain_v14', 950000001.40, 45202.20, 9.60, 172, 851.80, 10.30, 100.20, 73.90, '2024-01-30'),\n      (25, 'Climate Transition Loans_v15', 1250000001.50, 65802.10, 9.60, 205, 1581.70, 10.10, 98.00, 71.30, '2024-02-01'),\n      (22, 'Green Bonds_v16', 2500000001.60, 125002.10, 10.10, 195, 1851.85, 10.80, 100.10, 83.90, '2024-01-31'),\n      (24, 'Renewable Energy Loans_v17', 1850000001.70, 98502.45, 10.50, 198, 2252.50, 11.20, 100.90, 80.50, '2024-02-01'),\n      (26, 'ESG Corporate Bonds_v18', 3200000001.80, 88502.05, 9.70, 222, 1252.40, 10.60, 99.60, 87.30, '2024-02-03'),\n      (28, 'Sustainable Supply Chain_v19', 950000001.90, 45202.70, 10.10, 222, 852.30, 10.80, 100.70, 74.40, '2024-02-04'),\n      (30, 'Climate Transition Loans_v20', 1250000002.00, 65802.60, 10.10, 255, 1582.20, 10.60, 98.50, 71.80, '2024-02-06');",
      "solution_sql": "SELECT \n        financing_product,\n        ROUND(financing_amount / 1000000000, 2) as financing_billions,\n        ROUND(carbon_offset_tons, 2) as carbon_offset_tons,\n        esg_risk_score,\n        green_premium_bps,\n        ROUND(renewable_energy_mw, 2) as renewable_mw,\n        ROUND(sustainability_impact_score, 1) as impact_score,\n        ROUND(regulatory_compliance_pct, 1) as compliance_pct,\n        ROUND(client_adoption_rate, 1) as adoption_rate_pct\n    FROM ing_sustainable_finance \n    WHERE carbon_offset_tons > 10000 \n        AND esg_risk_score > 8.0 \n        AND green_premium_bps < 50\n    ORDER BY carbon_offset_tons DESC;",
      "explanation": "Advanced ING sustainable finance analytics using carbon offset impact, ESG risk scores, and green premium analysis for ESG portfolio optimization.",
      "created_at": "2025-08-11T17:08:07.881Z",
      "expected_output": [
        {
          "impact_score": "9.3",
          "renewable_mw": "1850.35",
          "compliance_pct": "98.6",
          "esg_risk_score": "8.6",
          "adoption_rate_pct": "82.4",
          "financing_product": "Green Bonds_v1",
          "green_premium_bps": "45",
          "carbon_offset_tons": "125000.60",
          "financing_billions": "2.50"
        },
        {
          "impact_score": "9.2",
          "renewable_mw": "1850.25",
          "compliance_pct": "98.5",
          "esg_risk_score": "8.5",
          "adoption_rate_pct": "82.3",
          "financing_product": "Green Bonds",
          "green_premium_bps": "35",
          "carbon_offset_tons": "125000.50",
          "financing_billions": "2.50"
        },
        {
          "impact_score": "9.7",
          "renewable_mw": "2251.00",
          "compliance_pct": "99.4",
          "esg_risk_score": "9.0",
          "adoption_rate_pct": "79.0",
          "financing_product": "Renewable Energy Loans_v2",
          "green_premium_bps": "48",
          "carbon_offset_tons": "98500.95",
          "financing_billions": "1.85"
        },
        {
          "impact_score": "9.5",
          "renewable_mw": "2250.80",
          "compliance_pct": "99.2",
          "esg_risk_score": "8.8",
          "adoption_rate_pct": "78.8",
          "financing_product": "Renewable Energy Loans",
          "green_premium_bps": "28",
          "carbon_offset_tons": "98500.75",
          "financing_billions": "1.85"
        },
        {
          "impact_score": "8.9",
          "renewable_mw": "850.40",
          "compliance_pct": "98.8",
          "esg_risk_score": "8.2",
          "adoption_rate_pct": "72.5",
          "financing_product": "Sustainable Supply Chain",
          "green_premium_bps": "32",
          "carbon_offset_tons": "45200.80",
          "financing_billions": "0.95"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "ING Sustainable Finance Analytics",
      "problem_slug": "goldman-sachs-risk-management-system"
    },
    {
      "id": "4071c62d-c007-44e0-9ced-b95e8d020abe",
      "problem_id": "c2db86f4-b45e-4958-bdba-934e9bd8949b",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE intel_manufacturing (\n        batch_id INT PRIMARY KEY,\n        processor_family VARCHAR(50),\n        fabrication_node VARCHAR(20),\n        yield_rate DECIMAL(5,2),\n        wafers_processed INT,\n        production_date DATE\n    );\n      INSERT INTO intel_manufacturing  VALUES\n      (1, 'Core i9', '7nm', 89.50, 2500, '2024-01-15'),\n      (2, 'Core i7', '10nm', 91.25, 3200, '2024-01-15'),\n      (3, 'Core i5', '10nm', 87.80, 4100, '2024-01-16'),\n      (4, 'Xeon', '7nm', 83.40, 1800, '2024-01-16'),\n      (5, 'Pentium', '14nm', 94.60, 2900, '2024-01-17'),\n      (7, 'Core i9_v1', '7nm_v1', 89.60, 2510, '2024-01-16'),\n      (9, 'Core i7_v2', '10nm_v2', 91.45, 3220, '2024-01-17'),\n      (11, 'Core i5_v3', '10nm_v3', 88.10, 4130, '2024-01-19'),\n      (13, 'Xeon_v4', '7nm_v4', 83.80, 1840, '2024-01-20'),\n      (15, 'Pentium_v5', '14nm_v5', 95.10, 2950, '2024-01-22'),\n      (12, 'Core i9_v6', '7nm_v6', 90.10, 2560, '2024-01-21'),\n      (14, 'Core i7_v7', '10nm_v7', 91.95, 3270, '2024-01-22'),\n      (16, 'Core i5_v8', '10nm_v8', 88.60, 4180, '2024-01-24'),\n      (18, 'Xeon_v9', '7nm_v9', 84.30, 1890, '2024-01-25'),\n      (20, 'Pentium_v10', '14nm_v10', 95.60, 3000, '2024-01-27'),\n      (17, 'Core i9_v11', '7nm_v11', 90.60, 2610, '2024-01-26'),\n      (19, 'Core i7_v12', '10nm_v12', 92.45, 3320, '2024-01-27'),\n      (21, 'Core i5_v13', '10nm_v13', 89.10, 4230, '2024-01-29'),\n      (23, 'Xeon_v14', '7nm_v14', 84.80, 1940, '2024-01-30'),\n      (25, 'Pentium_v15', '14nm_v15', 96.10, 3050, '2024-02-01'),\n      (22, 'Core i9_v16', '7nm_v16', 91.10, 2660, '2024-01-31'),\n      (24, 'Core i7_v17', '10nm_v17', 92.95, 3370, '2024-02-01'),\n      (26, 'Core i5_v18', '10nm_v18', 89.60, 4280, '2024-02-03'),\n      (28, 'Xeon_v19', '7nm_v19', 85.30, 1990, '2024-02-04'),\n      (30, 'Pentium_v20', '14nm_v20', 96.60, 3100, '2024-02-06');",
      "solution_sql": "SELECT processor_family, ROUND(AVG(yield_rate), 2) as avg_yield_rate\nFROM intel_manufacturing \nGROUP BY processor_family \nHAVING AVG(yield_rate) > 85 \nORDER BY avg_yield_rate DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.763Z",
      "expected_output": [
        {
          "avg_yield_rate": "96.60",
          "processor_family": "Pentium_v20"
        },
        {
          "avg_yield_rate": "96.10",
          "processor_family": "Pentium_v15"
        },
        {
          "avg_yield_rate": "95.60",
          "processor_family": "Pentium_v10"
        },
        {
          "avg_yield_rate": "95.10",
          "processor_family": "Pentium_v5"
        },
        {
          "avg_yield_rate": "94.60",
          "processor_family": "Pentium"
        },
        {
          "avg_yield_rate": "92.95",
          "processor_family": "Core i7_v17"
        },
        {
          "avg_yield_rate": "92.45",
          "processor_family": "Core i7_v12"
        },
        {
          "avg_yield_rate": "91.95",
          "processor_family": "Core i7_v7"
        },
        {
          "avg_yield_rate": "91.45",
          "processor_family": "Core i7_v2"
        },
        {
          "avg_yield_rate": "91.25",
          "processor_family": "Core i7"
        },
        {
          "avg_yield_rate": "91.10",
          "processor_family": "Core i9_v16"
        },
        {
          "avg_yield_rate": "90.60",
          "processor_family": "Core i9_v11"
        },
        {
          "avg_yield_rate": "90.10",
          "processor_family": "Core i9_v6"
        },
        {
          "avg_yield_rate": "89.60",
          "processor_family": "Core i9_v1"
        },
        {
          "avg_yield_rate": "89.60",
          "processor_family": "Core i5_v18"
        },
        {
          "avg_yield_rate": "89.50",
          "processor_family": "Core i9"
        },
        {
          "avg_yield_rate": "89.10",
          "processor_family": "Core i5_v13"
        },
        {
          "avg_yield_rate": "88.60",
          "processor_family": "Core i5_v8"
        },
        {
          "avg_yield_rate": "88.10",
          "processor_family": "Core i5_v3"
        },
        {
          "avg_yield_rate": "87.80",
          "processor_family": "Core i5"
        },
        {
          "avg_yield_rate": "85.30",
          "processor_family": "Xeon_v19"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Intel Semiconductor Manufacturing Analytics",
      "problem_slug": "high-value-customers"
    },
    {
      "id": "d929f63c-5080-4569-b5ae-685e830a46a8",
      "problem_id": "c2db86f4-b45e-4958-bdba-934e9bd8949b",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE intel_manufacturing (\n        batch_id INT PRIMARY KEY,\n        processor_family VARCHAR(50),\n        fabrication_node VARCHAR(20),\n        yield_rate DECIMAL(5,2),\n        wafers_processed INT,\n        production_date DATE\n    );\n      INSERT INTO intel_manufacturing  VALUES\n      (1, 'Core i9', '7nm', 89.50, 2500, '2024-01-15'),\n      (2, 'Core i7', '10nm', 91.25, 3200, '2024-01-15'),\n      (3, 'Core i5', '10nm', 87.80, 4100, '2024-01-16'),\n      (4, 'Xeon', '7nm', 83.40, 1800, '2024-01-16'),\n      (5, 'Pentium', '14nm', 94.60, 2900, '2024-01-17'),\n      (7, 'Core i9_v1', '7nm_v1', 89.60, 2510, '2024-01-16'),\n      (9, 'Core i7_v2', '10nm_v2', 91.45, 3220, '2024-01-17'),\n      (11, 'Core i5_v3', '10nm_v3', 88.10, 4130, '2024-01-19'),\n      (13, 'Xeon_v4', '7nm_v4', 83.80, 1840, '2024-01-20'),\n      (15, 'Pentium_v5', '14nm_v5', 95.10, 2950, '2024-01-22'),\n      (12, 'Core i9_v6', '7nm_v6', 90.10, 2560, '2024-01-21'),\n      (14, 'Core i7_v7', '10nm_v7', 91.95, 3270, '2024-01-22'),\n      (16, 'Core i5_v8', '10nm_v8', 88.60, 4180, '2024-01-24'),\n      (18, 'Xeon_v9', '7nm_v9', 84.30, 1890, '2024-01-25'),\n      (20, 'Pentium_v10', '14nm_v10', 95.60, 3000, '2024-01-27'),\n      (17, 'Core i9_v11', '7nm_v11', 90.60, 2610, '2024-01-26'),\n      (19, 'Core i7_v12', '10nm_v12', 92.45, 3320, '2024-01-27'),\n      (21, 'Core i5_v13', '10nm_v13', 89.10, 4230, '2024-01-29'),\n      (23, 'Xeon_v14', '7nm_v14', 84.80, 1940, '2024-01-30'),\n      (25, 'Pentium_v15', '14nm_v15', 96.10, 3050, '2024-02-01'),\n      (22, 'Core i9_v16', '7nm_v16', 91.10, 2660, '2024-01-31'),\n      (24, 'Core i7_v17', '10nm_v17', 92.95, 3370, '2024-02-01'),\n      (26, 'Core i5_v18', '10nm_v18', 89.60, 4280, '2024-02-03'),\n      (28, 'Xeon_v19', '7nm_v19', 85.30, 1990, '2024-02-04'),\n      (30, 'Pentium_v20', '14nm_v20', 96.60, 3100, '2024-02-06');",
      "solution_sql": "SELECT processor_family, ROUND(AVG(yield_rate), 2) as avg_yield_rate\nFROM intel_manufacturing \nGROUP BY processor_family \nHAVING AVG(yield_rate) > 85 \nORDER BY avg_yield_rate DESC;",
      "explanation": "Intel semiconductor manufacturing analysis using yield rate calculations for production optimization.",
      "created_at": "2025-08-11T13:51:03.998Z",
      "expected_output": [
        {
          "avg_yield_rate": "96.60",
          "processor_family": "Pentium_v20"
        },
        {
          "avg_yield_rate": "96.10",
          "processor_family": "Pentium_v15"
        },
        {
          "avg_yield_rate": "95.60",
          "processor_family": "Pentium_v10"
        },
        {
          "avg_yield_rate": "95.10",
          "processor_family": "Pentium_v5"
        },
        {
          "avg_yield_rate": "94.60",
          "processor_family": "Pentium"
        },
        {
          "avg_yield_rate": "92.95",
          "processor_family": "Core i7_v17"
        },
        {
          "avg_yield_rate": "92.45",
          "processor_family": "Core i7_v12"
        },
        {
          "avg_yield_rate": "91.95",
          "processor_family": "Core i7_v7"
        },
        {
          "avg_yield_rate": "91.45",
          "processor_family": "Core i7_v2"
        },
        {
          "avg_yield_rate": "91.25",
          "processor_family": "Core i7"
        },
        {
          "avg_yield_rate": "91.10",
          "processor_family": "Core i9_v16"
        },
        {
          "avg_yield_rate": "90.60",
          "processor_family": "Core i9_v11"
        },
        {
          "avg_yield_rate": "90.10",
          "processor_family": "Core i9_v6"
        },
        {
          "avg_yield_rate": "89.60",
          "processor_family": "Core i5_v18"
        },
        {
          "avg_yield_rate": "89.60",
          "processor_family": "Core i9_v1"
        },
        {
          "avg_yield_rate": "89.50",
          "processor_family": "Core i9"
        },
        {
          "avg_yield_rate": "89.10",
          "processor_family": "Core i5_v13"
        },
        {
          "avg_yield_rate": "88.60",
          "processor_family": "Core i5_v8"
        },
        {
          "avg_yield_rate": "88.10",
          "processor_family": "Core i5_v3"
        },
        {
          "avg_yield_rate": "87.80",
          "processor_family": "Core i5"
        },
        {
          "avg_yield_rate": "85.30",
          "processor_family": "Xeon_v19"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Intel Semiconductor Manufacturing Analytics",
      "problem_slug": "high-value-customers"
    },
    {
      "id": "620bbd0a-78ce-4a6c-a37a-eea93e2d2f14",
      "problem_id": "02b4dc7d-b5e4-44c5-8340-93a0d4414680",
      "sql_dialect": "mysql",
      "setup_sql": "\nCREATE TABLE subscription_plans (\n    plan_id INT PRIMARY KEY,\n    plan_name VARCHAR(100),\n    monthly_price DECIMAL(8,2),\n    plan_type VARCHAR(50),\n    features_included INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    company_size VARCHAR(20),\n    industry VARCHAR(50),\n    signup_date DATE\n);\n\nCREATE TABLE subscriptions (\n    subscription_id INT PRIMARY KEY,\n    customer_id INT,\n    plan_id INT,\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20),\n    monthly_revenue DECIMAL(8,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (plan_id) REFERENCES subscription_plans(plan_id)\n);\n\nINSERT INTO subscription_plans VALUES\n(1, 'Basic Plan', 29.99, 'Individual', 10),\n(2, 'Professional Plan', 99.99, 'Team', 25),\n(3, 'Enterprise Plan', 299.99, 'Enterprise', 50),\n(4, 'Startup Plan', 49.99, 'Small Business', 15);\n\nINSERT INTO customers VALUES\n(1, 'Tech Innovations Inc', 'Small', 'Technology', '2024-01-15'),\n(2, 'Design Studio Pro', 'Medium', 'Creative', '2024-02-10'),\n(3, 'Global Corp Ltd', 'Large', 'Finance', '2024-01-20'),\n(4, 'Marketing Hub', 'Small', 'Marketing', '2024-03-05'),\n(5, 'Data Analytics Co', 'Medium', 'Analytics', '2024-02-15'),\n(6, 'Startup Ventures', 'Small', 'Consulting', '2024-04-01');\n\nINSERT INTO subscriptions VALUES\n(1, 1, 2, '2024-01-15', NULL, 'Active', 99.99),\n(2, 2, 1, '2024-02-10', NULL, 'Active', 29.99),\n(3, 3, 3, '2024-01-20', NULL, 'Active', 299.99),\n(4, 4, 4, '2024-03-05', NULL, 'Active', 49.99),\n(5, 5, 2, '2024-02-15', '2024-04-15', 'Cancelled', 99.99),\n(6, 6, 4, '2024-04-01', NULL, 'Active', 49.99),\n(7, 1, 3, '2024-04-10', NULL, 'Active', 299.99),\n(8, 2, 2, '2024-04-20', NULL, 'Active', 99.99);",
      "solution_sql": "\nSELECT \n    sp.plan_type,\n    COUNT(s.subscription_id) as total_subscriptions,\n    COUNT(CASE WHEN s.status = 'Active' THEN 1 END) as active_subscriptions,\n    ROUND(SUM(CASE WHEN s.status = 'Active' THEN s.monthly_revenue ELSE 0 END), 2) as active_mrr,\n    ROUND(AVG(sp.monthly_price), 2) as avg_plan_price\nFROM subscription_plans sp\nLEFT JOIN subscriptions s ON sp.plan_id = s.plan_id\nGROUP BY sp.plan_type\nORDER BY active_mrr DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.627Z",
      "expected_output": [
        {
          "plan_type": "Individual",
          "active_mrr": "0.00",
          "avg_plan_price": "29.99",
          "total_subscriptions": "0",
          "active_subscriptions": "0"
        },
        {
          "plan_type": "Team",
          "active_mrr": "0.00",
          "avg_plan_price": "99.99",
          "total_subscriptions": "0",
          "active_subscriptions": "0"
        },
        {
          "plan_type": "Enterprise",
          "active_mrr": "0.00",
          "avg_plan_price": "299.99",
          "total_subscriptions": "0",
          "active_subscriptions": "0"
        },
        {
          "plan_type": "Small Business",
          "active_mrr": "0.00",
          "avg_plan_price": "49.99",
          "total_subscriptions": "0",
          "active_subscriptions": "0"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Subscription Business Analytics",
      "problem_slug": "jp-morgan-trading-desk-performance"
    },
    {
      "id": "fd1176ce-509e-4258-b5e6-aa95ee8817f8",
      "problem_id": "02b4dc7d-b5e4-44c5-8340-93a0d4414680",
      "sql_dialect": "postgresql",
      "setup_sql": "\nCREATE TABLE subscription_plans (\n    plan_id INT PRIMARY KEY,\n    plan_name VARCHAR(100),\n    monthly_price DECIMAL(8,2),\n    plan_type VARCHAR(50),\n    features_included INT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    company_size VARCHAR(20),\n    industry VARCHAR(50),\n    signup_date DATE\n);\n\nCREATE TABLE subscriptions (\n    subscription_id INT PRIMARY KEY,\n    customer_id INT,\n    plan_id INT,\n    start_date DATE,\n    end_date DATE,\n    status VARCHAR(20),\n    monthly_revenue DECIMAL(8,2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id),\n    FOREIGN KEY (plan_id) REFERENCES subscription_plans(plan_id)\n);\n\nINSERT INTO subscription_plans VALUES\n(1, 'Basic Plan', 29.99, 'Individual', 10),\n(2, 'Professional Plan', 99.99, 'Team', 25),\n(3, 'Enterprise Plan', 299.99, 'Enterprise', 50),\n(4, 'Startup Plan', 49.99, 'Small Business', 15);\n\nINSERT INTO customers VALUES\n(1, 'Tech Innovations Inc', 'Small', 'Technology', '2024-01-15'),\n(2, 'Design Studio Pro', 'Medium', 'Creative', '2024-02-10'),\n(3, 'Global Corp Ltd', 'Large', 'Finance', '2024-01-20'),\n(4, 'Marketing Hub', 'Small', 'Marketing', '2024-03-05'),\n(5, 'Data Analytics Co', 'Medium', 'Analytics', '2024-02-15'),\n(6, 'Startup Ventures', 'Small', 'Consulting', '2024-04-01');\n\nINSERT INTO subscriptions VALUES\n(1, 1, 2, '2024-01-15', NULL, 'Active', 99.99),\n(2, 2, 1, '2024-02-10', NULL, 'Active', 29.99),\n(3, 3, 3, '2024-01-20', NULL, 'Active', 299.99),\n(4, 4, 4, '2024-03-05', NULL, 'Active', 49.99),\n(5, 5, 2, '2024-02-15', '2024-04-15', 'Cancelled', 99.99),\n(6, 6, 4, '2024-04-01', NULL, 'Active', 49.99),\n(7, 1, 3, '2024-04-10', NULL, 'Active', 299.99),\n(8, 2, 2, '2024-04-20', NULL, 'Active', 99.99);",
      "solution_sql": "\nSELECT \n    sp.plan_type,\n    COUNT(s.subscription_id) as total_subscriptions,\n    COUNT(CASE WHEN s.status = 'Active' THEN 1 END) as active_subscriptions,\n    ROUND(SUM(CASE WHEN s.status = 'Active' THEN s.monthly_revenue ELSE 0 END), 2) as active_mrr,\n    ROUND(AVG(sp.monthly_price), 2) as avg_plan_price\nFROM subscription_plans sp\nLEFT JOIN subscriptions s ON sp.plan_id = s.plan_id\nGROUP BY sp.plan_type\nORDER BY active_mrr DESC;",
      "explanation": "Investment banking performance analysis using window functions with ROW_NUMBER() for ranking trading strategies within asset classes.",
      "created_at": "2025-08-11T13:51:15.993Z",
      "expected_output": [
        {
          "plan_type": "Enterprise",
          "active_mrr": "599.98",
          "avg_plan_price": "299.99",
          "total_subscriptions": "2",
          "active_subscriptions": "2"
        },
        {
          "plan_type": "Team",
          "active_mrr": "199.98",
          "avg_plan_price": "99.99",
          "total_subscriptions": "3",
          "active_subscriptions": "2"
        },
        {
          "plan_type": "Small Business",
          "active_mrr": "99.98",
          "avg_plan_price": "49.99",
          "total_subscriptions": "2",
          "active_subscriptions": "2"
        },
        {
          "plan_type": "Individual",
          "active_mrr": "29.99",
          "avg_plan_price": "29.99",
          "total_subscriptions": "1",
          "active_subscriptions": "1"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Subscription Business Analytics",
      "problem_slug": "jp-morgan-trading-desk-performance"
    },
    {
      "id": "3904cb80-5170-4536-8046-74544f6828ba",
      "problem_id": "a57277ea-6279-49cf-a268-f31a1152e97c",
      "sql_dialect": "mysql",
      "setup_sql": "\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(100),\n    channel_type VARCHAR(50),\n    cost_structure VARCHAR(30)\n);\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(150),\n    channel_id INT,\n    start_date DATE,\n    end_date DATE,\n    budget DECIMAL(10,2),\n    objective VARCHAR(50),\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE campaign_results (\n    result_id INT PRIMARY KEY,\n    campaign_id INT,\n    date DATE,\n    impressions INT,\n    clicks INT,\n    conversions INT,\n    cost DECIMAL(8,2),\n    revenue DECIMAL(10,2),\n    FOREIGN KEY (campaign_id) REFERENCES campaigns(campaign_id)\n);\n\nINSERT INTO marketing_channels VALUES\n(1, 'Google Ads', 'Search', 'CPC'),\n(2, 'Facebook Ads', 'Social Media', 'CPC'),\n(3, 'LinkedIn Ads', 'Professional', 'CPM'),\n(4, 'Email Marketing', 'Direct', 'Fixed');\n\nINSERT INTO campaigns VALUES\n(1, 'Q2 Product Launch - Search', 1, '2024-04-01', '2024-06-30', 15000.00, 'Lead Generation'),\n(2, 'Brand Awareness - Social', 2, '2024-03-15', '2024-05-15', 8000.00, 'Brand Awareness'),\n(3, 'B2B Lead Gen - LinkedIn', 3, '2024-04-10', '2024-06-10', 12000.00, 'Lead Generation'),\n(4, 'Customer Retention - Email', 4, '2024-01-01', '2024-12-31', 3000.00, 'Retention');\n\nINSERT INTO campaign_results VALUES\n(1, 1, '2024-05-01', 45000, 2250, 180, 1200.00, 18000.00),\n(2, 1, '2024-05-15', 38000, 1900, 152, 1100.00, 15200.00),\n(3, 2, '2024-04-01', 120000, 3600, 90, 800.00, 4500.00),\n(4, 2, '2024-04-15', 95000, 2850, 76, 750.00, 3800.00),\n(5, 3, '2024-05-01', 8500, 425, 42, 950.00, 21000.00),\n(6, 3, '2024-05-15', 9200, 460, 46, 1000.00, 23000.00),\n(7, 4, '2024-04-01', 15000, 1200, 240, 250.00, 12000.00),\n(8, 4, '2024-05-01', 16500, 1320, 264, 275.00, 13200.00);",
      "solution_sql": "\nSELECT \n    mc.channel_type,\n    c.objective,\n    COUNT(cr.result_id) as data_points,\n    SUM(cr.conversions) as total_conversions,\n    ROUND(SUM(cr.cost), 2) as total_cost,\n    ROUND(SUM(cr.revenue), 2) as total_revenue,\n    ROUND(SUM(cr.cost) / NULLIF(SUM(cr.conversions), 0), 2) as cost_per_conversion,\n    ROUND((SUM(cr.revenue) - SUM(cr.cost)) / NULLIF(SUM(cr.cost), 0) * 100, 2) as roi_percentage\nFROM marketing_channels mc\nJOIN campaigns c ON mc.channel_id = c.channel_id\nJOIN campaign_results cr ON c.campaign_id = cr.campaign_id\nGROUP BY mc.channel_type, c.objective\nORDER BY roi_percentage DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.742Z",
      "expected_output": [
        {
          "objective": "Retention",
          "total_cost": "525.00",
          "data_points": "2",
          "channel_type": "Direct",
          "total_revenue": "25200.00",
          "roi_percentage": "4700.00",
          "total_conversions": "504",
          "cost_per_conversion": "1.04"
        },
        {
          "objective": "Lead Generation",
          "total_cost": "1950.00",
          "data_points": "2",
          "channel_type": "Professional",
          "total_revenue": "44000.00",
          "roi_percentage": "2156.41",
          "total_conversions": "88",
          "cost_per_conversion": "22.16"
        },
        {
          "objective": "Lead Generation",
          "total_cost": "2300.00",
          "data_points": "2",
          "channel_type": "Search",
          "total_revenue": "33200.00",
          "roi_percentage": "1343.48",
          "total_conversions": "332",
          "cost_per_conversion": "6.93"
        },
        {
          "objective": "Brand Awareness",
          "total_cost": "1550.00",
          "data_points": "2",
          "channel_type": "Social Media",
          "total_revenue": "8300.00",
          "roi_percentage": "435.48",
          "total_conversions": "166",
          "cost_per_conversion": "9.34"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Digital Marketing Campaign Performance",
      "problem_slug": "jpmorgan-chase-portfolio-analytics"
    },
    {
      "id": "17302ce5-39bd-40e8-84f4-00afb61b15b6",
      "problem_id": "a57277ea-6279-49cf-a268-f31a1152e97c",
      "sql_dialect": "postgresql",
      "setup_sql": "\nCREATE TABLE marketing_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(100),\n    channel_type VARCHAR(50),\n    cost_structure VARCHAR(30)\n);\n\nCREATE TABLE campaigns (\n    campaign_id INT PRIMARY KEY,\n    campaign_name VARCHAR(150),\n    channel_id INT,\n    start_date DATE,\n    end_date DATE,\n    budget DECIMAL(10,2),\n    objective VARCHAR(50),\n    FOREIGN KEY (channel_id) REFERENCES marketing_channels(channel_id)\n);\n\nCREATE TABLE campaign_results (\n    result_id INT PRIMARY KEY,\n    campaign_id INT,\n    date DATE,\n    impressions INT,\n    clicks INT,\n    conversions INT,\n    cost DECIMAL(8,2),\n    revenue DECIMAL(10,2),\n    FOREIGN KEY (campaign_id) REFERENCES campaigns(campaign_id)\n);\n\nINSERT INTO marketing_channels VALUES\n(1, 'Google Ads', 'Search', 'CPC'),\n(2, 'Facebook Ads', 'Social Media', 'CPC'),\n(3, 'LinkedIn Ads', 'Professional', 'CPM'),\n(4, 'Email Marketing', 'Direct', 'Fixed');\n\nINSERT INTO campaigns VALUES\n(1, 'Q2 Product Launch - Search', 1, '2024-04-01', '2024-06-30', 15000.00, 'Lead Generation'),\n(2, 'Brand Awareness - Social', 2, '2024-03-15', '2024-05-15', 8000.00, 'Brand Awareness'),\n(3, 'B2B Lead Gen - LinkedIn', 3, '2024-04-10', '2024-06-10', 12000.00, 'Lead Generation'),\n(4, 'Customer Retention - Email', 4, '2024-01-01', '2024-12-31', 3000.00, 'Retention');\n\nINSERT INTO campaign_results VALUES\n(1, 1, '2024-05-01', 45000, 2250, 180, 1200.00, 18000.00),\n(2, 1, '2024-05-15', 38000, 1900, 152, 1100.00, 15200.00),\n(3, 2, '2024-04-01', 120000, 3600, 90, 800.00, 4500.00),\n(4, 2, '2024-04-15', 95000, 2850, 76, 750.00, 3800.00),\n(5, 3, '2024-05-01', 8500, 425, 42, 950.00, 21000.00),\n(6, 3, '2024-05-15', 9200, 460, 46, 1000.00, 23000.00),\n(7, 4, '2024-04-01', 15000, 1200, 240, 250.00, 12000.00),\n(8, 4, '2024-05-01', 16500, 1320, 264, 275.00, 13200.00);",
      "solution_sql": "\nSELECT \n    mc.channel_type,\n    c.objective,\n    COUNT(cr.result_id) as data_points,\n    SUM(cr.conversions) as total_conversions,\n    ROUND(SUM(cr.cost), 2) as total_cost,\n    ROUND(SUM(cr.revenue), 2) as total_revenue,\n    ROUND(SUM(cr.cost) / NULLIF(SUM(cr.conversions), 0), 2) as cost_per_conversion,\n    ROUND((SUM(cr.revenue) - SUM(cr.cost)) / NULLIF(SUM(cr.cost), 0) * 100, 2) as roi_percentage\nFROM marketing_channels mc\nJOIN campaigns c ON mc.channel_id = c.channel_id\nJOIN campaign_results cr ON c.campaign_id = cr.campaign_id\nGROUP BY mc.channel_type, c.objective\nORDER BY roi_percentage DESC;",
      "explanation": "JPMorgan Chase wealth management analytics using Sharpe ratio and alpha calculations for private banking client optimization.",
      "created_at": "2025-08-11T17:08:07.873Z",
      "expected_output": [
        {
          "objective": "Retention",
          "total_cost": "525.00",
          "data_points": "2",
          "channel_type": "Direct",
          "total_revenue": "25200.00",
          "roi_percentage": "4700.00",
          "total_conversions": "504",
          "cost_per_conversion": "1.04"
        },
        {
          "objective": "Lead Generation",
          "total_cost": "1950.00",
          "data_points": "2",
          "channel_type": "Professional",
          "total_revenue": "44000.00",
          "roi_percentage": "2156.41",
          "total_conversions": "88",
          "cost_per_conversion": "22.16"
        },
        {
          "objective": "Lead Generation",
          "total_cost": "2300.00",
          "data_points": "2",
          "channel_type": "Search",
          "total_revenue": "33200.00",
          "roi_percentage": "1343.48",
          "total_conversions": "332",
          "cost_per_conversion": "6.93"
        },
        {
          "objective": "Brand Awareness",
          "total_cost": "1550.00",
          "data_points": "2",
          "channel_type": "Social Media",
          "total_revenue": "8300.00",
          "roi_percentage": "435.48",
          "total_conversions": "166",
          "cost_per_conversion": "9.34"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Digital Marketing Campaign Performance",
      "problem_slug": "jpmorgan-chase-portfolio-analytics"
    },
    {
      "id": "3ee503dc-2707-4877-8f6a-d7538df2aa86",
      "problem_id": "addf9669-6c47-4410-8b73-354e852ff005",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE jpmorgan_derivatives (\n        instrument_id INT PRIMARY KEY,\n        derivative_type VARCHAR(50),\n        notional_amount DECIMAL(15,2),\n        market_value DECIMAL(12,2),\n        var_95_1day DECIMAL(10,2),\n        expected_shortfall DECIMAL(10,2),\n        delta DECIMAL(8,6),\n        gamma DECIMAL(8,6),\n        trade_date DATE\n    );\n      INSERT INTO jpmorgan_derivatives VALUES\n    (1, 'Interest Rate Swap', 100000000.00, 1250000.00, 485000.00, 625000.00, 0.045600, 0.000125, '2024-01-15'),\n    (2, 'Credit Default Swap', 75000000.00, -180000.00, 320000.00, 415000.00, -0.028500, 0.000085, '2024-01-15'),\n    (3, 'FX Forward', 50000000.00, 675000.00, 285000.00, 350000.00, 0.018200, 0.000045, '2024-01-16'),\n    (4, 'Equity Option', 25000000.00, 425000.00, 195000.00, 245000.00, 0.065800, 0.000165, '2024-01-16'),\n    (5, 'Commodity Swap', 80000000.00, 890000.00, 385000.00, 485000.00, 0.032500, 0.000095, '2024-01-17'),\n    (7, 'Interest Rate Swap_v1', 100000000.10, 1250000.10, 485000.10, 625000.10, 0.15, 0.10, '2024-01-16'),\n    (9, 'Credit Default Swap_v2', 75000000.20, -179999.80, 320000.20, 415000.20, 0.17, 0.20, '2024-01-17'),\n    (11, 'FX Forward_v3', 50000000.30, 675000.30, 285000.30, 350000.30, 0.32, 0.30, '2024-01-19'),\n    (13, 'Equity Option_v4', 25000000.40, 425000.40, 195000.40, 245000.40, 0.47, 0.40, '2024-01-20'),\n    (15, 'Commodity Swap_v5', 80000000.50, 890000.50, 385000.50, 485000.50, 0.53, 0.50, '2024-01-22'),\n    (12, 'Interest Rate Swap_v6', 100000000.60, 1250000.60, 485000.60, 625000.60, 0.65, 0.60, '2024-01-21'),\n    (14, 'Credit Default Swap_v7', 75000000.70, -179999.30, 320000.70, 415000.70, 0.67, 0.70, '2024-01-22'),\n    (16, 'FX Forward_v8', 50000000.80, 675000.80, 285000.80, 350000.80, 0.82, 0.80, '2024-01-24'),\n    (18, 'Equity Option_v9', 25000000.90, 425000.90, 195000.90, 245000.90, 0.97, 0.90, '2024-01-25'),\n    (20, 'Commodity Swap_v10', 80000001.00, 890001.00, 385001.00, 485001.00, 1.03, 1.00, '2024-01-27'),\n    (17, 'Interest Rate Swap_v11', 100000001.10, 1250001.10, 485001.10, 625001.10, 1.15, 1.10, '2024-01-26'),\n    (19, 'Credit Default Swap_v12', 75000001.20, -179998.80, 320001.20, 415001.20, 1.17, 1.20, '2024-01-27'),\n    (21, 'FX Forward_v13', 50000001.30, 675001.30, 285001.30, 350001.30, 1.32, 1.30, '2024-01-29'),\n    (23, 'Equity Option_v14', 25000001.40, 425001.40, 195001.40, 245001.40, 1.47, 1.40, '2024-01-30'),\n    (25, 'Commodity Swap_v15', 80000001.50, 890001.50, 385001.50, 485001.50, 1.53, 1.50, '2024-02-01'),\n    (22, 'Interest Rate Swap_v16', 100000001.60, 1250001.60, 485001.60, 625001.60, 1.65, 1.60, '2024-01-31'),\n    (24, 'Credit Default Swap_v17', 75000001.70, -179998.30, 320001.70, 415001.70, 1.67, 1.70, '2024-02-01'),\n    (26, 'FX Forward_v18', 50000001.80, 675001.80, 285001.80, 350001.80, 1.82, 1.80, '2024-02-03'),\n    (28, 'Equity Option_v19', 25000001.90, 425001.90, 195001.90, 245001.90, 1.97, 1.90, '2024-02-04'),\n    (30, 'Commodity Swap_v20', 80000002.00, 890002.00, 385002.00, 485002.00, 2.03, 2.00, '2024-02-06');",
      "solution_sql": "SELECT notional_amount, COUNT(*) as record_count, SUM(notional_amount) as total FROM jpmorgan_derivatives GROUP BY notional_amount ORDER BY total DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.751Z",
      "expected_output": [
        {
          "total": "100000001.60",
          "record_count": "1",
          "notional_amount": "100000001.60"
        },
        {
          "total": "100000001.10",
          "record_count": "1",
          "notional_amount": "100000001.10"
        },
        {
          "total": "100000000.60",
          "record_count": "1",
          "notional_amount": "100000000.60"
        },
        {
          "total": "100000000.10",
          "record_count": "1",
          "notional_amount": "100000000.10"
        },
        {
          "total": "100000000.00",
          "record_count": "1",
          "notional_amount": "100000000.00"
        },
        {
          "total": "80000002.00",
          "record_count": "1",
          "notional_amount": "80000002.00"
        },
        {
          "total": "80000001.50",
          "record_count": "1",
          "notional_amount": "80000001.50"
        },
        {
          "total": "80000001.00",
          "record_count": "1",
          "notional_amount": "80000001.00"
        },
        {
          "total": "80000000.50",
          "record_count": "1",
          "notional_amount": "80000000.50"
        },
        {
          "total": "80000000.00",
          "record_count": "1",
          "notional_amount": "80000000.00"
        },
        {
          "total": "75000001.70",
          "record_count": "1",
          "notional_amount": "75000001.70"
        },
        {
          "total": "75000001.20",
          "record_count": "1",
          "notional_amount": "75000001.20"
        },
        {
          "total": "75000000.70",
          "record_count": "1",
          "notional_amount": "75000000.70"
        },
        {
          "total": "75000000.20",
          "record_count": "1",
          "notional_amount": "75000000.20"
        },
        {
          "total": "75000000.00",
          "record_count": "1",
          "notional_amount": "75000000.00"
        },
        {
          "total": "50000001.80",
          "record_count": "1",
          "notional_amount": "50000001.80"
        },
        {
          "total": "50000001.30",
          "record_count": "1",
          "notional_amount": "50000001.30"
        },
        {
          "total": "50000000.80",
          "record_count": "1",
          "notional_amount": "50000000.80"
        },
        {
          "total": "50000000.30",
          "record_count": "1",
          "notional_amount": "50000000.30"
        },
        {
          "total": "50000000.00",
          "record_count": "1",
          "notional_amount": "50000000.00"
        },
        {
          "total": "25000001.90",
          "record_count": "1",
          "notional_amount": "25000001.90"
        },
        {
          "total": "25000001.40",
          "record_count": "1",
          "notional_amount": "25000001.40"
        },
        {
          "total": "25000000.90",
          "record_count": "1",
          "notional_amount": "25000000.90"
        },
        {
          "total": "25000000.40",
          "record_count": "1",
          "notional_amount": "25000000.40"
        },
        {
          "total": "25000000.00",
          "record_count": "1",
          "notional_amount": "25000000.00"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "JPMorgan Derivatives Risk Analytics",
      "problem_slug": "jpmorgan-derivatives-risk-analytics"
    },
    {
      "id": "178168d7-d495-4756-8fc2-71cf018d01cb",
      "problem_id": "addf9669-6c47-4410-8b73-354e852ff005",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE jpmorgan_derivatives (\n        instrument_id INT PRIMARY KEY,\n        derivative_type VARCHAR(50),\n        notional_amount DECIMAL(15,2),\n        market_value DECIMAL(12,2),\n        var_95_1day DECIMAL(10,2),\n        expected_shortfall DECIMAL(10,2),\n        delta DECIMAL(8,6),\n        gamma DECIMAL(8,6),\n        trade_date DATE\n    );\n      INSERT INTO jpmorgan_derivatives VALUES\n    (1, 'Interest Rate Swap', 100000000.00, 1250000.00, 485000.00, 625000.00, 0.045600, 0.000125, '2024-01-15'),\n    (2, 'Credit Default Swap', 75000000.00, -180000.00, 320000.00, 415000.00, -0.028500, 0.000085, '2024-01-15'),\n    (3, 'FX Forward', 50000000.00, 675000.00, 285000.00, 350000.00, 0.018200, 0.000045, '2024-01-16'),\n    (4, 'Equity Option', 25000000.00, 425000.00, 195000.00, 245000.00, 0.065800, 0.000165, '2024-01-16'),\n    (5, 'Commodity Swap', 80000000.00, 890000.00, 385000.00, 485000.00, 0.032500, 0.000095, '2024-01-17'),\n    (7, 'Interest Rate Swap_v1', 100000000.10, 1250000.10, 485000.10, 625000.10, 0.15, 0.10, '2024-01-16'),\n    (9, 'Credit Default Swap_v2', 75000000.20, -179999.80, 320000.20, 415000.20, 0.17, 0.20, '2024-01-17'),\n    (11, 'FX Forward_v3', 50000000.30, 675000.30, 285000.30, 350000.30, 0.32, 0.30, '2024-01-19'),\n    (13, 'Equity Option_v4', 25000000.40, 425000.40, 195000.40, 245000.40, 0.47, 0.40, '2024-01-20'),\n    (15, 'Commodity Swap_v5', 80000000.50, 890000.50, 385000.50, 485000.50, 0.53, 0.50, '2024-01-22'),\n    (12, 'Interest Rate Swap_v6', 100000000.60, 1250000.60, 485000.60, 625000.60, 0.65, 0.60, '2024-01-21'),\n    (14, 'Credit Default Swap_v7', 75000000.70, -179999.30, 320000.70, 415000.70, 0.67, 0.70, '2024-01-22'),\n    (16, 'FX Forward_v8', 50000000.80, 675000.80, 285000.80, 350000.80, 0.82, 0.80, '2024-01-24'),\n    (18, 'Equity Option_v9', 25000000.90, 425000.90, 195000.90, 245000.90, 0.97, 0.90, '2024-01-25'),\n    (20, 'Commodity Swap_v10', 80000001.00, 890001.00, 385001.00, 485001.00, 1.03, 1.00, '2024-01-27'),\n    (17, 'Interest Rate Swap_v11', 100000001.10, 1250001.10, 485001.10, 625001.10, 1.15, 1.10, '2024-01-26'),\n    (19, 'Credit Default Swap_v12', 75000001.20, -179998.80, 320001.20, 415001.20, 1.17, 1.20, '2024-01-27'),\n    (21, 'FX Forward_v13', 50000001.30, 675001.30, 285001.30, 350001.30, 1.32, 1.30, '2024-01-29'),\n    (23, 'Equity Option_v14', 25000001.40, 425001.40, 195001.40, 245001.40, 1.47, 1.40, '2024-01-30'),\n    (25, 'Commodity Swap_v15', 80000001.50, 890001.50, 385001.50, 485001.50, 1.53, 1.50, '2024-02-01'),\n    (22, 'Interest Rate Swap_v16', 100000001.60, 1250001.60, 485001.60, 625001.60, 1.65, 1.60, '2024-01-31'),\n    (24, 'Credit Default Swap_v17', 75000001.70, -179998.30, 320001.70, 415001.70, 1.67, 1.70, '2024-02-01'),\n    (26, 'FX Forward_v18', 50000001.80, 675001.80, 285001.80, 350001.80, 1.82, 1.80, '2024-02-03'),\n    (28, 'Equity Option_v19', 25000001.90, 425001.90, 195001.90, 245001.90, 1.97, 1.90, '2024-02-04'),\n    (30, 'Commodity Swap_v20', 80000002.00, 890002.00, 385002.00, 485002.00, 2.03, 2.00, '2024-02-06');",
      "solution_sql": "SELECT notional_amount, COUNT(*) as record_count, SUM(notional_amount) as total FROM jpmorgan_derivatives GROUP BY notional_amount ORDER BY total DESC;",
      "explanation": "Advanced derivatives risk analysis using portfolio VaR contribution calculations and concentration risk metrics for institutional trading operations.",
      "created_at": "2025-08-11T17:06:42.249Z",
      "expected_output": [
        {
          "total": "100000001.60",
          "record_count": "1",
          "notional_amount": "100000001.60"
        },
        {
          "total": "100000001.10",
          "record_count": "1",
          "notional_amount": "100000001.10"
        },
        {
          "total": "100000000.60",
          "record_count": "1",
          "notional_amount": "100000000.60"
        },
        {
          "total": "100000000.10",
          "record_count": "1",
          "notional_amount": "100000000.10"
        },
        {
          "total": "100000000.00",
          "record_count": "1",
          "notional_amount": "100000000.00"
        },
        {
          "total": "80000002.00",
          "record_count": "1",
          "notional_amount": "80000002.00"
        },
        {
          "total": "80000001.50",
          "record_count": "1",
          "notional_amount": "80000001.50"
        },
        {
          "total": "80000001.00",
          "record_count": "1",
          "notional_amount": "80000001.00"
        },
        {
          "total": "80000000.50",
          "record_count": "1",
          "notional_amount": "80000000.50"
        },
        {
          "total": "80000000.00",
          "record_count": "1",
          "notional_amount": "80000000.00"
        },
        {
          "total": "75000001.70",
          "record_count": "1",
          "notional_amount": "75000001.70"
        },
        {
          "total": "75000001.20",
          "record_count": "1",
          "notional_amount": "75000001.20"
        },
        {
          "total": "75000000.70",
          "record_count": "1",
          "notional_amount": "75000000.70"
        },
        {
          "total": "75000000.20",
          "record_count": "1",
          "notional_amount": "75000000.20"
        },
        {
          "total": "75000000.00",
          "record_count": "1",
          "notional_amount": "75000000.00"
        },
        {
          "total": "50000001.80",
          "record_count": "1",
          "notional_amount": "50000001.80"
        },
        {
          "total": "50000001.30",
          "record_count": "1",
          "notional_amount": "50000001.30"
        },
        {
          "total": "50000000.80",
          "record_count": "1",
          "notional_amount": "50000000.80"
        },
        {
          "total": "50000000.30",
          "record_count": "1",
          "notional_amount": "50000000.30"
        },
        {
          "total": "50000000.00",
          "record_count": "1",
          "notional_amount": "50000000.00"
        },
        {
          "total": "25000001.90",
          "record_count": "1",
          "notional_amount": "25000001.90"
        },
        {
          "total": "25000001.40",
          "record_count": "1",
          "notional_amount": "25000001.40"
        },
        {
          "total": "25000000.90",
          "record_count": "1",
          "notional_amount": "25000000.90"
        },
        {
          "total": "25000000.40",
          "record_count": "1",
          "notional_amount": "25000000.40"
        },
        {
          "total": "25000000.00",
          "record_count": "1",
          "notional_amount": "25000000.00"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "JPMorgan Derivatives Risk Analytics",
      "problem_slug": "jpmorgan-derivatives-risk-analytics"
    },
    {
      "id": "7d691a7c-47bb-47e6-a67c-501d72da9e63",
      "problem_id": "2a77e25e-17bb-4f89-af67-8634e9ca2153",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE linkedin_engagement (\n        user_id INT PRIMARY KEY,\n        professional_industry VARCHAR(50),\n        monthly_posts INT,\n        monthly_connections INT,\n        engagement_score DECIMAL(5,2),\n        premium_status VARCHAR(20)\n    );\n      INSERT INTO linkedin_engagement  VALUES\n      (1, 'Technology', 25, 45, 82.50, 'Premium'),\n      (2, 'Finance', 18, 38, 78.25, 'Free'),\n      (3, 'Healthcare', 22, 42, 79.80, 'Premium'),\n      (4, 'Education', 15, 28, 68.40, 'Free'),\n      (5, 'Consulting', 28, 52, 85.60, 'Premium'),\n      (7, 'Technology_v1', 35, 55, 82.60, 'Premium_v1'),\n      (9, 'Finance_v2', 38, 58, 78.45, 'Free_v2'),\n      (11, 'Healthcare_v3', 52, 72, 80.10, 'Premium_v3'),\n      (13, 'Education_v4', 55, 68, 68.80, 'Free_v4'),\n      (15, 'Consulting_v5', 78, 102, 86.10, 'Premium_v5'),\n      (12, 'Technology_v6', 85, 105, 83.10, 'Premium_v6'),\n      (14, 'Finance_v7', 88, 108, 78.95, 'Free_v7'),\n      (16, 'Healthcare_v8', 102, 122, 80.60, 'Premium_v8'),\n      (18, 'Education_v9', 105, 118, 69.30, 'Free_v9'),\n      (20, 'Consulting_v10', 128, 152, 86.60, 'Premium_v10'),\n      (17, 'Technology_v11', 135, 155, 83.60, 'Premium_v11'),\n      (19, 'Finance_v12', 138, 158, 79.45, 'Free_v12'),\n      (21, 'Healthcare_v13', 152, 172, 81.10, 'Premium_v13'),\n      (23, 'Education_v14', 155, 168, 69.80, 'Free_v14'),\n      (25, 'Consulting_v15', 178, 202, 87.10, 'Premium_v15'),\n      (22, 'Technology_v16', 185, 205, 84.10, 'Premium_v16'),\n      (24, 'Finance_v17', 188, 208, 79.95, 'Free_v17'),\n      (26, 'Healthcare_v18', 202, 222, 81.60, 'Premium_v18'),\n      (28, 'Education_v19', 205, 218, 70.30, 'Free_v19'),\n      (30, 'Consulting_v20', 228, 252, 87.60, 'Premium_v20');",
      "solution_sql": "SELECT professional_industry, ROUND(AVG(engagement_score), 2) as avg_engagement\nFROM linkedin_engagement \nGROUP BY professional_industry \nHAVING AVG(engagement_score) > 75 \nORDER BY avg_engagement DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.672Z",
      "expected_output": [
        {
          "avg_engagement": "87.60",
          "professional_industry": "Consulting_v20"
        },
        {
          "avg_engagement": "87.10",
          "professional_industry": "Consulting_v15"
        },
        {
          "avg_engagement": "86.60",
          "professional_industry": "Consulting_v10"
        },
        {
          "avg_engagement": "86.10",
          "professional_industry": "Consulting_v5"
        },
        {
          "avg_engagement": "85.60",
          "professional_industry": "Consulting"
        },
        {
          "avg_engagement": "84.10",
          "professional_industry": "Technology_v16"
        },
        {
          "avg_engagement": "83.60",
          "professional_industry": "Technology_v11"
        },
        {
          "avg_engagement": "83.10",
          "professional_industry": "Technology_v6"
        },
        {
          "avg_engagement": "82.60",
          "professional_industry": "Technology_v1"
        },
        {
          "avg_engagement": "82.50",
          "professional_industry": "Technology"
        },
        {
          "avg_engagement": "81.60",
          "professional_industry": "Healthcare_v18"
        },
        {
          "avg_engagement": "81.10",
          "professional_industry": "Healthcare_v13"
        },
        {
          "avg_engagement": "80.60",
          "professional_industry": "Healthcare_v8"
        },
        {
          "avg_engagement": "80.10",
          "professional_industry": "Healthcare_v3"
        },
        {
          "avg_engagement": "79.95",
          "professional_industry": "Finance_v17"
        },
        {
          "avg_engagement": "79.80",
          "professional_industry": "Healthcare"
        },
        {
          "avg_engagement": "79.45",
          "professional_industry": "Finance_v12"
        },
        {
          "avg_engagement": "78.95",
          "professional_industry": "Finance_v7"
        },
        {
          "avg_engagement": "78.45",
          "professional_industry": "Finance_v2"
        },
        {
          "avg_engagement": "78.25",
          "professional_industry": "Finance"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "LinkedIn Professional Network Analytics",
      "problem_slug": "ibm-watson-ai-service-usage"
    },
    {
      "id": "313dc45a-1386-4e5e-bdd6-415760f098d6",
      "problem_id": "2a77e25e-17bb-4f89-af67-8634e9ca2153",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE linkedin_engagement (\n        user_id INT PRIMARY KEY,\n        professional_industry VARCHAR(50),\n        monthly_posts INT,\n        monthly_connections INT,\n        engagement_score DECIMAL(5,2),\n        premium_status VARCHAR(20)\n    );\n      INSERT INTO linkedin_engagement  VALUES\n      (1, 'Technology', 25, 45, 82.50, 'Premium'),\n      (2, 'Finance', 18, 38, 78.25, 'Free'),\n      (3, 'Healthcare', 22, 42, 79.80, 'Premium'),\n      (4, 'Education', 15, 28, 68.40, 'Free'),\n      (5, 'Consulting', 28, 52, 85.60, 'Premium'),\n      (7, 'Technology_v1', 35, 55, 82.60, 'Premium_v1'),\n      (9, 'Finance_v2', 38, 58, 78.45, 'Free_v2'),\n      (11, 'Healthcare_v3', 52, 72, 80.10, 'Premium_v3'),\n      (13, 'Education_v4', 55, 68, 68.80, 'Free_v4'),\n      (15, 'Consulting_v5', 78, 102, 86.10, 'Premium_v5'),\n      (12, 'Technology_v6', 85, 105, 83.10, 'Premium_v6'),\n      (14, 'Finance_v7', 88, 108, 78.95, 'Free_v7'),\n      (16, 'Healthcare_v8', 102, 122, 80.60, 'Premium_v8'),\n      (18, 'Education_v9', 105, 118, 69.30, 'Free_v9'),\n      (20, 'Consulting_v10', 128, 152, 86.60, 'Premium_v10'),\n      (17, 'Technology_v11', 135, 155, 83.60, 'Premium_v11'),\n      (19, 'Finance_v12', 138, 158, 79.45, 'Free_v12'),\n      (21, 'Healthcare_v13', 152, 172, 81.10, 'Premium_v13'),\n      (23, 'Education_v14', 155, 168, 69.80, 'Free_v14'),\n      (25, 'Consulting_v15', 178, 202, 87.10, 'Premium_v15'),\n      (22, 'Technology_v16', 185, 205, 84.10, 'Premium_v16'),\n      (24, 'Finance_v17', 188, 208, 79.95, 'Free_v17'),\n      (26, 'Healthcare_v18', 202, 222, 81.60, 'Premium_v18'),\n      (28, 'Education_v19', 205, 218, 70.30, 'Free_v19'),\n      (30, 'Consulting_v20', 228, 252, 87.60, 'Premium_v20');",
      "solution_sql": "SELECT professional_industry, ROUND(AVG(engagement_score), 2) as avg_engagement\nFROM linkedin_engagement \nGROUP BY professional_industry \nHAVING AVG(engagement_score) > 75 \nORDER BY avg_engagement DESC;",
      "explanation": "LinkedIn professional networking analysis using engagement metrics for premium targeting strategies.",
      "created_at": "2025-08-11T13:51:21.527Z",
      "expected_output": [
        {
          "avg_engagement": "87.60",
          "professional_industry": "Consulting_v20"
        },
        {
          "avg_engagement": "87.10",
          "professional_industry": "Consulting_v15"
        },
        {
          "avg_engagement": "86.60",
          "professional_industry": "Consulting_v10"
        },
        {
          "avg_engagement": "86.10",
          "professional_industry": "Consulting_v5"
        },
        {
          "avg_engagement": "85.60",
          "professional_industry": "Consulting"
        },
        {
          "avg_engagement": "84.10",
          "professional_industry": "Technology_v16"
        },
        {
          "avg_engagement": "83.60",
          "professional_industry": "Technology_v11"
        },
        {
          "avg_engagement": "83.10",
          "professional_industry": "Technology_v6"
        },
        {
          "avg_engagement": "82.60",
          "professional_industry": "Technology_v1"
        },
        {
          "avg_engagement": "82.50",
          "professional_industry": "Technology"
        },
        {
          "avg_engagement": "81.60",
          "professional_industry": "Healthcare_v18"
        },
        {
          "avg_engagement": "81.10",
          "professional_industry": "Healthcare_v13"
        },
        {
          "avg_engagement": "80.60",
          "professional_industry": "Healthcare_v8"
        },
        {
          "avg_engagement": "80.10",
          "professional_industry": "Healthcare_v3"
        },
        {
          "avg_engagement": "79.95",
          "professional_industry": "Finance_v17"
        },
        {
          "avg_engagement": "79.80",
          "professional_industry": "Healthcare"
        },
        {
          "avg_engagement": "79.45",
          "professional_industry": "Finance_v12"
        },
        {
          "avg_engagement": "78.95",
          "professional_industry": "Finance_v7"
        },
        {
          "avg_engagement": "78.45",
          "professional_industry": "Finance_v2"
        },
        {
          "avg_engagement": "78.25",
          "professional_industry": "Finance"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "LinkedIn Professional Network Analytics",
      "problem_slug": "ibm-watson-ai-service-usage"
    },
    {
      "id": "fbd7f08c-acc8-476d-ae87-79484efa86eb",
      "problem_id": "71d86caa-b97f-448e-8282-93dc930abe4b",
      "sql_dialect": "mysql",
      "setup_sql": "\nCREATE TABLE distribution_centers (\n    center_id INT PRIMARY KEY,\n    center_name VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    capacity INT\n);\n\nCREATE TABLE delivery_routes (\n    route_id INT PRIMARY KEY,\n    center_id INT,\n    route_name VARCHAR(100),\n    route_type VARCHAR(30),\n    avg_distance_km DECIMAL(6,2),\n    FOREIGN KEY (center_id) REFERENCES distribution_centers(center_id)\n);\n\nCREATE TABLE deliveries (\n    delivery_id INT PRIMARY KEY,\n    route_id INT,\n    delivery_date DATE,\n    packages_delivered INT,\n    delivery_time_hours DECIMAL(4,2),\n    fuel_cost DECIMAL(6,2),\n    driver_cost DECIMAL(6,2),\n    customer_rating DECIMAL(3,2),\n    FOREIGN KEY (route_id) REFERENCES delivery_routes(route_id)\n);\n\nINSERT INTO distribution_centers VALUES\n(1, 'North Regional Center', 'Seattle', 'WA', 5000),\n(2, 'South Regional Center', 'Los Angeles', 'CA', 7500),\n(3, 'East Regional Center', 'Atlanta', 'GA', 6000),\n(4, 'Central Hub', 'Chicago', 'IL', 10000);\n\nINSERT INTO delivery_routes VALUES\n(1, 1, 'Seattle Metro Route', 'Urban', 45.5),\n(2, 1, 'Pacific Northwest Route', 'Regional', 180.0),\n(3, 2, 'LA County Express', 'Urban', 65.0),\n(4, 2, 'SoCal Regional', 'Regional', 220.0),\n(5, 3, 'Atlanta Metro', 'Urban', 55.0),\n(6, 3, 'Southeast Corridor', 'Highway', 320.0),\n(7, 4, 'Chicago Loop', 'Urban', 40.0),\n(8, 4, 'Midwest Express', 'Highway', 280.0);\n\nINSERT INTO deliveries VALUES\n(1, 1, '2024-05-01', 45, 6.5, 85.00, 180.00, 4.2),\n(2, 1, '2024-05-02', 42, 6.0, 80.00, 175.00, 4.5),\n(3, 2, '2024-05-01', 28, 8.5, 120.00, 220.00, 4.0),\n(4, 3, '2024-05-01', 55, 7.0, 95.00, 190.00, 4.3),\n(5, 3, '2024-05-02', 50, 6.8, 90.00, 185.00, 4.4),\n(6, 4, '2024-05-01', 35, 9.2, 140.00, 240.00, 3.8),\n(7, 5, '2024-05-01', 38, 5.5, 75.00, 165.00, 4.6),\n(8, 6, '2024-05-01', 22, 12.0, 180.00, 300.00, 3.9),\n(9, 7, '2024-05-01', 60, 5.0, 70.00, 160.00, 4.7),\n(10, 8, '2024-05-01', 30, 10.5, 160.00, 280.00, 4.1);",
      "solution_sql": "\nSELECT \n    dc.state,\n    dr.route_type,\n    COUNT(d.delivery_id) as total_deliveries,\n    SUM(d.packages_delivered) as total_packages,\n    ROUND(AVG(d.delivery_time_hours), 2) as avg_delivery_time,\n    ROUND(AVG(d.fuel_cost + d.driver_cost), 2) as avg_cost_per_delivery,\n    ROUND(SUM(d.packages_delivered) / SUM(d.delivery_time_hours), 2) as packages_per_hour,\n    ROUND(AVG(d.customer_rating), 2) as avg_customer_rating\nFROM distribution_centers dc\nJOIN delivery_routes dr ON dc.center_id = dr.center_id\nJOIN deliveries d ON dr.route_id = d.route_id\nGROUP BY dc.state, dr.route_type\nORDER BY packages_per_hour DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.716Z",
      "expected_output": [
        {
          "state": "IL",
          "route_type": "Urban",
          "total_packages": "60",
          "total_deliveries": "1",
          "avg_delivery_time": "5.00",
          "packages_per_hour": "12.00",
          "avg_customer_rating": "4.70",
          "avg_cost_per_delivery": "230.00"
        },
        {
          "state": "CA",
          "route_type": "Urban",
          "total_packages": "105",
          "total_deliveries": "2",
          "avg_delivery_time": "6.90",
          "packages_per_hour": "7.61",
          "avg_customer_rating": "4.35",
          "avg_cost_per_delivery": "280.00"
        },
        {
          "state": "WA",
          "route_type": "Urban",
          "total_packages": "87",
          "total_deliveries": "2",
          "avg_delivery_time": "6.25",
          "packages_per_hour": "6.96",
          "avg_customer_rating": "4.35",
          "avg_cost_per_delivery": "260.00"
        },
        {
          "state": "GA",
          "route_type": "Urban",
          "total_packages": "38",
          "total_deliveries": "1",
          "avg_delivery_time": "5.50",
          "packages_per_hour": "6.91",
          "avg_customer_rating": "4.60",
          "avg_cost_per_delivery": "240.00"
        },
        {
          "state": "CA",
          "route_type": "Regional",
          "total_packages": "35",
          "total_deliveries": "1",
          "avg_delivery_time": "9.20",
          "packages_per_hour": "3.80",
          "avg_customer_rating": "3.80",
          "avg_cost_per_delivery": "380.00"
        },
        {
          "state": "WA",
          "route_type": "Regional",
          "total_packages": "28",
          "total_deliveries": "1",
          "avg_delivery_time": "8.50",
          "packages_per_hour": "3.29",
          "avg_customer_rating": "4.00",
          "avg_cost_per_delivery": "340.00"
        },
        {
          "state": "IL",
          "route_type": "Highway",
          "total_packages": "30",
          "total_deliveries": "1",
          "avg_delivery_time": "10.50",
          "packages_per_hour": "2.86",
          "avg_customer_rating": "4.10",
          "avg_cost_per_delivery": "440.00"
        },
        {
          "state": "GA",
          "route_type": "Highway",
          "total_packages": "22",
          "total_deliveries": "1",
          "avg_delivery_time": "12.00",
          "packages_per_hour": "1.83",
          "avg_customer_rating": "3.90",
          "avg_cost_per_delivery": "480.00"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Supply Chain Logistics Analytics",
      "problem_slug": "lockheed-martin-defense-contracts"
    },
    {
      "id": "302b245c-a441-4e6f-b2d2-2b2273f2da9c",
      "problem_id": "71d86caa-b97f-448e-8282-93dc930abe4b",
      "sql_dialect": "postgresql",
      "setup_sql": "\nCREATE TABLE distribution_centers (\n    center_id INT PRIMARY KEY,\n    center_name VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    capacity INT\n);\n\nCREATE TABLE delivery_routes (\n    route_id INT PRIMARY KEY,\n    center_id INT,\n    route_name VARCHAR(100),\n    route_type VARCHAR(30),\n    avg_distance_km DECIMAL(6,2),\n    FOREIGN KEY (center_id) REFERENCES distribution_centers(center_id)\n);\n\nCREATE TABLE deliveries (\n    delivery_id INT PRIMARY KEY,\n    route_id INT,\n    delivery_date DATE,\n    packages_delivered INT,\n    delivery_time_hours DECIMAL(4,2),\n    fuel_cost DECIMAL(6,2),\n    driver_cost DECIMAL(6,2),\n    customer_rating DECIMAL(3,2),\n    FOREIGN KEY (route_id) REFERENCES delivery_routes(route_id)\n);\n\nINSERT INTO distribution_centers VALUES\n(1, 'North Regional Center', 'Seattle', 'WA', 5000),\n(2, 'South Regional Center', 'Los Angeles', 'CA', 7500),\n(3, 'East Regional Center', 'Atlanta', 'GA', 6000),\n(4, 'Central Hub', 'Chicago', 'IL', 10000);\n\nINSERT INTO delivery_routes VALUES\n(1, 1, 'Seattle Metro Route', 'Urban', 45.5),\n(2, 1, 'Pacific Northwest Route', 'Regional', 180.0),\n(3, 2, 'LA County Express', 'Urban', 65.0),\n(4, 2, 'SoCal Regional', 'Regional', 220.0),\n(5, 3, 'Atlanta Metro', 'Urban', 55.0),\n(6, 3, 'Southeast Corridor', 'Highway', 320.0),\n(7, 4, 'Chicago Loop', 'Urban', 40.0),\n(8, 4, 'Midwest Express', 'Highway', 280.0);\n\nINSERT INTO deliveries VALUES\n(1, 1, '2024-05-01', 45, 6.5, 85.00, 180.00, 4.2),\n(2, 1, '2024-05-02', 42, 6.0, 80.00, 175.00, 4.5),\n(3, 2, '2024-05-01', 28, 8.5, 120.00, 220.00, 4.0),\n(4, 3, '2024-05-01', 55, 7.0, 95.00, 190.00, 4.3),\n(5, 3, '2024-05-02', 50, 6.8, 90.00, 185.00, 4.4),\n(6, 4, '2024-05-01', 35, 9.2, 140.00, 240.00, 3.8),\n(7, 5, '2024-05-01', 38, 5.5, 75.00, 165.00, 4.6),\n(8, 6, '2024-05-01', 22, 12.0, 180.00, 300.00, 3.9),\n(9, 7, '2024-05-01', 60, 5.0, 70.00, 160.00, 4.7),\n(10, 8, '2024-05-01', 30, 10.5, 160.00, 280.00, 4.1);",
      "solution_sql": "\nSELECT \n    dc.state,\n    dr.route_type,\n    COUNT(d.delivery_id) as total_deliveries,\n    SUM(d.packages_delivered) as total_packages,\n    ROUND(AVG(d.delivery_time_hours), 2) as avg_delivery_time,\n    ROUND(AVG(d.fuel_cost + d.driver_cost), 2) as avg_cost_per_delivery,\n    ROUND(SUM(d.packages_delivered) / SUM(d.delivery_time_hours), 2) as packages_per_hour,\n    ROUND(AVG(d.customer_rating), 2) as avg_customer_rating\nFROM distribution_centers dc\nJOIN delivery_routes dr ON dc.center_id = dr.center_id\nJOIN deliveries d ON dr.route_id = d.route_id\nGROUP BY dc.state, dr.route_type\nORDER BY packages_per_hour DESC;",
      "explanation": "Defense contracting analysis using JOINs with complex aggregation and date calculations for government agency relationship management.",
      "created_at": "2025-08-11T13:51:12.116Z",
      "expected_output": [
        {
          "state": "IL",
          "route_type": "Urban",
          "total_packages": "60",
          "total_deliveries": "1",
          "avg_delivery_time": "5.00",
          "packages_per_hour": "12.00",
          "avg_customer_rating": "4.70",
          "avg_cost_per_delivery": "230.00"
        },
        {
          "state": "CA",
          "route_type": "Urban",
          "total_packages": "105",
          "total_deliveries": "2",
          "avg_delivery_time": "6.90",
          "packages_per_hour": "7.61",
          "avg_customer_rating": "4.35",
          "avg_cost_per_delivery": "280.00"
        },
        {
          "state": "WA",
          "route_type": "Urban",
          "total_packages": "87",
          "total_deliveries": "2",
          "avg_delivery_time": "6.25",
          "packages_per_hour": "6.96",
          "avg_customer_rating": "4.35",
          "avg_cost_per_delivery": "260.00"
        },
        {
          "state": "GA",
          "route_type": "Urban",
          "total_packages": "38",
          "total_deliveries": "1",
          "avg_delivery_time": "5.50",
          "packages_per_hour": "6.91",
          "avg_customer_rating": "4.60",
          "avg_cost_per_delivery": "240.00"
        },
        {
          "state": "CA",
          "route_type": "Regional",
          "total_packages": "35",
          "total_deliveries": "1",
          "avg_delivery_time": "9.20",
          "packages_per_hour": "3.80",
          "avg_customer_rating": "3.80",
          "avg_cost_per_delivery": "380.00"
        },
        {
          "state": "WA",
          "route_type": "Regional",
          "total_packages": "28",
          "total_deliveries": "1",
          "avg_delivery_time": "8.50",
          "packages_per_hour": "3.29",
          "avg_customer_rating": "4.00",
          "avg_cost_per_delivery": "340.00"
        },
        {
          "state": "IL",
          "route_type": "Highway",
          "total_packages": "30",
          "total_deliveries": "1",
          "avg_delivery_time": "10.50",
          "packages_per_hour": "2.86",
          "avg_customer_rating": "4.10",
          "avg_cost_per_delivery": "440.00"
        },
        {
          "state": "GA",
          "route_type": "Highway",
          "total_packages": "22",
          "total_deliveries": "1",
          "avg_delivery_time": "12.00",
          "packages_per_hour": "1.83",
          "avg_customer_rating": "3.90",
          "avg_cost_per_delivery": "480.00"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Supply Chain Logistics Analytics",
      "problem_slug": "lockheed-martin-defense-contracts"
    },
    {
      "id": "0a6130eb-8afe-4221-bd1d-cb630b2ab71d",
      "problem_id": "3ff6929e-490a-477b-a060-b0d8873c9cc7",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE mastercard_network (\n        region_id INT PRIMARY KEY,\n        region VARCHAR(50),\n        monthly_volume BIGINT,\n        fraud_incidents INT,\n        failed_transactions INT,\n        revenue DECIMAL(8,2),\n        processing_cost DECIMAL(8,2),\n        network_date DATE\n    );\n      INSERT INTO mastercard_network  VALUES\n      (1, 'North America', 25000000000, 125000, 50000000, 8500.50, 1200.00, '2024-01-15'),\n      (2, 'Europe', 18000000000, 95000, 36000000, 6200.75, 950.00, '2024-01-15'),\n      (3, 'Asia Pacific', 22000000000, 180000, 88000000, 4800.25, 1100.00, '2024-01-16'),\n      (4, 'Latin America', 8500000000, 65000, 25500000, 1850.80, 420.00, '2024-01-16'),\n      (5, 'Middle East Africa', 4200000000, 42000, 12600000, 950.60, 185.00, '2024-01-17'),\n      (7, 'North America_v1', 25000000010, 125010, 50000010, 8500.60, 1200.10, '2024-01-16'),\n      (9, 'Europe_v2', 18000000020, 95020, 36000020, 6200.95, 950.20, '2024-01-17'),\n      (11, 'Asia Pacific_v3', 22000000030, 180030, 88000030, 4800.55, 1100.30, '2024-01-19'),\n      (13, 'Latin America_v4', 8500000040, 65040, 25500040, 1851.20, 420.40, '2024-01-20'),\n      (15, 'Middle East Africa_v5', 4200000050, 42050, 12600050, 951.10, 185.50, '2024-01-22'),\n      (12, 'North America_v6', 25000000060, 125060, 50000060, 8501.10, 1200.60, '2024-01-21'),\n      (14, 'Europe_v7', 18000000070, 95070, 36000070, 6201.45, 950.70, '2024-01-22'),\n      (16, 'Asia Pacific_v8', 22000000080, 180080, 88000080, 4801.05, 1100.80, '2024-01-24'),\n      (18, 'Latin America_v9', 8500000090, 65090, 25500090, 1851.70, 420.90, '2024-01-25'),\n      (20, 'Middle East Africa_v10', 4200000100, 42100, 12600100, 951.60, 186.00, '2024-01-27'),\n      (17, 'North America_v11', 25000000110, 125110, 50000110, 8501.60, 1201.10, '2024-01-26'),\n      (19, 'Europe_v12', 18000000120, 95120, 36000120, 6201.95, 951.20, '2024-01-27'),\n      (21, 'Asia Pacific_v13', 22000000130, 180130, 88000130, 4801.55, 1101.30, '2024-01-29'),\n      (23, 'Latin America_v14', 8500000140, 65140, 25500140, 1852.20, 421.40, '2024-01-30'),\n      (25, 'Middle East Africa_v15', 4200000150, 42150, 12600150, 952.10, 186.50, '2024-02-01'),\n      (22, 'North America_v16', 25000000160, 125160, 50000160, 8502.10, 1201.60, '2024-01-31'),\n      (24, 'Europe_v17', 18000000170, 95170, 36000170, 6202.45, 951.70, '2024-02-01'),\n      (26, 'Asia Pacific_v18', 22000000180, 180180, 88000180, 4802.05, 1101.80, '2024-02-03'),\n      (28, 'Latin America_v19', 8500000190, 65190, 25500190, 1852.70, 421.90, '2024-02-04'),\n      (30, 'Middle East Africa_v20', 4200000200, 42200, 12600200, 952.60, 187.00, '2024-02-06');",
      "solution_sql": "WITH metrics AS (\n        SELECT \n            region,\n            monthly_volume,\n            ROUND((CAST(fraud_incidents AS DECIMAL) / monthly_volume) * 100, 4) as fraud_rate_pct,\n            ROUND(((CAST(monthly_volume - failed_transactions AS DECIMAL) / monthly_volume) * 100), 3) as success_rate_pct,\n            revenue\n        FROM mastercard_network\n    )\n    SELECT region, ROUND(monthly_volume / 1000000000, 2) as volume_billions, fraud_rate_pct, success_rate_pct, revenue\n    FROM metrics WHERE fraud_rate_pct < 0.1 AND success_rate_pct > 99.0 ORDER BY volume_billions DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.686Z",
      "expected_output": [
        {
          "region": "Latin America",
          "revenue": "1850.80",
          "fraud_rate_pct": "0.0008",
          "volume_billions": "8.50",
          "success_rate_pct": "99.700"
        },
        {
          "region": "Latin America_v4",
          "revenue": "1851.20",
          "fraud_rate_pct": "0.0008",
          "volume_billions": "8.50",
          "success_rate_pct": "99.700"
        },
        {
          "region": "Latin America_v9",
          "revenue": "1851.70",
          "fraud_rate_pct": "0.0008",
          "volume_billions": "8.50",
          "success_rate_pct": "99.700"
        },
        {
          "region": "Latin America_v14",
          "revenue": "1852.20",
          "fraud_rate_pct": "0.0008",
          "volume_billions": "8.50",
          "success_rate_pct": "99.700"
        },
        {
          "region": "Latin America_v19",
          "revenue": "1852.70",
          "fraud_rate_pct": "0.0008",
          "volume_billions": "8.50",
          "success_rate_pct": "99.700"
        },
        {
          "region": "Middle East Africa",
          "revenue": "950.60",
          "fraud_rate_pct": "0.0010",
          "volume_billions": "4.20",
          "success_rate_pct": "99.700"
        },
        {
          "region": "Middle East Africa_v5",
          "revenue": "951.10",
          "fraud_rate_pct": "0.0010",
          "volume_billions": "4.20",
          "success_rate_pct": "99.700"
        },
        {
          "region": "Middle East Africa_v10",
          "revenue": "951.60",
          "fraud_rate_pct": "0.0010",
          "volume_billions": "4.20",
          "success_rate_pct": "99.700"
        },
        {
          "region": "Middle East Africa_v15",
          "revenue": "952.10",
          "fraud_rate_pct": "0.0010",
          "volume_billions": "4.20",
          "success_rate_pct": "99.700"
        },
        {
          "region": "Middle East Africa_v20",
          "revenue": "952.60",
          "fraud_rate_pct": "0.0010",
          "volume_billions": "4.20",
          "success_rate_pct": "99.700"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Mastercard Global Payment Network Analytics",
      "problem_slug": "mastercard-portfolio-analytics"
    },
    {
      "id": "2b38ae58-2c1f-4f37-8b63-a5052a8c6e7e",
      "problem_id": "3ff6929e-490a-477b-a060-b0d8873c9cc7",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE mastercard_network (\n        region_id INT PRIMARY KEY,\n        region VARCHAR(50),\n        monthly_volume BIGINT,\n        fraud_incidents INT,\n        failed_transactions INT,\n        revenue DECIMAL(8,2),\n        processing_cost DECIMAL(8,2),\n        network_date DATE\n    );\n      INSERT INTO mastercard_network  VALUES\n      (1, 'North America', 25000000000, 125000, 50000000, 8500.50, 1200.00, '2024-01-15'),\n      (2, 'Europe', 18000000000, 95000, 36000000, 6200.75, 950.00, '2024-01-15'),\n      (3, 'Asia Pacific', 22000000000, 180000, 88000000, 4800.25, 1100.00, '2024-01-16'),\n      (4, 'Latin America', 8500000000, 65000, 25500000, 1850.80, 420.00, '2024-01-16'),\n      (5, 'Middle East Africa', 4200000000, 42000, 12600000, 950.60, 185.00, '2024-01-17'),\n      (7, 'North America_v1', 25000000010, 125010, 50000010, 8500.60, 1200.10, '2024-01-16'),\n      (9, 'Europe_v2', 18000000020, 95020, 36000020, 6200.95, 950.20, '2024-01-17'),\n      (11, 'Asia Pacific_v3', 22000000030, 180030, 88000030, 4800.55, 1100.30, '2024-01-19'),\n      (13, 'Latin America_v4', 8500000040, 65040, 25500040, 1851.20, 420.40, '2024-01-20'),\n      (15, 'Middle East Africa_v5', 4200000050, 42050, 12600050, 951.10, 185.50, '2024-01-22'),\n      (12, 'North America_v6', 25000000060, 125060, 50000060, 8501.10, 1200.60, '2024-01-21'),\n      (14, 'Europe_v7', 18000000070, 95070, 36000070, 6201.45, 950.70, '2024-01-22'),\n      (16, 'Asia Pacific_v8', 22000000080, 180080, 88000080, 4801.05, 1100.80, '2024-01-24'),\n      (18, 'Latin America_v9', 8500000090, 65090, 25500090, 1851.70, 420.90, '2024-01-25'),\n      (20, 'Middle East Africa_v10', 4200000100, 42100, 12600100, 951.60, 186.00, '2024-01-27'),\n      (17, 'North America_v11', 25000000110, 125110, 50000110, 8501.60, 1201.10, '2024-01-26'),\n      (19, 'Europe_v12', 18000000120, 95120, 36000120, 6201.95, 951.20, '2024-01-27'),\n      (21, 'Asia Pacific_v13', 22000000130, 180130, 88000130, 4801.55, 1101.30, '2024-01-29'),\n      (23, 'Latin America_v14', 8500000140, 65140, 25500140, 1852.20, 421.40, '2024-01-30'),\n      (25, 'Middle East Africa_v15', 4200000150, 42150, 12600150, 952.10, 186.50, '2024-02-01'),\n      (22, 'North America_v16', 25000000160, 125160, 50000160, 8502.10, 1201.60, '2024-01-31'),\n      (24, 'Europe_v17', 18000000170, 95170, 36000170, 6202.45, 951.70, '2024-02-01'),\n      (26, 'Asia Pacific_v18', 22000000180, 180180, 88000180, 4802.05, 1101.80, '2024-02-03'),\n      (28, 'Latin America_v19', 8500000190, 65190, 25500190, 1852.70, 421.90, '2024-02-04'),\n      (30, 'Middle East Africa_v20', 4200000200, 42200, 12600200, 952.60, 187.00, '2024-02-06');",
      "solution_sql": "WITH metrics AS (\n        SELECT \n            region,\n            monthly_volume,\n            ROUND((CAST(fraud_incidents AS DECIMAL) / monthly_volume) * 100, 4) as fraud_rate_pct,\n            ROUND(((CAST(monthly_volume - failed_transactions AS DECIMAL) / monthly_volume) * 100), 3) as success_rate_pct,\n            revenue\n        FROM mastercard_network\n    )\n    SELECT region, ROUND(monthly_volume / 1000000000, 2) as volume_billions, fraud_rate_pct, success_rate_pct, revenue\n    FROM metrics WHERE fraud_rate_pct < 0.1 AND success_rate_pct > 99.0 ORDER BY volume_billions DESC;",
      "explanation": "Mastercard payment network analytics using fraud rates and success rates.",
      "created_at": "2025-08-11T17:08:07.876Z",
      "expected_output": [
        {
          "region": "North America_v1",
          "revenue": "8500.60",
          "fraud_rate_pct": "0.0005",
          "volume_billions": "25.00",
          "success_rate_pct": "99.800"
        },
        {
          "region": "North America_v6",
          "revenue": "8501.10",
          "fraud_rate_pct": "0.0005",
          "volume_billions": "25.00",
          "success_rate_pct": "99.800"
        },
        {
          "region": "North America_v16",
          "revenue": "8502.10",
          "fraud_rate_pct": "0.0005",
          "volume_billions": "25.00",
          "success_rate_pct": "99.800"
        },
        {
          "region": "North America_v11",
          "revenue": "8501.60",
          "fraud_rate_pct": "0.0005",
          "volume_billions": "25.00",
          "success_rate_pct": "99.800"
        },
        {
          "region": "North America",
          "revenue": "8500.50",
          "fraud_rate_pct": "0.0005",
          "volume_billions": "25.00",
          "success_rate_pct": "99.800"
        },
        {
          "region": "Asia Pacific_v8",
          "revenue": "4801.05",
          "fraud_rate_pct": "0.0008",
          "volume_billions": "22.00",
          "success_rate_pct": "99.600"
        },
        {
          "region": "Asia Pacific",
          "revenue": "4800.25",
          "fraud_rate_pct": "0.0008",
          "volume_billions": "22.00",
          "success_rate_pct": "99.600"
        },
        {
          "region": "Asia Pacific_v3",
          "revenue": "4800.55",
          "fraud_rate_pct": "0.0008",
          "volume_billions": "22.00",
          "success_rate_pct": "99.600"
        },
        {
          "region": "Asia Pacific_v13",
          "revenue": "4801.55",
          "fraud_rate_pct": "0.0008",
          "volume_billions": "22.00",
          "success_rate_pct": "99.600"
        },
        {
          "region": "Asia Pacific_v18",
          "revenue": "4802.05",
          "fraud_rate_pct": "0.0008",
          "volume_billions": "22.00",
          "success_rate_pct": "99.600"
        },
        {
          "region": "Europe_v17",
          "revenue": "6202.45",
          "fraud_rate_pct": "0.0005",
          "volume_billions": "18.00",
          "success_rate_pct": "99.800"
        },
        {
          "region": "Europe_v12",
          "revenue": "6201.95",
          "fraud_rate_pct": "0.0005",
          "volume_billions": "18.00",
          "success_rate_pct": "99.800"
        },
        {
          "region": "Europe_v2",
          "revenue": "6200.95",
          "fraud_rate_pct": "0.0005",
          "volume_billions": "18.00",
          "success_rate_pct": "99.800"
        },
        {
          "region": "Europe_v7",
          "revenue": "6201.45",
          "fraud_rate_pct": "0.0005",
          "volume_billions": "18.00",
          "success_rate_pct": "99.800"
        },
        {
          "region": "Europe",
          "revenue": "6200.75",
          "fraud_rate_pct": "0.0005",
          "volume_billions": "18.00",
          "success_rate_pct": "99.800"
        },
        {
          "region": "Latin America_v19",
          "revenue": "1852.70",
          "fraud_rate_pct": "0.0008",
          "volume_billions": "8.00",
          "success_rate_pct": "99.700"
        },
        {
          "region": "Latin America_v9",
          "revenue": "1851.70",
          "fraud_rate_pct": "0.0008",
          "volume_billions": "8.00",
          "success_rate_pct": "99.700"
        },
        {
          "region": "Latin America",
          "revenue": "1850.80",
          "fraud_rate_pct": "0.0008",
          "volume_billions": "8.00",
          "success_rate_pct": "99.700"
        },
        {
          "region": "Latin America_v14",
          "revenue": "1852.20",
          "fraud_rate_pct": "0.0008",
          "volume_billions": "8.00",
          "success_rate_pct": "99.700"
        },
        {
          "region": "Latin America_v4",
          "revenue": "1851.20",
          "fraud_rate_pct": "0.0008",
          "volume_billions": "8.00",
          "success_rate_pct": "99.700"
        },
        {
          "region": "Middle East Africa_v10",
          "revenue": "951.60",
          "fraud_rate_pct": "0.0010",
          "volume_billions": "4.00",
          "success_rate_pct": "99.700"
        },
        {
          "region": "Middle East Africa",
          "revenue": "950.60",
          "fraud_rate_pct": "0.0010",
          "volume_billions": "4.00",
          "success_rate_pct": "99.700"
        },
        {
          "region": "Middle East Africa_v20",
          "revenue": "952.60",
          "fraud_rate_pct": "0.0010",
          "volume_billions": "4.00",
          "success_rate_pct": "99.700"
        },
        {
          "region": "Middle East Africa_v5",
          "revenue": "951.10",
          "fraud_rate_pct": "0.0010",
          "volume_billions": "4.00",
          "success_rate_pct": "99.700"
        },
        {
          "region": "Middle East Africa_v15",
          "revenue": "952.10",
          "fraud_rate_pct": "0.0010",
          "volume_billions": "4.00",
          "success_rate_pct": "99.700"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Mastercard Global Payment Network Analytics",
      "problem_slug": "mastercard-portfolio-analytics"
    },
    {
      "id": "9f3b7bea-98ac-4d57-9872-23cd752a679d",
      "problem_id": "eb15df93-f7ca-4177-97d4-2ff06bc7c917",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE client_engagements (\n          engagement_id INT PRIMARY KEY,\n          industry_vertical VARCHAR(50),\n          engagement_duration_months INT,\n          team_size INT,\n          client_satisfaction_score DECIMAL(3,2)\n      );\n      INSERT INTO client_engagements  VALUES\n      (1, 'Financial Services', 8, 12, 4.2),\n      (2, 'Technology', 6, 8, 4.6),\n      (3, 'Healthcare', 12, 15, 4.1),\n      (4, 'Manufacturing', 9, 10, 4.4),\n      (5, 'Energy', 15, 18, 3.9),\n      (7, 'Financial Services_v1', 18, 22, 4.30),\n      (9, 'Technology_v2', 26, 28, 4.80),\n      (11, 'Healthcare_v3', 42, 45, 4.40),\n      (13, 'Manufacturing_v4', 49, 50, 4.80),\n      (15, 'Energy_v5', 65, 68, 4.40),\n      (12, 'Financial Services_v6', 68, 72, 4.80),\n      (14, 'Technology_v7', 76, 78, 5.30),\n      (16, 'Healthcare_v8', 92, 95, 4.90),\n      (18, 'Manufacturing_v9', 99, 100, 5.30),\n      (20, 'Energy_v10', 115, 118, 4.90),\n      (17, 'Financial Services_v11', 118, 122, 5.30),\n      (19, 'Technology_v12', 126, 128, 5.80),\n      (21, 'Healthcare_v13', 142, 145, 5.40),\n      (23, 'Manufacturing_v14', 149, 150, 5.80),\n      (25, 'Energy_v15', 165, 168, 5.40),\n      (22, 'Financial Services_v16', 168, 172, 5.80),\n      (24, 'Technology_v17', 176, 178, 6.30),\n      (26, 'Healthcare_v18', 192, 195, 5.90),\n      (28, 'Manufacturing_v19', 199, 200, 6.30),\n      (30, 'Energy_v20', 215, 218, 5.90);",
      "solution_sql": "SELECT industry_vertical, AVG(client_satisfaction_score) as avg_satisfaction\nFROM client_engagements \nGROUP BY industry_vertical \nHAVING AVG(client_satisfaction_score) > 4.0 \nORDER BY avg_satisfaction DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.788Z",
      "expected_output": [
        {
          "avg_satisfaction": "6.300000",
          "industry_vertical": "Manufacturing_v19"
        },
        {
          "avg_satisfaction": "6.300000",
          "industry_vertical": "Technology_v17"
        },
        {
          "avg_satisfaction": "5.900000",
          "industry_vertical": "Energy_v20"
        },
        {
          "avg_satisfaction": "5.900000",
          "industry_vertical": "Healthcare_v18"
        },
        {
          "avg_satisfaction": "5.800000",
          "industry_vertical": "Manufacturing_v14"
        },
        {
          "avg_satisfaction": "5.800000",
          "industry_vertical": "Financial Services_v16"
        },
        {
          "avg_satisfaction": "5.800000",
          "industry_vertical": "Technology_v12"
        },
        {
          "avg_satisfaction": "5.400000",
          "industry_vertical": "Energy_v15"
        },
        {
          "avg_satisfaction": "5.400000",
          "industry_vertical": "Healthcare_v13"
        },
        {
          "avg_satisfaction": "5.300000",
          "industry_vertical": "Financial Services_v11"
        },
        {
          "avg_satisfaction": "5.300000",
          "industry_vertical": "Manufacturing_v9"
        },
        {
          "avg_satisfaction": "5.300000",
          "industry_vertical": "Technology_v7"
        },
        {
          "avg_satisfaction": "4.900000",
          "industry_vertical": "Healthcare_v8"
        },
        {
          "avg_satisfaction": "4.900000",
          "industry_vertical": "Energy_v10"
        },
        {
          "avg_satisfaction": "4.800000",
          "industry_vertical": "Manufacturing_v4"
        },
        {
          "avg_satisfaction": "4.800000",
          "industry_vertical": "Financial Services_v6"
        },
        {
          "avg_satisfaction": "4.800000",
          "industry_vertical": "Technology_v2"
        },
        {
          "avg_satisfaction": "4.600000",
          "industry_vertical": "Technology"
        },
        {
          "avg_satisfaction": "4.400000",
          "industry_vertical": "Energy_v5"
        },
        {
          "avg_satisfaction": "4.400000",
          "industry_vertical": "Healthcare_v3"
        },
        {
          "avg_satisfaction": "4.400000",
          "industry_vertical": "Manufacturing"
        },
        {
          "avg_satisfaction": "4.300000",
          "industry_vertical": "Financial Services_v1"
        },
        {
          "avg_satisfaction": "4.200000",
          "industry_vertical": "Financial Services"
        },
        {
          "avg_satisfaction": "4.100000",
          "industry_vertical": "Healthcare"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "McKinsey Client Engagement Analysis",
      "problem_slug": "mckinsey-client-engagement-analysis"
    },
    {
      "id": "0d5f368b-6e34-4b61-954b-b3f1a735f7c5",
      "problem_id": "eb15df93-f7ca-4177-97d4-2ff06bc7c917",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE client_engagements (\n          engagement_id INT PRIMARY KEY,\n          industry_vertical VARCHAR(50),\n          engagement_duration_months INT,\n          team_size INT,\n          client_satisfaction_score DECIMAL(3,2)\n      );\n      INSERT INTO client_engagements  VALUES\n      (1, 'Financial Services', 8, 12, 4.2),\n      (2, 'Technology', 6, 8, 4.6),\n      (3, 'Healthcare', 12, 15, 4.1),\n      (4, 'Manufacturing', 9, 10, 4.4),\n      (5, 'Energy', 15, 18, 3.9),\n      (7, 'Financial Services_v1', 18, 22, 4.30),\n      (9, 'Technology_v2', 26, 28, 4.80),\n      (11, 'Healthcare_v3', 42, 45, 4.40),\n      (13, 'Manufacturing_v4', 49, 50, 4.80),\n      (15, 'Energy_v5', 65, 68, 4.40),\n      (12, 'Financial Services_v6', 68, 72, 4.80),\n      (14, 'Technology_v7', 76, 78, 5.30),\n      (16, 'Healthcare_v8', 92, 95, 4.90),\n      (18, 'Manufacturing_v9', 99, 100, 5.30),\n      (20, 'Energy_v10', 115, 118, 4.90),\n      (17, 'Financial Services_v11', 118, 122, 5.30),\n      (19, 'Technology_v12', 126, 128, 5.80),\n      (21, 'Healthcare_v13', 142, 145, 5.40),\n      (23, 'Manufacturing_v14', 149, 150, 5.80),\n      (25, 'Energy_v15', 165, 168, 5.40),\n      (22, 'Financial Services_v16', 168, 172, 5.80),\n      (24, 'Technology_v17', 176, 178, 6.30),\n      (26, 'Healthcare_v18', 192, 195, 5.90),\n      (28, 'Manufacturing_v19', 199, 200, 6.30),\n      (30, 'Energy_v20', 215, 218, 5.90);",
      "solution_sql": "SELECT industry_vertical, AVG(client_satisfaction_score) as avg_satisfaction\nFROM client_engagements \nGROUP BY industry_vertical \nHAVING AVG(client_satisfaction_score) > 4.0 \nORDER BY avg_satisfaction DESC;",
      "explanation": "Management consulting profitability analysis using complex cost modeling, overhead calculations, and client-practice performance optimization for strategic relationship management.",
      "created_at": "2025-08-11T13:51:12.119Z",
      "expected_output": [
        {
          "avg_satisfaction": "6.3000000000000000",
          "industry_vertical": "Manufacturing_v19"
        },
        {
          "avg_satisfaction": "6.3000000000000000",
          "industry_vertical": "Technology_v17"
        },
        {
          "avg_satisfaction": "5.9000000000000000",
          "industry_vertical": "Healthcare_v18"
        },
        {
          "avg_satisfaction": "5.9000000000000000",
          "industry_vertical": "Energy_v20"
        },
        {
          "avg_satisfaction": "5.8000000000000000",
          "industry_vertical": "Financial Services_v16"
        },
        {
          "avg_satisfaction": "5.8000000000000000",
          "industry_vertical": "Technology_v12"
        },
        {
          "avg_satisfaction": "5.8000000000000000",
          "industry_vertical": "Manufacturing_v14"
        },
        {
          "avg_satisfaction": "5.4000000000000000",
          "industry_vertical": "Healthcare_v13"
        },
        {
          "avg_satisfaction": "5.4000000000000000",
          "industry_vertical": "Energy_v15"
        },
        {
          "avg_satisfaction": "5.3000000000000000",
          "industry_vertical": "Technology_v7"
        },
        {
          "avg_satisfaction": "5.3000000000000000",
          "industry_vertical": "Manufacturing_v9"
        },
        {
          "avg_satisfaction": "5.3000000000000000",
          "industry_vertical": "Financial Services_v11"
        },
        {
          "avg_satisfaction": "4.9000000000000000",
          "industry_vertical": "Healthcare_v8"
        },
        {
          "avg_satisfaction": "4.9000000000000000",
          "industry_vertical": "Energy_v10"
        },
        {
          "avg_satisfaction": "4.8000000000000000",
          "industry_vertical": "Technology_v2"
        },
        {
          "avg_satisfaction": "4.8000000000000000",
          "industry_vertical": "Manufacturing_v4"
        },
        {
          "avg_satisfaction": "4.8000000000000000",
          "industry_vertical": "Financial Services_v6"
        },
        {
          "avg_satisfaction": "4.6000000000000000",
          "industry_vertical": "Technology"
        },
        {
          "avg_satisfaction": "4.4000000000000000",
          "industry_vertical": "Healthcare_v3"
        },
        {
          "avg_satisfaction": "4.4000000000000000",
          "industry_vertical": "Energy_v5"
        },
        {
          "avg_satisfaction": "4.4000000000000000",
          "industry_vertical": "Manufacturing"
        },
        {
          "avg_satisfaction": "4.3000000000000000",
          "industry_vertical": "Financial Services_v1"
        },
        {
          "avg_satisfaction": "4.2000000000000000",
          "industry_vertical": "Financial Services"
        },
        {
          "avg_satisfaction": "4.1000000000000000",
          "industry_vertical": "Healthcare"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "McKinsey Client Engagement Analysis",
      "problem_slug": "mckinsey-client-engagement-analysis"
    },
    {
      "id": "d300f7e9-a644-4851-8bd0-af0346a97e69",
      "problem_id": "130642c4-caa3-4fb9-8069-7b29b664b0b6",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE morganstanley_institutional_securities (\n        desk_id INT PRIMARY KEY,\n        trading_desk VARCHAR(50),\n        monthly_trading_volume DECIMAL(12,2),\n        spread_capture_bps INT,\n        client_revenue DECIMAL(10,2),\n        market_share_pct DECIMAL(5,2),\n        risk_adjusted_return DECIMAL(6,3),\n        client_satisfaction_score DECIMAL(3,1),\n        trader_count INT,\n        technology_score DECIMAL(3,1),\n        desk_date DATE\n    );\n      INSERT INTO morganstanley_institutional_securities VALUES\n    (1, 'Equity Trading', 125000.00, 28, 485000.00, 12.5, 0.225, 8.8, 85, 9.2, '2024-01-15'),\n    (2, 'Fixed Income', 185000.00, 35, 685000.00, 18.2, 0.285, 9.1, 120, 9.5, '2024-01-15'),\n    (3, 'Foreign Exchange', 95000.00, 15, 285000.00, 8.5, 0.195, 8.5, 45, 8.8, '2024-01-16'),\n    (4, 'Prime Brokerage', 85000.00, 45, 425000.00, 15.8, 0.325, 9.0, 65, 9.1, '2024-01-16'),\n    (5, 'Derivatives Trading', 65000.00, 32, 385000.00, 22.5, 0.285, 8.9, 75, 9.3, '2024-01-17'),\n    (7, 'Equity Trading_v1', 125000.10, 38, 485000.10, 12.60, 0.33, 8.90, 95, 9.30, '2024-01-16'),\n    (9, 'Fixed Income_v2', 185000.20, 55, 685000.20, 18.40, 0.48, 9.30, 140, 9.70, '2024-01-17'),\n    (11, 'Foreign Exchange_v3', 95000.30, 45, 285000.30, 8.80, 0.50, 8.80, 75, 9.10, '2024-01-19'),\n    (13, 'Prime Brokerage_v4', 85000.40, 85, 425000.40, 16.20, 0.73, 9.40, 105, 9.50, '2024-01-20'),\n    (15, 'Derivatives Trading_v5', 65000.50, 82, 385000.50, 23.00, 0.78, 9.40, 125, 9.80, '2024-01-22'),\n    (12, 'Equity Trading_v6', 125000.60, 88, 485000.60, 13.10, 0.83, 9.40, 145, 9.80, '2024-01-21'),\n    (14, 'Fixed Income_v7', 185000.70, 105, 685000.70, 18.90, 0.99, 9.80, 190, 10.20, '2024-01-22'),\n    (16, 'Foreign Exchange_v8', 95000.80, 95, 285000.80, 9.30, 1.00, 9.30, 125, 9.60, '2024-01-24'),\n    (18, 'Prime Brokerage_v9', 85000.90, 135, 425000.90, 16.70, 1.23, 9.90, 155, 10.00, '2024-01-25'),\n    (20, 'Derivatives Trading_v10', 65001.00, 132, 385001.00, 23.50, 1.28, 9.90, 175, 10.30, '2024-01-27'),\n    (17, 'Equity Trading_v11', 125001.10, 138, 485001.10, 13.60, 1.33, 9.90, 195, 10.30, '2024-01-26'),\n    (19, 'Fixed Income_v12', 185001.20, 155, 685001.20, 19.40, 1.49, 10.30, 240, 10.70, '2024-01-27'),\n    (21, 'Foreign Exchange_v13', 95001.30, 145, 285001.30, 9.80, 1.50, 9.80, 175, 10.10, '2024-01-29'),\n    (23, 'Prime Brokerage_v14', 85001.40, 185, 425001.40, 17.20, 1.73, 10.40, 205, 10.50, '2024-01-30'),\n    (25, 'Derivatives Trading_v15', 65001.50, 182, 385001.50, 24.00, 1.78, 10.40, 225, 10.80, '2024-02-01'),\n    (22, 'Equity Trading_v16', 125001.60, 188, 485001.60, 14.10, 1.83, 10.40, 245, 10.80, '2024-01-31'),\n    (24, 'Fixed Income_v17', 185001.70, 205, 685001.70, 19.90, 1.99, 10.80, 290, 11.20, '2024-02-01'),\n    (26, 'Foreign Exchange_v18', 95001.80, 195, 285001.80, 10.30, 2.00, 10.30, 225, 10.60, '2024-02-03'),\n    (28, 'Prime Brokerage_v19', 85001.90, 235, 425001.90, 17.70, 2.23, 10.90, 255, 11.00, '2024-02-04'),\n    (30, 'Derivatives Trading_v20', 65002.00, 232, 385002.00, 24.50, 2.29, 10.90, 275, 11.30, '2024-02-06');",
      "solution_sql": "SELECT trading_desk, client_satisfaction_score FROM morganstanley_institutional_securities ORDER BY client_satisfaction_score DESC LIMIT 10;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.650Z",
      "expected_output": [
        {
          "trading_desk": "Derivatives Trading_v20",
          "client_satisfaction_score": "10.9"
        },
        {
          "trading_desk": "Prime Brokerage_v19",
          "client_satisfaction_score": "10.9"
        },
        {
          "trading_desk": "Fixed Income_v17",
          "client_satisfaction_score": "10.8"
        },
        {
          "trading_desk": "Derivatives Trading_v15",
          "client_satisfaction_score": "10.4"
        },
        {
          "trading_desk": "Equity Trading_v16",
          "client_satisfaction_score": "10.4"
        },
        {
          "trading_desk": "Prime Brokerage_v14",
          "client_satisfaction_score": "10.4"
        },
        {
          "trading_desk": "Foreign Exchange_v18",
          "client_satisfaction_score": "10.3"
        },
        {
          "trading_desk": "Fixed Income_v12",
          "client_satisfaction_score": "10.3"
        },
        {
          "trading_desk": "Derivatives Trading_v10",
          "client_satisfaction_score": "9.9"
        },
        {
          "trading_desk": "Prime Brokerage_v9",
          "client_satisfaction_score": "9.9"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Morgan Stanley Institutional Securities Analytics",
      "problem_slug": "intesa-sanpaolo-risk-management-system"
    },
    {
      "id": "d7774aba-4f6e-45f9-88b8-888b279045f5",
      "problem_id": "130642c4-caa3-4fb9-8069-7b29b664b0b6",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE morganstanley_institutional_securities (\n        desk_id INT PRIMARY KEY,\n        trading_desk VARCHAR(50),\n        monthly_trading_volume DECIMAL(12,2),\n        spread_capture_bps INT,\n        client_revenue DECIMAL(10,2),\n        market_share_pct DECIMAL(5,2),\n        risk_adjusted_return DECIMAL(6,3),\n        client_satisfaction_score DECIMAL(3,1),\n        trader_count INT,\n        technology_score DECIMAL(3,1),\n        desk_date DATE\n    );\n      INSERT INTO morganstanley_institutional_securities VALUES\n    (1, 'Equity Trading', 125000.00, 28, 485000.00, 12.5, 0.225, 8.8, 85, 9.2, '2024-01-15'),\n    (2, 'Fixed Income', 185000.00, 35, 685000.00, 18.2, 0.285, 9.1, 120, 9.5, '2024-01-15'),\n    (3, 'Foreign Exchange', 95000.00, 15, 285000.00, 8.5, 0.195, 8.5, 45, 8.8, '2024-01-16'),\n    (4, 'Prime Brokerage', 85000.00, 45, 425000.00, 15.8, 0.325, 9.0, 65, 9.1, '2024-01-16'),\n    (5, 'Derivatives Trading', 65000.00, 32, 385000.00, 22.5, 0.285, 8.9, 75, 9.3, '2024-01-17'),\n    (7, 'Equity Trading_v1', 125000.10, 38, 485000.10, 12.60, 0.33, 8.90, 95, 9.30, '2024-01-16'),\n    (9, 'Fixed Income_v2', 185000.20, 55, 685000.20, 18.40, 0.48, 9.30, 140, 9.70, '2024-01-17'),\n    (11, 'Foreign Exchange_v3', 95000.30, 45, 285000.30, 8.80, 0.50, 8.80, 75, 9.10, '2024-01-19'),\n    (13, 'Prime Brokerage_v4', 85000.40, 85, 425000.40, 16.20, 0.73, 9.40, 105, 9.50, '2024-01-20'),\n    (15, 'Derivatives Trading_v5', 65000.50, 82, 385000.50, 23.00, 0.78, 9.40, 125, 9.80, '2024-01-22'),\n    (12, 'Equity Trading_v6', 125000.60, 88, 485000.60, 13.10, 0.83, 9.40, 145, 9.80, '2024-01-21'),\n    (14, 'Fixed Income_v7', 185000.70, 105, 685000.70, 18.90, 0.99, 9.80, 190, 10.20, '2024-01-22'),\n    (16, 'Foreign Exchange_v8', 95000.80, 95, 285000.80, 9.30, 1.00, 9.30, 125, 9.60, '2024-01-24'),\n    (18, 'Prime Brokerage_v9', 85000.90, 135, 425000.90, 16.70, 1.23, 9.90, 155, 10.00, '2024-01-25'),\n    (20, 'Derivatives Trading_v10', 65001.00, 132, 385001.00, 23.50, 1.28, 9.90, 175, 10.30, '2024-01-27'),\n    (17, 'Equity Trading_v11', 125001.10, 138, 485001.10, 13.60, 1.33, 9.90, 195, 10.30, '2024-01-26'),\n    (19, 'Fixed Income_v12', 185001.20, 155, 685001.20, 19.40, 1.49, 10.30, 240, 10.70, '2024-01-27'),\n    (21, 'Foreign Exchange_v13', 95001.30, 145, 285001.30, 9.80, 1.50, 9.80, 175, 10.10, '2024-01-29'),\n    (23, 'Prime Brokerage_v14', 85001.40, 185, 425001.40, 17.20, 1.73, 10.40, 205, 10.50, '2024-01-30'),\n    (25, 'Derivatives Trading_v15', 65001.50, 182, 385001.50, 24.00, 1.78, 10.40, 225, 10.80, '2024-02-01'),\n    (22, 'Equity Trading_v16', 125001.60, 188, 485001.60, 14.10, 1.83, 10.40, 245, 10.80, '2024-01-31'),\n    (24, 'Fixed Income_v17', 185001.70, 205, 685001.70, 19.90, 1.99, 10.80, 290, 11.20, '2024-02-01'),\n    (26, 'Foreign Exchange_v18', 95001.80, 195, 285001.80, 10.30, 2.00, 10.30, 225, 10.60, '2024-02-03'),\n    (28, 'Prime Brokerage_v19', 85001.90, 235, 425001.90, 17.70, 2.23, 10.90, 255, 11.00, '2024-02-04'),\n    (30, 'Derivatives Trading_v20', 65002.00, 232, 385002.00, 24.50, 2.29, 10.90, 275, 11.30, '2024-02-06');",
      "solution_sql": "SELECT trading_desk, client_satisfaction_score FROM morganstanley_institutional_securities ORDER BY client_satisfaction_score DESC LIMIT 10;",
      "explanation": "Advanced Morgan Stanley institutional securities analytics using trading volumes, spread capture, and client ROI for trading desk optimization.",
      "created_at": "2025-08-11T17:08:07.891Z",
      "expected_output": [
        {
          "trading_desk": "Derivatives Trading_v20",
          "client_satisfaction_score": "10.9"
        },
        {
          "trading_desk": "Prime Brokerage_v19",
          "client_satisfaction_score": "10.9"
        },
        {
          "trading_desk": "Fixed Income_v17",
          "client_satisfaction_score": "10.8"
        },
        {
          "trading_desk": "Derivatives Trading_v15",
          "client_satisfaction_score": "10.4"
        },
        {
          "trading_desk": "Prime Brokerage_v14",
          "client_satisfaction_score": "10.4"
        },
        {
          "trading_desk": "Equity Trading_v16",
          "client_satisfaction_score": "10.4"
        },
        {
          "trading_desk": "Foreign Exchange_v18",
          "client_satisfaction_score": "10.3"
        },
        {
          "trading_desk": "Fixed Income_v12",
          "client_satisfaction_score": "10.3"
        },
        {
          "trading_desk": "Prime Brokerage_v9",
          "client_satisfaction_score": "9.9"
        },
        {
          "trading_desk": "Equity Trading_v11",
          "client_satisfaction_score": "9.9"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Morgan Stanley Institutional Securities Analytics",
      "problem_slug": "intesa-sanpaolo-risk-management-system"
    },
    {
      "id": "50dcc39a-9e25-4512-9aca-6cd075dd6687",
      "problem_id": "31ec673c-d80a-4fa5-b27b-2cfb56d5853c",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE movies (\n          movie_id INT,\n          title VARCHAR(100),\n          genre VARCHAR(50),\n          release_year INT,\n          avg_rating DECIMAL(8,2)\n      );\n      INSERT INTO movies VALUES\n    (1, 'Top Gun Maverick', 'Action', 2022, 4.5),\n    (2, 'The Batman', 'Action', 2022, 4.2),\n    (3, 'Frozen 2', 'Animation', 2019, 4.3),\n    (4, 'John Wick 4', 'Action', 2023, 4.4),\n    (5, 'Encanto', 'Animation', 2021, 4.1),\n    (6, 'Fast X', 'Action', 2023, 3.8),\n    (8, 'Top Gun Maverick_v1', 'Action_v1', 2032, 4.60),\n    (10, 'The Batman_v2', 'Action_v2', 2042, 4.40),\n    (12, 'Frozen 203', 'Animation_v3', 2049, 4.60),\n    (14, 'John Wick 404', 'Action_v4', 2063, 4.80),\n    (16, 'Encanto_v5', 'Animation_v5', 2071, 4.60),\n    (18, 'Fast X_v6', 'Action_v6', 2083, 4.40),\n    (15, 'Top Gun Maverick_v7', 'Action_v7', 2092, 5.20),\n    (17, 'The Batman_v8', 'Action_v8', 2102, 5.00),\n    (19, 'Frozen 209', 'Animation_v9', 2109, 5.20),\n    (20, 'John Wick 410', 'Action_v10', 2123, 5.40),\n    (22, 'Encanto_v11', 'Animation_v11', 2131, 5.20),\n    (24, 'Fast X_v12', 'Action_v12', 2143, 5.00),\n    (21, 'Top Gun Maverick_v13', 'Action_v13', 2152, 5.80),\n    (23, 'The Batman_v14', 'Action_v14', 2162, 5.60),\n    (25, 'Frozen 215', 'Animation_v15', 2169, 5.80),\n    (26, 'John Wick 416', 'Action_v16', 2183, 6.00),\n    (28, 'Encanto_v17', 'Animation_v17', 2191, 5.80),\n    (30, 'Fast X_v18', 'Action_v18', 2203, 5.60),\n    (27, 'Top Gun Maverick_v19', 'Action_v19', 2212, 6.40);",
      "solution_sql": "SELECT * FROM movies ORDER BY movie_id LIMIT 10;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.677Z",
      "expected_output": [
        {
          "genre": "Action",
          "title": "Top Gun Maverick",
          "movie_id": "1",
          "avg_rating": "4.50",
          "release_year": "2022"
        },
        {
          "genre": "Action",
          "title": "The Batman",
          "movie_id": "2",
          "avg_rating": "4.20",
          "release_year": "2022"
        },
        {
          "genre": "Animation",
          "title": "Frozen 2",
          "movie_id": "3",
          "avg_rating": "4.30",
          "release_year": "2019"
        },
        {
          "genre": "Action",
          "title": "John Wick 4",
          "movie_id": "4",
          "avg_rating": "4.40",
          "release_year": "2023"
        },
        {
          "genre": "Animation",
          "title": "Encanto",
          "movie_id": "5",
          "avg_rating": "4.10",
          "release_year": "2021"
        },
        {
          "genre": "Action",
          "title": "Fast X",
          "movie_id": "6",
          "avg_rating": "3.80",
          "release_year": "2023"
        },
        {
          "genre": "Action_v1",
          "title": "Top Gun Maverick_v1",
          "movie_id": "8",
          "avg_rating": "4.60",
          "release_year": "2032"
        },
        {
          "genre": "Action_v2",
          "title": "The Batman_v2",
          "movie_id": "10",
          "avg_rating": "4.40",
          "release_year": "2042"
        },
        {
          "genre": "Animation_v3",
          "title": "Frozen 203",
          "movie_id": "12",
          "avg_rating": "4.60",
          "release_year": "2049"
        },
        {
          "genre": "Action_v4",
          "title": "John Wick 404",
          "movie_id": "14",
          "avg_rating": "4.80",
          "release_year": "2063"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Movie Recommendation Engine",
      "problem_slug": "movie-recommendation-engine"
    },
    {
      "id": "2f746128-22f2-44aa-8e38-c72b052278be",
      "problem_id": "31ec673c-d80a-4fa5-b27b-2cfb56d5853c",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE movies (\n          movie_id INT,\n          title VARCHAR(100),\n          genre VARCHAR(50),\n          release_year INT,\n          avg_rating DECIMAL(8,2)\n      );\n      INSERT INTO movies VALUES\n    (1, 'Top Gun Maverick', 'Action', 2022, 4.5),\n    (2, 'The Batman', 'Action', 2022, 4.2),\n    (3, 'Frozen 2', 'Animation', 2019, 4.3),\n    (4, 'John Wick 4', 'Action', 2023, 4.4),\n    (5, 'Encanto', 'Animation', 2021, 4.1),\n    (6, 'Fast X', 'Action', 2023, 3.8),\n    (8, 'Top Gun Maverick_v1', 'Action_v1', 2032, 4.60),\n    (10, 'The Batman_v2', 'Action_v2', 2042, 4.40),\n    (12, 'Frozen 203', 'Animation_v3', 2049, 4.60),\n    (14, 'John Wick 404', 'Action_v4', 2063, 4.80),\n    (16, 'Encanto_v5', 'Animation_v5', 2071, 4.60),\n    (18, 'Fast X_v6', 'Action_v6', 2083, 4.40),\n    (15, 'Top Gun Maverick_v7', 'Action_v7', 2092, 5.20),\n    (17, 'The Batman_v8', 'Action_v8', 2102, 5.00),\n    (19, 'Frozen 209', 'Animation_v9', 2109, 5.20),\n    (20, 'John Wick 410', 'Action_v10', 2123, 5.40),\n    (22, 'Encanto_v11', 'Animation_v11', 2131, 5.20),\n    (24, 'Fast X_v12', 'Action_v12', 2143, 5.00),\n    (21, 'Top Gun Maverick_v13', 'Action_v13', 2152, 5.80),\n    (23, 'The Batman_v14', 'Action_v14', 2162, 5.60),\n    (25, 'Frozen 215', 'Animation_v15', 2169, 5.80),\n    (26, 'John Wick 416', 'Action_v16', 2183, 6.00),\n    (28, 'Encanto_v17', 'Animation_v17', 2191, 5.80),\n    (30, 'Fast X_v18', 'Action_v18', 2203, 5.60),\n    (27, 'Top Gun Maverick_v19', 'Action_v19', 2212, 6.40);",
      "solution_sql": "SELECT * FROM movies ORDER BY movie_id LIMIT 10;",
      "explanation": "Advanced Recommendation Systems problem with real business applications.",
      "created_at": "2025-08-11T13:51:10.018Z",
      "expected_output": [
        {
          "genre": "Action",
          "title": "Top Gun Maverick",
          "movie_id": "1",
          "avg_rating": "4.50",
          "release_year": "2022"
        },
        {
          "genre": "Action",
          "title": "The Batman",
          "movie_id": "2",
          "avg_rating": "4.20",
          "release_year": "2022"
        },
        {
          "genre": "Animation",
          "title": "Frozen 2",
          "movie_id": "3",
          "avg_rating": "4.30",
          "release_year": "2019"
        },
        {
          "genre": "Action",
          "title": "John Wick 4",
          "movie_id": "4",
          "avg_rating": "4.40",
          "release_year": "2023"
        },
        {
          "genre": "Animation",
          "title": "Encanto",
          "movie_id": "5",
          "avg_rating": "4.10",
          "release_year": "2021"
        },
        {
          "genre": "Action",
          "title": "Fast X",
          "movie_id": "6",
          "avg_rating": "3.80",
          "release_year": "2023"
        },
        {
          "genre": "Action_v1",
          "title": "Top Gun Maverick_v1",
          "movie_id": "8",
          "avg_rating": "4.60",
          "release_year": "2032"
        },
        {
          "genre": "Action_v2",
          "title": "The Batman_v2",
          "movie_id": "10",
          "avg_rating": "4.40",
          "release_year": "2042"
        },
        {
          "genre": "Animation_v3",
          "title": "Frozen 203",
          "movie_id": "12",
          "avg_rating": "4.60",
          "release_year": "2049"
        },
        {
          "genre": "Action_v4",
          "title": "John Wick 404",
          "movie_id": "14",
          "avg_rating": "4.80",
          "release_year": "2063"
        }
      ],
      "explanation_detailed": "Recommendation engines often require finding what users have NOT interacted with. This uses advanced JOIN techniques.",
      "approach_summary": "Identify action viewers, create all possible combinations with action movies, then exclude already watched movies.",
      "key_concepts": [
        "CROSS JOIN",
        "LEFT JOIN",
        "IS NULL filtering",
        "CTEs",
        "Complex joins"
      ],
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": [
        "Wrong JOIN types",
        "Not properly excluding watched movies",
        "Forgetting rating filters"
      ],
      "optimization_tips": [
        "This type of query can be expensive - consider materialized views for large datasets"
      ],
      "problem_title": "Movie Recommendation Engine",
      "problem_slug": "movie-recommendation-engine"
    },
    {
      "id": "ae8c0667-6d53-426a-b8ee-ef2417529eae",
      "problem_id": "b01ac3b6-2598-4cc2-9375-cec6a2aa0560",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE netflix_content_strategy (\n        content_id INT PRIMARY KEY,\n        content_genre VARCHAR(50),\n        production_budget DECIMAL(10,2),\n        viewer_engagement_score DECIMAL(5,2),\n        total_viewing_hours BIGINT,\n        subscriber_retention_impact DECIMAL(5,3),\n        global_availability_score DECIMAL(4,2),\n        awards_nominations INT,\n        content_date DATE\n    );\n      INSERT INTO netflix_content_strategy  VALUES\n      (1, 'Drama Series', 35000000.00, 87.5, 2500000000, 0.125, 9.2, 15, '2024-01-15'),\n      (2, 'Comedy Specials', 15000000.00, 82.3, 450000000, 0.085, 8.8, 3, '2024-01-15'),\n      (3, 'Documentary Films', 8000000.00, 91.2, 320000000, 0.155, 9.5, 8, '2024-01-16'),\n      (4, 'Action Movies', 65000000.00, 79.8, 1800000000, 0.095, 8.5, 2, '2024-01-16'),\n      (5, 'International Series', 25000000.00, 85.9, 1200000000, 0.142, 9.1, 12, '2024-01-17'),\n      (7, 'Drama Series_v1', 35000000.10, 87.60, 2500000010, 0.23, 9.30, 25, '2024-01-16'),\n      (9, 'Comedy Specials_v2', 15000000.20, 82.50, 450000020, 0.29, 9.00, 23, '2024-01-17'),\n      (11, 'Documentary Films_v3', 8000000.30, 91.50, 320000030, 0.46, 9.80, 38, '2024-01-19'),\n      (13, 'Action Movies_v4', 65000000.40, 80.20, 1800000040, 0.49, 8.90, 42, '2024-01-20'),\n      (15, 'International Series_v5', 25000000.50, 86.40, 1200000050, 0.64, 9.60, 62, '2024-01-22'),\n      (12, 'Drama Series_v6', 35000000.60, 88.10, 2500000060, 0.73, 9.80, 75, '2024-01-21'),\n      (14, 'Comedy Specials_v7', 15000000.70, 83.00, 450000070, 0.79, 9.50, 73, '2024-01-22'),\n      (16, 'Documentary Films_v8', 8000000.80, 92.00, 320000080, 0.96, 10.30, 88, '2024-01-24'),\n      (18, 'Action Movies_v9', 65000000.90, 80.70, 1800000090, 0.99, 9.40, 92, '2024-01-25'),\n      (20, 'International Series_v10', 25000001.00, 86.90, 1200000100, 1.14, 10.10, 112, '2024-01-27'),\n      (17, 'Drama Series_v11', 35000001.10, 88.60, 2500000110, 1.23, 10.30, 125, '2024-01-26'),\n      (19, 'Comedy Specials_v12', 15000001.20, 83.50, 450000120, 1.29, 10.00, 123, '2024-01-27'),\n      (21, 'Documentary Films_v13', 8000001.30, 92.50, 320000130, 1.46, 10.80, 138, '2024-01-29'),\n      (23, 'Action Movies_v14', 65000001.40, 81.20, 1800000140, 1.50, 9.90, 142, '2024-01-30'),\n      (25, 'International Series_v15', 25000001.50, 87.40, 1200000150, 1.64, 10.60, 162, '2024-02-01'),\n      (22, 'Drama Series_v16', 35000001.60, 89.10, 2500000160, 1.73, 10.80, 175, '2024-01-31'),\n      (24, 'Comedy Specials_v17', 15000001.70, 84.00, 450000170, 1.79, 10.50, 173, '2024-02-01'),\n      (26, 'Documentary Films_v18', 8000001.80, 93.00, 320000180, 1.96, 11.30, 188, '2024-02-03'),\n      (28, 'Action Movies_v19', 65000001.90, 81.70, 1800000190, 2.00, 10.40, 192, '2024-02-04'),\n      (30, 'International Series_v20', 25000002.00, 87.90, 1200000200, 2.14, 11.10, 212, '2024-02-06');",
      "solution_sql": "SELECT \n        content_genre,\n        ROUND(production_budget / 1000000, 2) as budget_millions,\n        ROUND(viewer_engagement_score, 1) as engagement_score,\n        ROUND(total_viewing_hours / 1000000000, 2) as viewing_hours_billions,\n        ROUND(CAST(subscriber_retention_impact * 100 AS NUMERIC), 2) as retention_impact_pct,\n        awards_nominations\n    FROM netflix_content_strategy \n    WHERE production_budget < 50000000 \n        AND viewer_engagement_score > 80\n    ORDER BY engagement_score DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.753Z",
      "expected_output": [
        {
          "content_genre": "Documentary Films_v18",
          "budget_millions": "8.00",
          "engagement_score": "93.0",
          "awards_nominations": "188",
          "retention_impact_pct": "196.00",
          "viewing_hours_billions": "0.00"
        },
        {
          "content_genre": "Documentary Films_v13",
          "budget_millions": "8.00",
          "engagement_score": "92.5",
          "awards_nominations": "138",
          "retention_impact_pct": "146.00",
          "viewing_hours_billions": "0.00"
        },
        {
          "content_genre": "Documentary Films_v8",
          "budget_millions": "8.00",
          "engagement_score": "92.0",
          "awards_nominations": "88",
          "retention_impact_pct": "96.00",
          "viewing_hours_billions": "0.00"
        },
        {
          "content_genre": "Documentary Films_v3",
          "budget_millions": "8.00",
          "engagement_score": "91.5",
          "awards_nominations": "38",
          "retention_impact_pct": "46.00",
          "viewing_hours_billions": "0.00"
        },
        {
          "content_genre": "Documentary Films",
          "budget_millions": "8.00",
          "engagement_score": "91.2",
          "awards_nominations": "8",
          "retention_impact_pct": "15.50",
          "viewing_hours_billions": "0.00"
        },
        {
          "content_genre": "Drama Series_v16",
          "budget_millions": "35.00",
          "engagement_score": "89.1",
          "awards_nominations": "175",
          "retention_impact_pct": "173.00",
          "viewing_hours_billions": "2.00"
        },
        {
          "content_genre": "Drama Series_v11",
          "budget_millions": "35.00",
          "engagement_score": "88.6",
          "awards_nominations": "125",
          "retention_impact_pct": "123.00",
          "viewing_hours_billions": "2.00"
        },
        {
          "content_genre": "Drama Series_v6",
          "budget_millions": "35.00",
          "engagement_score": "88.1",
          "awards_nominations": "75",
          "retention_impact_pct": "73.00",
          "viewing_hours_billions": "2.00"
        },
        {
          "content_genre": "International Series_v20",
          "budget_millions": "25.00",
          "engagement_score": "87.9",
          "awards_nominations": "212",
          "retention_impact_pct": "214.00",
          "viewing_hours_billions": "1.00"
        },
        {
          "content_genre": "Drama Series_v1",
          "budget_millions": "35.00",
          "engagement_score": "87.6",
          "awards_nominations": "25",
          "retention_impact_pct": "23.00",
          "viewing_hours_billions": "2.00"
        },
        {
          "content_genre": "Drama Series",
          "budget_millions": "35.00",
          "engagement_score": "87.5",
          "awards_nominations": "15",
          "retention_impact_pct": "12.50",
          "viewing_hours_billions": "2.00"
        },
        {
          "content_genre": "International Series_v15",
          "budget_millions": "25.00",
          "engagement_score": "87.4",
          "awards_nominations": "162",
          "retention_impact_pct": "164.00",
          "viewing_hours_billions": "1.00"
        },
        {
          "content_genre": "International Series_v10",
          "budget_millions": "25.00",
          "engagement_score": "86.9",
          "awards_nominations": "112",
          "retention_impact_pct": "114.00",
          "viewing_hours_billions": "1.00"
        },
        {
          "content_genre": "International Series_v5",
          "budget_millions": "25.00",
          "engagement_score": "86.4",
          "awards_nominations": "62",
          "retention_impact_pct": "64.00",
          "viewing_hours_billions": "1.00"
        },
        {
          "content_genre": "International Series",
          "budget_millions": "25.00",
          "engagement_score": "85.9",
          "awards_nominations": "12",
          "retention_impact_pct": "14.20",
          "viewing_hours_billions": "1.00"
        },
        {
          "content_genre": "Comedy Specials_v17",
          "budget_millions": "15.00",
          "engagement_score": "84.0",
          "awards_nominations": "173",
          "retention_impact_pct": "179.00",
          "viewing_hours_billions": "0.00"
        },
        {
          "content_genre": "Comedy Specials_v12",
          "budget_millions": "15.00",
          "engagement_score": "83.5",
          "awards_nominations": "123",
          "retention_impact_pct": "129.00",
          "viewing_hours_billions": "0.00"
        },
        {
          "content_genre": "Comedy Specials_v7",
          "budget_millions": "15.00",
          "engagement_score": "83.0",
          "awards_nominations": "73",
          "retention_impact_pct": "79.00",
          "viewing_hours_billions": "0.00"
        },
        {
          "content_genre": "Comedy Specials_v2",
          "budget_millions": "15.00",
          "engagement_score": "82.5",
          "awards_nominations": "23",
          "retention_impact_pct": "29.00",
          "viewing_hours_billions": "0.00"
        },
        {
          "content_genre": "Comedy Specials",
          "budget_millions": "15.00",
          "engagement_score": "82.3",
          "awards_nominations": "3",
          "retention_impact_pct": "8.50",
          "viewing_hours_billions": "0.00"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Netflix Content Strategy Analytics",
      "problem_slug": "microsoft-azure-cloud-analytics"
    },
    {
      "id": "9f4f326f-a392-4dbc-95bf-17731ea6bc8c",
      "problem_id": "b01ac3b6-2598-4cc2-9375-cec6a2aa0560",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE netflix_content_strategy (\n        content_id INT PRIMARY KEY,\n        content_genre VARCHAR(50),\n        production_budget DECIMAL(10,2),\n        viewer_engagement_score DECIMAL(5,2),\n        total_viewing_hours BIGINT,\n        subscriber_retention_impact DECIMAL(5,3),\n        global_availability_score DECIMAL(4,2),\n        awards_nominations INT,\n        content_date DATE\n    );\n      INSERT INTO netflix_content_strategy  VALUES\n      (1, 'Drama Series', 35000000.00, 87.5, 2500000000, 0.125, 9.2, 15, '2024-01-15'),\n      (2, 'Comedy Specials', 15000000.00, 82.3, 450000000, 0.085, 8.8, 3, '2024-01-15'),\n      (3, 'Documentary Films', 8000000.00, 91.2, 320000000, 0.155, 9.5, 8, '2024-01-16'),\n      (4, 'Action Movies', 65000000.00, 79.8, 1800000000, 0.095, 8.5, 2, '2024-01-16'),\n      (5, 'International Series', 25000000.00, 85.9, 1200000000, 0.142, 9.1, 12, '2024-01-17'),\n      (7, 'Drama Series_v1', 35000000.10, 87.60, 2500000010, 0.23, 9.30, 25, '2024-01-16'),\n      (9, 'Comedy Specials_v2', 15000000.20, 82.50, 450000020, 0.29, 9.00, 23, '2024-01-17'),\n      (11, 'Documentary Films_v3', 8000000.30, 91.50, 320000030, 0.46, 9.80, 38, '2024-01-19'),\n      (13, 'Action Movies_v4', 65000000.40, 80.20, 1800000040, 0.49, 8.90, 42, '2024-01-20'),\n      (15, 'International Series_v5', 25000000.50, 86.40, 1200000050, 0.64, 9.60, 62, '2024-01-22'),\n      (12, 'Drama Series_v6', 35000000.60, 88.10, 2500000060, 0.73, 9.80, 75, '2024-01-21'),\n      (14, 'Comedy Specials_v7', 15000000.70, 83.00, 450000070, 0.79, 9.50, 73, '2024-01-22'),\n      (16, 'Documentary Films_v8', 8000000.80, 92.00, 320000080, 0.96, 10.30, 88, '2024-01-24'),\n      (18, 'Action Movies_v9', 65000000.90, 80.70, 1800000090, 0.99, 9.40, 92, '2024-01-25'),\n      (20, 'International Series_v10', 25000001.00, 86.90, 1200000100, 1.14, 10.10, 112, '2024-01-27'),\n      (17, 'Drama Series_v11', 35000001.10, 88.60, 2500000110, 1.23, 10.30, 125, '2024-01-26'),\n      (19, 'Comedy Specials_v12', 15000001.20, 83.50, 450000120, 1.29, 10.00, 123, '2024-01-27'),\n      (21, 'Documentary Films_v13', 8000001.30, 92.50, 320000130, 1.46, 10.80, 138, '2024-01-29'),\n      (23, 'Action Movies_v14', 65000001.40, 81.20, 1800000140, 1.50, 9.90, 142, '2024-01-30'),\n      (25, 'International Series_v15', 25000001.50, 87.40, 1200000150, 1.64, 10.60, 162, '2024-02-01'),\n      (22, 'Drama Series_v16', 35000001.60, 89.10, 2500000160, 1.73, 10.80, 175, '2024-01-31'),\n      (24, 'Comedy Specials_v17', 15000001.70, 84.00, 450000170, 1.79, 10.50, 173, '2024-02-01'),\n      (26, 'Documentary Films_v18', 8000001.80, 93.00, 320000180, 1.96, 11.30, 188, '2024-02-03'),\n      (28, 'Action Movies_v19', 65000001.90, 81.70, 1800000190, 2.00, 10.40, 192, '2024-02-04'),\n      (30, 'International Series_v20', 25000002.00, 87.90, 1200000200, 2.14, 11.10, 212, '2024-02-06');",
      "solution_sql": "SELECT \n        content_genre,\n        ROUND(production_budget / 1000000, 2) as budget_millions,\n        ROUND(viewer_engagement_score, 1) as engagement_score,\n        ROUND(total_viewing_hours / 1000000000, 2) as viewing_hours_billions,\n        ROUND(CAST(subscriber_retention_impact * 100 AS NUMERIC), 2) as retention_impact_pct,\n        awards_nominations\n    FROM netflix_content_strategy \n    WHERE production_budget < 50000000 \n        AND viewer_engagement_score > 80\n    ORDER BY engagement_score DESC;",
      "explanation": "Netflix content strategy analytics using engagement scores and production budget analysis for content investment optimization.",
      "created_at": "2025-08-11T17:06:42.248Z",
      "expected_output": [
        {
          "content_genre": "Documentary Films_v18",
          "budget_millions": "8.00",
          "engagement_score": "93.0",
          "awards_nominations": "188",
          "retention_impact_pct": "196.00",
          "viewing_hours_billions": "0.00"
        },
        {
          "content_genre": "Documentary Films_v13",
          "budget_millions": "8.00",
          "engagement_score": "92.5",
          "awards_nominations": "138",
          "retention_impact_pct": "146.00",
          "viewing_hours_billions": "0.00"
        },
        {
          "content_genre": "Documentary Films_v8",
          "budget_millions": "8.00",
          "engagement_score": "92.0",
          "awards_nominations": "88",
          "retention_impact_pct": "96.00",
          "viewing_hours_billions": "0.00"
        },
        {
          "content_genre": "Documentary Films_v3",
          "budget_millions": "8.00",
          "engagement_score": "91.5",
          "awards_nominations": "38",
          "retention_impact_pct": "46.00",
          "viewing_hours_billions": "0.00"
        },
        {
          "content_genre": "Documentary Films",
          "budget_millions": "8.00",
          "engagement_score": "91.2",
          "awards_nominations": "8",
          "retention_impact_pct": "15.50",
          "viewing_hours_billions": "0.00"
        },
        {
          "content_genre": "Drama Series_v16",
          "budget_millions": "35.00",
          "engagement_score": "89.1",
          "awards_nominations": "175",
          "retention_impact_pct": "173.00",
          "viewing_hours_billions": "2.00"
        },
        {
          "content_genre": "Drama Series_v11",
          "budget_millions": "35.00",
          "engagement_score": "88.6",
          "awards_nominations": "125",
          "retention_impact_pct": "123.00",
          "viewing_hours_billions": "2.00"
        },
        {
          "content_genre": "Drama Series_v6",
          "budget_millions": "35.00",
          "engagement_score": "88.1",
          "awards_nominations": "75",
          "retention_impact_pct": "73.00",
          "viewing_hours_billions": "2.00"
        },
        {
          "content_genre": "International Series_v20",
          "budget_millions": "25.00",
          "engagement_score": "87.9",
          "awards_nominations": "212",
          "retention_impact_pct": "214.00",
          "viewing_hours_billions": "1.00"
        },
        {
          "content_genre": "Drama Series_v1",
          "budget_millions": "35.00",
          "engagement_score": "87.6",
          "awards_nominations": "25",
          "retention_impact_pct": "23.00",
          "viewing_hours_billions": "2.00"
        },
        {
          "content_genre": "Drama Series",
          "budget_millions": "35.00",
          "engagement_score": "87.5",
          "awards_nominations": "15",
          "retention_impact_pct": "12.50",
          "viewing_hours_billions": "2.00"
        },
        {
          "content_genre": "International Series_v15",
          "budget_millions": "25.00",
          "engagement_score": "87.4",
          "awards_nominations": "162",
          "retention_impact_pct": "164.00",
          "viewing_hours_billions": "1.00"
        },
        {
          "content_genre": "International Series_v10",
          "budget_millions": "25.00",
          "engagement_score": "86.9",
          "awards_nominations": "112",
          "retention_impact_pct": "114.00",
          "viewing_hours_billions": "1.00"
        },
        {
          "content_genre": "International Series_v5",
          "budget_millions": "25.00",
          "engagement_score": "86.4",
          "awards_nominations": "62",
          "retention_impact_pct": "64.00",
          "viewing_hours_billions": "1.00"
        },
        {
          "content_genre": "International Series",
          "budget_millions": "25.00",
          "engagement_score": "85.9",
          "awards_nominations": "12",
          "retention_impact_pct": "14.20",
          "viewing_hours_billions": "1.00"
        },
        {
          "content_genre": "Comedy Specials_v17",
          "budget_millions": "15.00",
          "engagement_score": "84.0",
          "awards_nominations": "173",
          "retention_impact_pct": "179.00",
          "viewing_hours_billions": "0.00"
        },
        {
          "content_genre": "Comedy Specials_v12",
          "budget_millions": "15.00",
          "engagement_score": "83.5",
          "awards_nominations": "123",
          "retention_impact_pct": "129.00",
          "viewing_hours_billions": "0.00"
        },
        {
          "content_genre": "Comedy Specials_v7",
          "budget_millions": "15.00",
          "engagement_score": "83.0",
          "awards_nominations": "73",
          "retention_impact_pct": "79.00",
          "viewing_hours_billions": "0.00"
        },
        {
          "content_genre": "Comedy Specials_v2",
          "budget_millions": "15.00",
          "engagement_score": "82.5",
          "awards_nominations": "23",
          "retention_impact_pct": "29.00",
          "viewing_hours_billions": "0.00"
        },
        {
          "content_genre": "Comedy Specials",
          "budget_millions": "15.00",
          "engagement_score": "82.3",
          "awards_nominations": "3",
          "retention_impact_pct": "8.50",
          "viewing_hours_billions": "0.00"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Netflix Content Strategy Analytics",
      "problem_slug": "microsoft-azure-cloud-analytics"
    },
    {
      "id": "c0050420-8ac7-4c6c-a5af-f2336616df97",
      "problem_id": "7faab40d-5472-4771-a2ce-80acb990ae52",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE oracle_enterprise_software (\n        customer_id INT PRIMARY KEY,\n        industry_vertical VARCHAR(50),\n        annual_contract_value DECIMAL(10,2),\n        software_utilization_rate DECIMAL(5,2),\n        cloud_migration_progress DECIMAL(5,2),\n        support_tickets_monthly INT,\n        user_satisfaction_score DECIMAL(4,2),\n        expansion_revenue DECIMAL(10,2),\n        contract_date DATE\n    );\n      INSERT INTO oracle_enterprise_software  VALUES\n      (1, 'Financial Services', 2500000.00, 82.5, 95.2, 45, 8.7, 450000.00, '2024-01-15'),\n      (2, 'Manufacturing', 1200000.00, 78.3, 87.5, 62, 8.2, 185000.00, '2024-01-15'),\n      (3, 'Healthcare', 850000.00, 91.2, 92.8, 28, 9.1, 325000.00, '2024-01-16'),\n      (4, 'Retail & E-commerce', 675000.00, 76.8, 82.4, 55, 7.9, 125000.00, '2024-01-16'),\n      (5, 'Government', 1800000.00, 68.5, 78.9, 82, 7.5, 95000.00, '2024-01-17'),\n      (7, 'Financial Services_v1', 2500000.10, 82.60, 95.30, 55, 8.80, 450000.10, '2024-01-16'),\n      (9, 'Manufacturing_v2', 1200000.20, 78.50, 87.70, 82, 8.40, 185000.20, '2024-01-17'),\n      (11, 'Healthcare_v3', 850000.30, 91.50, 93.10, 58, 9.40, 325000.30, '2024-01-19'),\n      (13, 'Retail & E-commerce_v4', 675000.40, 77.20, 82.80, 95, 8.30, 125000.40, '2024-01-20'),\n      (15, 'Government_v5', 1800000.50, 69.00, 79.40, 132, 8.00, 95000.50, '2024-01-22'),\n      (12, 'Financial Services_v6', 2500000.60, 83.10, 95.80, 105, 9.30, 450000.60, '2024-01-21'),\n      (14, 'Manufacturing_v7', 1200000.70, 79.00, 88.20, 132, 8.90, 185000.70, '2024-01-22'),\n      (16, 'Healthcare_v8', 850000.80, 92.00, 93.60, 108, 9.90, 325000.80, '2024-01-24'),\n      (18, 'Retail & E-commerce_v9', 675000.90, 77.70, 83.30, 145, 8.80, 125000.90, '2024-01-25'),\n      (20, 'Government_v10', 1800001.00, 69.50, 79.90, 182, 8.50, 95001.00, '2024-01-27'),\n      (17, 'Financial Services_v11', 2500001.10, 83.60, 96.30, 155, 9.80, 450001.10, '2024-01-26'),\n      (19, 'Manufacturing_v12', 1200001.20, 79.50, 88.70, 182, 9.40, 185001.20, '2024-01-27'),\n      (21, 'Healthcare_v13', 850001.30, 92.50, 94.10, 158, 10.40, 325001.30, '2024-01-29'),\n      (23, 'Retail & E-commerce_v14', 675001.40, 78.20, 83.80, 195, 9.30, 125001.40, '2024-01-30'),\n      (25, 'Government_v15', 1800001.50, 70.00, 80.40, 232, 9.00, 95001.50, '2024-02-01'),\n      (22, 'Financial Services_v16', 2500001.60, 84.10, 96.80, 205, 10.30, 450001.60, '2024-01-31'),\n      (24, 'Manufacturing_v17', 1200001.70, 80.00, 89.20, 232, 9.90, 185001.70, '2024-02-01'),\n      (26, 'Healthcare_v18', 850001.80, 93.00, 94.60, 208, 10.90, 325001.80, '2024-02-03'),\n      (28, 'Retail & E-commerce_v19', 675001.90, 78.70, 84.30, 245, 9.80, 125001.90, '2024-02-04'),\n      (30, 'Government_v20', 1800002.00, 70.50, 80.90, 282, 9.50, 95002.00, '2024-02-06');",
      "solution_sql": "SELECT \n        industry_vertical,\n        ROUND(annual_contract_value / 1000, 2) as acv_thousands,\n        ROUND(software_utilization_rate, 1) as utilization_pct,\n        ROUND(cloud_migration_progress, 1) as migration_progress_pct,\n        ROUND(user_satisfaction_score, 1) as satisfaction_score,\n        ROUND(expansion_revenue / 1000, 2) as expansion_revenue_thousands\n    FROM oracle_enterprise_software \n    WHERE annual_contract_value > 500000 \n        AND software_utilization_rate > 75\n    ORDER BY utilization_pct DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.728Z",
      "expected_output": [
        {
          "acv_thousands": "850.00",
          "utilization_pct": "93.0",
          "industry_vertical": "Healthcare_v18",
          "satisfaction_score": "10.9",
          "migration_progress_pct": "94.6",
          "expansion_revenue_thousands": "325.00"
        },
        {
          "acv_thousands": "850.00",
          "utilization_pct": "92.5",
          "industry_vertical": "Healthcare_v13",
          "satisfaction_score": "10.4",
          "migration_progress_pct": "94.1",
          "expansion_revenue_thousands": "325.00"
        },
        {
          "acv_thousands": "850.00",
          "utilization_pct": "92.0",
          "industry_vertical": "Healthcare_v8",
          "satisfaction_score": "9.9",
          "migration_progress_pct": "93.6",
          "expansion_revenue_thousands": "325.00"
        },
        {
          "acv_thousands": "850.00",
          "utilization_pct": "91.5",
          "industry_vertical": "Healthcare_v3",
          "satisfaction_score": "9.4",
          "migration_progress_pct": "93.1",
          "expansion_revenue_thousands": "325.00"
        },
        {
          "acv_thousands": "850.00",
          "utilization_pct": "91.2",
          "industry_vertical": "Healthcare",
          "satisfaction_score": "9.1",
          "migration_progress_pct": "92.8",
          "expansion_revenue_thousands": "325.00"
        },
        {
          "acv_thousands": "2500.00",
          "utilization_pct": "84.1",
          "industry_vertical": "Financial Services_v16",
          "satisfaction_score": "10.3",
          "migration_progress_pct": "96.8",
          "expansion_revenue_thousands": "450.00"
        },
        {
          "acv_thousands": "2500.00",
          "utilization_pct": "83.6",
          "industry_vertical": "Financial Services_v11",
          "satisfaction_score": "9.8",
          "migration_progress_pct": "96.3",
          "expansion_revenue_thousands": "450.00"
        },
        {
          "acv_thousands": "2500.00",
          "utilization_pct": "83.1",
          "industry_vertical": "Financial Services_v6",
          "satisfaction_score": "9.3",
          "migration_progress_pct": "95.8",
          "expansion_revenue_thousands": "450.00"
        },
        {
          "acv_thousands": "2500.00",
          "utilization_pct": "82.6",
          "industry_vertical": "Financial Services_v1",
          "satisfaction_score": "8.8",
          "migration_progress_pct": "95.3",
          "expansion_revenue_thousands": "450.00"
        },
        {
          "acv_thousands": "2500.00",
          "utilization_pct": "82.5",
          "industry_vertical": "Financial Services",
          "satisfaction_score": "8.7",
          "migration_progress_pct": "95.2",
          "expansion_revenue_thousands": "450.00"
        },
        {
          "acv_thousands": "1200.00",
          "utilization_pct": "80.0",
          "industry_vertical": "Manufacturing_v17",
          "satisfaction_score": "9.9",
          "migration_progress_pct": "89.2",
          "expansion_revenue_thousands": "185.00"
        },
        {
          "acv_thousands": "1200.00",
          "utilization_pct": "79.5",
          "industry_vertical": "Manufacturing_v12",
          "satisfaction_score": "9.4",
          "migration_progress_pct": "88.7",
          "expansion_revenue_thousands": "185.00"
        },
        {
          "acv_thousands": "1200.00",
          "utilization_pct": "79.0",
          "industry_vertical": "Manufacturing_v7",
          "satisfaction_score": "8.9",
          "migration_progress_pct": "88.2",
          "expansion_revenue_thousands": "185.00"
        },
        {
          "acv_thousands": "675.00",
          "utilization_pct": "78.7",
          "industry_vertical": "Retail & E-commerce_v19",
          "satisfaction_score": "9.8",
          "migration_progress_pct": "84.3",
          "expansion_revenue_thousands": "125.00"
        },
        {
          "acv_thousands": "1200.00",
          "utilization_pct": "78.5",
          "industry_vertical": "Manufacturing_v2",
          "satisfaction_score": "8.4",
          "migration_progress_pct": "87.7",
          "expansion_revenue_thousands": "185.00"
        },
        {
          "acv_thousands": "1200.00",
          "utilization_pct": "78.3",
          "industry_vertical": "Manufacturing",
          "satisfaction_score": "8.2",
          "migration_progress_pct": "87.5",
          "expansion_revenue_thousands": "185.00"
        },
        {
          "acv_thousands": "675.00",
          "utilization_pct": "78.2",
          "industry_vertical": "Retail & E-commerce_v14",
          "satisfaction_score": "9.3",
          "migration_progress_pct": "83.8",
          "expansion_revenue_thousands": "125.00"
        },
        {
          "acv_thousands": "675.00",
          "utilization_pct": "77.7",
          "industry_vertical": "Retail & E-commerce_v9",
          "satisfaction_score": "8.8",
          "migration_progress_pct": "83.3",
          "expansion_revenue_thousands": "125.00"
        },
        {
          "acv_thousands": "675.00",
          "utilization_pct": "77.2",
          "industry_vertical": "Retail & E-commerce_v4",
          "satisfaction_score": "8.3",
          "migration_progress_pct": "82.8",
          "expansion_revenue_thousands": "125.00"
        },
        {
          "acv_thousands": "675.00",
          "utilization_pct": "76.8",
          "industry_vertical": "Retail & E-commerce",
          "satisfaction_score": "7.9",
          "migration_progress_pct": "82.4",
          "expansion_revenue_thousands": "125.00"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Oracle Enterprise Software Analytics",
      "problem_slug": "morgan-stanley-portfolio-analytics"
    },
    {
      "id": "7fe174b9-1206-4577-b7f7-7856d42fcea7",
      "problem_id": "7faab40d-5472-4771-a2ce-80acb990ae52",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE oracle_enterprise_software (\n        customer_id INT PRIMARY KEY,\n        industry_vertical VARCHAR(50),\n        annual_contract_value DECIMAL(10,2),\n        software_utilization_rate DECIMAL(5,2),\n        cloud_migration_progress DECIMAL(5,2),\n        support_tickets_monthly INT,\n        user_satisfaction_score DECIMAL(4,2),\n        expansion_revenue DECIMAL(10,2),\n        contract_date DATE\n    );\n      INSERT INTO oracle_enterprise_software  VALUES\n      (1, 'Financial Services', 2500000.00, 82.5, 95.2, 45, 8.7, 450000.00, '2024-01-15'),\n      (2, 'Manufacturing', 1200000.00, 78.3, 87.5, 62, 8.2, 185000.00, '2024-01-15'),\n      (3, 'Healthcare', 850000.00, 91.2, 92.8, 28, 9.1, 325000.00, '2024-01-16'),\n      (4, 'Retail & E-commerce', 675000.00, 76.8, 82.4, 55, 7.9, 125000.00, '2024-01-16'),\n      (5, 'Government', 1800000.00, 68.5, 78.9, 82, 7.5, 95000.00, '2024-01-17'),\n      (7, 'Financial Services_v1', 2500000.10, 82.60, 95.30, 55, 8.80, 450000.10, '2024-01-16'),\n      (9, 'Manufacturing_v2', 1200000.20, 78.50, 87.70, 82, 8.40, 185000.20, '2024-01-17'),\n      (11, 'Healthcare_v3', 850000.30, 91.50, 93.10, 58, 9.40, 325000.30, '2024-01-19'),\n      (13, 'Retail & E-commerce_v4', 675000.40, 77.20, 82.80, 95, 8.30, 125000.40, '2024-01-20'),\n      (15, 'Government_v5', 1800000.50, 69.00, 79.40, 132, 8.00, 95000.50, '2024-01-22'),\n      (12, 'Financial Services_v6', 2500000.60, 83.10, 95.80, 105, 9.30, 450000.60, '2024-01-21'),\n      (14, 'Manufacturing_v7', 1200000.70, 79.00, 88.20, 132, 8.90, 185000.70, '2024-01-22'),\n      (16, 'Healthcare_v8', 850000.80, 92.00, 93.60, 108, 9.90, 325000.80, '2024-01-24'),\n      (18, 'Retail & E-commerce_v9', 675000.90, 77.70, 83.30, 145, 8.80, 125000.90, '2024-01-25'),\n      (20, 'Government_v10', 1800001.00, 69.50, 79.90, 182, 8.50, 95001.00, '2024-01-27'),\n      (17, 'Financial Services_v11', 2500001.10, 83.60, 96.30, 155, 9.80, 450001.10, '2024-01-26'),\n      (19, 'Manufacturing_v12', 1200001.20, 79.50, 88.70, 182, 9.40, 185001.20, '2024-01-27'),\n      (21, 'Healthcare_v13', 850001.30, 92.50, 94.10, 158, 10.40, 325001.30, '2024-01-29'),\n      (23, 'Retail & E-commerce_v14', 675001.40, 78.20, 83.80, 195, 9.30, 125001.40, '2024-01-30'),\n      (25, 'Government_v15', 1800001.50, 70.00, 80.40, 232, 9.00, 95001.50, '2024-02-01'),\n      (22, 'Financial Services_v16', 2500001.60, 84.10, 96.80, 205, 10.30, 450001.60, '2024-01-31'),\n      (24, 'Manufacturing_v17', 1200001.70, 80.00, 89.20, 232, 9.90, 185001.70, '2024-02-01'),\n      (26, 'Healthcare_v18', 850001.80, 93.00, 94.60, 208, 10.90, 325001.80, '2024-02-03'),\n      (28, 'Retail & E-commerce_v19', 675001.90, 78.70, 84.30, 245, 9.80, 125001.90, '2024-02-04'),\n      (30, 'Government_v20', 1800002.00, 70.50, 80.90, 282, 9.50, 95002.00, '2024-02-06');",
      "solution_sql": "SELECT \n        industry_vertical,\n        ROUND(annual_contract_value / 1000, 2) as acv_thousands,\n        ROUND(software_utilization_rate, 1) as utilization_pct,\n        ROUND(cloud_migration_progress, 1) as migration_progress_pct,\n        ROUND(user_satisfaction_score, 1) as satisfaction_score,\n        ROUND(expansion_revenue / 1000, 2) as expansion_revenue_thousands\n    FROM oracle_enterprise_software \n    WHERE annual_contract_value > 500000 \n        AND software_utilization_rate > 75\n    ORDER BY utilization_pct DESC;",
      "explanation": "Oracle enterprise software analytics using utilization rates and contract value analysis for customer success optimization.",
      "created_at": "2025-08-11T17:08:07.871Z",
      "expected_output": [
        {
          "acv_thousands": "850.00",
          "utilization_pct": "93.0",
          "industry_vertical": "Healthcare_v18",
          "satisfaction_score": "10.9",
          "migration_progress_pct": "94.6",
          "expansion_revenue_thousands": "325.00"
        },
        {
          "acv_thousands": "850.00",
          "utilization_pct": "92.5",
          "industry_vertical": "Healthcare_v13",
          "satisfaction_score": "10.4",
          "migration_progress_pct": "94.1",
          "expansion_revenue_thousands": "325.00"
        },
        {
          "acv_thousands": "850.00",
          "utilization_pct": "92.0",
          "industry_vertical": "Healthcare_v8",
          "satisfaction_score": "9.9",
          "migration_progress_pct": "93.6",
          "expansion_revenue_thousands": "325.00"
        },
        {
          "acv_thousands": "850.00",
          "utilization_pct": "91.5",
          "industry_vertical": "Healthcare_v3",
          "satisfaction_score": "9.4",
          "migration_progress_pct": "93.1",
          "expansion_revenue_thousands": "325.00"
        },
        {
          "acv_thousands": "850.00",
          "utilization_pct": "91.2",
          "industry_vertical": "Healthcare",
          "satisfaction_score": "9.1",
          "migration_progress_pct": "92.8",
          "expansion_revenue_thousands": "325.00"
        },
        {
          "acv_thousands": "2500.00",
          "utilization_pct": "84.1",
          "industry_vertical": "Financial Services_v16",
          "satisfaction_score": "10.3",
          "migration_progress_pct": "96.8",
          "expansion_revenue_thousands": "450.00"
        },
        {
          "acv_thousands": "2500.00",
          "utilization_pct": "83.6",
          "industry_vertical": "Financial Services_v11",
          "satisfaction_score": "9.8",
          "migration_progress_pct": "96.3",
          "expansion_revenue_thousands": "450.00"
        },
        {
          "acv_thousands": "2500.00",
          "utilization_pct": "83.1",
          "industry_vertical": "Financial Services_v6",
          "satisfaction_score": "9.3",
          "migration_progress_pct": "95.8",
          "expansion_revenue_thousands": "450.00"
        },
        {
          "acv_thousands": "2500.00",
          "utilization_pct": "82.6",
          "industry_vertical": "Financial Services_v1",
          "satisfaction_score": "8.8",
          "migration_progress_pct": "95.3",
          "expansion_revenue_thousands": "450.00"
        },
        {
          "acv_thousands": "2500.00",
          "utilization_pct": "82.5",
          "industry_vertical": "Financial Services",
          "satisfaction_score": "8.7",
          "migration_progress_pct": "95.2",
          "expansion_revenue_thousands": "450.00"
        },
        {
          "acv_thousands": "1200.00",
          "utilization_pct": "80.0",
          "industry_vertical": "Manufacturing_v17",
          "satisfaction_score": "9.9",
          "migration_progress_pct": "89.2",
          "expansion_revenue_thousands": "185.00"
        },
        {
          "acv_thousands": "1200.00",
          "utilization_pct": "79.5",
          "industry_vertical": "Manufacturing_v12",
          "satisfaction_score": "9.4",
          "migration_progress_pct": "88.7",
          "expansion_revenue_thousands": "185.00"
        },
        {
          "acv_thousands": "1200.00",
          "utilization_pct": "79.0",
          "industry_vertical": "Manufacturing_v7",
          "satisfaction_score": "8.9",
          "migration_progress_pct": "88.2",
          "expansion_revenue_thousands": "185.00"
        },
        {
          "acv_thousands": "675.00",
          "utilization_pct": "78.7",
          "industry_vertical": "Retail & E-commerce_v19",
          "satisfaction_score": "9.8",
          "migration_progress_pct": "84.3",
          "expansion_revenue_thousands": "125.00"
        },
        {
          "acv_thousands": "1200.00",
          "utilization_pct": "78.5",
          "industry_vertical": "Manufacturing_v2",
          "satisfaction_score": "8.4",
          "migration_progress_pct": "87.7",
          "expansion_revenue_thousands": "185.00"
        },
        {
          "acv_thousands": "1200.00",
          "utilization_pct": "78.3",
          "industry_vertical": "Manufacturing",
          "satisfaction_score": "8.2",
          "migration_progress_pct": "87.5",
          "expansion_revenue_thousands": "185.00"
        },
        {
          "acv_thousands": "675.00",
          "utilization_pct": "78.2",
          "industry_vertical": "Retail & E-commerce_v14",
          "satisfaction_score": "9.3",
          "migration_progress_pct": "83.8",
          "expansion_revenue_thousands": "125.00"
        },
        {
          "acv_thousands": "675.00",
          "utilization_pct": "77.7",
          "industry_vertical": "Retail & E-commerce_v9",
          "satisfaction_score": "8.8",
          "migration_progress_pct": "83.3",
          "expansion_revenue_thousands": "125.00"
        },
        {
          "acv_thousands": "675.00",
          "utilization_pct": "77.2",
          "industry_vertical": "Retail & E-commerce_v4",
          "satisfaction_score": "8.3",
          "migration_progress_pct": "82.8",
          "expansion_revenue_thousands": "125.00"
        },
        {
          "acv_thousands": "675.00",
          "utilization_pct": "76.8",
          "industry_vertical": "Retail & E-commerce",
          "satisfaction_score": "7.9",
          "migration_progress_pct": "82.4",
          "expansion_revenue_thousands": "125.00"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Oracle Enterprise Software Analytics",
      "problem_slug": "morgan-stanley-portfolio-analytics"
    },
    {
      "id": "0746918b-04af-4b92-8795-0c067cf8c582",
      "problem_id": "387f6300-3716-40e2-85dc-a792cb32a6b1",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE paypal_transactions (\n        transaction_id INT PRIMARY KEY,\n        merchant_category VARCHAR(50),\n        transaction_amount DECIMAL(10,2),\n        payment_method VARCHAR(30),\n        merchant_tier VARCHAR(20),\n        transaction_date DATE\n    );\n      INSERT INTO paypal_transactions  VALUES\n      (1, 'E-commerce Retail', 185.50, 'Credit Card', 'Premium', '2024-01-15'),\n      (2, 'Professional Services', 420.75, 'PayPal Balance', 'Business', '2024-01-15'),\n      (3, 'Software & SaaS', 89.25, 'Bank Transfer', 'Standard', '2024-01-16'),\n      (4, 'Digital Marketing', 350.80, 'Credit Card', 'Premium', '2024-01-16'),\n      (5, 'Consulting', 275.60, 'PayPal Balance', 'Business', '2024-01-17'),\n      (7, 'E-commerce Retail_v1', 185.60, 'Credit Card_v1', 'Premium_v1', '2024-01-16'),\n      (9, 'Professional Services_v2', 420.95, 'PayPal Balance_v2', 'Business_v2', '2024-01-17'),\n      (11, 'Software & SaaS_v3', 89.55, 'Bank Transfer_v3', 'Standard_v3', '2024-01-19'),\n      (13, 'Digital Marketing_v4', 351.20, 'Credit Card_v4', 'Premium_v4', '2024-01-20'),\n      (15, 'Consulting_v5', 276.10, 'PayPal Balance_v5', 'Business_v5', '2024-01-22'),\n      (12, 'E-commerce Retail_v6', 186.10, 'Credit Card_v6', 'Premium_v6', '2024-01-21'),\n      (14, 'Professional Services_v7', 421.45, 'PayPal Balance_v7', 'Business_v7', '2024-01-22'),\n      (16, 'Software & SaaS_v8', 90.05, 'Bank Transfer_v8', 'Standard_v8', '2024-01-24'),\n      (18, 'Digital Marketing_v9', 351.70, 'Credit Card_v9', 'Premium_v9', '2024-01-25'),\n      (20, 'Consulting_v10', 276.60, 'PayPal Balance_v10', 'Business_v10', '2024-01-27'),\n      (17, 'E-commerce Retail_v11', 186.60, 'Credit Card_v11', 'Premium_v11', '2024-01-26'),\n      (19, 'Professional Services_v12', 421.95, 'PayPal Balance_v12', 'Business_v12', '2024-01-27'),\n      (21, 'Software & SaaS_v13', 90.55, 'Bank Transfer_v13', 'Standard_v13', '2024-01-29'),\n      (23, 'Digital Marketing_v14', 352.20, 'Credit Card_v14', 'Premium_v14', '2024-01-30'),\n      (25, 'Consulting_v15', 277.10, 'PayPal Balance_v15', 'Business_v15', '2024-02-01'),\n      (22, 'E-commerce Retail_v16', 187.10, 'Credit Card_v16', 'Premium_v16', '2024-01-31'),\n      (24, 'Professional Services_v17', 422.45, 'PayPal Balance_v17', 'Business_v17', '2024-02-01'),\n      (26, 'Software & SaaS_v18', 91.05, 'Bank Transfer_v18', 'Standard_v18', '2024-02-03'),\n      (28, 'Digital Marketing_v19', 352.70, 'Credit Card_v19', 'Premium_v19', '2024-02-04'),\n      (30, 'Consulting_v20', 277.60, 'PayPal Balance_v20', 'Business_v20', '2024-02-06');",
      "solution_sql": "SELECT merchant_category, ROUND(AVG(transaction_amount), 2) as avg_transaction_value\nFROM paypal_transactions \nGROUP BY merchant_category \nHAVING AVG(transaction_amount) > 250 \nORDER BY avg_transaction_value DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.683Z",
      "expected_output": [
        {
          "merchant_category": "Professional Services_v17",
          "avg_transaction_value": "422.45"
        },
        {
          "merchant_category": "Professional Services_v12",
          "avg_transaction_value": "421.95"
        },
        {
          "merchant_category": "Professional Services_v7",
          "avg_transaction_value": "421.45"
        },
        {
          "merchant_category": "Professional Services_v2",
          "avg_transaction_value": "420.95"
        },
        {
          "merchant_category": "Professional Services",
          "avg_transaction_value": "420.75"
        },
        {
          "merchant_category": "Digital Marketing_v19",
          "avg_transaction_value": "352.70"
        },
        {
          "merchant_category": "Digital Marketing_v14",
          "avg_transaction_value": "352.20"
        },
        {
          "merchant_category": "Digital Marketing_v9",
          "avg_transaction_value": "351.70"
        },
        {
          "merchant_category": "Digital Marketing_v4",
          "avg_transaction_value": "351.20"
        },
        {
          "merchant_category": "Digital Marketing",
          "avg_transaction_value": "350.80"
        },
        {
          "merchant_category": "Consulting_v20",
          "avg_transaction_value": "277.60"
        },
        {
          "merchant_category": "Consulting_v15",
          "avg_transaction_value": "277.10"
        },
        {
          "merchant_category": "Consulting_v10",
          "avg_transaction_value": "276.60"
        },
        {
          "merchant_category": "Consulting_v5",
          "avg_transaction_value": "276.10"
        },
        {
          "merchant_category": "Consulting",
          "avg_transaction_value": "275.60"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "PayPal Digital Payments Analytics",
      "problem_slug": "merck-drug-development-pipeline"
    },
    {
      "id": "57d97e4c-2cbb-4280-bb4a-5f78dd0e43d0",
      "problem_id": "387f6300-3716-40e2-85dc-a792cb32a6b1",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE paypal_transactions (\n        transaction_id INT PRIMARY KEY,\n        merchant_category VARCHAR(50),\n        transaction_amount DECIMAL(10,2),\n        payment_method VARCHAR(30),\n        merchant_tier VARCHAR(20),\n        transaction_date DATE\n    );\n      INSERT INTO paypal_transactions  VALUES\n      (1, 'E-commerce Retail', 185.50, 'Credit Card', 'Premium', '2024-01-15'),\n      (2, 'Professional Services', 420.75, 'PayPal Balance', 'Business', '2024-01-15'),\n      (3, 'Software & SaaS', 89.25, 'Bank Transfer', 'Standard', '2024-01-16'),\n      (4, 'Digital Marketing', 350.80, 'Credit Card', 'Premium', '2024-01-16'),\n      (5, 'Consulting', 275.60, 'PayPal Balance', 'Business', '2024-01-17'),\n      (7, 'E-commerce Retail_v1', 185.60, 'Credit Card_v1', 'Premium_v1', '2024-01-16'),\n      (9, 'Professional Services_v2', 420.95, 'PayPal Balance_v2', 'Business_v2', '2024-01-17'),\n      (11, 'Software & SaaS_v3', 89.55, 'Bank Transfer_v3', 'Standard_v3', '2024-01-19'),\n      (13, 'Digital Marketing_v4', 351.20, 'Credit Card_v4', 'Premium_v4', '2024-01-20'),\n      (15, 'Consulting_v5', 276.10, 'PayPal Balance_v5', 'Business_v5', '2024-01-22'),\n      (12, 'E-commerce Retail_v6', 186.10, 'Credit Card_v6', 'Premium_v6', '2024-01-21'),\n      (14, 'Professional Services_v7', 421.45, 'PayPal Balance_v7', 'Business_v7', '2024-01-22'),\n      (16, 'Software & SaaS_v8', 90.05, 'Bank Transfer_v8', 'Standard_v8', '2024-01-24'),\n      (18, 'Digital Marketing_v9', 351.70, 'Credit Card_v9', 'Premium_v9', '2024-01-25'),\n      (20, 'Consulting_v10', 276.60, 'PayPal Balance_v10', 'Business_v10', '2024-01-27'),\n      (17, 'E-commerce Retail_v11', 186.60, 'Credit Card_v11', 'Premium_v11', '2024-01-26'),\n      (19, 'Professional Services_v12', 421.95, 'PayPal Balance_v12', 'Business_v12', '2024-01-27'),\n      (21, 'Software & SaaS_v13', 90.55, 'Bank Transfer_v13', 'Standard_v13', '2024-01-29'),\n      (23, 'Digital Marketing_v14', 352.20, 'Credit Card_v14', 'Premium_v14', '2024-01-30'),\n      (25, 'Consulting_v15', 277.10, 'PayPal Balance_v15', 'Business_v15', '2024-02-01'),\n      (22, 'E-commerce Retail_v16', 187.10, 'Credit Card_v16', 'Premium_v16', '2024-01-31'),\n      (24, 'Professional Services_v17', 422.45, 'PayPal Balance_v17', 'Business_v17', '2024-02-01'),\n      (26, 'Software & SaaS_v18', 91.05, 'Bank Transfer_v18', 'Standard_v18', '2024-02-03'),\n      (28, 'Digital Marketing_v19', 352.70, 'Credit Card_v19', 'Premium_v19', '2024-02-04'),\n      (30, 'Consulting_v20', 277.60, 'PayPal Balance_v20', 'Business_v20', '2024-02-06');",
      "solution_sql": "SELECT merchant_category, ROUND(AVG(transaction_amount), 2) as avg_transaction_value\nFROM paypal_transactions \nGROUP BY merchant_category \nHAVING AVG(transaction_amount) > 250 \nORDER BY avg_transaction_value DESC;",
      "explanation": "PayPal digital payments analysis using average transaction calculations for merchant category optimization.",
      "created_at": "2025-08-11T13:51:12.114Z",
      "expected_output": [
        {
          "merchant_category": "Professional Services_v17",
          "avg_transaction_value": "422.45"
        },
        {
          "merchant_category": "Professional Services_v12",
          "avg_transaction_value": "421.95"
        },
        {
          "merchant_category": "Professional Services_v7",
          "avg_transaction_value": "421.45"
        },
        {
          "merchant_category": "Professional Services_v2",
          "avg_transaction_value": "420.95"
        },
        {
          "merchant_category": "Professional Services",
          "avg_transaction_value": "420.75"
        },
        {
          "merchant_category": "Digital Marketing_v19",
          "avg_transaction_value": "352.70"
        },
        {
          "merchant_category": "Digital Marketing_v14",
          "avg_transaction_value": "352.20"
        },
        {
          "merchant_category": "Digital Marketing_v9",
          "avg_transaction_value": "351.70"
        },
        {
          "merchant_category": "Digital Marketing_v4",
          "avg_transaction_value": "351.20"
        },
        {
          "merchant_category": "Digital Marketing",
          "avg_transaction_value": "350.80"
        },
        {
          "merchant_category": "Consulting_v20",
          "avg_transaction_value": "277.60"
        },
        {
          "merchant_category": "Consulting_v15",
          "avg_transaction_value": "277.10"
        },
        {
          "merchant_category": "Consulting_v10",
          "avg_transaction_value": "276.60"
        },
        {
          "merchant_category": "Consulting_v5",
          "avg_transaction_value": "276.10"
        },
        {
          "merchant_category": "Consulting",
          "avg_transaction_value": "275.60"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "PayPal Digital Payments Analytics",
      "problem_slug": "merck-drug-development-pipeline"
    },
    {
      "id": "46d7e047-dbef-4efb-b74b-b53b312e9c88",
      "problem_id": "9c9399dc-dc2c-4d6e-8ac0-15ffb247433a",
      "sql_dialect": "mysql",
      "setup_sql": "\nCREATE TABLE asset_classes (\n    asset_class_id INT PRIMARY KEY,\n    asset_class_name VARCHAR(100),\n    risk_level VARCHAR(20),\n    expected_annual_return DECIMAL(5,2)\n);\n\nCREATE TABLE portfolios (\n    portfolio_id INT PRIMARY KEY,\n    portfolio_name VARCHAR(100),\n    client_risk_tolerance VARCHAR(20),\n    total_value DECIMAL(12,2),\n    creation_date DATE\n);\n\nCREATE TABLE portfolio_holdings (\n    holding_id INT PRIMARY KEY,\n    portfolio_id INT,\n    asset_class_id INT,\n    allocation_percentage DECIMAL(5,2),\n    invested_amount DECIMAL(12,2),\n    current_value DECIMAL(12,2),\n    last_updated DATE,\n    FOREIGN KEY (portfolio_id) REFERENCES portfolios(portfolio_id),\n    FOREIGN KEY (asset_class_id) REFERENCES asset_classes(asset_class_id)\n);\n\nINSERT INTO asset_classes VALUES\n(1, 'Large Cap Stocks', 'Medium', 8.50),\n(2, 'Small Cap Stocks', 'High', 12.00),\n(3, 'Government Bonds', 'Low', 3.50),\n(4, 'Corporate Bonds', 'Medium-Low', 5.00),\n(5, 'Real Estate', 'Medium-High', 9.50),\n(6, 'International Stocks', 'High', 10.00);\n\nINSERT INTO portfolios VALUES\n(1, 'Conservative Growth', 'Low', 250000.00, '2023-01-15'),\n(2, 'Balanced Portfolio', 'Medium', 500000.00, '2023-02-10'),\n(3, 'Aggressive Growth', 'High', 750000.00, '2023-01-20'),\n(4, 'Income Focus', 'Low', 300000.00, '2023-03-05');\n\nINSERT INTO portfolio_holdings VALUES\n(1, 1, 1, 30.00, 75000.00, 78000.00, '2024-05-01'),\n(2, 1, 3, 50.00, 125000.00, 127500.00, '2024-05-01'),\n(3, 1, 4, 20.00, 50000.00, 51000.00, '2024-05-01'),\n(4, 2, 1, 40.00, 200000.00, 210000.00, '2024-05-01'),\n(5, 2, 2, 20.00, 100000.00, 108000.00, '2024-05-01'),\n(6, 2, 3, 25.00, 125000.00, 127500.00, '2024-05-01'),\n(7, 2, 5, 15.00, 75000.00, 82500.00, '2024-05-01'),\n(8, 3, 1, 35.00, 262500.00, 280000.00, '2024-05-01'),\n(9, 3, 2, 30.00, 225000.00, 252000.00, '2024-05-01'),\n(10, 3, 6, 35.00, 262500.00, 285000.00, '2024-05-01'),\n(11, 4, 3, 60.00, 180000.00, 183000.00, '2024-05-01'),\n(12, 4, 4, 40.00, 120000.00, 123000.00, '2024-05-01');",
      "solution_sql": "\nSELECT \n    p.client_risk_tolerance,\n    COUNT(DISTINCT p.portfolio_id) as portfolio_count,\n    ROUND(AVG(p.total_value), 0) as avg_portfolio_value,\n    ROUND(AVG((ph.current_value - ph.invested_amount) / ph.invested_amount * 100), 2) as avg_return_percentage,\n    ROUND(SUM(ph.current_value), 0) as total_current_value,\n    ROUND(SUM(ph.invested_amount), 0) as total_invested\nFROM portfolios p\nJOIN portfolio_holdings ph ON p.portfolio_id = ph.portfolio_id\nGROUP BY p.client_risk_tolerance\nORDER BY avg_return_percentage DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.735Z",
      "expected_output": [
        {
          "total_invested": "750000",
          "portfolio_count": "1",
          "avg_portfolio_value": "750000",
          "total_current_value": "817000",
          "avg_return_percentage": "9.08",
          "client_risk_tolerance": "High"
        },
        {
          "total_invested": "500000",
          "portfolio_count": "1",
          "avg_portfolio_value": "500000",
          "total_current_value": "528000",
          "avg_return_percentage": "6.25",
          "client_risk_tolerance": "Medium"
        },
        {
          "total_invested": "550000",
          "portfolio_count": "2",
          "avg_portfolio_value": "270000",
          "total_current_value": "562500",
          "avg_return_percentage": "2.43",
          "client_risk_tolerance": "Low"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Financial Portfolio Performance Analysis",
      "problem_slug": "state-street-portfolio-analytics"
    },
    {
      "id": "38a457c7-40e4-4c94-b53c-067c7db32536",
      "problem_id": "9c9399dc-dc2c-4d6e-8ac0-15ffb247433a",
      "sql_dialect": "postgresql",
      "setup_sql": "\nCREATE TABLE asset_classes (\n    asset_class_id INT PRIMARY KEY,\n    asset_class_name VARCHAR(100),\n    risk_level VARCHAR(20),\n    expected_annual_return DECIMAL(5,2)\n);\n\nCREATE TABLE portfolios (\n    portfolio_id INT PRIMARY KEY,\n    portfolio_name VARCHAR(100),\n    client_risk_tolerance VARCHAR(20),\n    total_value DECIMAL(12,2),\n    creation_date DATE\n);\n\nCREATE TABLE portfolio_holdings (\n    holding_id INT PRIMARY KEY,\n    portfolio_id INT,\n    asset_class_id INT,\n    allocation_percentage DECIMAL(5,2),\n    invested_amount DECIMAL(12,2),\n    current_value DECIMAL(12,2),\n    last_updated DATE,\n    FOREIGN KEY (portfolio_id) REFERENCES portfolios(portfolio_id),\n    FOREIGN KEY (asset_class_id) REFERENCES asset_classes(asset_class_id)\n);\n\nINSERT INTO asset_classes VALUES\n(1, 'Large Cap Stocks', 'Medium', 8.50),\n(2, 'Small Cap Stocks', 'High', 12.00),\n(3, 'Government Bonds', 'Low', 3.50),\n(4, 'Corporate Bonds', 'Medium-Low', 5.00),\n(5, 'Real Estate', 'Medium-High', 9.50),\n(6, 'International Stocks', 'High', 10.00);\n\nINSERT INTO portfolios VALUES\n(1, 'Conservative Growth', 'Low', 250000.00, '2023-01-15'),\n(2, 'Balanced Portfolio', 'Medium', 500000.00, '2023-02-10'),\n(3, 'Aggressive Growth', 'High', 750000.00, '2023-01-20'),\n(4, 'Income Focus', 'Low', 300000.00, '2023-03-05');\n\nINSERT INTO portfolio_holdings VALUES\n(1, 1, 1, 30.00, 75000.00, 78000.00, '2024-05-01'),\n(2, 1, 3, 50.00, 125000.00, 127500.00, '2024-05-01'),\n(3, 1, 4, 20.00, 50000.00, 51000.00, '2024-05-01'),\n(4, 2, 1, 40.00, 200000.00, 210000.00, '2024-05-01'),\n(5, 2, 2, 20.00, 100000.00, 108000.00, '2024-05-01'),\n(6, 2, 3, 25.00, 125000.00, 127500.00, '2024-05-01'),\n(7, 2, 5, 15.00, 75000.00, 82500.00, '2024-05-01'),\n(8, 3, 1, 35.00, 262500.00, 280000.00, '2024-05-01'),\n(9, 3, 2, 30.00, 225000.00, 252000.00, '2024-05-01'),\n(10, 3, 6, 35.00, 262500.00, 285000.00, '2024-05-01'),\n(11, 4, 3, 60.00, 180000.00, 183000.00, '2024-05-01'),\n(12, 4, 4, 40.00, 120000.00, 123000.00, '2024-05-01');",
      "solution_sql": "\nSELECT \n    p.client_risk_tolerance,\n    COUNT(DISTINCT p.portfolio_id) as portfolio_count,\n    ROUND(AVG(p.total_value), 0) as avg_portfolio_value,\n    ROUND(AVG((ph.current_value - ph.invested_amount) / ph.invested_amount * 100), 2) as avg_return_percentage,\n    ROUND(SUM(ph.current_value), 0) as total_current_value,\n    ROUND(SUM(ph.invested_amount), 0) as total_invested\nFROM portfolios p\nJOIN portfolio_holdings ph ON p.portfolio_id = ph.portfolio_id\nGROUP BY p.client_risk_tolerance\nORDER BY avg_return_percentage DESC;",
      "explanation": "Pfizer vaccine distribution analytics using delivery success rates and cold chain compliance for global supply chain optimization.",
      "created_at": "2025-08-11T17:08:07.869Z",
      "expected_output": [
        {
          "total_invested": "750000",
          "portfolio_count": "1",
          "avg_portfolio_value": "750000",
          "total_current_value": "817000",
          "avg_return_percentage": "9.08",
          "client_risk_tolerance": "High"
        },
        {
          "total_invested": "500000",
          "portfolio_count": "1",
          "avg_portfolio_value": "500000",
          "total_current_value": "528000",
          "avg_return_percentage": "6.25",
          "client_risk_tolerance": "Medium"
        },
        {
          "total_invested": "550000",
          "portfolio_count": "2",
          "avg_portfolio_value": "270000",
          "total_current_value": "562500",
          "avg_return_percentage": "2.43",
          "client_risk_tolerance": "Low"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Financial Portfolio Performance Analysis",
      "problem_slug": "state-street-portfolio-analytics"
    },
    {
      "id": "7a648da4-d3b7-454e-a459-4eafc575804e",
      "problem_id": "f5c2c06b-023a-4e07-9240-18f97fefcde2",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE pinterest_content (\n        pin_id INT PRIMARY KEY,\n        content_category VARCHAR(50),\n        impressions INT,\n        engagements INT,\n        saves INT,\n        clicks INT,\n        pin_date DATE\n    );\n      INSERT INTO pinterest_content  VALUES\n      (1, 'Home Design', 125000, 22500, 8500, 4200, '2024-01-15'),\n      (2, 'Fashion & Style', 185000, 28750, 12000, 6500, '2024-01-15'),\n      (3, 'Food & Recipes', 95000, 18500, 7200, 3800, '2024-01-16'),\n      (4, 'Travel & Places', 145000, 21250, 9500, 5100, '2024-01-16'),\n      (5, 'DIY & Crafts', 75000, 12500, 5800, 2900, '2024-01-17'),\n      (7, 'Home Design_v1', 125010, 22510, 8510, 4210, '2024-01-16'),\n      (9, 'Fashion & Style_v2', 185020, 28770, 12020, 6520, '2024-01-17'),\n      (11, 'Food & Recipes_v3', 95030, 18530, 7230, 3830, '2024-01-19'),\n      (13, 'Travel & Places_v4', 145040, 21290, 9540, 5140, '2024-01-20'),\n      (15, 'DIY & Crafts_v5', 75050, 12550, 5850, 2950, '2024-01-22'),\n      (12, 'Home Design_v6', 125060, 22560, 8560, 4260, '2024-01-21'),\n      (14, 'Fashion & Style_v7', 185070, 28820, 12070, 6570, '2024-01-22'),\n      (16, 'Food & Recipes_v8', 95080, 18580, 7280, 3880, '2024-01-24'),\n      (18, 'Travel & Places_v9', 145090, 21340, 9590, 5190, '2024-01-25'),\n      (20, 'DIY & Crafts_v10', 75100, 12600, 5900, 3000, '2024-01-27'),\n      (17, 'Home Design_v11', 125110, 22610, 8610, 4310, '2024-01-26'),\n      (19, 'Fashion & Style_v12', 185120, 28870, 12120, 6620, '2024-01-27'),\n      (21, 'Food & Recipes_v13', 95130, 18630, 7330, 3930, '2024-01-29'),\n      (23, 'Travel & Places_v14', 145140, 21390, 9640, 5240, '2024-01-30'),\n      (25, 'DIY & Crafts_v15', 75150, 12650, 5950, 3050, '2024-02-01'),\n      (22, 'Home Design_v16', 125160, 22660, 8660, 4360, '2024-01-31'),\n      (24, 'Fashion & Style_v17', 185170, 28920, 12170, 6670, '2024-02-01'),\n      (26, 'Food & Recipes_v18', 95180, 18680, 7380, 3980, '2024-02-03'),\n      (28, 'Travel & Places_v19', 145190, 21440, 9690, 5290, '2024-02-04'),\n      (30, 'DIY & Crafts_v20', 75200, 12700, 6000, 3100, '2024-02-06');",
      "solution_sql": "SELECT \n        content_category, \n        ROUND((CAST(engagements AS DECIMAL) / impressions) * 100, 2) as engagement_rate_pct\nFROM pinterest_content \nGROUP BY content_category, impressions, engagements\nHAVING (CAST(engagements AS DECIMAL) / impressions) * 100 > 15 \nORDER BY engagement_rate_pct DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.795Z",
      "expected_output": [
        {
          "content_category": "Food & Recipes_v18",
          "engagement_rate_pct": "19.63"
        },
        {
          "content_category": "Food & Recipes_v13",
          "engagement_rate_pct": "19.58"
        },
        {
          "content_category": "Food & Recipes_v8",
          "engagement_rate_pct": "19.54"
        },
        {
          "content_category": "Food & Recipes_v3",
          "engagement_rate_pct": "19.50"
        },
        {
          "content_category": "Food & Recipes",
          "engagement_rate_pct": "19.47"
        },
        {
          "content_category": "Home Design_v16",
          "engagement_rate_pct": "18.10"
        },
        {
          "content_category": "Home Design_v11",
          "engagement_rate_pct": "18.07"
        },
        {
          "content_category": "Home Design_v6",
          "engagement_rate_pct": "18.04"
        },
        {
          "content_category": "Home Design_v1",
          "engagement_rate_pct": "18.01"
        },
        {
          "content_category": "Home Design",
          "engagement_rate_pct": "18.00"
        },
        {
          "content_category": "DIY & Crafts_v20",
          "engagement_rate_pct": "16.89"
        },
        {
          "content_category": "DIY & Crafts_v15",
          "engagement_rate_pct": "16.83"
        },
        {
          "content_category": "DIY & Crafts_v10",
          "engagement_rate_pct": "16.78"
        },
        {
          "content_category": "DIY & Crafts_v5",
          "engagement_rate_pct": "16.72"
        },
        {
          "content_category": "DIY & Crafts",
          "engagement_rate_pct": "16.67"
        },
        {
          "content_category": "Fashion & Style_v17",
          "engagement_rate_pct": "15.62"
        },
        {
          "content_category": "Fashion & Style_v12",
          "engagement_rate_pct": "15.60"
        },
        {
          "content_category": "Fashion & Style_v7",
          "engagement_rate_pct": "15.57"
        },
        {
          "content_category": "Fashion & Style_v2",
          "engagement_rate_pct": "15.55"
        },
        {
          "content_category": "Fashion & Style",
          "engagement_rate_pct": "15.54"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Pinterest Content Engagement Analytics",
      "problem_slug": "netflix-revenue-analysis"
    },
    {
      "id": "eccbc576-53c0-473c-b36a-376fc3e5eb2e",
      "problem_id": "f5c2c06b-023a-4e07-9240-18f97fefcde2",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE pinterest_content (\n        pin_id INT PRIMARY KEY,\n        content_category VARCHAR(50),\n        impressions INT,\n        engagements INT,\n        saves INT,\n        clicks INT,\n        pin_date DATE\n    );\n      INSERT INTO pinterest_content  VALUES\n      (1, 'Home Design', 125000, 22500, 8500, 4200, '2024-01-15'),\n      (2, 'Fashion & Style', 185000, 28750, 12000, 6500, '2024-01-15'),\n      (3, 'Food & Recipes', 95000, 18500, 7200, 3800, '2024-01-16'),\n      (4, 'Travel & Places', 145000, 21250, 9500, 5100, '2024-01-16'),\n      (5, 'DIY & Crafts', 75000, 12500, 5800, 2900, '2024-01-17'),\n      (7, 'Home Design_v1', 125010, 22510, 8510, 4210, '2024-01-16'),\n      (9, 'Fashion & Style_v2', 185020, 28770, 12020, 6520, '2024-01-17'),\n      (11, 'Food & Recipes_v3', 95030, 18530, 7230, 3830, '2024-01-19'),\n      (13, 'Travel & Places_v4', 145040, 21290, 9540, 5140, '2024-01-20'),\n      (15, 'DIY & Crafts_v5', 75050, 12550, 5850, 2950, '2024-01-22'),\n      (12, 'Home Design_v6', 125060, 22560, 8560, 4260, '2024-01-21'),\n      (14, 'Fashion & Style_v7', 185070, 28820, 12070, 6570, '2024-01-22'),\n      (16, 'Food & Recipes_v8', 95080, 18580, 7280, 3880, '2024-01-24'),\n      (18, 'Travel & Places_v9', 145090, 21340, 9590, 5190, '2024-01-25'),\n      (20, 'DIY & Crafts_v10', 75100, 12600, 5900, 3000, '2024-01-27'),\n      (17, 'Home Design_v11', 125110, 22610, 8610, 4310, '2024-01-26'),\n      (19, 'Fashion & Style_v12', 185120, 28870, 12120, 6620, '2024-01-27'),\n      (21, 'Food & Recipes_v13', 95130, 18630, 7330, 3930, '2024-01-29'),\n      (23, 'Travel & Places_v14', 145140, 21390, 9640, 5240, '2024-01-30'),\n      (25, 'DIY & Crafts_v15', 75150, 12650, 5950, 3050, '2024-02-01'),\n      (22, 'Home Design_v16', 125160, 22660, 8660, 4360, '2024-01-31'),\n      (24, 'Fashion & Style_v17', 185170, 28920, 12170, 6670, '2024-02-01'),\n      (26, 'Food & Recipes_v18', 95180, 18680, 7380, 3980, '2024-02-03'),\n      (28, 'Travel & Places_v19', 145190, 21440, 9690, 5290, '2024-02-04'),\n      (30, 'DIY & Crafts_v20', 75200, 12700, 6000, 3100, '2024-02-06');",
      "solution_sql": "SELECT \n        content_category, \n        ROUND((CAST(engagements AS DECIMAL) / impressions) * 100, 2) as engagement_rate_pct\nFROM pinterest_content \nGROUP BY content_category, impressions, engagements\nHAVING (CAST(engagements AS DECIMAL) / impressions) * 100 > 15 \nORDER BY engagement_rate_pct DESC;",
      "explanation": "Pinterest content engagement analysis using engagement rate calculations for advertiser targeting optimization.",
      "created_at": "2025-08-11T17:08:07.776Z",
      "expected_output": [
        {
          "content_category": "Food & Recipes_v18",
          "engagement_rate_pct": "19.63"
        },
        {
          "content_category": "Food & Recipes_v13",
          "engagement_rate_pct": "19.58"
        },
        {
          "content_category": "Food & Recipes_v8",
          "engagement_rate_pct": "19.54"
        },
        {
          "content_category": "Food & Recipes_v3",
          "engagement_rate_pct": "19.50"
        },
        {
          "content_category": "Food & Recipes",
          "engagement_rate_pct": "19.47"
        },
        {
          "content_category": "Home Design_v16",
          "engagement_rate_pct": "18.10"
        },
        {
          "content_category": "Home Design_v11",
          "engagement_rate_pct": "18.07"
        },
        {
          "content_category": "Home Design_v6",
          "engagement_rate_pct": "18.04"
        },
        {
          "content_category": "Home Design_v1",
          "engagement_rate_pct": "18.01"
        },
        {
          "content_category": "Home Design",
          "engagement_rate_pct": "18.00"
        },
        {
          "content_category": "DIY & Crafts_v20",
          "engagement_rate_pct": "16.89"
        },
        {
          "content_category": "DIY & Crafts_v15",
          "engagement_rate_pct": "16.83"
        },
        {
          "content_category": "DIY & Crafts_v10",
          "engagement_rate_pct": "16.78"
        },
        {
          "content_category": "DIY & Crafts_v5",
          "engagement_rate_pct": "16.72"
        },
        {
          "content_category": "DIY & Crafts",
          "engagement_rate_pct": "16.67"
        },
        {
          "content_category": "Fashion & Style_v17",
          "engagement_rate_pct": "15.62"
        },
        {
          "content_category": "Fashion & Style_v12",
          "engagement_rate_pct": "15.60"
        },
        {
          "content_category": "Fashion & Style_v7",
          "engagement_rate_pct": "15.57"
        },
        {
          "content_category": "Fashion & Style_v2",
          "engagement_rate_pct": "15.55"
        },
        {
          "content_category": "Fashion & Style",
          "engagement_rate_pct": "15.54"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Pinterest Content Engagement Analytics",
      "problem_slug": "netflix-revenue-analysis"
    },
    {
      "id": "0f602d8d-6d74-4905-a0af-457332b723c8",
      "problem_id": "20fc0621-5497-4fc6-b871-05b2ac57a124",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE inventory (\n          product_id INT,\n          product_name VARCHAR(100),\n          quantity INT,\n          reorder_point INT\n      );\n      INSERT INTO inventory  VALUES\n      (1, 'Wireless Headphones', 0, 20),\n      (2, 'Bluetooth Speaker', 15, 25),\n      (3, 'Laptop Stand', 75, 30),\n      (4, 'USB Cable', 5, 50),\n      (5, 'Phone Case', 100, 40),\n      (6, 'Screen Protector', 0, 20),\n      (8, 'Wireless Headphones_v1', 10, 30),\n      (10, 'Bluetooth Speaker_v2', 35, 45),\n      (12, 'Laptop Stand_v3', 105, 60),\n      (14, 'USB Cable_v4', 45, 90),\n      (16, 'Phone Case_v5', 150, 90),\n      (18, 'Screen Protector_v6', 60, 80),\n      (14, 'Wireless Headphones_v7', 70, 90),\n      (16, 'Bluetooth Speaker_v8', 95, 105),\n      (18, 'Laptop Stand_v9', 165, 120),\n      (20, 'USB Cable_v10', 105, 150),\n      (22, 'Phone Case_v11', 210, 150),\n      (24, 'Screen Protector_v12', 120, 140),\n      (20, 'Wireless Headphones_v13', 130, 150),\n      (22, 'Bluetooth Speaker_v14', 155, 165),\n      (24, 'Laptop Stand_v15', 225, 180),\n      (26, 'USB Cable_v16', 165, 210),\n      (28, 'Phone Case_v17', 270, 210),\n      (30, 'Screen Protector_v18', 180, 200),\n      (26, 'Wireless Headphones_v19', 190, 210);",
      "solution_sql": "\n      SELECT \n        product_name,\n        quantity,\n        CASE \n          WHEN quantity = 0 THEN 'Out of Stock'\n          WHEN quantity < 50 THEN 'Low Stock'\n          ELSE 'In Stock'\n        END as status\n      FROM inventory\n      ORDER BY quantity;\n    ",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.668Z",
      "expected_output": [
        {
          "status": "Out of Stock",
          "quantity": 0,
          "product_name": "Wireless Headphones"
        },
        {
          "status": "Out of Stock",
          "quantity": 0,
          "product_name": "Screen Protector"
        },
        {
          "status": "Low Stock",
          "quantity": 5,
          "product_name": "USB Cable"
        },
        {
          "status": "Low Stock",
          "quantity": 10,
          "product_name": "Wireless Headphones_v1"
        },
        {
          "status": "Low Stock",
          "quantity": 15,
          "product_name": "Bluetooth Speaker"
        },
        {
          "status": "Low Stock",
          "quantity": 35,
          "product_name": "Bluetooth Speaker_v2"
        },
        {
          "status": "Low Stock",
          "quantity": 45,
          "product_name": "USB Cable_v4"
        },
        {
          "status": "In Stock",
          "quantity": 60,
          "product_name": "Screen Protector_v6"
        },
        {
          "status": "In Stock",
          "quantity": 70,
          "product_name": "Wireless Headphones_v7"
        },
        {
          "status": "In Stock",
          "quantity": 75,
          "product_name": "Laptop Stand"
        },
        {
          "status": "In Stock",
          "quantity": 95,
          "product_name": "Bluetooth Speaker_v8"
        },
        {
          "status": "In Stock",
          "quantity": 100,
          "product_name": "Phone Case"
        },
        {
          "status": "In Stock",
          "quantity": 105,
          "product_name": "USB Cable_v10"
        },
        {
          "status": "In Stock",
          "quantity": 105,
          "product_name": "Laptop Stand_v3"
        },
        {
          "status": "In Stock",
          "quantity": 120,
          "product_name": "Screen Protector_v12"
        },
        {
          "status": "In Stock",
          "quantity": 130,
          "product_name": "Wireless Headphones_v13"
        },
        {
          "status": "In Stock",
          "quantity": 150,
          "product_name": "Phone Case_v5"
        },
        {
          "status": "In Stock",
          "quantity": 155,
          "product_name": "Bluetooth Speaker_v14"
        },
        {
          "status": "In Stock",
          "quantity": 165,
          "product_name": "USB Cable_v16"
        },
        {
          "status": "In Stock",
          "quantity": 165,
          "product_name": "Laptop Stand_v9"
        },
        {
          "status": "In Stock",
          "quantity": 180,
          "product_name": "Screen Protector_v18"
        },
        {
          "status": "In Stock",
          "quantity": 190,
          "product_name": "Wireless Headphones_v19"
        },
        {
          "status": "In Stock",
          "quantity": 210,
          "product_name": "Phone Case_v11"
        },
        {
          "status": "In Stock",
          "quantity": 225,
          "product_name": "Laptop Stand_v15"
        },
        {
          "status": "In Stock",
          "quantity": 270,
          "product_name": "Phone Case_v17"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Product Inventory Status",
      "problem_slug": "product-inventory-status"
    },
    {
      "id": "f3451e22-b16b-44d6-b99c-85fe86184d81",
      "problem_id": "20fc0621-5497-4fc6-b871-05b2ac57a124",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE inventory (\n          product_id INT,\n          product_name VARCHAR(100),\n          quantity INT,\n          reorder_point INT\n      );\n      INSERT INTO inventory  VALUES\n      (1, 'Wireless Headphones', 0, 20),\n      (2, 'Bluetooth Speaker', 15, 25),\n      (3, 'Laptop Stand', 75, 30),\n      (4, 'USB Cable', 5, 50),\n      (5, 'Phone Case', 100, 40),\n      (6, 'Screen Protector', 0, 20),\n      (8, 'Wireless Headphones_v1', 10, 30),\n      (10, 'Bluetooth Speaker_v2', 35, 45),\n      (12, 'Laptop Stand_v3', 105, 60),\n      (14, 'USB Cable_v4', 45, 90),\n      (16, 'Phone Case_v5', 150, 90),\n      (18, 'Screen Protector_v6', 60, 80),\n      (14, 'Wireless Headphones_v7', 70, 90),\n      (16, 'Bluetooth Speaker_v8', 95, 105),\n      (18, 'Laptop Stand_v9', 165, 120),\n      (20, 'USB Cable_v10', 105, 150),\n      (22, 'Phone Case_v11', 210, 150),\n      (24, 'Screen Protector_v12', 120, 140),\n      (20, 'Wireless Headphones_v13', 130, 150),\n      (22, 'Bluetooth Speaker_v14', 155, 165),\n      (24, 'Laptop Stand_v15', 225, 180),\n      (26, 'USB Cable_v16', 165, 210),\n      (28, 'Phone Case_v17', 270, 210),\n      (30, 'Screen Protector_v18', 180, 200),\n      (26, 'Wireless Headphones_v19', 190, 210);",
      "solution_sql": "\n      SELECT \n        product_name,\n        quantity,\n        CASE \n          WHEN quantity = 0 THEN 'Out of Stock'\n          WHEN quantity < 50 THEN 'Low Stock'\n          ELSE 'In Stock'\n        END as status\n      FROM inventory\n      ORDER BY quantity;\n    ",
      "explanation": "Solution uses basic queries concepts to solve the business problem.",
      "created_at": "2025-08-11T13:51:04.031Z",
      "expected_output": [
        {
          "status": "Out of Stock",
          "quantity": 0,
          "product_name": "Wireless Headphones"
        },
        {
          "status": "Out of Stock",
          "quantity": 0,
          "product_name": "Screen Protector"
        },
        {
          "status": "Low Stock",
          "quantity": 5,
          "product_name": "USB Cable"
        },
        {
          "status": "Low Stock",
          "quantity": 10,
          "product_name": "Wireless Headphones_v1"
        },
        {
          "status": "Low Stock",
          "quantity": 15,
          "product_name": "Bluetooth Speaker"
        },
        {
          "status": "Low Stock",
          "quantity": 35,
          "product_name": "Bluetooth Speaker_v2"
        },
        {
          "status": "Low Stock",
          "quantity": 45,
          "product_name": "USB Cable_v4"
        },
        {
          "status": "In Stock",
          "quantity": 60,
          "product_name": "Screen Protector_v6"
        },
        {
          "status": "In Stock",
          "quantity": 70,
          "product_name": "Wireless Headphones_v7"
        },
        {
          "status": "In Stock",
          "quantity": 75,
          "product_name": "Laptop Stand"
        },
        {
          "status": "In Stock",
          "quantity": 95,
          "product_name": "Bluetooth Speaker_v8"
        },
        {
          "status": "In Stock",
          "quantity": 100,
          "product_name": "Phone Case"
        },
        {
          "status": "In Stock",
          "quantity": 105,
          "product_name": "USB Cable_v10"
        },
        {
          "status": "In Stock",
          "quantity": 105,
          "product_name": "Laptop Stand_v3"
        },
        {
          "status": "In Stock",
          "quantity": 120,
          "product_name": "Screen Protector_v12"
        },
        {
          "status": "In Stock",
          "quantity": 130,
          "product_name": "Wireless Headphones_v13"
        },
        {
          "status": "In Stock",
          "quantity": 150,
          "product_name": "Phone Case_v5"
        },
        {
          "status": "In Stock",
          "quantity": 155,
          "product_name": "Bluetooth Speaker_v14"
        },
        {
          "status": "In Stock",
          "quantity": 165,
          "product_name": "USB Cable_v16"
        },
        {
          "status": "In Stock",
          "quantity": 165,
          "product_name": "Laptop Stand_v9"
        },
        {
          "status": "In Stock",
          "quantity": 180,
          "product_name": "Screen Protector_v18"
        },
        {
          "status": "In Stock",
          "quantity": 190,
          "product_name": "Wireless Headphones_v19"
        },
        {
          "status": "In Stock",
          "quantity": 210,
          "product_name": "Phone Case_v11"
        },
        {
          "status": "In Stock",
          "quantity": 225,
          "product_name": "Laptop Stand_v15"
        },
        {
          "status": "In Stock",
          "quantity": 270,
          "product_name": "Phone Case_v17"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Product Inventory Status",
      "problem_slug": "product-inventory-status"
    },
    {
      "id": "051dee6a-5494-427c-a625-5b6c000334e1",
      "problem_id": "555fe7bc-059f-4b65-aa4f-0e6a318265d8",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE renaissance_strategies (\n        strategy_id INT PRIMARY KEY,\n        strategy_name VARCHAR(100),\n        asset_class VARCHAR(50),\n        daily_return DECIMAL(8,6),\n        volatility DECIMAL(8,6),\n        benchmark_return DECIMAL(8,6),\n        risk_free_rate DECIMAL(8,6),\n        max_drawdown DECIMAL(8,6),\n        trade_date DATE\n    );\n      INSERT INTO renaissance_strategies VALUES\n    (1, 'Statistical Arbitrage Alpha', 'US Equities', 0.0125, 0.0180, 0.0085, 0.000350, 0.0650, '2024-01-15'),\n    (2, 'Mean Reversion Capture', 'International Equities', 0.0095, 0.0145, 0.0065, 0.000350, 0.0720, '2024-01-15'),\n    (3, 'Cross-Asset Momentum', 'Multi-Asset', 0.0145, 0.0165, 0.0090, 0.000350, 0.0580, '2024-01-16'),\n    (4, 'Volatility Surface Arbitrage', 'Options', 0.0165, 0.0195, 0.0085, 0.000350, 0.0850, '2024-01-16'),\n    (5, 'Market Microstructure', 'US Equities', 0.0185, 0.0175, 0.0085, 0.000350, 0.0450, '2024-01-17'),\n    (7, 'Statistical Arbitrage Alpha_v1', 'US Equities_v1', 0.11, 0.12, 0.11, 0.10, 0.17, '2024-01-16'),\n    (9, 'Mean Reversion Capture_v2', 'International Equities_v2', 0.21, 0.21, 0.21, 0.20, 0.27, '2024-01-17'),\n    (11, 'Cross-Asset Momentum_v3', 'Multi-Asset_v3', 0.31, 0.32, 0.31, 0.30, 0.36, '2024-01-19'),\n    (13, 'Volatility Surface Arbitrage_v4', 'Options_v4', 0.42, 0.42, 0.41, 0.40, 0.49, '2024-01-20'),\n    (15, 'Market Microstructure_v5', 'US Equities_v5', 0.52, 0.52, 0.51, 0.50, 0.55, '2024-01-22'),\n    (12, 'Statistical Arbitrage Alpha_v6', 'US Equities_v6', 0.61, 0.62, 0.61, 0.60, 0.67, '2024-01-21'),\n    (14, 'Mean Reversion Capture_v7', 'International Equities_v7', 0.71, 0.71, 0.71, 0.70, 0.77, '2024-01-22'),\n    (16, 'Cross-Asset Momentum_v8', 'Multi-Asset_v8', 0.81, 0.82, 0.81, 0.80, 0.86, '2024-01-24'),\n    (18, 'Volatility Surface Arbitrage_v9', 'Options_v9', 0.92, 0.92, 0.91, 0.90, 0.98, '2024-01-25'),\n    (20, 'Market Microstructure_v10', 'US Equities_v10', 1.02, 1.02, 1.01, 1.00, 1.04, '2024-01-27'),\n    (17, 'Statistical Arbitrage Alpha_v11', 'US Equities_v11', 1.11, 1.12, 1.11, 1.10, 1.17, '2024-01-26'),\n    (19, 'Mean Reversion Capture_v12', 'International Equities_v12', 1.21, 1.21, 1.21, 1.20, 1.27, '2024-01-27'),\n    (21, 'Cross-Asset Momentum_v13', 'Multi-Asset_v13', 1.31, 1.32, 1.31, 1.30, 1.36, '2024-01-29'),\n    (23, 'Volatility Surface Arbitrage_v14', 'Options_v14', 1.42, 1.42, 1.41, 1.40, 1.49, '2024-01-30'),\n    (25, 'Market Microstructure_v15', 'US Equities_v15', 1.52, 1.52, 1.51, 1.50, 1.54, '2024-02-01'),\n    (22, 'Statistical Arbitrage Alpha_v16', 'US Equities_v16', 1.61, 1.62, 1.61, 1.60, 1.67, '2024-01-31'),\n    (24, 'Mean Reversion Capture_v17', 'International Equities_v17', 1.71, 1.71, 1.71, 1.70, 1.77, '2024-02-01'),\n    (26, 'Cross-Asset Momentum_v18', 'Multi-Asset_v18', 1.81, 1.82, 1.81, 1.80, 1.86, '2024-02-03'),\n    (28, 'Volatility Surface Arbitrage_v19', 'Options_v19', 1.92, 1.92, 1.91, 1.90, 1.99, '2024-02-04'),\n    (30, 'Market Microstructure_v20', 'US Equities_v20', 2.02, 2.02, 2.01, 2.00, 2.04, '2024-02-06');",
      "solution_sql": "SELECT * FROM renaissance_strategies ORDER BY strategy_name LIMIT 10;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.698Z",
      "expected_output": [
        {
          "trade_date": "2024-01-16",
          "volatility": "0.016500",
          "asset_class": "Multi-Asset",
          "strategy_id": "3",
          "daily_return": "0.014500",
          "max_drawdown": "0.058000",
          "strategy_name": "Cross-Asset Momentum",
          "risk_free_rate": "0.000350",
          "benchmark_return": "0.009000"
        },
        {
          "trade_date": "2024-01-29",
          "volatility": "1.320000",
          "asset_class": "Multi-Asset_v13",
          "strategy_id": "21",
          "daily_return": "1.310000",
          "max_drawdown": "1.360000",
          "strategy_name": "Cross-Asset Momentum_v13",
          "risk_free_rate": "1.300000",
          "benchmark_return": "1.310000"
        },
        {
          "trade_date": "2024-02-03",
          "volatility": "1.820000",
          "asset_class": "Multi-Asset_v18",
          "strategy_id": "26",
          "daily_return": "1.810000",
          "max_drawdown": "1.860000",
          "strategy_name": "Cross-Asset Momentum_v18",
          "risk_free_rate": "1.800000",
          "benchmark_return": "1.810000"
        },
        {
          "trade_date": "2024-01-19",
          "volatility": "0.320000",
          "asset_class": "Multi-Asset_v3",
          "strategy_id": "11",
          "daily_return": "0.310000",
          "max_drawdown": "0.360000",
          "strategy_name": "Cross-Asset Momentum_v3",
          "risk_free_rate": "0.300000",
          "benchmark_return": "0.310000"
        },
        {
          "trade_date": "2024-01-24",
          "volatility": "0.820000",
          "asset_class": "Multi-Asset_v8",
          "strategy_id": "16",
          "daily_return": "0.810000",
          "max_drawdown": "0.860000",
          "strategy_name": "Cross-Asset Momentum_v8",
          "risk_free_rate": "0.800000",
          "benchmark_return": "0.810000"
        },
        {
          "trade_date": "2024-01-17",
          "volatility": "0.017500",
          "asset_class": "US Equities",
          "strategy_id": "5",
          "daily_return": "0.018500",
          "max_drawdown": "0.045000",
          "strategy_name": "Market Microstructure",
          "risk_free_rate": "0.000350",
          "benchmark_return": "0.008500"
        },
        {
          "trade_date": "2024-01-27",
          "volatility": "1.020000",
          "asset_class": "US Equities_v10",
          "strategy_id": "20",
          "daily_return": "1.020000",
          "max_drawdown": "1.040000",
          "strategy_name": "Market Microstructure_v10",
          "risk_free_rate": "1.000000",
          "benchmark_return": "1.010000"
        },
        {
          "trade_date": "2024-02-01",
          "volatility": "1.520000",
          "asset_class": "US Equities_v15",
          "strategy_id": "25",
          "daily_return": "1.520000",
          "max_drawdown": "1.540000",
          "strategy_name": "Market Microstructure_v15",
          "risk_free_rate": "1.500000",
          "benchmark_return": "1.510000"
        },
        {
          "trade_date": "2024-02-06",
          "volatility": "2.020000",
          "asset_class": "US Equities_v20",
          "strategy_id": "30",
          "daily_return": "2.020000",
          "max_drawdown": "2.040000",
          "strategy_name": "Market Microstructure_v20",
          "risk_free_rate": "2.000000",
          "benchmark_return": "2.010000"
        },
        {
          "trade_date": "2024-01-22",
          "volatility": "0.520000",
          "asset_class": "US Equities_v5",
          "strategy_id": "15",
          "daily_return": "0.520000",
          "max_drawdown": "0.550000",
          "strategy_name": "Market Microstructure_v5",
          "risk_free_rate": "0.500000",
          "benchmark_return": "0.510000"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Renaissance Technologies Quantitative Alpha",
      "problem_slug": "renaissance-technologies-quantitative-alpha"
    },
    {
      "id": "81636d45-a7a3-4257-b338-745c0ce1e007",
      "problem_id": "555fe7bc-059f-4b65-aa4f-0e6a318265d8",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE renaissance_strategies (\n        strategy_id INT PRIMARY KEY,\n        strategy_name VARCHAR(100),\n        asset_class VARCHAR(50),\n        daily_return DECIMAL(8,6),\n        volatility DECIMAL(8,6),\n        benchmark_return DECIMAL(8,6),\n        risk_free_rate DECIMAL(8,6),\n        max_drawdown DECIMAL(8,6),\n        trade_date DATE\n    );\n      INSERT INTO renaissance_strategies VALUES\n    (1, 'Statistical Arbitrage Alpha', 'US Equities', 0.0125, 0.0180, 0.0085, 0.000350, 0.0650, '2024-01-15'),\n    (2, 'Mean Reversion Capture', 'International Equities', 0.0095, 0.0145, 0.0065, 0.000350, 0.0720, '2024-01-15'),\n    (3, 'Cross-Asset Momentum', 'Multi-Asset', 0.0145, 0.0165, 0.0090, 0.000350, 0.0580, '2024-01-16'),\n    (4, 'Volatility Surface Arbitrage', 'Options', 0.0165, 0.0195, 0.0085, 0.000350, 0.0850, '2024-01-16'),\n    (5, 'Market Microstructure', 'US Equities', 0.0185, 0.0175, 0.0085, 0.000350, 0.0450, '2024-01-17'),\n    (7, 'Statistical Arbitrage Alpha_v1', 'US Equities_v1', 0.11, 0.12, 0.11, 0.10, 0.17, '2024-01-16'),\n    (9, 'Mean Reversion Capture_v2', 'International Equities_v2', 0.21, 0.21, 0.21, 0.20, 0.27, '2024-01-17'),\n    (11, 'Cross-Asset Momentum_v3', 'Multi-Asset_v3', 0.31, 0.32, 0.31, 0.30, 0.36, '2024-01-19'),\n    (13, 'Volatility Surface Arbitrage_v4', 'Options_v4', 0.42, 0.42, 0.41, 0.40, 0.49, '2024-01-20'),\n    (15, 'Market Microstructure_v5', 'US Equities_v5', 0.52, 0.52, 0.51, 0.50, 0.55, '2024-01-22'),\n    (12, 'Statistical Arbitrage Alpha_v6', 'US Equities_v6', 0.61, 0.62, 0.61, 0.60, 0.67, '2024-01-21'),\n    (14, 'Mean Reversion Capture_v7', 'International Equities_v7', 0.71, 0.71, 0.71, 0.70, 0.77, '2024-01-22'),\n    (16, 'Cross-Asset Momentum_v8', 'Multi-Asset_v8', 0.81, 0.82, 0.81, 0.80, 0.86, '2024-01-24'),\n    (18, 'Volatility Surface Arbitrage_v9', 'Options_v9', 0.92, 0.92, 0.91, 0.90, 0.98, '2024-01-25'),\n    (20, 'Market Microstructure_v10', 'US Equities_v10', 1.02, 1.02, 1.01, 1.00, 1.04, '2024-01-27'),\n    (17, 'Statistical Arbitrage Alpha_v11', 'US Equities_v11', 1.11, 1.12, 1.11, 1.10, 1.17, '2024-01-26'),\n    (19, 'Mean Reversion Capture_v12', 'International Equities_v12', 1.21, 1.21, 1.21, 1.20, 1.27, '2024-01-27'),\n    (21, 'Cross-Asset Momentum_v13', 'Multi-Asset_v13', 1.31, 1.32, 1.31, 1.30, 1.36, '2024-01-29'),\n    (23, 'Volatility Surface Arbitrage_v14', 'Options_v14', 1.42, 1.42, 1.41, 1.40, 1.49, '2024-01-30'),\n    (25, 'Market Microstructure_v15', 'US Equities_v15', 1.52, 1.52, 1.51, 1.50, 1.54, '2024-02-01'),\n    (22, 'Statistical Arbitrage Alpha_v16', 'US Equities_v16', 1.61, 1.62, 1.61, 1.60, 1.67, '2024-01-31'),\n    (24, 'Mean Reversion Capture_v17', 'International Equities_v17', 1.71, 1.71, 1.71, 1.70, 1.77, '2024-02-01'),\n    (26, 'Cross-Asset Momentum_v18', 'Multi-Asset_v18', 1.81, 1.82, 1.81, 1.80, 1.86, '2024-02-03'),\n    (28, 'Volatility Surface Arbitrage_v19', 'Options_v19', 1.92, 1.92, 1.91, 1.90, 1.99, '2024-02-04'),\n    (30, 'Market Microstructure_v20', 'US Equities_v20', 2.02, 2.02, 2.01, 2.00, 2.04, '2024-02-06');",
      "solution_sql": "SELECT * FROM renaissance_strategies ORDER BY strategy_name LIMIT 10;",
      "explanation": "Advanced quantitative finance analysis using risk-adjusted performance metrics and alpha generation calculations for systematic trading strategies.",
      "created_at": "2025-08-11T13:51:21.537Z",
      "expected_output": [
        {
          "trade_date": "Tue Jan 16 2024 00:00:00 GMT-0500 (Eastern Standard Time)",
          "volatility": "0.016500",
          "asset_class": "Multi-Asset",
          "strategy_id": "3",
          "daily_return": "0.014500",
          "max_drawdown": "0.058000",
          "strategy_name": "Cross-Asset Momentum",
          "risk_free_rate": "0.000350",
          "benchmark_return": "0.009000"
        },
        {
          "trade_date": "Mon Jan 29 2024 00:00:00 GMT-0500 (Eastern Standard Time)",
          "volatility": "1.320000",
          "asset_class": "Multi-Asset_v13",
          "strategy_id": "21",
          "daily_return": "1.310000",
          "max_drawdown": "1.360000",
          "strategy_name": "Cross-Asset Momentum_v13",
          "risk_free_rate": "1.300000",
          "benchmark_return": "1.310000"
        },
        {
          "trade_date": "Sat Feb 03 2024 00:00:00 GMT-0500 (Eastern Standard Time)",
          "volatility": "1.820000",
          "asset_class": "Multi-Asset_v18",
          "strategy_id": "26",
          "daily_return": "1.810000",
          "max_drawdown": "1.860000",
          "strategy_name": "Cross-Asset Momentum_v18",
          "risk_free_rate": "1.800000",
          "benchmark_return": "1.810000"
        },
        {
          "trade_date": "Fri Jan 19 2024 00:00:00 GMT-0500 (Eastern Standard Time)",
          "volatility": "0.320000",
          "asset_class": "Multi-Asset_v3",
          "strategy_id": "11",
          "daily_return": "0.310000",
          "max_drawdown": "0.360000",
          "strategy_name": "Cross-Asset Momentum_v3",
          "risk_free_rate": "0.300000",
          "benchmark_return": "0.310000"
        },
        {
          "trade_date": "Wed Jan 24 2024 00:00:00 GMT-0500 (Eastern Standard Time)",
          "volatility": "0.820000",
          "asset_class": "Multi-Asset_v8",
          "strategy_id": "16",
          "daily_return": "0.810000",
          "max_drawdown": "0.860000",
          "strategy_name": "Cross-Asset Momentum_v8",
          "risk_free_rate": "0.800000",
          "benchmark_return": "0.810000"
        },
        {
          "trade_date": "Wed Jan 17 2024 00:00:00 GMT-0500 (Eastern Standard Time)",
          "volatility": "0.017500",
          "asset_class": "US Equities",
          "strategy_id": "5",
          "daily_return": "0.018500",
          "max_drawdown": "0.045000",
          "strategy_name": "Market Microstructure",
          "risk_free_rate": "0.000350",
          "benchmark_return": "0.008500"
        },
        {
          "trade_date": "Sat Jan 27 2024 00:00:00 GMT-0500 (Eastern Standard Time)",
          "volatility": "1.020000",
          "asset_class": "US Equities_v10",
          "strategy_id": "20",
          "daily_return": "1.020000",
          "max_drawdown": "1.040000",
          "strategy_name": "Market Microstructure_v10",
          "risk_free_rate": "1.000000",
          "benchmark_return": "1.010000"
        },
        {
          "trade_date": "Thu Feb 01 2024 00:00:00 GMT-0500 (Eastern Standard Time)",
          "volatility": "1.520000",
          "asset_class": "US Equities_v15",
          "strategy_id": "25",
          "daily_return": "1.520000",
          "max_drawdown": "1.540000",
          "strategy_name": "Market Microstructure_v15",
          "risk_free_rate": "1.500000",
          "benchmark_return": "1.510000"
        },
        {
          "trade_date": "Tue Feb 06 2024 00:00:00 GMT-0500 (Eastern Standard Time)",
          "volatility": "2.020000",
          "asset_class": "US Equities_v20",
          "strategy_id": "30",
          "daily_return": "2.020000",
          "max_drawdown": "2.040000",
          "strategy_name": "Market Microstructure_v20",
          "risk_free_rate": "2.000000",
          "benchmark_return": "2.010000"
        },
        {
          "trade_date": "Mon Jan 22 2024 00:00:00 GMT-0500 (Eastern Standard Time)",
          "volatility": "0.520000",
          "asset_class": "US Equities_v5",
          "strategy_id": "15",
          "daily_return": "0.520000",
          "max_drawdown": "0.550000",
          "strategy_name": "Market Microstructure_v5",
          "risk_free_rate": "0.500000",
          "benchmark_return": "0.510000"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Renaissance Technologies Quantitative Alpha",
      "problem_slug": "renaissance-technologies-quantitative-alpha"
    },
    {
      "id": "80cc7d9d-eed0-4e48-8460-01de4bd58c32",
      "problem_id": "5c8c0ec6-3d89-4c9d-b360-e449a870df7d",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE salesforce_usage (\n        org_id INT PRIMARY KEY,\n        industry_vertical VARCHAR(50),\n        monthly_active_users INT,\n        total_licenses INT,\n        feature_adoption_score DECIMAL(5,2),\n        subscription_tier VARCHAR(20)\n    );\n      INSERT INTO salesforce_usage  VALUES\n      (1, 'Financial Services', 750, 1000, 82.50, 'Enterprise'),\n      (2, 'Healthcare', 420, 650, 78.25, 'Professional'),\n      (3, 'Technology', 890, 1200, 85.80, 'Enterprise'),\n      (4, 'Manufacturing', 380, 500, 68.40, 'Professional'),\n      (5, 'Retail', 650, 850, 75.60, 'Enterprise'),\n      (7, 'Financial Services_v1', 760, 1010, 82.60, 'Enterprise_v1'),\n      (9, 'Healthcare_v2', 440, 670, 78.45, 'Professional_v2'),\n      (11, 'Technology_v3', 920, 1230, 86.10, 'Enterprise_v3'),\n      (13, 'Manufacturing_v4', 420, 540, 68.80, 'Professional_v4'),\n      (15, 'Retail_v5', 700, 900, 76.10, 'Enterprise_v5'),\n      (12, 'Financial Services_v6', 810, 1060, 83.10, 'Enterprise_v6'),\n      (14, 'Healthcare_v7', 490, 720, 78.95, 'Professional_v7'),\n      (16, 'Technology_v8', 970, 1280, 86.60, 'Enterprise_v8'),\n      (18, 'Manufacturing_v9', 470, 590, 69.30, 'Professional_v9'),\n      (20, 'Retail_v10', 750, 950, 76.60, 'Enterprise_v10'),\n      (17, 'Financial Services_v11', 860, 1110, 83.60, 'Enterprise_v11'),\n      (19, 'Healthcare_v12', 540, 770, 79.45, 'Professional_v12'),\n      (21, 'Technology_v13', 1020, 1330, 87.10, 'Enterprise_v13'),\n      (23, 'Manufacturing_v14', 520, 640, 69.80, 'Professional_v14'),\n      (25, 'Retail_v15', 800, 1000, 77.10, 'Enterprise_v15'),\n      (22, 'Financial Services_v16', 910, 1160, 84.10, 'Enterprise_v16'),\n      (24, 'Healthcare_v17', 590, 820, 79.95, 'Professional_v17'),\n      (26, 'Technology_v18', 1070, 1380, 87.60, 'Enterprise_v18'),\n      (28, 'Manufacturing_v19', 570, 690, 70.30, 'Professional_v19'),\n      (30, 'Retail_v20', 850, 1050, 77.60, 'Enterprise_v20');",
      "solution_sql": "SELECT industry_vertical, ROUND(AVG(monthly_active_users), 0) as avg_monthly_active_users\nFROM salesforce_usage \nGROUP BY industry_vertical \nHAVING AVG(monthly_active_users) > 500 \nORDER BY avg_monthly_active_users DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.710Z",
      "expected_output": [
        {
          "industry_vertical": "Technology_v18",
          "avg_monthly_active_users": "1070"
        },
        {
          "industry_vertical": "Technology_v13",
          "avg_monthly_active_users": "1020"
        },
        {
          "industry_vertical": "Technology_v8",
          "avg_monthly_active_users": "970"
        },
        {
          "industry_vertical": "Technology_v3",
          "avg_monthly_active_users": "920"
        },
        {
          "industry_vertical": "Financial Services_v16",
          "avg_monthly_active_users": "910"
        },
        {
          "industry_vertical": "Technology",
          "avg_monthly_active_users": "890"
        },
        {
          "industry_vertical": "Financial Services_v11",
          "avg_monthly_active_users": "860"
        },
        {
          "industry_vertical": "Retail_v20",
          "avg_monthly_active_users": "850"
        },
        {
          "industry_vertical": "Financial Services_v6",
          "avg_monthly_active_users": "810"
        },
        {
          "industry_vertical": "Retail_v15",
          "avg_monthly_active_users": "800"
        },
        {
          "industry_vertical": "Financial Services_v1",
          "avg_monthly_active_users": "760"
        },
        {
          "industry_vertical": "Retail_v10",
          "avg_monthly_active_users": "750"
        },
        {
          "industry_vertical": "Financial Services",
          "avg_monthly_active_users": "750"
        },
        {
          "industry_vertical": "Retail_v5",
          "avg_monthly_active_users": "700"
        },
        {
          "industry_vertical": "Retail",
          "avg_monthly_active_users": "650"
        },
        {
          "industry_vertical": "Healthcare_v17",
          "avg_monthly_active_users": "590"
        },
        {
          "industry_vertical": "Manufacturing_v19",
          "avg_monthly_active_users": "570"
        },
        {
          "industry_vertical": "Healthcare_v12",
          "avg_monthly_active_users": "540"
        },
        {
          "industry_vertical": "Manufacturing_v14",
          "avg_monthly_active_users": "520"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Salesforce CRM Performance Analytics",
      "problem_slug": "nike-product-sales-by-region"
    },
    {
      "id": "8da05a7e-af86-4af9-ba97-b454cc65c3b1",
      "problem_id": "5c8c0ec6-3d89-4c9d-b360-e449a870df7d",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE salesforce_usage (\n        org_id INT PRIMARY KEY,\n        industry_vertical VARCHAR(50),\n        monthly_active_users INT,\n        total_licenses INT,\n        feature_adoption_score DECIMAL(5,2),\n        subscription_tier VARCHAR(20)\n    );\n      INSERT INTO salesforce_usage  VALUES\n      (1, 'Financial Services', 750, 1000, 82.50, 'Enterprise'),\n      (2, 'Healthcare', 420, 650, 78.25, 'Professional'),\n      (3, 'Technology', 890, 1200, 85.80, 'Enterprise'),\n      (4, 'Manufacturing', 380, 500, 68.40, 'Professional'),\n      (5, 'Retail', 650, 850, 75.60, 'Enterprise'),\n      (7, 'Financial Services_v1', 760, 1010, 82.60, 'Enterprise_v1'),\n      (9, 'Healthcare_v2', 440, 670, 78.45, 'Professional_v2'),\n      (11, 'Technology_v3', 920, 1230, 86.10, 'Enterprise_v3'),\n      (13, 'Manufacturing_v4', 420, 540, 68.80, 'Professional_v4'),\n      (15, 'Retail_v5', 700, 900, 76.10, 'Enterprise_v5'),\n      (12, 'Financial Services_v6', 810, 1060, 83.10, 'Enterprise_v6'),\n      (14, 'Healthcare_v7', 490, 720, 78.95, 'Professional_v7'),\n      (16, 'Technology_v8', 970, 1280, 86.60, 'Enterprise_v8'),\n      (18, 'Manufacturing_v9', 470, 590, 69.30, 'Professional_v9'),\n      (20, 'Retail_v10', 750, 950, 76.60, 'Enterprise_v10'),\n      (17, 'Financial Services_v11', 860, 1110, 83.60, 'Enterprise_v11'),\n      (19, 'Healthcare_v12', 540, 770, 79.45, 'Professional_v12'),\n      (21, 'Technology_v13', 1020, 1330, 87.10, 'Enterprise_v13'),\n      (23, 'Manufacturing_v14', 520, 640, 69.80, 'Professional_v14'),\n      (25, 'Retail_v15', 800, 1000, 77.10, 'Enterprise_v15'),\n      (22, 'Financial Services_v16', 910, 1160, 84.10, 'Enterprise_v16'),\n      (24, 'Healthcare_v17', 590, 820, 79.95, 'Professional_v17'),\n      (26, 'Technology_v18', 1070, 1380, 87.60, 'Enterprise_v18'),\n      (28, 'Manufacturing_v19', 570, 690, 70.30, 'Professional_v19'),\n      (30, 'Retail_v20', 850, 1050, 77.60, 'Enterprise_v20');",
      "solution_sql": "SELECT industry_vertical, ROUND(AVG(monthly_active_users), 0) as avg_monthly_active_users\nFROM salesforce_usage \nGROUP BY industry_vertical \nHAVING AVG(monthly_active_users) > 500 \nORDER BY avg_monthly_active_users DESC;",
      "explanation": "Salesforce CRM analytics using monthly active user metrics for customer success optimization.",
      "created_at": "2025-08-11T13:51:12.112Z",
      "expected_output": [
        {
          "industry_vertical": "Technology_v18",
          "avg_monthly_active_users": "1070"
        },
        {
          "industry_vertical": "Technology_v13",
          "avg_monthly_active_users": "1020"
        },
        {
          "industry_vertical": "Technology_v8",
          "avg_monthly_active_users": "970"
        },
        {
          "industry_vertical": "Technology_v3",
          "avg_monthly_active_users": "920"
        },
        {
          "industry_vertical": "Financial Services_v16",
          "avg_monthly_active_users": "910"
        },
        {
          "industry_vertical": "Technology",
          "avg_monthly_active_users": "890"
        },
        {
          "industry_vertical": "Financial Services_v11",
          "avg_monthly_active_users": "860"
        },
        {
          "industry_vertical": "Retail_v20",
          "avg_monthly_active_users": "850"
        },
        {
          "industry_vertical": "Financial Services_v6",
          "avg_monthly_active_users": "810"
        },
        {
          "industry_vertical": "Retail_v15",
          "avg_monthly_active_users": "800"
        },
        {
          "industry_vertical": "Financial Services_v1",
          "avg_monthly_active_users": "760"
        },
        {
          "industry_vertical": "Financial Services",
          "avg_monthly_active_users": "750"
        },
        {
          "industry_vertical": "Retail_v10",
          "avg_monthly_active_users": "750"
        },
        {
          "industry_vertical": "Retail_v5",
          "avg_monthly_active_users": "700"
        },
        {
          "industry_vertical": "Retail",
          "avg_monthly_active_users": "650"
        },
        {
          "industry_vertical": "Healthcare_v17",
          "avg_monthly_active_users": "590"
        },
        {
          "industry_vertical": "Manufacturing_v19",
          "avg_monthly_active_users": "570"
        },
        {
          "industry_vertical": "Healthcare_v12",
          "avg_monthly_active_users": "540"
        },
        {
          "industry_vertical": "Manufacturing_v14",
          "avg_monthly_active_users": "520"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Salesforce CRM Performance Analytics",
      "problem_slug": "nike-product-sales-by-region"
    },
    {
      "id": "bfa664a7-b68e-4b2f-9ae3-fb332589730e",
      "problem_id": "0a009921-29bc-46b5-a63f-bd014ae9782e",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE salesforce_customer_success (\n        account_id INT PRIMARY KEY,\n        industry_vertical VARCHAR(50),\n        monthly_active_users INT,\n        feature_adoption_score DECIMAL(5,2),\n        annual_contract_value DECIMAL(10,2),\n        churn_risk_score DECIMAL(5,2),\n        success_date DATE\n    );\n      INSERT INTO salesforce_customer_success  VALUES\n      (1, 'Financial Services', 850, 82.50, 125000.50, 15.25, '2024-01-15'),\n      (2, 'Healthcare', 620, 78.75, 89000.75, 22.80, '2024-01-15'),\n      (3, 'Technology', 950, 85.60, 185000.25, 12.45, '2024-01-16'),\n      (4, 'Manufacturing', 420, 68.40, 65000.80, 28.90, '2024-01-16'),\n      (5, 'Retail', 720, 76.80, 98000.60, 18.75, '2024-01-17'),\n      (7, 'Financial Services_v1', 860, 82.60, 125000.60, 15.35, '2024-01-16'),\n      (9, 'Healthcare_v2', 640, 78.95, 89000.95, 23.00, '2024-01-17'),\n      (11, 'Technology_v3', 980, 85.90, 185000.55, 12.75, '2024-01-19'),\n      (13, 'Manufacturing_v4', 460, 68.80, 65001.20, 29.30, '2024-01-20'),\n      (15, 'Retail_v5', 770, 77.30, 98001.10, 19.25, '2024-01-22'),\n      (12, 'Financial Services_v6', 910, 83.10, 125001.10, 15.85, '2024-01-21'),\n      (14, 'Healthcare_v7', 690, 79.45, 89001.45, 23.50, '2024-01-22'),\n      (16, 'Technology_v8', 1030, 86.40, 185001.05, 13.25, '2024-01-24'),\n      (18, 'Manufacturing_v9', 510, 69.30, 65001.70, 29.80, '2024-01-25'),\n      (20, 'Retail_v10', 820, 77.80, 98001.60, 19.75, '2024-01-27'),\n      (17, 'Financial Services_v11', 960, 83.60, 125001.60, 16.35, '2024-01-26'),\n      (19, 'Healthcare_v12', 740, 79.95, 89001.95, 24.00, '2024-01-27'),\n      (21, 'Technology_v13', 1080, 86.90, 185001.55, 13.75, '2024-01-29'),\n      (23, 'Manufacturing_v14', 560, 69.80, 65002.20, 30.30, '2024-01-30'),\n      (25, 'Retail_v15', 870, 78.30, 98002.10, 20.25, '2024-02-01'),\n      (22, 'Financial Services_v16', 1010, 84.10, 125002.10, 16.85, '2024-01-31'),\n      (24, 'Healthcare_v17', 790, 80.45, 89002.45, 24.50, '2024-02-01'),\n      (26, 'Technology_v18', 1130, 87.40, 185002.05, 14.25, '2024-02-03'),\n      (28, 'Manufacturing_v19', 610, 70.30, 65002.70, 30.80, '2024-02-04'),\n      (30, 'Retail_v20', 920, 78.80, 98002.60, 20.75, '2024-02-06');",
      "solution_sql": "SELECT industry_vertical, ROUND(AVG(feature_adoption_score), 2) as avg_adoption_score\n    FROM salesforce_customer_success \n    GROUP BY industry_vertical \n    HAVING AVG(feature_adoption_score) > 75 \n    ORDER BY avg_adoption_score DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.641Z",
      "expected_output": [
        {
          "industry_vertical": "Technology_v18",
          "avg_adoption_score": "87.40"
        },
        {
          "industry_vertical": "Technology_v13",
          "avg_adoption_score": "86.90"
        },
        {
          "industry_vertical": "Technology_v8",
          "avg_adoption_score": "86.40"
        },
        {
          "industry_vertical": "Technology_v3",
          "avg_adoption_score": "85.90"
        },
        {
          "industry_vertical": "Technology",
          "avg_adoption_score": "85.60"
        },
        {
          "industry_vertical": "Financial Services_v16",
          "avg_adoption_score": "84.10"
        },
        {
          "industry_vertical": "Financial Services_v11",
          "avg_adoption_score": "83.60"
        },
        {
          "industry_vertical": "Financial Services_v6",
          "avg_adoption_score": "83.10"
        },
        {
          "industry_vertical": "Financial Services_v1",
          "avg_adoption_score": "82.60"
        },
        {
          "industry_vertical": "Financial Services",
          "avg_adoption_score": "82.50"
        },
        {
          "industry_vertical": "Healthcare_v17",
          "avg_adoption_score": "80.45"
        },
        {
          "industry_vertical": "Healthcare_v12",
          "avg_adoption_score": "79.95"
        },
        {
          "industry_vertical": "Healthcare_v7",
          "avg_adoption_score": "79.45"
        },
        {
          "industry_vertical": "Healthcare_v2",
          "avg_adoption_score": "78.95"
        },
        {
          "industry_vertical": "Retail_v20",
          "avg_adoption_score": "78.80"
        },
        {
          "industry_vertical": "Healthcare",
          "avg_adoption_score": "78.75"
        },
        {
          "industry_vertical": "Retail_v15",
          "avg_adoption_score": "78.30"
        },
        {
          "industry_vertical": "Retail_v10",
          "avg_adoption_score": "77.80"
        },
        {
          "industry_vertical": "Retail_v5",
          "avg_adoption_score": "77.30"
        },
        {
          "industry_vertical": "Retail",
          "avg_adoption_score": "76.80"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Salesforce Customer Success Analytics",
      "problem_slug": "salesforce-revenue-analysis"
    },
    {
      "id": "53609ad0-e125-49b7-a120-64678451f46d",
      "problem_id": "0a009921-29bc-46b5-a63f-bd014ae9782e",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE salesforce_customer_success (\n        account_id INT PRIMARY KEY,\n        industry_vertical VARCHAR(50),\n        monthly_active_users INT,\n        feature_adoption_score DECIMAL(5,2),\n        annual_contract_value DECIMAL(10,2),\n        churn_risk_score DECIMAL(5,2),\n        success_date DATE\n    );\n      INSERT INTO salesforce_customer_success  VALUES\n      (1, 'Financial Services', 850, 82.50, 125000.50, 15.25, '2024-01-15'),\n      (2, 'Healthcare', 620, 78.75, 89000.75, 22.80, '2024-01-15'),\n      (3, 'Technology', 950, 85.60, 185000.25, 12.45, '2024-01-16'),\n      (4, 'Manufacturing', 420, 68.40, 65000.80, 28.90, '2024-01-16'),\n      (5, 'Retail', 720, 76.80, 98000.60, 18.75, '2024-01-17'),\n      (7, 'Financial Services_v1', 860, 82.60, 125000.60, 15.35, '2024-01-16'),\n      (9, 'Healthcare_v2', 640, 78.95, 89000.95, 23.00, '2024-01-17'),\n      (11, 'Technology_v3', 980, 85.90, 185000.55, 12.75, '2024-01-19'),\n      (13, 'Manufacturing_v4', 460, 68.80, 65001.20, 29.30, '2024-01-20'),\n      (15, 'Retail_v5', 770, 77.30, 98001.10, 19.25, '2024-01-22'),\n      (12, 'Financial Services_v6', 910, 83.10, 125001.10, 15.85, '2024-01-21'),\n      (14, 'Healthcare_v7', 690, 79.45, 89001.45, 23.50, '2024-01-22'),\n      (16, 'Technology_v8', 1030, 86.40, 185001.05, 13.25, '2024-01-24'),\n      (18, 'Manufacturing_v9', 510, 69.30, 65001.70, 29.80, '2024-01-25'),\n      (20, 'Retail_v10', 820, 77.80, 98001.60, 19.75, '2024-01-27'),\n      (17, 'Financial Services_v11', 960, 83.60, 125001.60, 16.35, '2024-01-26'),\n      (19, 'Healthcare_v12', 740, 79.95, 89001.95, 24.00, '2024-01-27'),\n      (21, 'Technology_v13', 1080, 86.90, 185001.55, 13.75, '2024-01-29'),\n      (23, 'Manufacturing_v14', 560, 69.80, 65002.20, 30.30, '2024-01-30'),\n      (25, 'Retail_v15', 870, 78.30, 98002.10, 20.25, '2024-02-01'),\n      (22, 'Financial Services_v16', 1010, 84.10, 125002.10, 16.85, '2024-01-31'),\n      (24, 'Healthcare_v17', 790, 80.45, 89002.45, 24.50, '2024-02-01'),\n      (26, 'Technology_v18', 1130, 87.40, 185002.05, 14.25, '2024-02-03'),\n      (28, 'Manufacturing_v19', 610, 70.30, 65002.70, 30.80, '2024-02-04'),\n      (30, 'Retail_v20', 920, 78.80, 98002.60, 20.75, '2024-02-06');",
      "solution_sql": "SELECT industry_vertical, ROUND(AVG(feature_adoption_score), 2) as avg_adoption_score\n    FROM salesforce_customer_success \n    GROUP BY industry_vertical \n    HAVING AVG(feature_adoption_score) > 75 \n    ORDER BY avg_adoption_score DESC;",
      "explanation": "Salesforce customer success analytics using feature adoption metrics for expansion opportunity identification.",
      "created_at": "2025-08-11T17:08:07.821Z",
      "expected_output": [
        {
          "industry_vertical": "Technology_v18",
          "avg_adoption_score": "87.40"
        },
        {
          "industry_vertical": "Technology_v13",
          "avg_adoption_score": "86.90"
        },
        {
          "industry_vertical": "Technology_v8",
          "avg_adoption_score": "86.40"
        },
        {
          "industry_vertical": "Technology_v3",
          "avg_adoption_score": "85.90"
        },
        {
          "industry_vertical": "Technology",
          "avg_adoption_score": "85.60"
        },
        {
          "industry_vertical": "Financial Services_v16",
          "avg_adoption_score": "84.10"
        },
        {
          "industry_vertical": "Financial Services_v11",
          "avg_adoption_score": "83.60"
        },
        {
          "industry_vertical": "Financial Services_v6",
          "avg_adoption_score": "83.10"
        },
        {
          "industry_vertical": "Financial Services_v1",
          "avg_adoption_score": "82.60"
        },
        {
          "industry_vertical": "Financial Services",
          "avg_adoption_score": "82.50"
        },
        {
          "industry_vertical": "Healthcare_v17",
          "avg_adoption_score": "80.45"
        },
        {
          "industry_vertical": "Healthcare_v12",
          "avg_adoption_score": "79.95"
        },
        {
          "industry_vertical": "Healthcare_v7",
          "avg_adoption_score": "79.45"
        },
        {
          "industry_vertical": "Healthcare_v2",
          "avg_adoption_score": "78.95"
        },
        {
          "industry_vertical": "Retail_v20",
          "avg_adoption_score": "78.80"
        },
        {
          "industry_vertical": "Healthcare",
          "avg_adoption_score": "78.75"
        },
        {
          "industry_vertical": "Retail_v15",
          "avg_adoption_score": "78.30"
        },
        {
          "industry_vertical": "Retail_v10",
          "avg_adoption_score": "77.80"
        },
        {
          "industry_vertical": "Retail_v5",
          "avg_adoption_score": "77.30"
        },
        {
          "industry_vertical": "Retail",
          "avg_adoption_score": "76.80"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Salesforce Customer Success Analytics",
      "problem_slug": "salesforce-revenue-analysis"
    },
    {
      "id": "0fb43789-4bbc-4680-b8d8-52d3c02bf5d9",
      "problem_id": "5a52f8a8-e4d2-4519-958f-9352010eff9d",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE user_sessions (\n          session_id INT,\n          user_id INT,\n          start_time DATETIME,\n          end_time DATETIME,\n          videos_watched INT\n      );\n      INSERT INTO user_sessions  VALUES\n      (1, 101, '2024-01-15 14:00:00', '2024-01-15 14:45:00', 3),\n      (2, 102, '2024-01-15 15:00:00', '2024-01-15 15:20:00', 2),\n      (3, 101, '2024-01-16 16:00:00', '2024-01-16 16:35:00', 4),\n      (4, 103, '2024-01-16 17:00:00', '2024-01-16 18:30:00', 6),\n      (5, 102, '2024-01-17 19:00:00', '2024-01-17 19:15:00', 1),\n      (6, 101, '2024-01-17 20:00:00', '2024-01-17 20:40:00', 3),\n      (7, 103, '2024-01-18 14:30:00', '2024-01-18 16:00:00', 8),\n      (9, 111, '2024-01-15 14:00:00_v1', '2024-01-15 14:45:00_v1', 13),\n      (11, 122, '2024-01-15 15:00:00_v2', '2024-01-15 15:20:00_v2', 22),\n      (13, 131, '2024-01-16 16:00:00_v3', '2024-01-16 16:35:00_v3', 34),\n      (15, 143, '2024-01-16 17:00:00_v4', '2024-01-16 18:30:00_v4', 46),\n      (17, 152, '2024-01-17 19:00:00_v5', '2024-01-17 19:15:00_v5', 51),\n      (19, 161, '2024-01-17 20:00:00_v6', '2024-01-17 20:40:00_v6', 63),\n      (21, 173, '2024-01-18 14:30:00_v7', '2024-01-18 16:00:00_v7', 78),\n      (16, 181, '2024-01-15 14:00:00_v8', '2024-01-15 14:45:00_v8', 83),\n      (18, 192, '2024-01-15 15:00:00_v9', '2024-01-15 15:20:00_v9', 92),\n      (20, 201, '2024-01-16 16:00:00_v10', '2024-01-16 16:35:00_v10', 104),\n      (22, 213, '2024-01-16 17:00:00_v11', '2024-01-16 18:30:00_v11', 116),\n      (24, 222, '2024-01-17 19:00:00_v12', '2024-01-17 19:15:00_v12', 121),\n      (26, 231, '2024-01-17 20:00:00_v13', '2024-01-17 20:40:00_v13', 133),\n      (28, 243, '2024-01-18 14:30:00_v14', '2024-01-18 16:00:00_v14', 148),\n      (23, 251, '2024-01-15 14:00:00_v15', '2024-01-15 14:45:00_v15', 153),\n      (25, 262, '2024-01-15 15:00:00_v16', '2024-01-15 15:20:00_v16', 162),\n      (27, 271, '2024-01-16 16:00:00_v17', '2024-01-16 16:35:00_v17', 174),\n      (29, 283, '2024-01-16 17:00:00_v18', '2024-01-16 18:30:00_v18', 186);",
      "solution_sql": "\n      SELECT \n        user_id,\n        COUNT(*) as session_count,\n        SUM(EXTRACT(EPOCH FROM (end_time - start_time))/60) as total_minutes,\n        ROUND(AVG(EXTRACT(EPOCH FROM (end_time - start_time))/60), 2) as avg_session_duration\n      FROM user_sessions\n      GROUP BY user_id\n      HAVING AVG(EXTRACT(EPOCH FROM (end_time - start_time))/60) > 30 \n        AND SUM(EXTRACT(EPOCH FROM (end_time - start_time))/60) > 120\n      ORDER BY total_minutes DESC;\n    ",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.705Z",
      "expected_output": [
        {
          "user_id": "103",
          "session_count": "2",
          "total_minutes": "180.0000000000000000",
          "avg_session_duration": "90.00"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Session Duration Analysis",
      "problem_slug": "session-duration-analysis"
    },
    {
      "id": "b025c02c-9613-436f-9031-c71c3eb98291",
      "problem_id": "5a52f8a8-e4d2-4519-958f-9352010eff9d",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE user_sessions (\n          session_id INT,\n          user_id INT,\n          start_time TIMESTAMP,\n          end_time TIMESTAMP,\n          videos_watched INT\n      );\n      INSERT INTO user_sessions  VALUES\n      (1, 101, '2024-01-15 14:00:00', '2024-01-15 14:45:00', 3),\n      (2, 102, '2024-01-15 15:00:00', '2024-01-15 15:20:00', 2),\n      (3, 101, '2024-01-16 16:00:00', '2024-01-16 16:35:00', 4),\n      (4, 103, '2024-01-16 17:00:00', '2024-01-16 18:30:00', 6),\n      (5, 102, '2024-01-17 19:00:00', '2024-01-17 19:15:00', 1),\n      (6, 101, '2024-01-17 20:00:00', '2024-01-17 20:40:00', 3),\n      (7, 103, '2024-01-18 14:30:00', '2024-01-18 16:00:00', 8),\n      (9, 111, '2024-01-15 14:00:00_v1', '2024-01-15 14:45:00_v1', 13),\n      (11, 122, '2024-01-15 15:00:00_v2', '2024-01-15 15:20:00_v2', 22),\n      (13, 131, '2024-01-16 16:00:00_v3', '2024-01-16 16:35:00_v3', 34),\n      (15, 143, '2024-01-16 17:00:00_v4', '2024-01-16 18:30:00_v4', 46),\n      (17, 152, '2024-01-17 19:00:00_v5', '2024-01-17 19:15:00_v5', 51),\n      (19, 161, '2024-01-17 20:00:00_v6', '2024-01-17 20:40:00_v6', 63),\n      (21, 173, '2024-01-18 14:30:00_v7', '2024-01-18 16:00:00_v7', 78),\n      (16, 181, '2024-01-15 14:00:00_v8', '2024-01-15 14:45:00_v8', 83),\n      (18, 192, '2024-01-15 15:00:00_v9', '2024-01-15 15:20:00_v9', 92),\n      (20, 201, '2024-01-16 16:00:00_v10', '2024-01-16 16:35:00_v10', 104),\n      (22, 213, '2024-01-16 17:00:00_v11', '2024-01-16 18:30:00_v11', 116),\n      (24, 222, '2024-01-17 19:00:00_v12', '2024-01-17 19:15:00_v12', 121),\n      (26, 231, '2024-01-17 20:00:00_v13', '2024-01-17 20:40:00_v13', 133),\n      (28, 243, '2024-01-18 14:30:00_v14', '2024-01-18 16:00:00_v14', 148),\n      (23, 251, '2024-01-15 14:00:00_v15', '2024-01-15 14:45:00_v15', 153),\n      (25, 262, '2024-01-15 15:00:00_v16', '2024-01-15 15:20:00_v16', 162),\n      (27, 271, '2024-01-16 16:00:00_v17', '2024-01-16 16:35:00_v17', 174),\n      (29, 283, '2024-01-16 17:00:00_v18', '2024-01-16 18:30:00_v18', 186);",
      "solution_sql": "\n      SELECT \n        user_id,\n        COUNT(*) as session_count,\n        SUM(EXTRACT(EPOCH FROM (end_time - start_time))/60) as total_minutes,\n        ROUND(AVG(EXTRACT(EPOCH FROM (end_time - start_time))/60), 2) as avg_session_duration\n      FROM user_sessions\n      GROUP BY user_id\n      HAVING AVG(EXTRACT(EPOCH FROM (end_time - start_time))/60) > 30 \n        AND SUM(EXTRACT(EPOCH FROM (end_time - start_time))/60) > 120\n      ORDER BY total_minutes DESC;\n    ",
      "explanation": "Solution uses time analysis concepts to solve the business problem.",
      "created_at": "2025-08-11T13:51:04.044Z",
      "expected_output": [
        {
          "user_id": "103",
          "session_count": "2",
          "total_minutes": "180.0000000000000000",
          "avg_session_duration": "90.00"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Session Duration Analysis",
      "problem_slug": "session-duration-analysis"
    },
    {
      "id": "7abd1ce3-2b0d-48df-9701-af68aac6a4dd",
      "problem_id": "070b96e1-0cb0-4397-9746-275d5937653d",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE snapchat_engagement (\n        user_id INT PRIMARY KEY,\n        age_demographic VARCHAR(20),\n        daily_minutes_active DECIMAL(6,2),\n        snaps_sent INT,\n        stories_viewed INT,\n        discover_engagement INT\n    );\n      INSERT INTO snapchat_engagement  VALUES\n      (1, '13-17', 62.50, 45, 28, 15),\n      (2, '18-24', 58.25, 38, 32, 22),\n      (3, '25-34', 42.80, 25, 18, 12),\n      (4, '35-44', 28.40, 15, 12, 8),\n      (5, '45+', 18.60, 8, 6, 4),\n      (7, '13-17_v1', 62.60, 55, 38, 25),\n      (9, '18-24_v2', 58.45, 58, 52, 42),\n      (11, '25-34_v3', 43.10, 55, 48, 42),\n      (13, '35-44_v4', 28.80, 55, 52, 48),\n      (15, '45+_v5', 19.10, 58, 56, 54),\n      (12, '13-17_v6', 63.10, 105, 88, 75),\n      (14, '18-24_v7', 58.95, 108, 102, 92),\n      (16, '25-34_v8', 43.60, 105, 98, 92),\n      (18, '35-44_v9', 29.30, 105, 102, 98),\n      (20, '45+_v10', 19.60, 108, 106, 104),\n      (17, '13-17_v11', 63.60, 155, 138, 125),\n      (19, '18-24_v12', 59.45, 158, 152, 142),\n      (21, '25-34_v13', 44.10, 155, 148, 142),\n      (23, '35-44_v14', 29.80, 155, 152, 148),\n      (25, '45+_v15', 20.10, 158, 156, 154),\n      (22, '13-17_v16', 64.10, 205, 188, 175),\n      (24, '18-24_v17', 59.95, 208, 202, 192),\n      (26, '25-34_v18', 44.60, 205, 198, 192),\n      (28, '35-44_v19', 30.30, 205, 202, 198),\n      (30, '45+_v20', 20.60, 208, 206, 204);",
      "solution_sql": "SELECT age_demographic, ROUND(AVG(daily_minutes_active), 2) as avg_daily_minutes\nFROM snapchat_engagement \nGROUP BY age_demographic \nHAVING AVG(daily_minutes_active) > 45 \nORDER BY avg_daily_minutes DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.634Z",
      "expected_output": [
        {
          "age_demographic": "13-17_v16",
          "avg_daily_minutes": "64.10"
        },
        {
          "age_demographic": "13-17_v11",
          "avg_daily_minutes": "63.60"
        },
        {
          "age_demographic": "13-17_v6",
          "avg_daily_minutes": "63.10"
        },
        {
          "age_demographic": "13-17_v1",
          "avg_daily_minutes": "62.60"
        },
        {
          "age_demographic": "13-17",
          "avg_daily_minutes": "62.50"
        },
        {
          "age_demographic": "18-24_v17",
          "avg_daily_minutes": "59.95"
        },
        {
          "age_demographic": "18-24_v12",
          "avg_daily_minutes": "59.45"
        },
        {
          "age_demographic": "18-24_v7",
          "avg_daily_minutes": "58.95"
        },
        {
          "age_demographic": "18-24_v2",
          "avg_daily_minutes": "58.45"
        },
        {
          "age_demographic": "18-24",
          "avg_daily_minutes": "58.25"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Snapchat Social Media Engagement",
      "problem_slug": "oracle-revenue-analysis"
    },
    {
      "id": "232f44ac-6814-4ba1-a214-a14432680e38",
      "problem_id": "070b96e1-0cb0-4397-9746-275d5937653d",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE snapchat_engagement (\n        user_id INT PRIMARY KEY,\n        age_demographic VARCHAR(20),\n        daily_minutes_active DECIMAL(6,2),\n        snaps_sent INT,\n        stories_viewed INT,\n        discover_engagement INT\n    );\n      INSERT INTO snapchat_engagement  VALUES\n      (1, '13-17', 62.50, 45, 28, 15),\n      (2, '18-24', 58.25, 38, 32, 22),\n      (3, '25-34', 42.80, 25, 18, 12),\n      (4, '35-44', 28.40, 15, 12, 8),\n      (5, '45+', 18.60, 8, 6, 4),\n      (7, '13-17_v1', 62.60, 55, 38, 25),\n      (9, '18-24_v2', 58.45, 58, 52, 42),\n      (11, '25-34_v3', 43.10, 55, 48, 42),\n      (13, '35-44_v4', 28.80, 55, 52, 48),\n      (15, '45+_v5', 19.10, 58, 56, 54),\n      (12, '13-17_v6', 63.10, 105, 88, 75),\n      (14, '18-24_v7', 58.95, 108, 102, 92),\n      (16, '25-34_v8', 43.60, 105, 98, 92),\n      (18, '35-44_v9', 29.30, 105, 102, 98),\n      (20, '45+_v10', 19.60, 108, 106, 104),\n      (17, '13-17_v11', 63.60, 155, 138, 125),\n      (19, '18-24_v12', 59.45, 158, 152, 142),\n      (21, '25-34_v13', 44.10, 155, 148, 142),\n      (23, '35-44_v14', 29.80, 155, 152, 148),\n      (25, '45+_v15', 20.10, 158, 156, 154),\n      (22, '13-17_v16', 64.10, 205, 188, 175),\n      (24, '18-24_v17', 59.95, 208, 202, 192),\n      (26, '25-34_v18', 44.60, 205, 198, 192),\n      (28, '35-44_v19', 30.30, 205, 202, 198),\n      (30, '45+_v20', 20.60, 208, 206, 204);",
      "solution_sql": "SELECT age_demographic, ROUND(AVG(daily_minutes_active), 2) as avg_daily_minutes\nFROM snapchat_engagement \nGROUP BY age_demographic \nHAVING AVG(daily_minutes_active) > 45 \nORDER BY avg_daily_minutes DESC;",
      "explanation": "Snapchat social media engagement analysis using daily active time metrics for demographic targeting.",
      "created_at": "2025-08-11T17:08:07.822Z",
      "expected_output": [
        {
          "age_demographic": "13-17_v16",
          "avg_daily_minutes": "64.10"
        },
        {
          "age_demographic": "13-17_v11",
          "avg_daily_minutes": "63.60"
        },
        {
          "age_demographic": "13-17_v6",
          "avg_daily_minutes": "63.10"
        },
        {
          "age_demographic": "13-17_v1",
          "avg_daily_minutes": "62.60"
        },
        {
          "age_demographic": "13-17",
          "avg_daily_minutes": "62.50"
        },
        {
          "age_demographic": "18-24_v17",
          "avg_daily_minutes": "59.95"
        },
        {
          "age_demographic": "18-24_v12",
          "avg_daily_minutes": "59.45"
        },
        {
          "age_demographic": "18-24_v7",
          "avg_daily_minutes": "58.95"
        },
        {
          "age_demographic": "18-24_v2",
          "avg_daily_minutes": "58.45"
        },
        {
          "age_demographic": "18-24",
          "avg_daily_minutes": "58.25"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Snapchat Social Media Engagement",
      "problem_slug": "oracle-revenue-analysis"
    },
    {
      "id": "24943bb5-8ee9-48e6-9e27-f1db06d1f10d",
      "problem_id": "a62c7efb-6dc5-40ae-8261-6cecdd2a482e",
      "sql_dialect": "mysql",
      "setup_sql": "\nCREATE TABLE support_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(30),\n    availability_hours VARCHAR(20)\n);\n\nCREATE TABLE support_agents (\n    agent_id INT PRIMARY KEY,\n    agent_name VARCHAR(100),\n    department VARCHAR(50),\n    experience_years INT,\n    specialization VARCHAR(50)\n);\n\nCREATE TABLE support_tickets (\n    ticket_id INT PRIMARY KEY,\n    channel_id INT,\n    agent_id INT,\n    ticket_category VARCHAR(50),\n    priority_level VARCHAR(20),\n    created_date DATE,\n    resolved_date DATE,\n    resolution_hours DECIMAL(6,2),\n    customer_satisfaction DECIMAL(3,2),\n    FOREIGN KEY (channel_id) REFERENCES support_channels(channel_id),\n    FOREIGN KEY (agent_id) REFERENCES support_agents(agent_id)\n);\n\nINSERT INTO support_channels VALUES\n(1, 'Live Chat', 'Digital', '24/7'),\n(2, 'Email Support', 'Digital', 'Business Hours'),\n(3, 'Phone Support', 'Voice', 'Business Hours'),\n(4, 'Self-Service Portal', 'Digital', '24/7');\n\nINSERT INTO support_agents VALUES\n(1, 'Sarah Johnson', 'Technical Support', 5, 'Software Issues'),\n(2, 'Mike Chen', 'Customer Success', 3, 'Account Management'),\n(3, 'Lisa Rodriguez', 'Technical Support', 7, 'Network Issues'),\n(4, 'David Kim', 'Billing Support', 4, 'Payment Issues'),\n(5, 'Emma Wilson', 'General Support', 2, 'General Inquiries');\n\nINSERT INTO support_tickets VALUES\n(1, 1, 1, 'Technical Issue', 'High', '2024-05-01', '2024-05-01', 2.5, 4.5),\n(2, 2, 2, 'Account Question', 'Medium', '2024-05-01', '2024-05-02', 18.0, 4.2),\n(3, 3, 3, 'Network Problem', 'High', '2024-05-02', '2024-05-02', 4.0, 4.7),\n(4, 1, 4, 'Billing Issue', 'Medium', '2024-05-02', '2024-05-03', 22.5, 4.0),\n(5, 2, 5, 'General Inquiry', 'Low', '2024-05-03', '2024-05-04', 26.0, 4.3),\n(6, 3, 1, 'Technical Issue', 'High', '2024-05-03', '2024-05-03', 3.5, 4.6),\n(7, 1, 2, 'Account Question', 'Low', '2024-05-04', '2024-05-05', 20.0, 4.1),\n(8, 2, 3, 'Network Problem', 'Medium', '2024-05-04', '2024-05-05', 16.5, 4.4),\n(9, 3, 4, 'Billing Issue', 'High', '2024-05-05', '2024-05-05', 1.5, 4.8),\n(10, 1, 5, 'General Inquiry', 'Low', '2024-05-05', '2024-05-06', 24.0, 4.2);",
      "solution_sql": "\nSELECT \n    sc.channel_type,\n    st.priority_level,\n    COUNT(st.ticket_id) as ticket_count,\n    ROUND(AVG(st.resolution_hours), 2) as avg_resolution_hours,\n    ROUND(AVG(st.customer_satisfaction), 2) as avg_satisfaction_score,\n    COUNT(CASE WHEN st.resolution_hours <= 4 THEN 1 END) as quick_resolutions\nFROM support_channels sc\nJOIN support_tickets st ON sc.channel_id = st.channel_id\nGROUP BY sc.channel_type, st.priority_level\nORDER BY avg_satisfaction_score DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.745Z",
      "expected_output": [
        {
          "channel_type": "Voice",
          "ticket_count": "3",
          "priority_level": "High",
          "quick_resolutions": "3",
          "avg_resolution_hours": "3.00",
          "avg_satisfaction_score": "4.70"
        },
        {
          "channel_type": "Digital",
          "ticket_count": "1",
          "priority_level": "High",
          "quick_resolutions": "1",
          "avg_resolution_hours": "2.50",
          "avg_satisfaction_score": "4.50"
        },
        {
          "channel_type": "Digital",
          "ticket_count": "3",
          "priority_level": "Medium",
          "quick_resolutions": "0",
          "avg_resolution_hours": "19.00",
          "avg_satisfaction_score": "4.20"
        },
        {
          "channel_type": "Digital",
          "ticket_count": "3",
          "priority_level": "Low",
          "quick_resolutions": "0",
          "avg_resolution_hours": "23.33",
          "avg_satisfaction_score": "4.20"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Customer Service Analytics Dashboard",
      "problem_slug": "societe-generale-risk-management-system"
    },
    {
      "id": "79e802c9-8b37-47b2-9835-d6c48a17db0d",
      "problem_id": "a62c7efb-6dc5-40ae-8261-6cecdd2a482e",
      "sql_dialect": "postgresql",
      "setup_sql": "\nCREATE TABLE support_channels (\n    channel_id INT PRIMARY KEY,\n    channel_name VARCHAR(50),\n    channel_type VARCHAR(30),\n    availability_hours VARCHAR(20)\n);\n\nCREATE TABLE support_agents (\n    agent_id INT PRIMARY KEY,\n    agent_name VARCHAR(100),\n    department VARCHAR(50),\n    experience_years INT,\n    specialization VARCHAR(50)\n);\n\nCREATE TABLE support_tickets (\n    ticket_id INT PRIMARY KEY,\n    channel_id INT,\n    agent_id INT,\n    ticket_category VARCHAR(50),\n    priority_level VARCHAR(20),\n    created_date DATE,\n    resolved_date DATE,\n    resolution_hours DECIMAL(6,2),\n    customer_satisfaction DECIMAL(3,2),\n    FOREIGN KEY (channel_id) REFERENCES support_channels(channel_id),\n    FOREIGN KEY (agent_id) REFERENCES support_agents(agent_id)\n);\n\nINSERT INTO support_channels VALUES\n(1, 'Live Chat', 'Digital', '24/7'),\n(2, 'Email Support', 'Digital', 'Business Hours'),\n(3, 'Phone Support', 'Voice', 'Business Hours'),\n(4, 'Self-Service Portal', 'Digital', '24/7');\n\nINSERT INTO support_agents VALUES\n(1, 'Sarah Johnson', 'Technical Support', 5, 'Software Issues'),\n(2, 'Mike Chen', 'Customer Success', 3, 'Account Management'),\n(3, 'Lisa Rodriguez', 'Technical Support', 7, 'Network Issues'),\n(4, 'David Kim', 'Billing Support', 4, 'Payment Issues'),\n(5, 'Emma Wilson', 'General Support', 2, 'General Inquiries');\n\nINSERT INTO support_tickets VALUES\n(1, 1, 1, 'Technical Issue', 'High', '2024-05-01', '2024-05-01', 2.5, 4.5),\n(2, 2, 2, 'Account Question', 'Medium', '2024-05-01', '2024-05-02', 18.0, 4.2),\n(3, 3, 3, 'Network Problem', 'High', '2024-05-02', '2024-05-02', 4.0, 4.7),\n(4, 1, 4, 'Billing Issue', 'Medium', '2024-05-02', '2024-05-03', 22.5, 4.0),\n(5, 2, 5, 'General Inquiry', 'Low', '2024-05-03', '2024-05-04', 26.0, 4.3),\n(6, 3, 1, 'Technical Issue', 'High', '2024-05-03', '2024-05-03', 3.5, 4.6),\n(7, 1, 2, 'Account Question', 'Low', '2024-05-04', '2024-05-05', 20.0, 4.1),\n(8, 2, 3, 'Network Problem', 'Medium', '2024-05-04', '2024-05-05', 16.5, 4.4),\n(9, 3, 4, 'Billing Issue', 'High', '2024-05-05', '2024-05-05', 1.5, 4.8),\n(10, 1, 5, 'General Inquiry', 'Low', '2024-05-05', '2024-05-06', 24.0, 4.2);",
      "solution_sql": "\nSELECT \n    sc.channel_type,\n    st.priority_level,\n    COUNT(st.ticket_id) as ticket_count,\n    ROUND(AVG(st.resolution_hours), 2) as avg_resolution_hours,\n    ROUND(AVG(st.customer_satisfaction), 2) as avg_satisfaction_score,\n    COUNT(CASE WHEN st.resolution_hours <= 4 THEN 1 END) as quick_resolutions\nFROM support_channels sc\nJOIN support_tickets st ON sc.channel_id = st.channel_id\nGROUP BY sc.channel_type, st.priority_level\nORDER BY avg_satisfaction_score DESC;",
      "explanation": "ESG risk assessment analysis using environmental, social, and governance metrics for sustainable banking practices.",
      "created_at": "2025-08-11T17:08:07.887Z",
      "expected_output": [
        {
          "channel_type": "Voice",
          "ticket_count": "3",
          "priority_level": "High",
          "quick_resolutions": "3",
          "avg_resolution_hours": "3.00",
          "avg_satisfaction_score": "4.70"
        },
        {
          "channel_type": "Digital",
          "ticket_count": "1",
          "priority_level": "High",
          "quick_resolutions": "1",
          "avg_resolution_hours": "2.50",
          "avg_satisfaction_score": "4.50"
        },
        {
          "channel_type": "Digital",
          "ticket_count": "3",
          "priority_level": "Low",
          "quick_resolutions": "0",
          "avg_resolution_hours": "23.33",
          "avg_satisfaction_score": "4.20"
        },
        {
          "channel_type": "Digital",
          "ticket_count": "3",
          "priority_level": "Medium",
          "quick_resolutions": "0",
          "avg_resolution_hours": "19.00",
          "avg_satisfaction_score": "4.20"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Customer Service Analytics Dashboard",
      "problem_slug": "societe-generale-risk-management-system"
    },
    {
      "id": "f8383d1f-72ec-4f35-887d-56724cc93f01",
      "problem_id": "0d48baad-aa87-4f93-9612-328305363c65",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE warehouse_inventory (\n          warehouse_id INT,\n          product_name VARCHAR(100),\n          current_stock INT,\n          reorder_point INT,\n          max_capacity INT\n      );\n      INSERT INTO warehouse_inventory  VALUES\n      (1, 'Shipping Boxes', 150, 200, 1000),\n      (1, 'Bubble Wrap', 75, 100, 500),\n      (1, 'Packing Tape', 300, 150, 800),\n      (2, 'Shipping Boxes', 180, 200, 1000),\n      (2, 'Bubble Wrap', 45, 100, 500),\n      (2, 'Labels', 250, 300, 600),\n      (3, 'Shipping Boxes', 90, 200, 1000),\n      (3, 'Packing Tape', 120, 150, 800),\n      (10, 'Shipping Boxes_v1', 160, 210, 1010),\n      (11, 'Bubble Wrap_v2', 95, 120, 520),\n      (12, 'Packing Tape_v3', 330, 180, 830),\n      (14, 'Shipping Boxes_v4', 220, 240, 1040),\n      (15, 'Bubble Wrap_v5', 95, 150, 550),\n      (16, 'Labels_v6', 310, 360, 660),\n      (18, 'Shipping Boxes_v7', 160, 270, 1070),\n      (19, 'Packing Tape_v8', 200, 230, 880),\n      (18, 'Shipping Boxes_v9', 240, 290, 1090),\n      (19, 'Bubble Wrap_v10', 175, 200, 600),\n      (20, 'Packing Tape_v11', 410, 260, 910),\n      (22, 'Shipping Boxes_v12', 300, 320, 1120),\n      (23, 'Bubble Wrap_v13', 175, 230, 630),\n      (24, 'Labels_v14', 390, 440, 740),\n      (26, 'Shipping Boxes_v15', 240, 350, 1150),\n      (27, 'Packing Tape_v16', 280, 310, 960),\n      (26, 'Shipping Boxes_v17', 320, 370, 1170);",
      "solution_sql": "\n      SELECT \n        warehouse_id,\n        product_name,\n        current_stock,\n        reorder_point,\n        reorder_point - current_stock as shortage_amount\n      FROM warehouse_inventory\n      WHERE current_stock < reorder_point\n      ORDER BY warehouse_id, shortage_amount DESC;\n    ",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.644Z",
      "expected_output": [
        {
          "product_name": "Shipping Boxes",
          "warehouse_id": "1",
          "current_stock": "150",
          "reorder_point": "200",
          "shortage_amount": "50"
        },
        {
          "product_name": "Bubble Wrap",
          "warehouse_id": "1",
          "current_stock": "75",
          "reorder_point": "100",
          "shortage_amount": "25"
        },
        {
          "product_name": "Bubble Wrap",
          "warehouse_id": "2",
          "current_stock": "45",
          "reorder_point": "100",
          "shortage_amount": "55"
        },
        {
          "product_name": "Labels",
          "warehouse_id": "2",
          "current_stock": "250",
          "reorder_point": "300",
          "shortage_amount": "50"
        },
        {
          "product_name": "Shipping Boxes",
          "warehouse_id": "2",
          "current_stock": "180",
          "reorder_point": "200",
          "shortage_amount": "20"
        },
        {
          "product_name": "Shipping Boxes",
          "warehouse_id": "3",
          "current_stock": "90",
          "reorder_point": "200",
          "shortage_amount": "110"
        },
        {
          "product_name": "Packing Tape",
          "warehouse_id": "3",
          "current_stock": "120",
          "reorder_point": "150",
          "shortage_amount": "30"
        },
        {
          "product_name": "Shipping Boxes_v1",
          "warehouse_id": "10",
          "current_stock": "160",
          "reorder_point": "210",
          "shortage_amount": "50"
        },
        {
          "product_name": "Bubble Wrap_v2",
          "warehouse_id": "11",
          "current_stock": "95",
          "reorder_point": "120",
          "shortage_amount": "25"
        },
        {
          "product_name": "Shipping Boxes_v4",
          "warehouse_id": "14",
          "current_stock": "220",
          "reorder_point": "240",
          "shortage_amount": "20"
        },
        {
          "product_name": "Bubble Wrap_v5",
          "warehouse_id": "15",
          "current_stock": "95",
          "reorder_point": "150",
          "shortage_amount": "55"
        },
        {
          "product_name": "Labels_v6",
          "warehouse_id": "16",
          "current_stock": "310",
          "reorder_point": "360",
          "shortage_amount": "50"
        },
        {
          "product_name": "Shipping Boxes_v7",
          "warehouse_id": "18",
          "current_stock": "160",
          "reorder_point": "270",
          "shortage_amount": "110"
        },
        {
          "product_name": "Shipping Boxes_v9",
          "warehouse_id": "18",
          "current_stock": "240",
          "reorder_point": "290",
          "shortage_amount": "50"
        },
        {
          "product_name": "Packing Tape_v8",
          "warehouse_id": "19",
          "current_stock": "200",
          "reorder_point": "230",
          "shortage_amount": "30"
        },
        {
          "product_name": "Bubble Wrap_v10",
          "warehouse_id": "19",
          "current_stock": "175",
          "reorder_point": "200",
          "shortage_amount": "25"
        },
        {
          "product_name": "Shipping Boxes_v12",
          "warehouse_id": "22",
          "current_stock": "300",
          "reorder_point": "320",
          "shortage_amount": "20"
        },
        {
          "product_name": "Bubble Wrap_v13",
          "warehouse_id": "23",
          "current_stock": "175",
          "reorder_point": "230",
          "shortage_amount": "55"
        },
        {
          "product_name": "Labels_v14",
          "warehouse_id": "24",
          "current_stock": "390",
          "reorder_point": "440",
          "shortage_amount": "50"
        },
        {
          "product_name": "Shipping Boxes_v15",
          "warehouse_id": "26",
          "current_stock": "240",
          "reorder_point": "350",
          "shortage_amount": "110"
        },
        {
          "product_name": "Shipping Boxes_v17",
          "warehouse_id": "26",
          "current_stock": "320",
          "reorder_point": "370",
          "shortage_amount": "50"
        },
        {
          "product_name": "Packing Tape_v16",
          "warehouse_id": "27",
          "current_stock": "280",
          "reorder_point": "310",
          "shortage_amount": "30"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Supply Chain Optimization",
      "problem_slug": "supply-chain-optimization"
    },
    {
      "id": "13047a10-880f-44ba-b6b6-d2be58562d1a",
      "problem_id": "0d48baad-aa87-4f93-9612-328305363c65",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE warehouse_inventory (\n          warehouse_id INT,\n          product_name VARCHAR(100),\n          current_stock INT,\n          reorder_point INT,\n          max_capacity INT\n      );\n      INSERT INTO warehouse_inventory  VALUES\n      (1, 'Shipping Boxes', 150, 200, 1000),\n      (1, 'Bubble Wrap', 75, 100, 500),\n      (1, 'Packing Tape', 300, 150, 800),\n      (2, 'Shipping Boxes', 180, 200, 1000),\n      (2, 'Bubble Wrap', 45, 100, 500),\n      (2, 'Labels', 250, 300, 600),\n      (3, 'Shipping Boxes', 90, 200, 1000),\n      (3, 'Packing Tape', 120, 150, 800),\n      (10, 'Shipping Boxes_v1', 160, 210, 1010),\n      (11, 'Bubble Wrap_v2', 95, 120, 520),\n      (12, 'Packing Tape_v3', 330, 180, 830),\n      (14, 'Shipping Boxes_v4', 220, 240, 1040),\n      (15, 'Bubble Wrap_v5', 95, 150, 550),\n      (16, 'Labels_v6', 310, 360, 660),\n      (18, 'Shipping Boxes_v7', 160, 270, 1070),\n      (19, 'Packing Tape_v8', 200, 230, 880),\n      (18, 'Shipping Boxes_v9', 240, 290, 1090),\n      (19, 'Bubble Wrap_v10', 175, 200, 600),\n      (20, 'Packing Tape_v11', 410, 260, 910),\n      (22, 'Shipping Boxes_v12', 300, 320, 1120),\n      (23, 'Bubble Wrap_v13', 175, 230, 630),\n      (24, 'Labels_v14', 390, 440, 740),\n      (26, 'Shipping Boxes_v15', 240, 350, 1150),\n      (27, 'Packing Tape_v16', 280, 310, 960),\n      (26, 'Shipping Boxes_v17', 320, 370, 1170);",
      "solution_sql": "\n      SELECT \n        warehouse_id,\n        product_name,\n        current_stock,\n        reorder_point,\n        reorder_point - current_stock as shortage_amount\n      FROM warehouse_inventory\n      WHERE current_stock < reorder_point\n      ORDER BY warehouse_id, shortage_amount DESC;\n    ",
      "explanation": "Advanced Supply Chain problem with real business applications.",
      "created_at": "2025-08-11T13:51:10.024Z",
      "expected_output": [
        {
          "product_name": "Shipping Boxes",
          "warehouse_id": 1,
          "current_stock": 150,
          "reorder_point": 200,
          "shortage_amount": 50
        },
        {
          "product_name": "Bubble Wrap",
          "warehouse_id": 1,
          "current_stock": 75,
          "reorder_point": 100,
          "shortage_amount": 25
        },
        {
          "product_name": "Bubble Wrap",
          "warehouse_id": 2,
          "current_stock": 45,
          "reorder_point": 100,
          "shortage_amount": 55
        },
        {
          "product_name": "Labels",
          "warehouse_id": 2,
          "current_stock": 250,
          "reorder_point": 300,
          "shortage_amount": 50
        },
        {
          "product_name": "Shipping Boxes",
          "warehouse_id": 2,
          "current_stock": 180,
          "reorder_point": 200,
          "shortage_amount": 20
        },
        {
          "product_name": "Shipping Boxes",
          "warehouse_id": 3,
          "current_stock": 90,
          "reorder_point": 200,
          "shortage_amount": 110
        },
        {
          "product_name": "Packing Tape",
          "warehouse_id": 3,
          "current_stock": 120,
          "reorder_point": 150,
          "shortage_amount": 30
        },
        {
          "product_name": "Shipping Boxes_v1",
          "warehouse_id": 10,
          "current_stock": 160,
          "reorder_point": 210,
          "shortage_amount": 50
        },
        {
          "product_name": "Bubble Wrap_v2",
          "warehouse_id": 11,
          "current_stock": 95,
          "reorder_point": 120,
          "shortage_amount": 25
        },
        {
          "product_name": "Shipping Boxes_v4",
          "warehouse_id": 14,
          "current_stock": 220,
          "reorder_point": 240,
          "shortage_amount": 20
        },
        {
          "product_name": "Bubble Wrap_v5",
          "warehouse_id": 15,
          "current_stock": 95,
          "reorder_point": 150,
          "shortage_amount": 55
        },
        {
          "product_name": "Labels_v6",
          "warehouse_id": 16,
          "current_stock": 310,
          "reorder_point": 360,
          "shortage_amount": 50
        },
        {
          "product_name": "Shipping Boxes_v7",
          "warehouse_id": 18,
          "current_stock": 160,
          "reorder_point": 270,
          "shortage_amount": 110
        },
        {
          "product_name": "Shipping Boxes_v9",
          "warehouse_id": 18,
          "current_stock": 240,
          "reorder_point": 290,
          "shortage_amount": 50
        },
        {
          "product_name": "Packing Tape_v8",
          "warehouse_id": 19,
          "current_stock": 200,
          "reorder_point": 230,
          "shortage_amount": 30
        },
        {
          "product_name": "Bubble Wrap_v10",
          "warehouse_id": 19,
          "current_stock": 175,
          "reorder_point": 200,
          "shortage_amount": 25
        },
        {
          "product_name": "Shipping Boxes_v12",
          "warehouse_id": 22,
          "current_stock": 300,
          "reorder_point": 320,
          "shortage_amount": 20
        },
        {
          "product_name": "Bubble Wrap_v13",
          "warehouse_id": 23,
          "current_stock": 175,
          "reorder_point": 230,
          "shortage_amount": 55
        },
        {
          "product_name": "Labels_v14",
          "warehouse_id": 24,
          "current_stock": 390,
          "reorder_point": 440,
          "shortage_amount": 50
        },
        {
          "product_name": "Shipping Boxes_v15",
          "warehouse_id": 26,
          "current_stock": 240,
          "reorder_point": 350,
          "shortage_amount": 110
        },
        {
          "product_name": "Shipping Boxes_v17",
          "warehouse_id": 26,
          "current_stock": 320,
          "reorder_point": 370,
          "shortage_amount": 50
        },
        {
          "product_name": "Packing Tape_v16",
          "warehouse_id": 27,
          "current_stock": 280,
          "reorder_point": 310,
          "shortage_amount": 30
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Supply Chain Optimization",
      "problem_slug": "supply-chain-optimization"
    },
    {
      "id": "f8f99fcf-024f-447a-88bb-052c5754d8c5",
      "problem_id": "e250723c-d9ff-4f9b-81ab-ec5e5f5fddd0",
      "sql_dialect": "mysql",
      "setup_sql": "\nCREATE TABLE target_sales (\n    sale_id INT PRIMARY KEY,\n    store_id INT,\n    product_category VARCHAR(100),\n    product_name VARCHAR(150),\n    sale_date DATE,\n    quantity INT,\n    unit_price DECIMAL(8,2),\n    revenue DECIMAL(10,2)\n);\n\nINSERT INTO target_sales VALUES\n(1, 101, 'Electronics', 'Smart TV 55 inch', '2024-05-01', 2, 899.99, 1799.98),\n(2, 101, 'Clothing', 'Winter Jacket', '2024-05-01', 5, 79.99, 399.95),\n(3, 102, 'Home & Garden', 'Garden Tools Set', '2024-05-02', 3, 149.99, 449.97),\n(4, 103, 'Electronics', 'Smartphone', '2024-05-02', 4, 699.99, 2799.96),\n(5, 101, 'Groceries', 'Organic Food Bundle', '2024-05-03', 10, 29.99, 299.90),\n(6, 102, 'Clothing', 'Summer Dress', '2024-05-03', 8, 49.99, 399.92),\n(7, 103, 'Home & Garden', 'Furniture Set', '2024-05-04', 1, 1299.99, 1299.99),\n(8, 101, 'Electronics', 'Laptop Computer', '2024-05-04', 3, 999.99, 2999.97),\n(9, 102, 'Groceries', 'Fresh Produce', '2024-05-05', 15, 19.99, 299.85),\n(10, 103, 'Clothing', 'Athletic Wear', '2024-05-05', 6, 59.99, 359.94);",
      "solution_sql": "\nSELECT \n    product_category,\n    COUNT(sale_id) as total_sales,\n    SUM(quantity) as total_quantity,\n    ROUND(SUM(revenue), 2) as total_revenue,\n    ROUND(AVG(unit_price), 2) as avg_unit_price\nFROM target_sales\nGROUP BY product_category\nORDER BY total_revenue DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.781Z",
      "expected_output": [
        {
          "total_sales": "3",
          "total_revenue": "7599.91",
          "avg_unit_price": "866.66",
          "total_quantity": "9",
          "product_category": "Electronics"
        },
        {
          "total_sales": "2",
          "total_revenue": "1749.96",
          "avg_unit_price": "724.99",
          "total_quantity": "4",
          "product_category": "Home & Garden"
        },
        {
          "total_sales": "3",
          "total_revenue": "1159.81",
          "avg_unit_price": "63.32",
          "total_quantity": "19",
          "product_category": "Clothing"
        },
        {
          "total_sales": "2",
          "total_revenue": "599.75",
          "avg_unit_price": "24.99",
          "total_quantity": "25",
          "product_category": "Groceries"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Target Store Revenue by Category",
      "problem_slug": "target-store-revenue-by-category"
    },
    {
      "id": "7d4a44ee-ede3-4c4b-815c-25ce071b52a5",
      "problem_id": "e250723c-d9ff-4f9b-81ab-ec5e5f5fddd0",
      "sql_dialect": "postgresql",
      "setup_sql": "\nCREATE TABLE target_sales (\n    sale_id INT PRIMARY KEY,\n    store_id INT,\n    product_category VARCHAR(100),\n    product_name VARCHAR(150),\n    sale_date DATE,\n    quantity INT,\n    unit_price DECIMAL(8,2),\n    revenue DECIMAL(10,2)\n);\n\nINSERT INTO target_sales VALUES\n(1, 101, 'Electronics', 'Smart TV 55 inch', '2024-05-01', 2, 899.99, 1799.98),\n(2, 101, 'Clothing', 'Winter Jacket', '2024-05-01', 5, 79.99, 399.95),\n(3, 102, 'Home & Garden', 'Garden Tools Set', '2024-05-02', 3, 149.99, 449.97),\n(4, 103, 'Electronics', 'Smartphone', '2024-05-02', 4, 699.99, 2799.96),\n(5, 101, 'Groceries', 'Organic Food Bundle', '2024-05-03', 10, 29.99, 299.90),\n(6, 102, 'Clothing', 'Summer Dress', '2024-05-03', 8, 49.99, 399.92),\n(7, 103, 'Home & Garden', 'Furniture Set', '2024-05-04', 1, 1299.99, 1299.99),\n(8, 101, 'Electronics', 'Laptop Computer', '2024-05-04', 3, 999.99, 2999.97),\n(9, 102, 'Groceries', 'Fresh Produce', '2024-05-05', 15, 19.99, 299.85),\n(10, 103, 'Clothing', 'Athletic Wear', '2024-05-05', 6, 59.99, 359.94);",
      "solution_sql": "\nSELECT \n    product_category,\n    COUNT(sale_id) as total_sales,\n    SUM(quantity) as total_quantity,\n    ROUND(SUM(revenue), 2) as total_revenue,\n    ROUND(AVG(unit_price), 2) as avg_unit_price\nFROM target_sales\nGROUP BY product_category\nORDER BY total_revenue DESC;",
      "explanation": "Retail category performance analysis using SUM aggregation with revenue thresholds for merchandising strategy.",
      "created_at": "2025-08-11T13:51:21.531Z",
      "expected_output": [
        {
          "total_sales": "3",
          "total_revenue": "7599.91",
          "avg_unit_price": "866.66",
          "total_quantity": "9",
          "product_category": "Electronics"
        },
        {
          "total_sales": "2",
          "total_revenue": "1749.96",
          "avg_unit_price": "724.99",
          "total_quantity": "4",
          "product_category": "Home & Garden"
        },
        {
          "total_sales": "3",
          "total_revenue": "1159.81",
          "avg_unit_price": "63.32",
          "total_quantity": "19",
          "product_category": "Clothing"
        },
        {
          "total_sales": "2",
          "total_revenue": "599.75",
          "avg_unit_price": "24.99",
          "total_quantity": "25",
          "product_category": "Groceries"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Target Store Revenue by Category",
      "problem_slug": "target-store-revenue-by-category"
    },
    {
      "id": "bbd8c088-3919-4de6-a00a-7fa6fc4b40a8",
      "problem_id": "4201f984-393a-4772-91eb-90ecd63a3030",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE tesla_energy_storage (\n        system_id INT PRIMARY KEY,\n        deployment_type VARCHAR(50),\n        storage_capacity_mwh DECIMAL(8,2),\n        capacity_utilization_rate DECIMAL(5,3),\n        grid_stability_score DECIMAL(4,2),\n        energy_efficiency_pct DECIMAL(5,2),\n        annual_energy_savings DECIMAL(12,2),\n        carbon_offset_tons DECIMAL(10,2),\n        installation_cost DECIMAL(12,2),\n        system_date DATE\n    );\n      INSERT INTO tesla_energy_storage  VALUES\n      (1, 'Utility-Scale Megapack', 2580.50, 0.875, 9.85, 94.2, 4500000.00, 12500.75, 125000000.00, '2024-01-15'),\n      (2, 'Commercial Powerwall', 125.75, 0.820, 9.25, 92.8, 185000.00, 850.25, 2800000.00, '2024-01-15'),\n      (3, 'Residential Powerwall', 45.25, 0.785, 8.95, 91.5, 85000.00, 425.80, 850000.00, '2024-01-16'),\n      (4, 'Grid-Scale Battery Farm', 5200.80, 0.925, 9.92, 95.1, 8200000.00, 28500.60, 285000000.00, '2024-01-16'),\n      (5, 'Industrial Energy Storage', 850.60, 0.755, 9.15, 93.2, 1250000.00, 4200.40, 18500000.00, '2024-01-17'),\n      (7, 'Utility-Scale Megapack_v1', 2580.60, 0.97, 9.95, 94.30, 4500000.10, 12500.85, 125000000.10, '2024-01-16'),\n      (9, 'Commercial Powerwall_v2', 125.95, 1.02, 9.45, 93.00, 185000.20, 850.45, 2800000.20, '2024-01-17'),\n      (11, 'Residential Powerwall_v3', 45.55, 1.08, 9.25, 91.80, 85000.30, 426.10, 850000.30, '2024-01-19'),\n      (13, 'Grid-Scale Battery Farm_v4', 5201.20, 1.33, 10.32, 95.50, 8200000.40, 28501.00, 285000000.40, '2024-01-20'),\n      (15, 'Industrial Energy Storage_v5', 851.10, 1.25, 9.65, 93.70, 1250000.50, 4200.90, 18500000.50, '2024-01-22'),\n      (12, 'Utility-Scale Megapack_v6', 2581.10, 1.48, 10.45, 94.80, 4500000.60, 12501.35, 125000000.60, '2024-01-21'),\n      (14, 'Commercial Powerwall_v7', 126.45, 1.52, 9.95, 93.50, 185000.70, 850.95, 2800000.70, '2024-01-22'),\n      (16, 'Residential Powerwall_v8', 46.05, 1.58, 9.75, 92.30, 85000.80, 426.60, 850000.80, '2024-01-24'),\n      (18, 'Grid-Scale Battery Farm_v9', 5201.70, 1.83, 10.82, 96.00, 8200000.90, 28501.50, 285000000.90, '2024-01-25'),\n      (20, 'Industrial Energy Storage_v10', 851.60, 1.75, 10.15, 94.20, 1250001.00, 4201.40, 18500001.00, '2024-01-27'),\n      (17, 'Utility-Scale Megapack_v11', 2581.60, 1.98, 10.95, 95.30, 4500001.10, 12501.85, 125000001.10, '2024-01-26'),\n      (19, 'Commercial Powerwall_v12', 126.95, 2.02, 10.45, 94.00, 185001.20, 851.45, 2800001.20, '2024-01-27'),\n      (21, 'Residential Powerwall_v13', 46.55, 2.08, 10.25, 92.80, 85001.30, 427.10, 850001.30, '2024-01-29'),\n      (23, 'Grid-Scale Battery Farm_v14', 5202.20, 2.33, 11.32, 96.50, 8200001.40, 28502.00, 285000001.40, '2024-01-30'),\n      (25, 'Industrial Energy Storage_v15', 852.10, 2.25, 10.65, 94.70, 1250001.50, 4201.90, 18500001.50, '2024-02-01'),\n      (22, 'Utility-Scale Megapack_v16', 2582.10, 2.48, 11.45, 95.80, 4500001.60, 12502.35, 125000001.60, '2024-01-31'),\n      (24, 'Commercial Powerwall_v17', 127.45, 2.52, 10.95, 94.50, 185001.70, 851.95, 2800001.70, '2024-02-01'),\n      (26, 'Residential Powerwall_v18', 47.05, 2.58, 10.75, 93.30, 85001.80, 427.60, 850001.80, '2024-02-03'),\n      (28, 'Grid-Scale Battery Farm_v19', 5202.70, 2.83, 11.82, 97.00, 8200001.90, 28502.50, 285000001.90, '2024-02-04'),\n      (30, 'Industrial Energy Storage_v20', 852.60, 2.75, 11.15, 95.20, 1250002.00, 4202.40, 18500002.00, '2024-02-06');",
      "solution_sql": "SELECT \n        deployment_type,\n        ROUND(storage_capacity_mwh, 2) as capacity_mwh,\n        ROUND(CAST(capacity_utilization_rate * 100 AS NUMERIC), 2) as utilization_pct,\n        ROUND(grid_stability_score, 2) as stability_score,\n        ROUND(energy_efficiency_pct, 1) as efficiency_pct,\n        ROUND(annual_energy_savings / 1000000, 2) as energy_savings_millions,\n        ROUND(carbon_offset_tons, 2) as carbon_offset_tons\n    FROM tesla_energy_storage \n    WHERE capacity_utilization_rate > 0.80 \n        AND grid_stability_score > 9.0\n    ORDER BY utilization_pct DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.690Z",
      "expected_output": [
        {
          "capacity_mwh": "5202.70",
          "efficiency_pct": "97.0",
          "deployment_type": "Grid-Scale Battery Farm_v19",
          "stability_score": "11.82",
          "utilization_pct": "283.00",
          "carbon_offset_tons": "28502.50",
          "energy_savings_millions": "8.20"
        },
        {
          "capacity_mwh": "852.60",
          "efficiency_pct": "95.2",
          "deployment_type": "Industrial Energy Storage_v20",
          "stability_score": "11.15",
          "utilization_pct": "275.00",
          "carbon_offset_tons": "4202.40",
          "energy_savings_millions": "1.25"
        },
        {
          "capacity_mwh": "47.05",
          "efficiency_pct": "93.3",
          "deployment_type": "Residential Powerwall_v18",
          "stability_score": "10.75",
          "utilization_pct": "258.00",
          "carbon_offset_tons": "427.60",
          "energy_savings_millions": "0.09"
        },
        {
          "capacity_mwh": "127.45",
          "efficiency_pct": "94.5",
          "deployment_type": "Commercial Powerwall_v17",
          "stability_score": "10.95",
          "utilization_pct": "252.00",
          "carbon_offset_tons": "851.95",
          "energy_savings_millions": "0.19"
        },
        {
          "capacity_mwh": "2582.10",
          "efficiency_pct": "95.8",
          "deployment_type": "Utility-Scale Megapack_v16",
          "stability_score": "11.45",
          "utilization_pct": "248.00",
          "carbon_offset_tons": "12502.35",
          "energy_savings_millions": "4.50"
        },
        {
          "capacity_mwh": "5202.20",
          "efficiency_pct": "96.5",
          "deployment_type": "Grid-Scale Battery Farm_v14",
          "stability_score": "11.32",
          "utilization_pct": "233.00",
          "carbon_offset_tons": "28502.00",
          "energy_savings_millions": "8.20"
        },
        {
          "capacity_mwh": "852.10",
          "efficiency_pct": "94.7",
          "deployment_type": "Industrial Energy Storage_v15",
          "stability_score": "10.65",
          "utilization_pct": "225.00",
          "carbon_offset_tons": "4201.90",
          "energy_savings_millions": "1.25"
        },
        {
          "capacity_mwh": "46.55",
          "efficiency_pct": "92.8",
          "deployment_type": "Residential Powerwall_v13",
          "stability_score": "10.25",
          "utilization_pct": "208.00",
          "carbon_offset_tons": "427.10",
          "energy_savings_millions": "0.09"
        },
        {
          "capacity_mwh": "126.95",
          "efficiency_pct": "94.0",
          "deployment_type": "Commercial Powerwall_v12",
          "stability_score": "10.45",
          "utilization_pct": "202.00",
          "carbon_offset_tons": "851.45",
          "energy_savings_millions": "0.19"
        },
        {
          "capacity_mwh": "2581.60",
          "efficiency_pct": "95.3",
          "deployment_type": "Utility-Scale Megapack_v11",
          "stability_score": "10.95",
          "utilization_pct": "198.00",
          "carbon_offset_tons": "12501.85",
          "energy_savings_millions": "4.50"
        },
        {
          "capacity_mwh": "5201.70",
          "efficiency_pct": "96.0",
          "deployment_type": "Grid-Scale Battery Farm_v9",
          "stability_score": "10.82",
          "utilization_pct": "183.00",
          "carbon_offset_tons": "28501.50",
          "energy_savings_millions": "8.20"
        },
        {
          "capacity_mwh": "851.60",
          "efficiency_pct": "94.2",
          "deployment_type": "Industrial Energy Storage_v10",
          "stability_score": "10.15",
          "utilization_pct": "175.00",
          "carbon_offset_tons": "4201.40",
          "energy_savings_millions": "1.25"
        },
        {
          "capacity_mwh": "46.05",
          "efficiency_pct": "92.3",
          "deployment_type": "Residential Powerwall_v8",
          "stability_score": "9.75",
          "utilization_pct": "158.00",
          "carbon_offset_tons": "426.60",
          "energy_savings_millions": "0.09"
        },
        {
          "capacity_mwh": "126.45",
          "efficiency_pct": "93.5",
          "deployment_type": "Commercial Powerwall_v7",
          "stability_score": "9.95",
          "utilization_pct": "152.00",
          "carbon_offset_tons": "850.95",
          "energy_savings_millions": "0.19"
        },
        {
          "capacity_mwh": "2581.10",
          "efficiency_pct": "94.8",
          "deployment_type": "Utility-Scale Megapack_v6",
          "stability_score": "10.45",
          "utilization_pct": "148.00",
          "carbon_offset_tons": "12501.35",
          "energy_savings_millions": "4.50"
        },
        {
          "capacity_mwh": "5201.20",
          "efficiency_pct": "95.5",
          "deployment_type": "Grid-Scale Battery Farm_v4",
          "stability_score": "10.32",
          "utilization_pct": "133.00",
          "carbon_offset_tons": "28501.00",
          "energy_savings_millions": "8.20"
        },
        {
          "capacity_mwh": "851.10",
          "efficiency_pct": "93.7",
          "deployment_type": "Industrial Energy Storage_v5",
          "stability_score": "9.65",
          "utilization_pct": "125.00",
          "carbon_offset_tons": "4200.90",
          "energy_savings_millions": "1.25"
        },
        {
          "capacity_mwh": "45.55",
          "efficiency_pct": "91.8",
          "deployment_type": "Residential Powerwall_v3",
          "stability_score": "9.25",
          "utilization_pct": "108.00",
          "carbon_offset_tons": "426.10",
          "energy_savings_millions": "0.09"
        },
        {
          "capacity_mwh": "125.95",
          "efficiency_pct": "93.0",
          "deployment_type": "Commercial Powerwall_v2",
          "stability_score": "9.45",
          "utilization_pct": "102.00",
          "carbon_offset_tons": "850.45",
          "energy_savings_millions": "0.19"
        },
        {
          "capacity_mwh": "2580.60",
          "efficiency_pct": "94.3",
          "deployment_type": "Utility-Scale Megapack_v1",
          "stability_score": "9.95",
          "utilization_pct": "97.00",
          "carbon_offset_tons": "12500.85",
          "energy_savings_millions": "4.50"
        },
        {
          "capacity_mwh": "5200.80",
          "efficiency_pct": "95.1",
          "deployment_type": "Grid-Scale Battery Farm",
          "stability_score": "9.92",
          "utilization_pct": "92.50",
          "carbon_offset_tons": "28500.60",
          "energy_savings_millions": "8.20"
        },
        {
          "capacity_mwh": "2580.50",
          "efficiency_pct": "94.2",
          "deployment_type": "Utility-Scale Megapack",
          "stability_score": "9.85",
          "utilization_pct": "87.50",
          "carbon_offset_tons": "12500.75",
          "energy_savings_millions": "4.50"
        },
        {
          "capacity_mwh": "125.75",
          "efficiency_pct": "92.8",
          "deployment_type": "Commercial Powerwall",
          "stability_score": "9.25",
          "utilization_pct": "82.00",
          "carbon_offset_tons": "850.25",
          "energy_savings_millions": "0.19"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Tesla Energy Storage Analytics",
      "problem_slug": "vanguard-portfolio-analytics"
    },
    {
      "id": "02417807-a794-419e-bd3b-fc766964a08f",
      "problem_id": "4201f984-393a-4772-91eb-90ecd63a3030",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE tesla_energy_storage (\n        system_id INT PRIMARY KEY,\n        deployment_type VARCHAR(50),\n        storage_capacity_mwh DECIMAL(8,2),\n        capacity_utilization_rate DECIMAL(5,3),\n        grid_stability_score DECIMAL(4,2),\n        energy_efficiency_pct DECIMAL(5,2),\n        annual_energy_savings DECIMAL(12,2),\n        carbon_offset_tons DECIMAL(10,2),\n        installation_cost DECIMAL(12,2),\n        system_date DATE\n    );\n      INSERT INTO tesla_energy_storage  VALUES\n      (1, 'Utility-Scale Megapack', 2580.50, 0.875, 9.85, 94.2, 4500000.00, 12500.75, 125000000.00, '2024-01-15'),\n      (2, 'Commercial Powerwall', 125.75, 0.820, 9.25, 92.8, 185000.00, 850.25, 2800000.00, '2024-01-15'),\n      (3, 'Residential Powerwall', 45.25, 0.785, 8.95, 91.5, 85000.00, 425.80, 850000.00, '2024-01-16'),\n      (4, 'Grid-Scale Battery Farm', 5200.80, 0.925, 9.92, 95.1, 8200000.00, 28500.60, 285000000.00, '2024-01-16'),\n      (5, 'Industrial Energy Storage', 850.60, 0.755, 9.15, 93.2, 1250000.00, 4200.40, 18500000.00, '2024-01-17'),\n      (7, 'Utility-Scale Megapack_v1', 2580.60, 0.97, 9.95, 94.30, 4500000.10, 12500.85, 125000000.10, '2024-01-16'),\n      (9, 'Commercial Powerwall_v2', 125.95, 1.02, 9.45, 93.00, 185000.20, 850.45, 2800000.20, '2024-01-17'),\n      (11, 'Residential Powerwall_v3', 45.55, 1.08, 9.25, 91.80, 85000.30, 426.10, 850000.30, '2024-01-19'),\n      (13, 'Grid-Scale Battery Farm_v4', 5201.20, 1.33, 10.32, 95.50, 8200000.40, 28501.00, 285000000.40, '2024-01-20'),\n      (15, 'Industrial Energy Storage_v5', 851.10, 1.25, 9.65, 93.70, 1250000.50, 4200.90, 18500000.50, '2024-01-22'),\n      (12, 'Utility-Scale Megapack_v6', 2581.10, 1.48, 10.45, 94.80, 4500000.60, 12501.35, 125000000.60, '2024-01-21'),\n      (14, 'Commercial Powerwall_v7', 126.45, 1.52, 9.95, 93.50, 185000.70, 850.95, 2800000.70, '2024-01-22'),\n      (16, 'Residential Powerwall_v8', 46.05, 1.58, 9.75, 92.30, 85000.80, 426.60, 850000.80, '2024-01-24'),\n      (18, 'Grid-Scale Battery Farm_v9', 5201.70, 1.83, 10.82, 96.00, 8200000.90, 28501.50, 285000000.90, '2024-01-25'),\n      (20, 'Industrial Energy Storage_v10', 851.60, 1.75, 10.15, 94.20, 1250001.00, 4201.40, 18500001.00, '2024-01-27'),\n      (17, 'Utility-Scale Megapack_v11', 2581.60, 1.98, 10.95, 95.30, 4500001.10, 12501.85, 125000001.10, '2024-01-26'),\n      (19, 'Commercial Powerwall_v12', 126.95, 2.02, 10.45, 94.00, 185001.20, 851.45, 2800001.20, '2024-01-27'),\n      (21, 'Residential Powerwall_v13', 46.55, 2.08, 10.25, 92.80, 85001.30, 427.10, 850001.30, '2024-01-29'),\n      (23, 'Grid-Scale Battery Farm_v14', 5202.20, 2.33, 11.32, 96.50, 8200001.40, 28502.00, 285000001.40, '2024-01-30'),\n      (25, 'Industrial Energy Storage_v15', 852.10, 2.25, 10.65, 94.70, 1250001.50, 4201.90, 18500001.50, '2024-02-01'),\n      (22, 'Utility-Scale Megapack_v16', 2582.10, 2.48, 11.45, 95.80, 4500001.60, 12502.35, 125000001.60, '2024-01-31'),\n      (24, 'Commercial Powerwall_v17', 127.45, 2.52, 10.95, 94.50, 185001.70, 851.95, 2800001.70, '2024-02-01'),\n      (26, 'Residential Powerwall_v18', 47.05, 2.58, 10.75, 93.30, 85001.80, 427.60, 850001.80, '2024-02-03'),\n      (28, 'Grid-Scale Battery Farm_v19', 5202.70, 2.83, 11.82, 97.00, 8200001.90, 28502.50, 285000001.90, '2024-02-04'),\n      (30, 'Industrial Energy Storage_v20', 852.60, 2.75, 11.15, 95.20, 1250002.00, 4202.40, 18500002.00, '2024-02-06');",
      "solution_sql": "SELECT \n        deployment_type,\n        ROUND(storage_capacity_mwh, 2) as capacity_mwh,\n        ROUND(CAST(capacity_utilization_rate * 100 AS NUMERIC), 2) as utilization_pct,\n        ROUND(grid_stability_score, 2) as stability_score,\n        ROUND(energy_efficiency_pct, 1) as efficiency_pct,\n        ROUND(annual_energy_savings / 1000000, 2) as energy_savings_millions,\n        ROUND(carbon_offset_tons, 2) as carbon_offset_tons\n    FROM tesla_energy_storage \n    WHERE capacity_utilization_rate > 0.80 \n        AND grid_stability_score > 9.0\n    ORDER BY utilization_pct DESC;",
      "explanation": "Tesla energy storage analytics using capacity utilization and grid stability metrics for deployment strategy optimization.",
      "created_at": "2025-08-11T17:08:07.868Z",
      "expected_output": [
        {
          "capacity_mwh": "5202.70",
          "efficiency_pct": "97.0",
          "deployment_type": "Grid-Scale Battery Farm_v19",
          "stability_score": "11.82",
          "utilization_pct": "283.00",
          "carbon_offset_tons": "28502.50",
          "energy_savings_millions": "8.20"
        },
        {
          "capacity_mwh": "852.60",
          "efficiency_pct": "95.2",
          "deployment_type": "Industrial Energy Storage_v20",
          "stability_score": "11.15",
          "utilization_pct": "275.00",
          "carbon_offset_tons": "4202.40",
          "energy_savings_millions": "1.25"
        },
        {
          "capacity_mwh": "47.05",
          "efficiency_pct": "93.3",
          "deployment_type": "Residential Powerwall_v18",
          "stability_score": "10.75",
          "utilization_pct": "258.00",
          "carbon_offset_tons": "427.60",
          "energy_savings_millions": "0.09"
        },
        {
          "capacity_mwh": "127.45",
          "efficiency_pct": "94.5",
          "deployment_type": "Commercial Powerwall_v17",
          "stability_score": "10.95",
          "utilization_pct": "252.00",
          "carbon_offset_tons": "851.95",
          "energy_savings_millions": "0.19"
        },
        {
          "capacity_mwh": "2582.10",
          "efficiency_pct": "95.8",
          "deployment_type": "Utility-Scale Megapack_v16",
          "stability_score": "11.45",
          "utilization_pct": "248.00",
          "carbon_offset_tons": "12502.35",
          "energy_savings_millions": "4.50"
        },
        {
          "capacity_mwh": "5202.20",
          "efficiency_pct": "96.5",
          "deployment_type": "Grid-Scale Battery Farm_v14",
          "stability_score": "11.32",
          "utilization_pct": "233.00",
          "carbon_offset_tons": "28502.00",
          "energy_savings_millions": "8.20"
        },
        {
          "capacity_mwh": "852.10",
          "efficiency_pct": "94.7",
          "deployment_type": "Industrial Energy Storage_v15",
          "stability_score": "10.65",
          "utilization_pct": "225.00",
          "carbon_offset_tons": "4201.90",
          "energy_savings_millions": "1.25"
        },
        {
          "capacity_mwh": "46.55",
          "efficiency_pct": "92.8",
          "deployment_type": "Residential Powerwall_v13",
          "stability_score": "10.25",
          "utilization_pct": "208.00",
          "carbon_offset_tons": "427.10",
          "energy_savings_millions": "0.09"
        },
        {
          "capacity_mwh": "126.95",
          "efficiency_pct": "94.0",
          "deployment_type": "Commercial Powerwall_v12",
          "stability_score": "10.45",
          "utilization_pct": "202.00",
          "carbon_offset_tons": "851.45",
          "energy_savings_millions": "0.19"
        },
        {
          "capacity_mwh": "2581.60",
          "efficiency_pct": "95.3",
          "deployment_type": "Utility-Scale Megapack_v11",
          "stability_score": "10.95",
          "utilization_pct": "198.00",
          "carbon_offset_tons": "12501.85",
          "energy_savings_millions": "4.50"
        },
        {
          "capacity_mwh": "5201.70",
          "efficiency_pct": "96.0",
          "deployment_type": "Grid-Scale Battery Farm_v9",
          "stability_score": "10.82",
          "utilization_pct": "183.00",
          "carbon_offset_tons": "28501.50",
          "energy_savings_millions": "8.20"
        },
        {
          "capacity_mwh": "851.60",
          "efficiency_pct": "94.2",
          "deployment_type": "Industrial Energy Storage_v10",
          "stability_score": "10.15",
          "utilization_pct": "175.00",
          "carbon_offset_tons": "4201.40",
          "energy_savings_millions": "1.25"
        },
        {
          "capacity_mwh": "46.05",
          "efficiency_pct": "92.3",
          "deployment_type": "Residential Powerwall_v8",
          "stability_score": "9.75",
          "utilization_pct": "158.00",
          "carbon_offset_tons": "426.60",
          "energy_savings_millions": "0.09"
        },
        {
          "capacity_mwh": "126.45",
          "efficiency_pct": "93.5",
          "deployment_type": "Commercial Powerwall_v7",
          "stability_score": "9.95",
          "utilization_pct": "152.00",
          "carbon_offset_tons": "850.95",
          "energy_savings_millions": "0.19"
        },
        {
          "capacity_mwh": "2581.10",
          "efficiency_pct": "94.8",
          "deployment_type": "Utility-Scale Megapack_v6",
          "stability_score": "10.45",
          "utilization_pct": "148.00",
          "carbon_offset_tons": "12501.35",
          "energy_savings_millions": "4.50"
        },
        {
          "capacity_mwh": "5201.20",
          "efficiency_pct": "95.5",
          "deployment_type": "Grid-Scale Battery Farm_v4",
          "stability_score": "10.32",
          "utilization_pct": "133.00",
          "carbon_offset_tons": "28501.00",
          "energy_savings_millions": "8.20"
        },
        {
          "capacity_mwh": "851.10",
          "efficiency_pct": "93.7",
          "deployment_type": "Industrial Energy Storage_v5",
          "stability_score": "9.65",
          "utilization_pct": "125.00",
          "carbon_offset_tons": "4200.90",
          "energy_savings_millions": "1.25"
        },
        {
          "capacity_mwh": "45.55",
          "efficiency_pct": "91.8",
          "deployment_type": "Residential Powerwall_v3",
          "stability_score": "9.25",
          "utilization_pct": "108.00",
          "carbon_offset_tons": "426.10",
          "energy_savings_millions": "0.09"
        },
        {
          "capacity_mwh": "125.95",
          "efficiency_pct": "93.0",
          "deployment_type": "Commercial Powerwall_v2",
          "stability_score": "9.45",
          "utilization_pct": "102.00",
          "carbon_offset_tons": "850.45",
          "energy_savings_millions": "0.19"
        },
        {
          "capacity_mwh": "2580.60",
          "efficiency_pct": "94.3",
          "deployment_type": "Utility-Scale Megapack_v1",
          "stability_score": "9.95",
          "utilization_pct": "97.00",
          "carbon_offset_tons": "12500.85",
          "energy_savings_millions": "4.50"
        },
        {
          "capacity_mwh": "5200.80",
          "efficiency_pct": "95.1",
          "deployment_type": "Grid-Scale Battery Farm",
          "stability_score": "9.92",
          "utilization_pct": "92.50",
          "carbon_offset_tons": "28500.60",
          "energy_savings_millions": "8.20"
        },
        {
          "capacity_mwh": "2580.50",
          "efficiency_pct": "94.2",
          "deployment_type": "Utility-Scale Megapack",
          "stability_score": "9.85",
          "utilization_pct": "87.50",
          "carbon_offset_tons": "12500.75",
          "energy_savings_millions": "4.50"
        },
        {
          "capacity_mwh": "125.75",
          "efficiency_pct": "92.8",
          "deployment_type": "Commercial Powerwall",
          "stability_score": "9.25",
          "utilization_pct": "82.00",
          "carbon_offset_tons": "850.25",
          "energy_savings_millions": "0.19"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Tesla Energy Storage Analytics",
      "problem_slug": "vanguard-portfolio-analytics"
    },
    {
      "id": "77b2e443-ba7a-47a7-ab3c-e17f81aa645a",
      "problem_id": "d1092dcc-af01-4f71-9ec6-07be5e714e80",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE transactions (\n          transaction_id INT,\n          customer_id INT,\n          amount DECIMAL(10,2),\n          transaction_date DATE\n      );\n      INSERT INTO transactions  VALUES\n      (1, 101, 1250.00, '2024-01-15'),\n      (2, 102, 890.00, '2024-01-20'),\n      (3, 103, 2100.00, '2024-01-25'),\n      (4, 101, 650.00, '2024-02-10'),\n      (5, 104, 1800.00, '2024-02-15'),\n      (6, 102, 950.00, '2024-02-20'),\n      (7, 103, 1200.00, '2024-02-25'),\n      (8, 104, 750.00, '2024-03-05'),\n      (10, 111, 1250.10, '2024-01-16'),\n      (12, 122, 890.20, '2024-01-22'),\n      (14, 133, 2100.30, '2024-01-28'),\n      (16, 141, 650.40, '2024-02-14'),\n      (18, 154, 1800.50, '2024-02-20'),\n      (20, 162, 950.60, '2024-02-26'),\n      (22, 173, 1200.70, '2024-03-03'),\n      (24, 184, 750.80, '2024-03-12'),\n      (18, 191, 1250.90, '2024-01-24'),\n      (20, 202, 891.00, '2024-01-30'),\n      (22, 213, 2101.10, '2024-02-05'),\n      (24, 221, 651.20, '2024-02-22'),\n      (26, 234, 1801.30, '2024-02-28'),\n      (28, 242, 951.40, '2024-03-05'),\n      (30, 253, 1201.50, '2024-03-10'),\n      (32, 264, 751.60, '2024-03-20'),\n      (26, 271, 1251.70, '2024-02-01');",
      "solution_sql": "\n      WITH monthly_spending AS (\n        SELECT \n          TO_CHAR(transaction_date, 'YYYY-MM') as month,\n          customer_id,\n          SUM(amount) as total_spent\n        FROM transactions\n        GROUP BY TO_CHAR(transaction_date, 'YYYY-MM'), customer_id\n      ),\n      ranked_customers AS (\n        SELECT \n          month,\n          customer_id,\n          total_spent,\n          ROW_NUMBER() OVER (PARTITION BY month ORDER BY total_spent DESC) as rank\n        FROM monthly_spending\n      )\n      SELECT month, customer_id, total_spent\n      FROM ranked_customers\n      WHERE rank = 1\n      ORDER BY month;\n    ",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.769Z",
      "expected_output": [
        {
          "month": "2024-01",
          "customer_id": "133",
          "total_spent": "2100.30"
        },
        {
          "month": "2024-02",
          "customer_id": "213",
          "total_spent": "2101.10"
        },
        {
          "month": "2024-03",
          "customer_id": "253",
          "total_spent": "1201.50"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Top Spending Customers by Month",
      "problem_slug": "top-spending-customers-by-month"
    },
    {
      "id": "dfcec26f-5284-496d-9eb2-7613761d1672",
      "problem_id": "d1092dcc-af01-4f71-9ec6-07be5e714e80",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE transactions (\n          transaction_id INT,\n          customer_id INT,\n          amount DECIMAL(10,2),\n          transaction_date DATE\n      );\n      INSERT INTO transactions  VALUES\n      (1, 101, 1250.00, '2024-01-15'),\n      (2, 102, 890.00, '2024-01-20'),\n      (3, 103, 2100.00, '2024-01-25'),\n      (4, 101, 650.00, '2024-02-10'),\n      (5, 104, 1800.00, '2024-02-15'),\n      (6, 102, 950.00, '2024-02-20'),\n      (7, 103, 1200.00, '2024-02-25'),\n      (8, 104, 750.00, '2024-03-05'),\n      (10, 111, 1250.10, '2024-01-16'),\n      (12, 122, 890.20, '2024-01-22'),\n      (14, 133, 2100.30, '2024-01-28'),\n      (16, 141, 650.40, '2024-02-14'),\n      (18, 154, 1800.50, '2024-02-20'),\n      (20, 162, 950.60, '2024-02-26'),\n      (22, 173, 1200.70, '2024-03-03'),\n      (24, 184, 750.80, '2024-03-12'),\n      (18, 191, 1250.90, '2024-01-24'),\n      (20, 202, 891.00, '2024-01-30'),\n      (22, 213, 2101.10, '2024-02-05'),\n      (24, 221, 651.20, '2024-02-22'),\n      (26, 234, 1801.30, '2024-02-28'),\n      (28, 242, 951.40, '2024-03-05'),\n      (30, 253, 1201.50, '2024-03-10'),\n      (32, 264, 751.60, '2024-03-20'),\n      (26, 271, 1251.70, '2024-02-01');",
      "solution_sql": "\n      WITH monthly_spending AS (\n        SELECT \n          TO_CHAR(transaction_date, 'YYYY-MM') as month,\n          customer_id,\n          SUM(amount) as total_spent\n        FROM transactions\n        GROUP BY TO_CHAR(transaction_date, 'YYYY-MM'), customer_id\n      ),\n      ranked_customers AS (\n        SELECT \n          month,\n          customer_id,\n          total_spent,\n          ROW_NUMBER() OVER (PARTITION BY month ORDER BY total_spent DESC) as rank\n        FROM monthly_spending\n      )\n      SELECT month, customer_id, total_spent\n      FROM ranked_customers\n      WHERE rank = 1\n      ORDER BY month;\n    ",
      "explanation": "Solution uses window functions concepts to solve the business problem.",
      "created_at": "2025-08-11T13:51:04.041Z",
      "expected_output": [
        {
          "month": "2024-01",
          "customer_id": "133",
          "total_spent": "2100.30"
        },
        {
          "month": "2024-02",
          "customer_id": "213",
          "total_spent": "2101.10"
        },
        {
          "month": "2024-03",
          "customer_id": "253",
          "total_spent": "1201.50"
        }
      ],
      "explanation_detailed": "This problem demonstrates window functions for ranking within groups. CTEs make the solution more readable.",
      "approach_summary": "First aggregate spending by customer and month, then use window functions to rank within each month.",
      "key_concepts": [
        "Window functions",
        "ROW_NUMBER()",
        "PARTITION BY",
        "CTEs"
      ],
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": [
        "Using GROUP BY instead of window functions",
        "Incorrect partitioning"
      ],
      "optimization_tips": [
        "Window functions can be expensive on large datasets - consider proper indexing"
      ],
      "problem_title": "Top Spending Customers by Month",
      "problem_slug": "top-spending-customers-by-month"
    },
    {
      "id": "0faf2245-27af-4629-a684-98d2362c1361",
      "problem_id": "21e44923-0f54-4782-937c-59917622752b",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE ubs_wealth_management (\n        segment_id INT PRIMARY KEY,\n        wealth_segment VARCHAR(50),\n        assets_under_management DECIMAL(15,2),\n        portfolio_return DECIMAL(8,4),\n        portfolio_volatility DECIMAL(8,4),\n        advisory_fees DECIMAL(10,2),\n        client_retention_rate DECIMAL(5,3),\n        risk_free_rate DECIMAL(6,4),\n        client_satisfaction_score DECIMAL(3,1),\n        relationship_manager_ratio DECIMAL(5,1),\n        segment_date DATE\n    );\n      INSERT INTO ubs_wealth_management VALUES\n    (1, 'Ultra High Net Worth', 185000.00, 0.1485, 0.0750, 2775000.00, 0.978, 0.0200, 9.2, 25.5, '2024-01-15'),\n    (2, 'Family Offices', 125000.00, 0.1625, 0.0825, 1875000.00, 0.985, 0.0200, 9.5, 18.2, '2024-01-15'),\n    (3, 'Institutional Wealth', 95000.00, 0.1285, 0.0685, 1425000.00, 0.945, 0.0200, 8.8, 35.8, '2024-01-16'),\n    (4, 'High Net Worth', 65000.00, 0.1185, 0.0925, 975000.00, 0.925, 0.0200, 8.5, 42.5, '2024-01-16'),\n    (5, 'Affluent Clients', 45000.00, 0.1085, 0.1025, 675000.00, 0.915, 0.0200, 8.2, 55.2, '2024-01-17'),\n    (7, 'Ultra High Net Worth_v1', 185000.10, 0.25, 0.17, 2775000.10, 1.08, 0.12, 9.30, 25.60, '2024-01-16'),\n    (9, 'Family Offices_v2', 125000.20, 0.36, 0.28, 1875000.20, 1.19, 0.22, 9.70, 18.40, '2024-01-17'),\n    (11, 'Institutional Wealth_v3', 95000.30, 0.43, 0.37, 1425000.30, 1.25, 0.32, 9.10, 36.10, '2024-01-19'),\n    (13, 'High Net Worth_v4', 65000.40, 0.52, 0.49, 975000.40, 1.33, 0.42, 8.90, 42.90, '2024-01-20'),\n    (15, 'Affluent Clients_v5', 45000.50, 0.61, 0.60, 675000.50, 1.42, 0.52, 8.70, 55.70, '2024-01-22'),\n    (12, 'Ultra High Net Worth_v6', 185000.60, 0.75, 0.68, 2775000.60, 1.58, 0.62, 9.80, 26.10, '2024-01-21'),\n    (14, 'Family Offices_v7', 125000.70, 0.86, 0.78, 1875000.70, 1.69, 0.72, 10.20, 18.90, '2024-01-22'),\n    (16, 'Institutional Wealth_v8', 95000.80, 0.93, 0.87, 1425000.80, 1.75, 0.82, 9.60, 36.60, '2024-01-24'),\n    (18, 'High Net Worth_v9', 65000.90, 1.02, 0.99, 975000.90, 1.83, 0.92, 9.40, 43.40, '2024-01-25'),\n    (20, 'Affluent Clients_v10', 45001.00, 1.11, 1.10, 675001.00, 1.92, 1.02, 9.20, 56.20, '2024-01-27'),\n    (17, 'Ultra High Net Worth_v11', 185001.10, 1.25, 1.18, 2775001.10, 2.08, 1.12, 10.30, 26.60, '2024-01-26'),\n    (19, 'Family Offices_v12', 125001.20, 1.36, 1.28, 1875001.20, 2.19, 1.22, 10.70, 19.40, '2024-01-27'),\n    (21, 'Institutional Wealth_v13', 95001.30, 1.43, 1.37, 1425001.30, 2.25, 1.32, 10.10, 37.10, '2024-01-29'),\n    (23, 'High Net Worth_v14', 65001.40, 1.52, 1.49, 975001.40, 2.33, 1.42, 9.90, 43.90, '2024-01-30'),\n    (25, 'Affluent Clients_v15', 45001.50, 1.61, 1.60, 675001.50, 2.42, 1.52, 9.70, 56.70, '2024-02-01'),\n    (22, 'Ultra High Net Worth_v16', 185001.60, 1.75, 1.68, 2775001.60, 2.58, 1.62, 10.80, 27.10, '2024-01-31'),\n    (24, 'Family Offices_v17', 125001.70, 1.86, 1.78, 1875001.70, 2.69, 1.72, 11.20, 19.90, '2024-02-01'),\n    (26, 'Institutional Wealth_v18', 95001.80, 1.93, 1.87, 1425001.80, 2.75, 1.82, 10.60, 37.60, '2024-02-03'),\n    (28, 'High Net Worth_v19', 65001.90, 2.02, 1.99, 975001.90, 2.83, 1.92, 10.40, 44.40, '2024-02-04'),\n    (30, 'Affluent Clients_v20', 45002.00, 2.11, 2.10, 675002.00, 2.92, 2.02, 10.20, 57.20, '2024-02-06');",
      "solution_sql": "SELECT wealth_segment, client_satisfaction_score FROM ubs_wealth_management ORDER BY client_satisfaction_score DESC LIMIT 10;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.670Z",
      "expected_output": [
        {
          "wealth_segment": "Family Offices_v17",
          "client_satisfaction_score": "11.2"
        },
        {
          "wealth_segment": "Ultra High Net Worth_v16",
          "client_satisfaction_score": "10.8"
        },
        {
          "wealth_segment": "Family Offices_v12",
          "client_satisfaction_score": "10.7"
        },
        {
          "wealth_segment": "Institutional Wealth_v18",
          "client_satisfaction_score": "10.6"
        },
        {
          "wealth_segment": "High Net Worth_v19",
          "client_satisfaction_score": "10.4"
        },
        {
          "wealth_segment": "Ultra High Net Worth_v11",
          "client_satisfaction_score": "10.3"
        },
        {
          "wealth_segment": "Affluent Clients_v20",
          "client_satisfaction_score": "10.2"
        },
        {
          "wealth_segment": "Family Offices_v7",
          "client_satisfaction_score": "10.2"
        },
        {
          "wealth_segment": "Institutional Wealth_v13",
          "client_satisfaction_score": "10.1"
        },
        {
          "wealth_segment": "High Net Worth_v14",
          "client_satisfaction_score": "9.9"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "UBS Wealth Management Analytics",
      "problem_slug": "morgan-stanley-risk-management-system"
    },
    {
      "id": "2e839164-d51b-4372-8bba-6247e701626d",
      "problem_id": "21e44923-0f54-4782-937c-59917622752b",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE ubs_wealth_management (\n        segment_id INT PRIMARY KEY,\n        wealth_segment VARCHAR(50),\n        assets_under_management DECIMAL(15,2),\n        portfolio_return DECIMAL(8,4),\n        portfolio_volatility DECIMAL(8,4),\n        advisory_fees DECIMAL(10,2),\n        client_retention_rate DECIMAL(5,3),\n        risk_free_rate DECIMAL(6,4),\n        client_satisfaction_score DECIMAL(3,1),\n        relationship_manager_ratio DECIMAL(5,1),\n        segment_date DATE\n    );\n      INSERT INTO ubs_wealth_management VALUES\n    (1, 'Ultra High Net Worth', 185000.00, 0.1485, 0.0750, 2775000.00, 0.978, 0.0200, 9.2, 25.5, '2024-01-15'),\n    (2, 'Family Offices', 125000.00, 0.1625, 0.0825, 1875000.00, 0.985, 0.0200, 9.5, 18.2, '2024-01-15'),\n    (3, 'Institutional Wealth', 95000.00, 0.1285, 0.0685, 1425000.00, 0.945, 0.0200, 8.8, 35.8, '2024-01-16'),\n    (4, 'High Net Worth', 65000.00, 0.1185, 0.0925, 975000.00, 0.925, 0.0200, 8.5, 42.5, '2024-01-16'),\n    (5, 'Affluent Clients', 45000.00, 0.1085, 0.1025, 675000.00, 0.915, 0.0200, 8.2, 55.2, '2024-01-17'),\n    (7, 'Ultra High Net Worth_v1', 185000.10, 0.25, 0.17, 2775000.10, 1.08, 0.12, 9.30, 25.60, '2024-01-16'),\n    (9, 'Family Offices_v2', 125000.20, 0.36, 0.28, 1875000.20, 1.19, 0.22, 9.70, 18.40, '2024-01-17'),\n    (11, 'Institutional Wealth_v3', 95000.30, 0.43, 0.37, 1425000.30, 1.25, 0.32, 9.10, 36.10, '2024-01-19'),\n    (13, 'High Net Worth_v4', 65000.40, 0.52, 0.49, 975000.40, 1.33, 0.42, 8.90, 42.90, '2024-01-20'),\n    (15, 'Affluent Clients_v5', 45000.50, 0.61, 0.60, 675000.50, 1.42, 0.52, 8.70, 55.70, '2024-01-22'),\n    (12, 'Ultra High Net Worth_v6', 185000.60, 0.75, 0.68, 2775000.60, 1.58, 0.62, 9.80, 26.10, '2024-01-21'),\n    (14, 'Family Offices_v7', 125000.70, 0.86, 0.78, 1875000.70, 1.69, 0.72, 10.20, 18.90, '2024-01-22'),\n    (16, 'Institutional Wealth_v8', 95000.80, 0.93, 0.87, 1425000.80, 1.75, 0.82, 9.60, 36.60, '2024-01-24'),\n    (18, 'High Net Worth_v9', 65000.90, 1.02, 0.99, 975000.90, 1.83, 0.92, 9.40, 43.40, '2024-01-25'),\n    (20, 'Affluent Clients_v10', 45001.00, 1.11, 1.10, 675001.00, 1.92, 1.02, 9.20, 56.20, '2024-01-27'),\n    (17, 'Ultra High Net Worth_v11', 185001.10, 1.25, 1.18, 2775001.10, 2.08, 1.12, 10.30, 26.60, '2024-01-26'),\n    (19, 'Family Offices_v12', 125001.20, 1.36, 1.28, 1875001.20, 2.19, 1.22, 10.70, 19.40, '2024-01-27'),\n    (21, 'Institutional Wealth_v13', 95001.30, 1.43, 1.37, 1425001.30, 2.25, 1.32, 10.10, 37.10, '2024-01-29'),\n    (23, 'High Net Worth_v14', 65001.40, 1.52, 1.49, 975001.40, 2.33, 1.42, 9.90, 43.90, '2024-01-30'),\n    (25, 'Affluent Clients_v15', 45001.50, 1.61, 1.60, 675001.50, 2.42, 1.52, 9.70, 56.70, '2024-02-01'),\n    (22, 'Ultra High Net Worth_v16', 185001.60, 1.75, 1.68, 2775001.60, 2.58, 1.62, 10.80, 27.10, '2024-01-31'),\n    (24, 'Family Offices_v17', 125001.70, 1.86, 1.78, 1875001.70, 2.69, 1.72, 11.20, 19.90, '2024-02-01'),\n    (26, 'Institutional Wealth_v18', 95001.80, 1.93, 1.87, 1425001.80, 2.75, 1.82, 10.60, 37.60, '2024-02-03'),\n    (28, 'High Net Worth_v19', 65001.90, 2.02, 1.99, 975001.90, 2.83, 1.92, 10.40, 44.40, '2024-02-04'),\n    (30, 'Affluent Clients_v20', 45002.00, 2.11, 2.10, 675002.00, 2.92, 2.02, 10.20, 57.20, '2024-02-06');",
      "solution_sql": "SELECT wealth_segment, client_satisfaction_score FROM ubs_wealth_management ORDER BY client_satisfaction_score DESC LIMIT 10;",
      "explanation": "Advanced UBS wealth management analytics using Sharpe ratios, fee margins, and retention rates for private banking optimization.",
      "created_at": "2025-08-11T17:08:07.881Z",
      "expected_output": [
        {
          "wealth_segment": "Family Offices_v17",
          "client_satisfaction_score": "11.2"
        },
        {
          "wealth_segment": "Ultra High Net Worth_v16",
          "client_satisfaction_score": "10.8"
        },
        {
          "wealth_segment": "Family Offices_v12",
          "client_satisfaction_score": "10.7"
        },
        {
          "wealth_segment": "Institutional Wealth_v18",
          "client_satisfaction_score": "10.6"
        },
        {
          "wealth_segment": "High Net Worth_v19",
          "client_satisfaction_score": "10.4"
        },
        {
          "wealth_segment": "Ultra High Net Worth_v11",
          "client_satisfaction_score": "10.3"
        },
        {
          "wealth_segment": "Family Offices_v7",
          "client_satisfaction_score": "10.2"
        },
        {
          "wealth_segment": "Affluent Clients_v20",
          "client_satisfaction_score": "10.2"
        },
        {
          "wealth_segment": "Institutional Wealth_v13",
          "client_satisfaction_score": "10.1"
        },
        {
          "wealth_segment": "High Net Worth_v14",
          "client_satisfaction_score": "9.9"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "UBS Wealth Management Analytics",
      "problem_slug": "morgan-stanley-risk-management-system"
    },
    {
      "id": "4edfdbf0-3721-427a-bc6e-38d9b2ad77e3",
      "problem_id": "1b437802-cd3e-4030-901c-74517fd027af",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE ubs_private_banking (\n        client_id INT PRIMARY KEY,\n        wealth_segment VARCHAR(50),\n        portfolio_value DECIMAL(15,2),\n        annual_return DECIMAL(8,4),\n        benchmark_return DECIMAL(8,4),\n        portfolio_volatility DECIMAL(8,4),\n        risk_free_rate DECIMAL(6,4),\n        alternative_allocation DECIMAL(6,3),\n        private_equity_allocation DECIMAL(6,3),\n        hedge_fund_allocation DECIMAL(6,3),\n        real_estate_allocation DECIMAL(6,3),\n        portfolio_date DATE\n    );\n      INSERT INTO ubs_private_banking VALUES\n    (1, 'Ultra High Net Worth', 500000000.50, 14.2500, 11.8500, 18.5000, 2.2500, 0.350, 0.150, 0.125, 0.075, '2024-01-15'),\n    (2, 'High Net Worth', 125000000.75, 12.5500, 10.2500, 16.2500, 2.2500, 0.250, 0.100, 0.075, 0.075, '2024-01-15'),\n    (3, 'Emerging Wealth', 25000000.25, 10.8500, 9.5500, 14.7500, 2.2500, 0.150, 0.050, 0.050, 0.050, '2024-01-16'),\n    (4, 'Family Office', 750000000.80, 15.5500, 12.2500, 20.2500, 2.2500, 0.450, 0.200, 0.150, 0.100, '2024-01-16'),\n    (5, 'Institutional', 350000000.60, 13.2500, 10.8500, 17.5000, 2.2500, 0.300, 0.125, 0.100, 0.075, '2024-01-17'),\n    (7, 'Ultra High Net Worth_v1', 500000000.60, 14.35, 11.95, 18.60, 2.35, 0.45, 0.25, 0.23, 0.17, '2024-01-16'),\n    (9, 'High Net Worth_v2', 125000000.95, 12.75, 10.45, 16.45, 2.45, 0.45, 0.30, 0.28, 0.28, '2024-01-17'),\n    (11, 'Emerging Wealth_v3', 25000000.55, 11.15, 9.85, 15.05, 2.55, 0.45, 0.35, 0.35, 0.35, '2024-01-19'),\n    (13, 'Family Office_v4', 750000001.20, 15.95, 12.65, 20.65, 2.65, 0.85, 0.60, 0.55, 0.50, '2024-01-20'),\n    (15, 'Institutional_v5', 350000001.10, 13.75, 11.35, 18.00, 2.75, 0.80, 0.63, 0.60, 0.57, '2024-01-22'),\n    (12, 'Ultra High Net Worth_v6', 500000001.10, 14.85, 12.45, 19.10, 2.85, 0.95, 0.75, 0.73, 0.68, '2024-01-21'),\n    (14, 'High Net Worth_v7', 125000001.45, 13.25, 10.95, 16.95, 2.95, 0.95, 0.80, 0.78, 0.78, '2024-01-22'),\n    (16, 'Emerging Wealth_v8', 25000001.05, 11.65, 10.35, 15.55, 3.05, 0.95, 0.85, 0.85, 0.85, '2024-01-24'),\n    (18, 'Family Office_v9', 750000001.70, 16.45, 13.15, 21.15, 3.15, 1.35, 1.10, 1.05, 1.00, '2024-01-25'),\n    (20, 'Institutional_v10', 350000001.60, 14.25, 11.85, 18.50, 3.25, 1.30, 1.13, 1.10, 1.07, '2024-01-27'),\n    (17, 'Ultra High Net Worth_v11', 500000001.60, 15.35, 12.95, 19.60, 3.35, 1.45, 1.25, 1.23, 1.18, '2024-01-26'),\n    (19, 'High Net Worth_v12', 125000001.95, 13.75, 11.45, 17.45, 3.45, 1.45, 1.30, 1.28, 1.28, '2024-01-27'),\n    (21, 'Emerging Wealth_v13', 25000001.55, 12.15, 10.85, 16.05, 3.55, 1.45, 1.35, 1.35, 1.35, '2024-01-29'),\n    (23, 'Family Office_v14', 750000002.20, 16.95, 13.65, 21.65, 3.65, 1.85, 1.60, 1.55, 1.50, '2024-01-30'),\n    (25, 'Institutional_v15', 350000002.10, 14.75, 12.35, 19.00, 3.75, 1.80, 1.63, 1.60, 1.57, '2024-02-01'),\n    (22, 'Ultra High Net Worth_v16', 500000002.10, 15.85, 13.45, 20.10, 3.85, 1.95, 1.75, 1.73, 1.68, '2024-01-31'),\n    (24, 'High Net Worth_v17', 125000002.45, 14.25, 11.95, 17.95, 3.95, 1.95, 1.80, 1.78, 1.78, '2024-02-01'),\n    (26, 'Emerging Wealth_v18', 25000002.05, 12.65, 11.35, 16.55, 4.05, 1.95, 1.85, 1.85, 1.85, '2024-02-03'),\n    (28, 'Family Office_v19', 750000002.70, 17.45, 14.15, 22.15, 4.15, 2.35, 2.10, 2.05, 2.00, '2024-02-04'),\n    (30, 'Institutional_v20', 350000002.60, 15.25, 12.85, 19.50, 4.25, 2.30, 2.13, 2.10, 2.08, '2024-02-06');",
      "solution_sql": "SELECT * FROM ubs_private_banking ORDER BY wealth_segment LIMIT 10;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.657Z",
      "expected_output": [
        {
          "client_id": "3",
          "annual_return": "10.8500",
          "portfolio_date": "2024-01-16",
          "risk_free_rate": "2.2500",
          "wealth_segment": "Emerging Wealth",
          "portfolio_value": "25000000.25",
          "benchmark_return": "9.5500",
          "portfolio_volatility": "14.7500",
          "hedge_fund_allocation": "0.050",
          "alternative_allocation": "0.150",
          "real_estate_allocation": "0.050",
          "private_equity_allocation": "0.050"
        },
        {
          "client_id": "21",
          "annual_return": "12.1500",
          "portfolio_date": "2024-01-29",
          "risk_free_rate": "3.5500",
          "wealth_segment": "Emerging Wealth_v13",
          "portfolio_value": "25000001.55",
          "benchmark_return": "10.8500",
          "portfolio_volatility": "16.0500",
          "hedge_fund_allocation": "1.350",
          "alternative_allocation": "1.450",
          "real_estate_allocation": "1.350",
          "private_equity_allocation": "1.350"
        },
        {
          "client_id": "26",
          "annual_return": "12.6500",
          "portfolio_date": "2024-02-03",
          "risk_free_rate": "4.0500",
          "wealth_segment": "Emerging Wealth_v18",
          "portfolio_value": "25000002.05",
          "benchmark_return": "11.3500",
          "portfolio_volatility": "16.5500",
          "hedge_fund_allocation": "1.850",
          "alternative_allocation": "1.950",
          "real_estate_allocation": "1.850",
          "private_equity_allocation": "1.850"
        },
        {
          "client_id": "11",
          "annual_return": "11.1500",
          "portfolio_date": "2024-01-19",
          "risk_free_rate": "2.5500",
          "wealth_segment": "Emerging Wealth_v3",
          "portfolio_value": "25000000.55",
          "benchmark_return": "9.8500",
          "portfolio_volatility": "15.0500",
          "hedge_fund_allocation": "0.350",
          "alternative_allocation": "0.450",
          "real_estate_allocation": "0.350",
          "private_equity_allocation": "0.350"
        },
        {
          "client_id": "16",
          "annual_return": "11.6500",
          "portfolio_date": "2024-01-24",
          "risk_free_rate": "3.0500",
          "wealth_segment": "Emerging Wealth_v8",
          "portfolio_value": "25000001.05",
          "benchmark_return": "10.3500",
          "portfolio_volatility": "15.5500",
          "hedge_fund_allocation": "0.850",
          "alternative_allocation": "0.950",
          "real_estate_allocation": "0.850",
          "private_equity_allocation": "0.850"
        },
        {
          "client_id": "4",
          "annual_return": "15.5500",
          "portfolio_date": "2024-01-16",
          "risk_free_rate": "2.2500",
          "wealth_segment": "Family Office",
          "portfolio_value": "750000000.80",
          "benchmark_return": "12.2500",
          "portfolio_volatility": "20.2500",
          "hedge_fund_allocation": "0.150",
          "alternative_allocation": "0.450",
          "real_estate_allocation": "0.100",
          "private_equity_allocation": "0.200"
        },
        {
          "client_id": "23",
          "annual_return": "16.9500",
          "portfolio_date": "2024-01-30",
          "risk_free_rate": "3.6500",
          "wealth_segment": "Family Office_v14",
          "portfolio_value": "750000002.20",
          "benchmark_return": "13.6500",
          "portfolio_volatility": "21.6500",
          "hedge_fund_allocation": "1.550",
          "alternative_allocation": "1.850",
          "real_estate_allocation": "1.500",
          "private_equity_allocation": "1.600"
        },
        {
          "client_id": "28",
          "annual_return": "17.4500",
          "portfolio_date": "2024-02-04",
          "risk_free_rate": "4.1500",
          "wealth_segment": "Family Office_v19",
          "portfolio_value": "750000002.70",
          "benchmark_return": "14.1500",
          "portfolio_volatility": "22.1500",
          "hedge_fund_allocation": "2.050",
          "alternative_allocation": "2.350",
          "real_estate_allocation": "2.000",
          "private_equity_allocation": "2.100"
        },
        {
          "client_id": "13",
          "annual_return": "15.9500",
          "portfolio_date": "2024-01-20",
          "risk_free_rate": "2.6500",
          "wealth_segment": "Family Office_v4",
          "portfolio_value": "750000001.20",
          "benchmark_return": "12.6500",
          "portfolio_volatility": "20.6500",
          "hedge_fund_allocation": "0.550",
          "alternative_allocation": "0.850",
          "real_estate_allocation": "0.500",
          "private_equity_allocation": "0.600"
        },
        {
          "client_id": "18",
          "annual_return": "16.4500",
          "portfolio_date": "2024-01-25",
          "risk_free_rate": "3.1500",
          "wealth_segment": "Family Office_v9",
          "portfolio_value": "750000001.70",
          "benchmark_return": "13.1500",
          "portfolio_volatility": "21.1500",
          "hedge_fund_allocation": "1.050",
          "alternative_allocation": "1.350",
          "real_estate_allocation": "1.000",
          "private_equity_allocation": "1.100"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "UBS Wealth Management Private Banking",
      "problem_slug": "fraudulent-transaction-detection"
    },
    {
      "id": "bf6ffc26-ce6e-4516-8801-d7c0b8901ae3",
      "problem_id": "1b437802-cd3e-4030-901c-74517fd027af",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE ubs_private_banking (\n        client_id INT PRIMARY KEY,\n        wealth_segment VARCHAR(50),\n        portfolio_value DECIMAL(15,2),\n        annual_return DECIMAL(8,4),\n        benchmark_return DECIMAL(8,4),\n        portfolio_volatility DECIMAL(8,4),\n        risk_free_rate DECIMAL(6,4),\n        alternative_allocation DECIMAL(6,3),\n        private_equity_allocation DECIMAL(6,3),\n        hedge_fund_allocation DECIMAL(6,3),\n        real_estate_allocation DECIMAL(6,3),\n        portfolio_date DATE\n    );\n      INSERT INTO ubs_private_banking VALUES\n    (1, 'Ultra High Net Worth', 500000000.50, 14.2500, 11.8500, 18.5000, 2.2500, 0.350, 0.150, 0.125, 0.075, '2024-01-15'),\n    (2, 'High Net Worth', 125000000.75, 12.5500, 10.2500, 16.2500, 2.2500, 0.250, 0.100, 0.075, 0.075, '2024-01-15'),\n    (3, 'Emerging Wealth', 25000000.25, 10.8500, 9.5500, 14.7500, 2.2500, 0.150, 0.050, 0.050, 0.050, '2024-01-16'),\n    (4, 'Family Office', 750000000.80, 15.5500, 12.2500, 20.2500, 2.2500, 0.450, 0.200, 0.150, 0.100, '2024-01-16'),\n    (5, 'Institutional', 350000000.60, 13.2500, 10.8500, 17.5000, 2.2500, 0.300, 0.125, 0.100, 0.075, '2024-01-17'),\n    (7, 'Ultra High Net Worth_v1', 500000000.60, 14.35, 11.95, 18.60, 2.35, 0.45, 0.25, 0.23, 0.17, '2024-01-16'),\n    (9, 'High Net Worth_v2', 125000000.95, 12.75, 10.45, 16.45, 2.45, 0.45, 0.30, 0.28, 0.28, '2024-01-17'),\n    (11, 'Emerging Wealth_v3', 25000000.55, 11.15, 9.85, 15.05, 2.55, 0.45, 0.35, 0.35, 0.35, '2024-01-19'),\n    (13, 'Family Office_v4', 750000001.20, 15.95, 12.65, 20.65, 2.65, 0.85, 0.60, 0.55, 0.50, '2024-01-20'),\n    (15, 'Institutional_v5', 350000001.10, 13.75, 11.35, 18.00, 2.75, 0.80, 0.63, 0.60, 0.57, '2024-01-22'),\n    (12, 'Ultra High Net Worth_v6', 500000001.10, 14.85, 12.45, 19.10, 2.85, 0.95, 0.75, 0.73, 0.68, '2024-01-21'),\n    (14, 'High Net Worth_v7', 125000001.45, 13.25, 10.95, 16.95, 2.95, 0.95, 0.80, 0.78, 0.78, '2024-01-22'),\n    (16, 'Emerging Wealth_v8', 25000001.05, 11.65, 10.35, 15.55, 3.05, 0.95, 0.85, 0.85, 0.85, '2024-01-24'),\n    (18, 'Family Office_v9', 750000001.70, 16.45, 13.15, 21.15, 3.15, 1.35, 1.10, 1.05, 1.00, '2024-01-25'),\n    (20, 'Institutional_v10', 350000001.60, 14.25, 11.85, 18.50, 3.25, 1.30, 1.13, 1.10, 1.07, '2024-01-27'),\n    (17, 'Ultra High Net Worth_v11', 500000001.60, 15.35, 12.95, 19.60, 3.35, 1.45, 1.25, 1.23, 1.18, '2024-01-26'),\n    (19, 'High Net Worth_v12', 125000001.95, 13.75, 11.45, 17.45, 3.45, 1.45, 1.30, 1.28, 1.28, '2024-01-27'),\n    (21, 'Emerging Wealth_v13', 25000001.55, 12.15, 10.85, 16.05, 3.55, 1.45, 1.35, 1.35, 1.35, '2024-01-29'),\n    (23, 'Family Office_v14', 750000002.20, 16.95, 13.65, 21.65, 3.65, 1.85, 1.60, 1.55, 1.50, '2024-01-30'),\n    (25, 'Institutional_v15', 350000002.10, 14.75, 12.35, 19.00, 3.75, 1.80, 1.63, 1.60, 1.57, '2024-02-01'),\n    (22, 'Ultra High Net Worth_v16', 500000002.10, 15.85, 13.45, 20.10, 3.85, 1.95, 1.75, 1.73, 1.68, '2024-01-31'),\n    (24, 'High Net Worth_v17', 125000002.45, 14.25, 11.95, 17.95, 3.95, 1.95, 1.80, 1.78, 1.78, '2024-02-01'),\n    (26, 'Emerging Wealth_v18', 25000002.05, 12.65, 11.35, 16.55, 4.05, 1.95, 1.85, 1.85, 1.85, '2024-02-03'),\n    (28, 'Family Office_v19', 750000002.70, 17.45, 14.15, 22.15, 4.15, 2.35, 2.10, 2.05, 2.00, '2024-02-04'),\n    (30, 'Institutional_v20', 350000002.60, 15.25, 12.85, 19.50, 4.25, 2.30, 2.13, 2.10, 2.08, '2024-02-06');",
      "solution_sql": "SELECT * FROM ubs_private_banking ORDER BY wealth_segment LIMIT 10;",
      "explanation": "Advanced private banking analytics using alpha generation and risk-adjusted performance metrics for ultra-high-net-worth wealth management.",
      "created_at": "2025-08-11T13:51:09.988Z",
      "expected_output": [
        {
          "client_id": "3",
          "annual_return": "10.8500",
          "portfolio_date": "Tue Jan 16 2024 00:00:00 GMT-0500 (Eastern Standard Time)",
          "risk_free_rate": "2.2500",
          "wealth_segment": "Emerging Wealth",
          "portfolio_value": "25000000.25",
          "benchmark_return": "9.5500",
          "portfolio_volatility": "14.7500",
          "hedge_fund_allocation": "0.050",
          "alternative_allocation": "0.150",
          "real_estate_allocation": "0.050",
          "private_equity_allocation": "0.050"
        },
        {
          "client_id": "21",
          "annual_return": "12.1500",
          "portfolio_date": "Mon Jan 29 2024 00:00:00 GMT-0500 (Eastern Standard Time)",
          "risk_free_rate": "3.5500",
          "wealth_segment": "Emerging Wealth_v13",
          "portfolio_value": "25000001.55",
          "benchmark_return": "10.8500",
          "portfolio_volatility": "16.0500",
          "hedge_fund_allocation": "1.350",
          "alternative_allocation": "1.450",
          "real_estate_allocation": "1.350",
          "private_equity_allocation": "1.350"
        },
        {
          "client_id": "26",
          "annual_return": "12.6500",
          "portfolio_date": "Sat Feb 03 2024 00:00:00 GMT-0500 (Eastern Standard Time)",
          "risk_free_rate": "4.0500",
          "wealth_segment": "Emerging Wealth_v18",
          "portfolio_value": "25000002.05",
          "benchmark_return": "11.3500",
          "portfolio_volatility": "16.5500",
          "hedge_fund_allocation": "1.850",
          "alternative_allocation": "1.950",
          "real_estate_allocation": "1.850",
          "private_equity_allocation": "1.850"
        },
        {
          "client_id": "11",
          "annual_return": "11.1500",
          "portfolio_date": "Fri Jan 19 2024 00:00:00 GMT-0500 (Eastern Standard Time)",
          "risk_free_rate": "2.5500",
          "wealth_segment": "Emerging Wealth_v3",
          "portfolio_value": "25000000.55",
          "benchmark_return": "9.8500",
          "portfolio_volatility": "15.0500",
          "hedge_fund_allocation": "0.350",
          "alternative_allocation": "0.450",
          "real_estate_allocation": "0.350",
          "private_equity_allocation": "0.350"
        },
        {
          "client_id": "16",
          "annual_return": "11.6500",
          "portfolio_date": "Wed Jan 24 2024 00:00:00 GMT-0500 (Eastern Standard Time)",
          "risk_free_rate": "3.0500",
          "wealth_segment": "Emerging Wealth_v8",
          "portfolio_value": "25000001.05",
          "benchmark_return": "10.3500",
          "portfolio_volatility": "15.5500",
          "hedge_fund_allocation": "0.850",
          "alternative_allocation": "0.950",
          "real_estate_allocation": "0.850",
          "private_equity_allocation": "0.850"
        },
        {
          "client_id": "4",
          "annual_return": "15.5500",
          "portfolio_date": "Tue Jan 16 2024 00:00:00 GMT-0500 (Eastern Standard Time)",
          "risk_free_rate": "2.2500",
          "wealth_segment": "Family Office",
          "portfolio_value": "750000000.80",
          "benchmark_return": "12.2500",
          "portfolio_volatility": "20.2500",
          "hedge_fund_allocation": "0.150",
          "alternative_allocation": "0.450",
          "real_estate_allocation": "0.100",
          "private_equity_allocation": "0.200"
        },
        {
          "client_id": "23",
          "annual_return": "16.9500",
          "portfolio_date": "Tue Jan 30 2024 00:00:00 GMT-0500 (Eastern Standard Time)",
          "risk_free_rate": "3.6500",
          "wealth_segment": "Family Office_v14",
          "portfolio_value": "750000002.20",
          "benchmark_return": "13.6500",
          "portfolio_volatility": "21.6500",
          "hedge_fund_allocation": "1.550",
          "alternative_allocation": "1.850",
          "real_estate_allocation": "1.500",
          "private_equity_allocation": "1.600"
        },
        {
          "client_id": "28",
          "annual_return": "17.4500",
          "portfolio_date": "Sun Feb 04 2024 00:00:00 GMT-0500 (Eastern Standard Time)",
          "risk_free_rate": "4.1500",
          "wealth_segment": "Family Office_v19",
          "portfolio_value": "750000002.70",
          "benchmark_return": "14.1500",
          "portfolio_volatility": "22.1500",
          "hedge_fund_allocation": "2.050",
          "alternative_allocation": "2.350",
          "real_estate_allocation": "2.000",
          "private_equity_allocation": "2.100"
        },
        {
          "client_id": "13",
          "annual_return": "15.9500",
          "portfolio_date": "Sat Jan 20 2024 00:00:00 GMT-0500 (Eastern Standard Time)",
          "risk_free_rate": "2.6500",
          "wealth_segment": "Family Office_v4",
          "portfolio_value": "750000001.20",
          "benchmark_return": "12.6500",
          "portfolio_volatility": "20.6500",
          "hedge_fund_allocation": "0.550",
          "alternative_allocation": "0.850",
          "real_estate_allocation": "0.500",
          "private_equity_allocation": "0.600"
        },
        {
          "client_id": "18",
          "annual_return": "16.4500",
          "portfolio_date": "Thu Jan 25 2024 00:00:00 GMT-0500 (Eastern Standard Time)",
          "risk_free_rate": "3.1500",
          "wealth_segment": "Family Office_v9",
          "portfolio_value": "750000001.70",
          "benchmark_return": "13.1500",
          "portfolio_volatility": "21.1500",
          "hedge_fund_allocation": "1.050",
          "alternative_allocation": "1.350",
          "real_estate_allocation": "1.000",
          "private_equity_allocation": "1.100"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "UBS Wealth Management Private Banking",
      "problem_slug": "fraudulent-transaction-detection"
    },
    {
      "id": "73789a2d-8de2-41d6-977d-3f812121dd97",
      "problem_id": "15382d01-697d-44bc-bfaa-931fec0cbdae",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE uber_market_performance (\n        market_id INT PRIMARY KEY,\n        metropolitan_area VARCHAR(50),\n        total_rides INT,\n        gross_ride_revenue DECIMAL(12,2),\n        driver_count INT,\n        market_penetration DECIMAL(5,2),\n        market_date DATE\n    );\n      INSERT INTO uber_market_performance  VALUES\n      (1, 'San Francisco Bay Area', 8500000, 170000000.50, 85000, 65.25, '2024-01-15'),\n      (2, 'New York Metro', 12000000, 180000000.75, 125000, 58.40, '2024-01-15'),\n      (3, 'Los Angeles', 9200000, 138000000.25, 95000, 52.80, '2024-01-16'),\n      (4, 'Chicago', 5800000, 87000000.80, 62000, 48.60, '2024-01-16'),\n      (5, 'Miami', 3500000, 59500000.60, 35000, 45.20, '2024-01-17'),\n      (7, 'San Francisco Bay Area_v1', 8500010, 170000000.60, 85010, 65.35, '2024-01-16'),\n      (9, 'New York Metro_v2', 12000020, 180000000.95, 125020, 58.60, '2024-01-17'),\n      (11, 'Los Angeles_v3', 9200030, 138000000.55, 95030, 53.10, '2024-01-19'),\n      (13, 'Chicago_v4', 5800040, 87000001.20, 62040, 49.00, '2024-01-20'),\n      (15, 'Miami_v5', 3500050, 59500001.10, 35050, 45.70, '2024-01-22'),\n      (12, 'San Francisco Bay Area_v6', 8500060, 170000001.10, 85060, 65.85, '2024-01-21'),\n      (14, 'New York Metro_v7', 12000070, 180000001.45, 125070, 59.10, '2024-01-22'),\n      (16, 'Los Angeles_v8', 9200080, 138000001.05, 95080, 53.60, '2024-01-24'),\n      (18, 'Chicago_v9', 5800090, 87000001.70, 62090, 49.50, '2024-01-25'),\n      (20, 'Miami_v10', 3500100, 59500001.60, 35100, 46.20, '2024-01-27'),\n      (17, 'San Francisco Bay Area_v11', 8500110, 170000001.60, 85110, 66.35, '2024-01-26'),\n      (19, 'New York Metro_v12', 12000120, 180000001.95, 125120, 59.60, '2024-01-27'),\n      (21, 'Los Angeles_v13', 9200130, 138000001.55, 95130, 54.10, '2024-01-29'),\n      (23, 'Chicago_v14', 5800140, 87000002.20, 62140, 50.00, '2024-01-30'),\n      (25, 'Miami_v15', 3500150, 59500002.10, 35150, 46.70, '2024-02-01'),\n      (22, 'San Francisco Bay Area_v16', 8500160, 170000002.10, 85160, 66.85, '2024-01-31'),\n      (24, 'New York Metro_v17', 12000170, 180000002.45, 125170, 60.10, '2024-02-01'),\n      (26, 'Los Angeles_v18', 9200180, 138000002.05, 95180, 54.60, '2024-02-03'),\n      (28, 'Chicago_v19', 5800190, 87000002.70, 62190, 50.50, '2024-02-04'),\n      (30, 'Miami_v20', 3500200, 59500002.60, 35200, 47.20, '2024-02-06');",
      "solution_sql": "SELECT \n        metropolitan_area, \n        ROUND(gross_ride_revenue / total_rides, 2) as avg_revenue_per_ride\n    FROM uber_market_performance \n    WHERE (gross_ride_revenue / total_rides) > 15 \n    ORDER BY avg_revenue_per_ride DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.653Z",
      "expected_output": [
        {
          "metropolitan_area": "San Francisco Bay Area",
          "avg_revenue_per_ride": "20.00"
        },
        {
          "metropolitan_area": "San Francisco Bay Area_v1",
          "avg_revenue_per_ride": "20.00"
        },
        {
          "metropolitan_area": "San Francisco Bay Area_v6",
          "avg_revenue_per_ride": "20.00"
        },
        {
          "metropolitan_area": "San Francisco Bay Area_v11",
          "avg_revenue_per_ride": "20.00"
        },
        {
          "metropolitan_area": "San Francisco Bay Area_v16",
          "avg_revenue_per_ride": "20.00"
        },
        {
          "metropolitan_area": "Miami",
          "avg_revenue_per_ride": "17.00"
        },
        {
          "metropolitan_area": "Miami_v5",
          "avg_revenue_per_ride": "17.00"
        },
        {
          "metropolitan_area": "Miami_v10",
          "avg_revenue_per_ride": "17.00"
        },
        {
          "metropolitan_area": "Miami_v15",
          "avg_revenue_per_ride": "17.00"
        },
        {
          "metropolitan_area": "Miami_v20",
          "avg_revenue_per_ride": "17.00"
        },
        {
          "metropolitan_area": "New York Metro",
          "avg_revenue_per_ride": "15.00"
        },
        {
          "metropolitan_area": "Los Angeles",
          "avg_revenue_per_ride": "15.00"
        },
        {
          "metropolitan_area": "Chicago",
          "avg_revenue_per_ride": "15.00"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Uber Ride-Sharing Market Analytics",
      "problem_slug": "uber-revenue-analysis"
    },
    {
      "id": "6238f17d-9a5c-4a45-ac0c-5d64a7372ad0",
      "problem_id": "15382d01-697d-44bc-bfaa-931fec0cbdae",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE uber_market_performance (\n        market_id INT PRIMARY KEY,\n        metropolitan_area VARCHAR(50),\n        total_rides INT,\n        gross_ride_revenue DECIMAL(12,2),\n        driver_count INT,\n        market_penetration DECIMAL(5,2),\n        market_date DATE\n    );\n      INSERT INTO uber_market_performance  VALUES\n      (1, 'San Francisco Bay Area', 8500000, 170000000.50, 85000, 65.25, '2024-01-15'),\n      (2, 'New York Metro', 12000000, 180000000.75, 125000, 58.40, '2024-01-15'),\n      (3, 'Los Angeles', 9200000, 138000000.25, 95000, 52.80, '2024-01-16'),\n      (4, 'Chicago', 5800000, 87000000.80, 62000, 48.60, '2024-01-16'),\n      (5, 'Miami', 3500000, 59500000.60, 35000, 45.20, '2024-01-17'),\n      (7, 'San Francisco Bay Area_v1', 8500010, 170000000.60, 85010, 65.35, '2024-01-16'),\n      (9, 'New York Metro_v2', 12000020, 180000000.95, 125020, 58.60, '2024-01-17'),\n      (11, 'Los Angeles_v3', 9200030, 138000000.55, 95030, 53.10, '2024-01-19'),\n      (13, 'Chicago_v4', 5800040, 87000001.20, 62040, 49.00, '2024-01-20'),\n      (15, 'Miami_v5', 3500050, 59500001.10, 35050, 45.70, '2024-01-22'),\n      (12, 'San Francisco Bay Area_v6', 8500060, 170000001.10, 85060, 65.85, '2024-01-21'),\n      (14, 'New York Metro_v7', 12000070, 180000001.45, 125070, 59.10, '2024-01-22'),\n      (16, 'Los Angeles_v8', 9200080, 138000001.05, 95080, 53.60, '2024-01-24'),\n      (18, 'Chicago_v9', 5800090, 87000001.70, 62090, 49.50, '2024-01-25'),\n      (20, 'Miami_v10', 3500100, 59500001.60, 35100, 46.20, '2024-01-27'),\n      (17, 'San Francisco Bay Area_v11', 8500110, 170000001.60, 85110, 66.35, '2024-01-26'),\n      (19, 'New York Metro_v12', 12000120, 180000001.95, 125120, 59.60, '2024-01-27'),\n      (21, 'Los Angeles_v13', 9200130, 138000001.55, 95130, 54.10, '2024-01-29'),\n      (23, 'Chicago_v14', 5800140, 87000002.20, 62140, 50.00, '2024-01-30'),\n      (25, 'Miami_v15', 3500150, 59500002.10, 35150, 46.70, '2024-02-01'),\n      (22, 'San Francisco Bay Area_v16', 8500160, 170000002.10, 85160, 66.85, '2024-01-31'),\n      (24, 'New York Metro_v17', 12000170, 180000002.45, 125170, 60.10, '2024-02-01'),\n      (26, 'Los Angeles_v18', 9200180, 138000002.05, 95180, 54.60, '2024-02-03'),\n      (28, 'Chicago_v19', 5800190, 87000002.70, 62190, 50.50, '2024-02-04'),\n      (30, 'Miami_v20', 3500200, 59500002.60, 35200, 47.20, '2024-02-06');",
      "solution_sql": "SELECT \n        metropolitan_area, \n        ROUND(gross_ride_revenue / total_rides, 2) as avg_revenue_per_ride\n    FROM uber_market_performance \n    WHERE (gross_ride_revenue / total_rides) > 15 \n    ORDER BY avg_revenue_per_ride DESC;",
      "explanation": "Uber ride-sharing market analytics using average revenue per ride calculations for expansion strategy optimization.",
      "created_at": "2025-08-11T17:08:07.817Z",
      "expected_output": [
        {
          "metropolitan_area": "San Francisco Bay Area_v1",
          "avg_revenue_per_ride": "20.00"
        },
        {
          "metropolitan_area": "San Francisco Bay Area_v16",
          "avg_revenue_per_ride": "20.00"
        },
        {
          "metropolitan_area": "San Francisco Bay Area_v6",
          "avg_revenue_per_ride": "20.00"
        },
        {
          "metropolitan_area": "San Francisco Bay Area_v11",
          "avg_revenue_per_ride": "20.00"
        },
        {
          "metropolitan_area": "San Francisco Bay Area",
          "avg_revenue_per_ride": "20.00"
        },
        {
          "metropolitan_area": "Miami_v20",
          "avg_revenue_per_ride": "17.00"
        },
        {
          "metropolitan_area": "Miami",
          "avg_revenue_per_ride": "17.00"
        },
        {
          "metropolitan_area": "Miami_v5",
          "avg_revenue_per_ride": "17.00"
        },
        {
          "metropolitan_area": "Miami_v10",
          "avg_revenue_per_ride": "17.00"
        },
        {
          "metropolitan_area": "Miami_v15",
          "avg_revenue_per_ride": "17.00"
        },
        {
          "metropolitan_area": "New York Metro",
          "avg_revenue_per_ride": "15.00"
        },
        {
          "metropolitan_area": "Los Angeles",
          "avg_revenue_per_ride": "15.00"
        },
        {
          "metropolitan_area": "Chicago",
          "avg_revenue_per_ride": "15.00"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Uber Ride-Sharing Market Analytics",
      "problem_slug": "uber-revenue-analysis"
    },
    {
      "id": "2b5e961d-dd76-4758-b161-d6d3615422b5",
      "problem_id": "7102509c-bbd8-4706-99c5-23b599ec9de3",
      "sql_dialect": "mysql",
      "setup_sql": "\nCREATE TABLE unitedhealth_claims (\n    claim_id INT PRIMARY KEY,\n    patient_id INT,\n    claim_type VARCHAR(100),\n    submission_date DATE,\n    processing_date DATE,\n    claim_amount DECIMAL(10,2),\n    approved_amount DECIMAL(10,2),\n    status VARCHAR(50),\n    processing_days INT\n);\n\nINSERT INTO unitedhealth_claims VALUES\n(1, 1001, 'Medical Procedure', '2024-04-01', '2024-04-03', 2500.00, 2250.00, 'Approved', 2),\n(2, 1002, 'Prescription Drug', '2024-04-02', '2024-04-04', 150.00, 135.00, 'Approved', 2),\n(3, 1003, 'Emergency Care', '2024-04-03', '2024-04-05', 5000.00, 4500.00, 'Approved', 2),\n(4, 1004, 'Preventive Care', '2024-04-04', '2024-04-07', 300.00, 300.00, 'Approved', 3),\n(5, 1005, 'Specialist Visit', '2024-04-05', '2024-04-09', 400.00, 320.00, 'Approved', 4),\n(6, 1006, 'Medical Procedure', '2024-04-06', '2024-04-11', 1800.00, 0.00, 'Denied', 5),\n(7, 1007, 'Prescription Drug', '2024-04-07', '2024-04-10', 200.00, 180.00, 'Approved', 3),\n(8, 1008, 'Emergency Care', '2024-04-08', '2024-04-12', 3500.00, 3150.00, 'Approved', 4),\n(9, 1009, 'Preventive Care', '2024-04-09', '2024-04-11', 250.00, 250.00, 'Approved', 2),\n(10, 1010, 'Specialist Visit', '2024-04-10', '2024-04-15', 350.00, 315.00, 'Approved', 5);",
      "solution_sql": "\nSELECT \n    claim_type,\n    COUNT(claim_id) as total_claims,\n    COUNT(CASE WHEN status = 'Approved' THEN 1 END) as approved_claims,\n    ROUND(\n        COUNT(CASE WHEN status = 'Approved' THEN 1 END) * 100.0 / COUNT(claim_id), \n        2\n    ) as approval_rate,\n    ROUND(AVG(processing_days), 2) as avg_processing_days,\n    ROUND(SUM(approved_amount), 2) as total_approved_amount\nFROM unitedhealth_claims\nGROUP BY claim_type\nORDER BY total_approved_amount DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.713Z",
      "expected_output": [
        {
          "claim_type": "Emergency Care",
          "total_claims": "2",
          "approval_rate": "100.00",
          "approved_claims": "2",
          "avg_processing_days": "3.00",
          "total_approved_amount": "7650.00"
        },
        {
          "claim_type": "Medical Procedure",
          "total_claims": "2",
          "approval_rate": "50.00",
          "approved_claims": "1",
          "avg_processing_days": "3.50",
          "total_approved_amount": "2250.00"
        },
        {
          "claim_type": "Specialist Visit",
          "total_claims": "2",
          "approval_rate": "100.00",
          "approved_claims": "2",
          "avg_processing_days": "4.50",
          "total_approved_amount": "635.00"
        },
        {
          "claim_type": "Preventive Care",
          "total_claims": "2",
          "approval_rate": "100.00",
          "approved_claims": "2",
          "avg_processing_days": "2.50",
          "total_approved_amount": "550.00"
        },
        {
          "claim_type": "Prescription Drug",
          "total_claims": "2",
          "approval_rate": "100.00",
          "approved_claims": "2",
          "avg_processing_days": "2.50",
          "total_approved_amount": "315.00"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "UnitedHealth Claims Processing Efficiency",
      "problem_slug": "unitedhealth-claims-processing-efficiency"
    },
    {
      "id": "42d0c6e6-eff0-4231-bd2a-281ccf33bb9e",
      "problem_id": "7102509c-bbd8-4706-99c5-23b599ec9de3",
      "sql_dialect": "postgresql",
      "setup_sql": "\nCREATE TABLE unitedhealth_claims (\n    claim_id INT PRIMARY KEY,\n    patient_id INT,\n    claim_type VARCHAR(100),\n    submission_date DATE,\n    processing_date DATE,\n    claim_amount DECIMAL(10,2),\n    approved_amount DECIMAL(10,2),\n    status VARCHAR(50),\n    processing_days INT\n);\n\nINSERT INTO unitedhealth_claims VALUES\n(1, 1001, 'Medical Procedure', '2024-04-01', '2024-04-03', 2500.00, 2250.00, 'Approved', 2),\n(2, 1002, 'Prescription Drug', '2024-04-02', '2024-04-04', 150.00, 135.00, 'Approved', 2),\n(3, 1003, 'Emergency Care', '2024-04-03', '2024-04-05', 5000.00, 4500.00, 'Approved', 2),\n(4, 1004, 'Preventive Care', '2024-04-04', '2024-04-07', 300.00, 300.00, 'Approved', 3),\n(5, 1005, 'Specialist Visit', '2024-04-05', '2024-04-09', 400.00, 320.00, 'Approved', 4),\n(6, 1006, 'Medical Procedure', '2024-04-06', '2024-04-11', 1800.00, 0.00, 'Denied', 5),\n(7, 1007, 'Prescription Drug', '2024-04-07', '2024-04-10', 200.00, 180.00, 'Approved', 3),\n(8, 1008, 'Emergency Care', '2024-04-08', '2024-04-12', 3500.00, 3150.00, 'Approved', 4),\n(9, 1009, 'Preventive Care', '2024-04-09', '2024-04-11', 250.00, 250.00, 'Approved', 2),\n(10, 1010, 'Specialist Visit', '2024-04-10', '2024-04-15', 350.00, 315.00, 'Approved', 5);",
      "solution_sql": "\nSELECT \n    claim_type,\n    COUNT(claim_id) as total_claims,\n    COUNT(CASE WHEN status = 'Approved' THEN 1 END) as approved_claims,\n    ROUND(\n        COUNT(CASE WHEN status = 'Approved' THEN 1 END) * 100.0 / COUNT(claim_id), \n        2\n    ) as approval_rate,\n    ROUND(AVG(processing_days), 2) as avg_processing_days,\n    ROUND(SUM(approved_amount), 2) as total_approved_amount\nFROM unitedhealth_claims\nGROUP BY claim_type\nORDER BY total_approved_amount DESC;",
      "explanation": "Healthcare operations analysis using JOINs with multi-criteria filtering for processing center efficiency evaluation across claim type diversity and speed metrics.",
      "created_at": "2025-08-11T13:51:21.535Z",
      "expected_output": [
        {
          "claim_type": "Emergency Care",
          "total_claims": "2",
          "approval_rate": "100.00",
          "approved_claims": "2",
          "avg_processing_days": "3.00",
          "total_approved_amount": "7650.00"
        },
        {
          "claim_type": "Medical Procedure",
          "total_claims": "2",
          "approval_rate": "50.00",
          "approved_claims": "1",
          "avg_processing_days": "3.50",
          "total_approved_amount": "2250.00"
        },
        {
          "claim_type": "Specialist Visit",
          "total_claims": "2",
          "approval_rate": "100.00",
          "approved_claims": "2",
          "avg_processing_days": "4.50",
          "total_approved_amount": "635.00"
        },
        {
          "claim_type": "Preventive Care",
          "total_claims": "2",
          "approval_rate": "100.00",
          "approved_claims": "2",
          "avg_processing_days": "2.50",
          "total_approved_amount": "550.00"
        },
        {
          "claim_type": "Prescription Drug",
          "total_claims": "2",
          "approval_rate": "100.00",
          "approved_claims": "2",
          "avg_processing_days": "2.50",
          "total_approved_amount": "315.00"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "UnitedHealth Claims Processing Efficiency",
      "problem_slug": "unitedhealth-claims-processing-efficiency"
    },
    {
      "id": "0c4b3080-b823-499d-baab-e2fb76136a85",
      "problem_id": "38108e8c-7b5c-4134-b346-ea1d7bc31ee2",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE posts (\n          post_id INT,\n          user_id INT,\n          post_type VARCHAR(50),\n          likes_count INT,\n          comments_count INT,\n          post_date DATE\n      );\n      INSERT INTO posts  VALUES\n      (1, 101, 'article', 45, 12, '2024-01-15'),\n      (2, 102, 'image', 23, 8, '2024-01-16'),\n      (3, 103, 'video', 67, 15, '2024-01-17'),\n      (4, 104, 'article', 34, 6, '2024-01-18'),\n      (5, 105, 'image', 56, 11, '2024-01-19'),\n      (6, 106, 'video', 89, 22, '2024-01-20'),\n      (8, 111, 'article_v1', 55, 22, '2024-01-16'),\n      (10, 122, 'image_v2', 43, 28, '2024-01-18'),\n      (12, 133, 'video_v3', 97, 45, '2024-01-20'),\n      (14, 144, 'article_v4', 74, 46, '2024-01-22'),\n      (16, 155, 'image_v5', 106, 61, '2024-01-24'),\n      (18, 166, 'video_v6', 149, 82, '2024-01-26'),\n      (14, 171, 'article_v7', 115, 82, '2024-01-22'),\n      (16, 182, 'image_v8', 103, 88, '2024-01-24'),\n      (18, 193, 'video_v9', 157, 105, '2024-01-26'),\n      (20, 204, 'article_v10', 134, 106, '2024-01-28'),\n      (22, 215, 'image_v11', 166, 121, '2024-01-30'),\n      (24, 226, 'video_v12', 209, 142, '2024-02-01'),\n      (20, 231, 'article_v13', 175, 142, '2024-01-28'),\n      (22, 242, 'image_v14', 163, 148, '2024-01-30'),\n      (24, 253, 'video_v15', 217, 165, '2024-02-01'),\n      (26, 264, 'article_v16', 194, 166, '2024-02-03'),\n      (28, 275, 'image_v17', 226, 181, '2024-02-05'),\n      (30, 286, 'video_v18', 269, 202, '2024-02-07'),\n      (26, 291, 'article_v19', 235, 202, '2024-02-03');",
      "solution_sql": "\n      SELECT \n        post_type,\n        ROUND(AVG(likes_count + comments_count), 2) as avg_engagement\n      FROM posts\n      GROUP BY post_type\n      ORDER BY avg_engagement DESC;\n    ",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.681Z",
      "expected_output": [
        {
          "post_type": "Video",
          "avg_engagement": "598.33"
        },
        {
          "post_type": "Photo",
          "avg_engagement": "571.25"
        },
        {
          "post_type": "Story",
          "avg_engagement": "370.00"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "User Engagement Metrics",
      "problem_slug": "user-engagement-metrics"
    },
    {
      "id": "f461f846-e8d1-4e04-9b45-9ffa1c4fade2",
      "problem_id": "38108e8c-7b5c-4134-b346-ea1d7bc31ee2",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE posts (\n          post_id INT,\n          user_id INT,\n          post_type VARCHAR(50),\n          likes_count INT,\n          comments_count INT,\n          post_date DATE\n      );\n      INSERT INTO posts  VALUES\n      (1, 101, 'article', 45, 12, '2024-01-15'),\n      (2, 102, 'image', 23, 8, '2024-01-16'),\n      (3, 103, 'video', 67, 15, '2024-01-17'),\n      (4, 104, 'article', 34, 6, '2024-01-18'),\n      (5, 105, 'image', 56, 11, '2024-01-19'),\n      (6, 106, 'video', 89, 22, '2024-01-20'),\n      (8, 111, 'article_v1', 55, 22, '2024-01-16'),\n      (10, 122, 'image_v2', 43, 28, '2024-01-18'),\n      (12, 133, 'video_v3', 97, 45, '2024-01-20'),\n      (14, 144, 'article_v4', 74, 46, '2024-01-22'),\n      (16, 155, 'image_v5', 106, 61, '2024-01-24'),\n      (18, 166, 'video_v6', 149, 82, '2024-01-26'),\n      (14, 171, 'article_v7', 115, 82, '2024-01-22'),\n      (16, 182, 'image_v8', 103, 88, '2024-01-24'),\n      (18, 193, 'video_v9', 157, 105, '2024-01-26'),\n      (20, 204, 'article_v10', 134, 106, '2024-01-28'),\n      (22, 215, 'image_v11', 166, 121, '2024-01-30'),\n      (24, 226, 'video_v12', 209, 142, '2024-02-01'),\n      (20, 231, 'article_v13', 175, 142, '2024-01-28'),\n      (22, 242, 'image_v14', 163, 148, '2024-01-30'),\n      (24, 253, 'video_v15', 217, 165, '2024-02-01'),\n      (26, 264, 'article_v16', 194, 166, '2024-02-03'),\n      (28, 275, 'image_v17', 226, 181, '2024-02-05'),\n      (30, 286, 'video_v18', 269, 202, '2024-02-07'),\n      (26, 291, 'article_v19', 235, 202, '2024-02-03');",
      "solution_sql": "\n      SELECT \n        post_type,\n        ROUND(AVG(likes_count + comments_count), 2) as avg_engagement\n      FROM posts\n      GROUP BY post_type\n      ORDER BY avg_engagement DESC;\n    ",
      "explanation": "Solution uses aggregation concepts to solve the business problem.",
      "created_at": "2025-08-11T13:51:04.035Z",
      "expected_output": [
        {
          "post_type": "video_v18",
          "avg_engagement": "471.00"
        },
        {
          "post_type": "article_v19",
          "avg_engagement": "437.00"
        },
        {
          "post_type": "image_v17",
          "avg_engagement": "407.00"
        },
        {
          "post_type": "video_v15",
          "avg_engagement": "382.00"
        },
        {
          "post_type": "article_v16",
          "avg_engagement": "360.00"
        },
        {
          "post_type": "video_v12",
          "avg_engagement": "351.00"
        },
        {
          "post_type": "article_v13",
          "avg_engagement": "317.00"
        },
        {
          "post_type": "image_v14",
          "avg_engagement": "311.00"
        },
        {
          "post_type": "image_v11",
          "avg_engagement": "287.00"
        },
        {
          "post_type": "video_v9",
          "avg_engagement": "262.00"
        },
        {
          "post_type": "article_v10",
          "avg_engagement": "240.00"
        },
        {
          "post_type": "video_v6",
          "avg_engagement": "231.00"
        },
        {
          "post_type": "article_v7",
          "avg_engagement": "197.00"
        },
        {
          "post_type": "image_v8",
          "avg_engagement": "191.00"
        },
        {
          "post_type": "image_v5",
          "avg_engagement": "167.00"
        },
        {
          "post_type": "video_v3",
          "avg_engagement": "142.00"
        },
        {
          "post_type": "article_v4",
          "avg_engagement": "120.00"
        },
        {
          "post_type": "video",
          "avg_engagement": "96.50"
        },
        {
          "post_type": "article_v1",
          "avg_engagement": "77.00"
        },
        {
          "post_type": "image_v2",
          "avg_engagement": "71.00"
        },
        {
          "post_type": "image",
          "avg_engagement": "49.00"
        },
        {
          "post_type": "article",
          "avg_engagement": "48.50"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "User Engagement Metrics",
      "problem_slug": "user-engagement-metrics"
    },
    {
      "id": "7271d12e-0e84-4cac-a6cb-4f6e1529ef87",
      "problem_id": "e4783bb1-13fb-4dd1-be1f-a07cec187ebf",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE vanguard_funds (\n            fund_id INT PRIMARY KEY,\n            fund_name VARCHAR(100),\n            expense_ratio DECIMAL(5,4),\n            ytd_return DECIMAL(5,2),\n            five_year_return DECIMAL(5,2),\n            assets_under_mgmt_billions DECIMAL(8,2)\n        );\n      INSERT INTO vanguard_funds  VALUES\n      (1, 'Total Stock Market Index', 0.0003, 12.5, 8.9, 1250.5),\n      (2, 'S&P 500 Index', 0.0003, 11.8, 8.7, 850.2),\n      (3, 'Total Bond Market Index', 0.0005, -2.1, 2.8, 320.8),\n      (4, 'International Stock Index', 0.0008, 8.9, 5.2, 180.9),\n      (5, 'Emerging Markets Stock Index', 0.0014, 15.2, 4.1, 95.3),\n      (7, 'Total Stock Market Index_v1', 0.10, 12.60, 9.00, 1250.60),\n      (9, 'S&P 500 Index_v2', 0.20, 12.00, 8.90, 850.40),\n      (11, 'Total Bond Market Index_v3', 0.30, -1.80, 3.10, 321.10),\n      (13, 'International Stock Index_v4', 0.40, 9.30, 5.60, 181.30),\n      (15, 'Emerging Markets Stock Index_v5', 0.50, 15.70, 4.60, 95.80),\n      (12, 'Total Stock Market Index_v6', 0.60, 13.10, 9.50, 1251.10),\n      (14, 'S&P 500 Index_v7', 0.70, 12.50, 9.40, 850.90),\n      (16, 'Total Bond Market Index_v8', 0.80, -1.30, 3.60, 321.60),\n      (18, 'International Stock Index_v9', 0.90, 9.80, 6.10, 181.80),\n      (20, 'Emerging Markets Stock Index_v10', 1.00, 16.20, 5.10, 96.30),\n      (17, 'Total Stock Market Index_v11', 1.10, 13.60, 10.00, 1251.60),\n      (19, 'S&P 500 Index_v12', 1.20, 13.00, 9.90, 851.40),\n      (21, 'Total Bond Market Index_v13', 1.30, -0.80, 4.10, 322.10),\n      (23, 'International Stock Index_v14', 1.40, 10.30, 6.60, 182.30),\n      (25, 'Emerging Markets Stock Index_v15', 1.50, 16.70, 5.60, 96.80),\n      (22, 'Total Stock Market Index_v16', 1.60, 14.10, 10.50, 1252.10),\n      (24, 'S&P 500 Index_v17', 1.70, 13.50, 10.40, 851.90),\n      (26, 'Total Bond Market Index_v18', 1.80, -0.30, 4.60, 322.60),\n      (28, 'International Stock Index_v19', 1.90, 10.80, 7.10, 182.80),\n      (30, 'Emerging Markets Stock Index_v20', 2.00, 17.20, 6.10, 97.30);",
      "solution_sql": "SELECT fund_name, ytd_return, five_year_return\nFROM vanguard_funds \nWHERE ytd_return > 10.0 \nORDER BY ytd_return DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.784Z",
      "expected_output": [
        {
          "fund_name": "Emerging Markets Stock Index_v20",
          "ytd_return": "17.20",
          "five_year_return": "6.10"
        },
        {
          "fund_name": "Emerging Markets Stock Index_v15",
          "ytd_return": "16.70",
          "five_year_return": "5.60"
        },
        {
          "fund_name": "Emerging Markets Stock Index_v10",
          "ytd_return": "16.20",
          "five_year_return": "5.10"
        },
        {
          "fund_name": "Emerging Markets Stock Index_v5",
          "ytd_return": "15.70",
          "five_year_return": "4.60"
        },
        {
          "fund_name": "Emerging Markets Stock Index",
          "ytd_return": "15.20",
          "five_year_return": "4.10"
        },
        {
          "fund_name": "Total Stock Market Index_v16",
          "ytd_return": "14.10",
          "five_year_return": "10.50"
        },
        {
          "fund_name": "Total Stock Market Index_v11",
          "ytd_return": "13.60",
          "five_year_return": "10.00"
        },
        {
          "fund_name": "S&P 500 Index_v17",
          "ytd_return": "13.50",
          "five_year_return": "10.40"
        },
        {
          "fund_name": "Total Stock Market Index_v6",
          "ytd_return": "13.10",
          "five_year_return": "9.50"
        },
        {
          "fund_name": "S&P 500 Index_v12",
          "ytd_return": "13.00",
          "five_year_return": "9.90"
        },
        {
          "fund_name": "Total Stock Market Index_v1",
          "ytd_return": "12.60",
          "five_year_return": "9.00"
        },
        {
          "fund_name": "S&P 500 Index_v7",
          "ytd_return": "12.50",
          "five_year_return": "9.40"
        },
        {
          "fund_name": "Total Stock Market Index",
          "ytd_return": "12.50",
          "five_year_return": "8.90"
        },
        {
          "fund_name": "S&P 500 Index_v2",
          "ytd_return": "12.00",
          "five_year_return": "8.90"
        },
        {
          "fund_name": "S&P 500 Index",
          "ytd_return": "11.80",
          "five_year_return": "8.70"
        },
        {
          "fund_name": "International Stock Index_v19",
          "ytd_return": "10.80",
          "five_year_return": "7.10"
        },
        {
          "fund_name": "International Stock Index_v14",
          "ytd_return": "10.30",
          "five_year_return": "6.60"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Vanguard Index Fund Performance Analytics",
      "problem_slug": "bank-of-america-portfolio-analytics"
    },
    {
      "id": "898a0210-5288-4fe2-a30b-641777f162de",
      "problem_id": "e4783bb1-13fb-4dd1-be1f-a07cec187ebf",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE vanguard_funds (\n            fund_id INT PRIMARY KEY,\n            fund_name VARCHAR(100),\n            expense_ratio DECIMAL(5,4),\n            ytd_return DECIMAL(5,2),\n            five_year_return DECIMAL(5,2),\n            assets_under_mgmt_billions DECIMAL(8,2)\n        );\n      INSERT INTO vanguard_funds  VALUES\n      (1, 'Total Stock Market Index', 0.0003, 12.5, 8.9, 1250.5),\n      (2, 'S&P 500 Index', 0.0003, 11.8, 8.7, 850.2),\n      (3, 'Total Bond Market Index', 0.0005, -2.1, 2.8, 320.8),\n      (4, 'International Stock Index', 0.0008, 8.9, 5.2, 180.9),\n      (5, 'Emerging Markets Stock Index', 0.0014, 15.2, 4.1, 95.3),\n      (7, 'Total Stock Market Index_v1', 0.10, 12.60, 9.00, 1250.60),\n      (9, 'S&P 500 Index_v2', 0.20, 12.00, 8.90, 850.40),\n      (11, 'Total Bond Market Index_v3', 0.30, -1.80, 3.10, 321.10),\n      (13, 'International Stock Index_v4', 0.40, 9.30, 5.60, 181.30),\n      (15, 'Emerging Markets Stock Index_v5', 0.50, 15.70, 4.60, 95.80),\n      (12, 'Total Stock Market Index_v6', 0.60, 13.10, 9.50, 1251.10),\n      (14, 'S&P 500 Index_v7', 0.70, 12.50, 9.40, 850.90),\n      (16, 'Total Bond Market Index_v8', 0.80, -1.30, 3.60, 321.60),\n      (18, 'International Stock Index_v9', 0.90, 9.80, 6.10, 181.80),\n      (20, 'Emerging Markets Stock Index_v10', 1.00, 16.20, 5.10, 96.30),\n      (17, 'Total Stock Market Index_v11', 1.10, 13.60, 10.00, 1251.60),\n      (19, 'S&P 500 Index_v12', 1.20, 13.00, 9.90, 851.40),\n      (21, 'Total Bond Market Index_v13', 1.30, -0.80, 4.10, 322.10),\n      (23, 'International Stock Index_v14', 1.40, 10.30, 6.60, 182.30),\n      (25, 'Emerging Markets Stock Index_v15', 1.50, 16.70, 5.60, 96.80),\n      (22, 'Total Stock Market Index_v16', 1.60, 14.10, 10.50, 1252.10),\n      (24, 'S&P 500 Index_v17', 1.70, 13.50, 10.40, 851.90),\n      (26, 'Total Bond Market Index_v18', 1.80, -0.30, 4.60, 322.60),\n      (28, 'International Stock Index_v19', 1.90, 10.80, 7.10, 182.80),\n      (30, 'Emerging Markets Stock Index_v20', 2.00, 17.20, 6.10, 97.30);",
      "solution_sql": "SELECT fund_name, ytd_return, five_year_return\nFROM vanguard_funds \nWHERE ytd_return > 10.0 \nORDER BY ytd_return DESC;",
      "explanation": "Vanguard index fund performance analysis using tracking error calculations for passive investment management.",
      "created_at": "2025-08-11T17:08:07.872Z",
      "expected_output": [
        {
          "fund_name": "Emerging Markets Stock Index_v20",
          "ytd_return": "17.20",
          "five_year_return": "6.10"
        },
        {
          "fund_name": "Emerging Markets Stock Index_v15",
          "ytd_return": "16.70",
          "five_year_return": "5.60"
        },
        {
          "fund_name": "Emerging Markets Stock Index_v10",
          "ytd_return": "16.20",
          "five_year_return": "5.10"
        },
        {
          "fund_name": "Emerging Markets Stock Index_v5",
          "ytd_return": "15.70",
          "five_year_return": "4.60"
        },
        {
          "fund_name": "Emerging Markets Stock Index",
          "ytd_return": "15.20",
          "five_year_return": "4.10"
        },
        {
          "fund_name": "Total Stock Market Index_v16",
          "ytd_return": "14.10",
          "five_year_return": "10.50"
        },
        {
          "fund_name": "Total Stock Market Index_v11",
          "ytd_return": "13.60",
          "five_year_return": "10.00"
        },
        {
          "fund_name": "S&P 500 Index_v17",
          "ytd_return": "13.50",
          "five_year_return": "10.40"
        },
        {
          "fund_name": "Total Stock Market Index_v6",
          "ytd_return": "13.10",
          "five_year_return": "9.50"
        },
        {
          "fund_name": "S&P 500 Index_v12",
          "ytd_return": "13.00",
          "five_year_return": "9.90"
        },
        {
          "fund_name": "Total Stock Market Index_v1",
          "ytd_return": "12.60",
          "five_year_return": "9.00"
        },
        {
          "fund_name": "Total Stock Market Index",
          "ytd_return": "12.50",
          "five_year_return": "8.90"
        },
        {
          "fund_name": "S&P 500 Index_v7",
          "ytd_return": "12.50",
          "five_year_return": "9.40"
        },
        {
          "fund_name": "S&P 500 Index_v2",
          "ytd_return": "12.00",
          "five_year_return": "8.90"
        },
        {
          "fund_name": "S&P 500 Index",
          "ytd_return": "11.80",
          "five_year_return": "8.70"
        },
        {
          "fund_name": "International Stock Index_v19",
          "ytd_return": "10.80",
          "five_year_return": "7.10"
        },
        {
          "fund_name": "International Stock Index_v14",
          "ytd_return": "10.30",
          "five_year_return": "6.60"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Vanguard Index Fund Performance Analytics",
      "problem_slug": "bank-of-america-portfolio-analytics"
    },
    {
      "id": "4dc735af-f7d6-46a4-8219-4f7f02edfcce",
      "problem_id": "77b5ad49-9a65-4c07-8d89-3a98b9c6040c",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE network_towers (\n        tower_id INT PRIMARY KEY,\n        state_region VARCHAR(50),\n        coverage_area_sqkm DECIMAL(8,2),\n        signal_strength_db INT,\n        technology_type VARCHAR(100),\n        uptime_percentage DECIMAL(5,2)\n    );\n      INSERT INTO network_towers VALUES\n    (10, 'California', 450.75, -85, '5G', 99.95),\n    (2, 'California', 320.50, -82, '5G', 99.90),\n    (3, 'California', 280.25, -88, '4G LTE', 99.85),\n    (4, 'Texas', 520.80, -80, '5G', 99.92),\n    (5, 'Texas', 410.60, -84, '5G', 99.88),\n    (6, 'Texas', 380.45, -89, '4G LTE', 99.80),\n    (7, 'Florida', 290.30, -83, '5G', 99.91),\n    (8, 'Florida', 350.65, -86, '4G LTE', 99.75),\n    (9, 'New York', 220.40, -81, '5G', 99.94),\n    (11, 'New York', 180.25, -87, '4G LTE', 99.82),\n    (12, 'California_v1', 450.85, -75, '5G_v1', 100.05),\n    (14, 'California_v2', 320.70, -62, '5G_v2', 100.10),\n    (16, 'California_v3', 280.55, -58, '4G LTE_v3', 100.15),\n    (18, 'Texas_v4', 521.20, -40, '5G_v4', 100.32),\n    (20, 'Texas_v5', 411.10, -34, '5G_v5', 100.38),\n    (22, 'Texas_v6', 381.05, -29, '4G LTE_v6', 100.40),\n    (24, 'Florida_v7', 291.00, -13, '5G_v7', 100.61),\n    (26, 'Florida_v8', 351.45, -6, '4G LTE_v8', 100.55),\n    (28, 'New York_v9', 221.30, 9, '5G_v9', 100.84),\n    (30, 'New York_v10', 181.25, 13, '4G LTE_v10', 100.82),\n    (23, 'California_v11', 451.85, 25, '5G_v11', 101.05),\n    (25, 'California_v12', 321.70, 38, '5G_v12', 101.10),\n    (27, 'California_v13', 281.55, 42, '4G LTE_v13', 101.15),\n    (29, 'Texas_v14', 522.20, 60, '5G_v14', 101.32),\n    (31, 'Texas_v15', 412.10, 66, '5G_v15', 101.38);",
      "solution_sql": "SELECT state_region, AVG(signal_strength_db) as avg_signal_strength\nFROM network_towers \nGROUP BY state_region \nHAVING AVG(signal_strength_db) > -85 \nORDER BY avg_signal_strength DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.722Z",
      "expected_output": [
        {
          "state_region": "Texas_v15",
          "avg_signal_strength": "66.0000"
        },
        {
          "state_region": "Texas_v14",
          "avg_signal_strength": "60.0000"
        },
        {
          "state_region": "California_v13",
          "avg_signal_strength": "42.0000"
        },
        {
          "state_region": "California_v12",
          "avg_signal_strength": "38.0000"
        },
        {
          "state_region": "California_v11",
          "avg_signal_strength": "25.0000"
        },
        {
          "state_region": "New York_v10",
          "avg_signal_strength": "13.0000"
        },
        {
          "state_region": "New York_v9",
          "avg_signal_strength": "9.0000"
        },
        {
          "state_region": "Florida_v8",
          "avg_signal_strength": "-6.0000"
        },
        {
          "state_region": "Florida_v7",
          "avg_signal_strength": "-13.0000"
        },
        {
          "state_region": "Texas_v6",
          "avg_signal_strength": "-29.0000"
        },
        {
          "state_region": "Texas_v5",
          "avg_signal_strength": "-34.0000"
        },
        {
          "state_region": "Texas_v4",
          "avg_signal_strength": "-40.0000"
        },
        {
          "state_region": "California_v3",
          "avg_signal_strength": "-58.0000"
        },
        {
          "state_region": "California_v2",
          "avg_signal_strength": "-62.0000"
        },
        {
          "state_region": "California_v1",
          "avg_signal_strength": "-75.0000"
        },
        {
          "state_region": "New York",
          "avg_signal_strength": "-84.0000"
        },
        {
          "state_region": "Texas",
          "avg_signal_strength": "-84.3333"
        },
        {
          "state_region": "Florida",
          "avg_signal_strength": "-84.5000"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Verizon Network Coverage Analysis",
      "problem_slug": "verizon-network-coverage-analysis"
    },
    {
      "id": "a3481167-196c-4779-bd51-d18dc05a92fa",
      "problem_id": "77b5ad49-9a65-4c07-8d89-3a98b9c6040c",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE network_towers (\n        tower_id INT PRIMARY KEY,\n        state_region VARCHAR(50),\n        coverage_area_sqkm DECIMAL(8,2),\n        signal_strength_db INT,\n        technology_type VARCHAR(100),\n        uptime_percentage DECIMAL(5,2)\n    );\n      INSERT INTO network_towers VALUES\n    (10, 'California', 450.75, -85, '5G', 99.95),\n    (2, 'California', 320.50, -82, '5G', 99.90),\n    (3, 'California', 280.25, -88, '4G LTE', 99.85),\n    (4, 'Texas', 520.80, -80, '5G', 99.92),\n    (5, 'Texas', 410.60, -84, '5G', 99.88),\n    (6, 'Texas', 380.45, -89, '4G LTE', 99.80),\n    (7, 'Florida', 290.30, -83, '5G', 99.91),\n    (8, 'Florida', 350.65, -86, '4G LTE', 99.75),\n    (9, 'New York', 220.40, -81, '5G', 99.94),\n    (11, 'New York', 180.25, -87, '4G LTE', 99.82),\n    (12, 'California_v1', 450.85, -75, '5G_v1', 100.05),\n    (14, 'California_v2', 320.70, -62, '5G_v2', 100.10),\n    (16, 'California_v3', 280.55, -58, '4G LTE_v3', 100.15),\n    (18, 'Texas_v4', 521.20, -40, '5G_v4', 100.32),\n    (20, 'Texas_v5', 411.10, -34, '5G_v5', 100.38),\n    (22, 'Texas_v6', 381.05, -29, '4G LTE_v6', 100.40),\n    (24, 'Florida_v7', 291.00, -13, '5G_v7', 100.61),\n    (26, 'Florida_v8', 351.45, -6, '4G LTE_v8', 100.55),\n    (28, 'New York_v9', 221.30, 9, '5G_v9', 100.84),\n    (30, 'New York_v10', 181.25, 13, '4G LTE_v10', 100.82),\n    (23, 'California_v11', 451.85, 25, '5G_v11', 101.05),\n    (25, 'California_v12', 321.70, 38, '5G_v12', 101.10),\n    (27, 'California_v13', 281.55, 42, '4G LTE_v13', 101.15),\n    (29, 'Texas_v14', 522.20, 60, '5G_v14', 101.32),\n    (31, 'Texas_v15', 412.10, 66, '5G_v15', 101.38);",
      "solution_sql": "SELECT state_region, AVG(signal_strength_db) as avg_signal_strength\nFROM network_towers \nGROUP BY state_region \nHAVING AVG(signal_strength_db) > -85 \nORDER BY avg_signal_strength DESC;",
      "explanation": "Telecommunications infrastructure analysis using GROUP BY and HAVING clause for network coverage evaluation.",
      "created_at": "2025-08-11T13:51:15.988Z",
      "expected_output": [
        {
          "state_region": "Texas_v15",
          "avg_signal_strength": "66.0000000000000000"
        },
        {
          "state_region": "Texas_v14",
          "avg_signal_strength": "60.0000000000000000"
        },
        {
          "state_region": "California_v13",
          "avg_signal_strength": "42.0000000000000000"
        },
        {
          "state_region": "California_v12",
          "avg_signal_strength": "38.0000000000000000"
        },
        {
          "state_region": "California_v11",
          "avg_signal_strength": "25.0000000000000000"
        },
        {
          "state_region": "New York_v10",
          "avg_signal_strength": "13.0000000000000000"
        },
        {
          "state_region": "New York_v9",
          "avg_signal_strength": "9.0000000000000000"
        },
        {
          "state_region": "Florida_v8",
          "avg_signal_strength": "-6.0000000000000000"
        },
        {
          "state_region": "Florida_v7",
          "avg_signal_strength": "-13.0000000000000000"
        },
        {
          "state_region": "Texas_v6",
          "avg_signal_strength": "-29.0000000000000000"
        },
        {
          "state_region": "Texas_v5",
          "avg_signal_strength": "-34.0000000000000000"
        },
        {
          "state_region": "Texas_v4",
          "avg_signal_strength": "-40.0000000000000000"
        },
        {
          "state_region": "California_v3",
          "avg_signal_strength": "-58.0000000000000000"
        },
        {
          "state_region": "California_v2",
          "avg_signal_strength": "-62.0000000000000000"
        },
        {
          "state_region": "California_v1",
          "avg_signal_strength": "-75.0000000000000000"
        },
        {
          "state_region": "New York",
          "avg_signal_strength": "-84.0000000000000000"
        },
        {
          "state_region": "Texas",
          "avg_signal_strength": "-84.3333333333333333"
        },
        {
          "state_region": "Florida",
          "avg_signal_strength": "-84.5000000000000000"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Verizon Network Coverage Analysis",
      "problem_slug": "verizon-network-coverage-analysis"
    },
    {
      "id": "e15a7f37-93d1-4784-b6c4-c02621cfea3a",
      "problem_id": "71efa828-8725-4cdd-9311-c22fb8d71038",
      "sql_dialect": "mysql",
      "setup_sql": "\nCREATE TABLE visa_transactions (\n    transaction_id INT PRIMARY KEY,\n    merchant_id INT,\n    merchant_category VARCHAR(100),\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    currency_code VARCHAR(10),\n    processing_fee DECIMAL(6,2),\n    settlement_status VARCHAR(30),\n    country_code VARCHAR(10)\n);\n\nINSERT INTO visa_transactions VALUES\n(1, 2001, 'Retail Store', '2024-05-01', 125.50, 'USD', 2.25, 'Settled', 'US'),\n(2, 2002, 'Restaurant', '2024-05-01', 89.75, 'USD', 1.60, 'Settled', 'US'),\n(3, 2003, 'Gas Station', '2024-05-02', 65.20, 'USD', 1.17, 'Settled', 'US'),\n(4, 2004, 'Online Store', '2024-05-02', 299.99, 'USD', 5.40, 'Settled', 'US'),\n(5, 2005, 'Grocery Store', '2024-05-03', 156.80, 'USD', 2.82, 'Settled', 'US'),\n(6, 2006, 'Hotel', '2024-05-03', 450.00, 'USD', 8.10, 'Settled', 'US'),\n(7, 2007, 'Retail Store', '2024-05-04', 78.90, 'EUR', 1.42, 'Pending', 'DE'),\n(8, 2008, 'Restaurant', '2024-05-04', 112.30, 'EUR', 2.02, 'Settled', 'FR'),\n(9, 2009, 'Gas Station', '2024-05-05', 85.75, 'CAD', 1.54, 'Settled', 'CA'),\n(10, 2010, 'Online Store', '2024-05-05', 199.99, 'GBP', 3.60, 'Settled', 'UK');",
      "solution_sql": "\nSELECT \n    merchant_category,\n    currency_code,\n    COUNT(transaction_id) as transaction_count,\n    ROUND(SUM(transaction_amount), 2) as total_amount,\n    ROUND(SUM(processing_fee), 2) as total_fees,\n    ROUND(AVG(transaction_amount), 2) as avg_transaction_amount\nFROM visa_transactions\nGROUP BY merchant_category, currency_code\nORDER BY total_amount DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.718Z",
      "expected_output": [
        {
          "total_fees": "8.10",
          "total_amount": "450.00",
          "currency_code": "USD",
          "merchant_category": "Hotel",
          "transaction_count": "1",
          "avg_transaction_amount": "450.00"
        },
        {
          "total_fees": "5.40",
          "total_amount": "299.99",
          "currency_code": "USD",
          "merchant_category": "Online Store",
          "transaction_count": "1",
          "avg_transaction_amount": "299.99"
        },
        {
          "total_fees": "3.60",
          "total_amount": "199.99",
          "currency_code": "GBP",
          "merchant_category": "Online Store",
          "transaction_count": "1",
          "avg_transaction_amount": "199.99"
        },
        {
          "total_fees": "2.82",
          "total_amount": "156.80",
          "currency_code": "USD",
          "merchant_category": "Grocery Store",
          "transaction_count": "1",
          "avg_transaction_amount": "156.80"
        },
        {
          "total_fees": "2.25",
          "total_amount": "125.50",
          "currency_code": "USD",
          "merchant_category": "Retail Store",
          "transaction_count": "1",
          "avg_transaction_amount": "125.50"
        },
        {
          "total_fees": "2.02",
          "total_amount": "112.30",
          "currency_code": "EUR",
          "merchant_category": "Restaurant",
          "transaction_count": "1",
          "avg_transaction_amount": "112.30"
        },
        {
          "total_fees": "1.60",
          "total_amount": "89.75",
          "currency_code": "USD",
          "merchant_category": "Restaurant",
          "transaction_count": "1",
          "avg_transaction_amount": "89.75"
        },
        {
          "total_fees": "1.54",
          "total_amount": "85.75",
          "currency_code": "CAD",
          "merchant_category": "Gas Station",
          "transaction_count": "1",
          "avg_transaction_amount": "85.75"
        },
        {
          "total_fees": "1.42",
          "total_amount": "78.90",
          "currency_code": "EUR",
          "merchant_category": "Retail Store",
          "transaction_count": "1",
          "avg_transaction_amount": "78.90"
        },
        {
          "total_fees": "1.17",
          "total_amount": "65.20",
          "currency_code": "USD",
          "merchant_category": "Gas Station",
          "transaction_count": "1",
          "avg_transaction_amount": "65.20"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Visa Global Payment Processing Analytics",
      "problem_slug": "visa-portfolio-analytics"
    },
    {
      "id": "1ec2e3dc-a77e-4675-90b1-e8ce7ee627d4",
      "problem_id": "71efa828-8725-4cdd-9311-c22fb8d71038",
      "sql_dialect": "postgresql",
      "setup_sql": "\nCREATE TABLE visa_transactions (\n    transaction_id INT PRIMARY KEY,\n    merchant_id INT,\n    merchant_category VARCHAR(100),\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    currency_code VARCHAR(10),\n    processing_fee DECIMAL(6,2),\n    settlement_status VARCHAR(30),\n    country_code VARCHAR(10)\n);\n\nINSERT INTO visa_transactions VALUES\n(1, 2001, 'Retail Store', '2024-05-01', 125.50, 'USD', 2.25, 'Settled', 'US'),\n(2, 2002, 'Restaurant', '2024-05-01', 89.75, 'USD', 1.60, 'Settled', 'US'),\n(3, 2003, 'Gas Station', '2024-05-02', 65.20, 'USD', 1.17, 'Settled', 'US'),\n(4, 2004, 'Online Store', '2024-05-02', 299.99, 'USD', 5.40, 'Settled', 'US'),\n(5, 2005, 'Grocery Store', '2024-05-03', 156.80, 'USD', 2.82, 'Settled', 'US'),\n(6, 2006, 'Hotel', '2024-05-03', 450.00, 'USD', 8.10, 'Settled', 'US'),\n(7, 2007, 'Retail Store', '2024-05-04', 78.90, 'EUR', 1.42, 'Pending', 'DE'),\n(8, 2008, 'Restaurant', '2024-05-04', 112.30, 'EUR', 2.02, 'Settled', 'FR'),\n(9, 2009, 'Gas Station', '2024-05-05', 85.75, 'CAD', 1.54, 'Settled', 'CA'),\n(10, 2010, 'Online Store', '2024-05-05', 199.99, 'GBP', 3.60, 'Settled', 'UK');",
      "solution_sql": "\nSELECT \n    merchant_category,\n    currency_code,\n    COUNT(transaction_id) as transaction_count,\n    ROUND(SUM(transaction_amount), 2) as total_amount,\n    ROUND(SUM(processing_fee), 2) as total_fees,\n    ROUND(AVG(transaction_amount), 2) as avg_transaction_amount\nFROM visa_transactions\nGROUP BY merchant_category, currency_code\nORDER BY total_amount DESC;",
      "explanation": "Visa payment processing analytics using processing speed and approval rate metrics for network performance optimization.",
      "created_at": "2025-08-11T17:08:07.874Z",
      "expected_output": [
        {
          "total_fees": "8.10",
          "total_amount": "450.00",
          "currency_code": "USD",
          "merchant_category": "Hotel",
          "transaction_count": "1",
          "avg_transaction_amount": "450.00"
        },
        {
          "total_fees": "5.40",
          "total_amount": "299.99",
          "currency_code": "USD",
          "merchant_category": "Online Store",
          "transaction_count": "1",
          "avg_transaction_amount": "299.99"
        },
        {
          "total_fees": "3.60",
          "total_amount": "199.99",
          "currency_code": "GBP",
          "merchant_category": "Online Store",
          "transaction_count": "1",
          "avg_transaction_amount": "199.99"
        },
        {
          "total_fees": "2.82",
          "total_amount": "156.80",
          "currency_code": "USD",
          "merchant_category": "Grocery Store",
          "transaction_count": "1",
          "avg_transaction_amount": "156.80"
        },
        {
          "total_fees": "2.25",
          "total_amount": "125.50",
          "currency_code": "USD",
          "merchant_category": "Retail Store",
          "transaction_count": "1",
          "avg_transaction_amount": "125.50"
        },
        {
          "total_fees": "2.02",
          "total_amount": "112.30",
          "currency_code": "EUR",
          "merchant_category": "Restaurant",
          "transaction_count": "1",
          "avg_transaction_amount": "112.30"
        },
        {
          "total_fees": "1.60",
          "total_amount": "89.75",
          "currency_code": "USD",
          "merchant_category": "Restaurant",
          "transaction_count": "1",
          "avg_transaction_amount": "89.75"
        },
        {
          "total_fees": "1.54",
          "total_amount": "85.75",
          "currency_code": "CAD",
          "merchant_category": "Gas Station",
          "transaction_count": "1",
          "avg_transaction_amount": "85.75"
        },
        {
          "total_fees": "1.42",
          "total_amount": "78.90",
          "currency_code": "EUR",
          "merchant_category": "Retail Store",
          "transaction_count": "1",
          "avg_transaction_amount": "78.90"
        },
        {
          "total_fees": "1.17",
          "total_amount": "65.20",
          "currency_code": "USD",
          "merchant_category": "Gas Station",
          "transaction_count": "1",
          "avg_transaction_amount": "65.20"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Visa Global Payment Processing Analytics",
      "problem_slug": "visa-portfolio-analytics"
    },
    {
      "id": "32726df0-0ddb-4c4d-9a12-c9a9a8f5c597",
      "problem_id": "24bde9ed-3686-42bc-8256-0623c8140863",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE distribution_centers (\n        center_id INT PRIMARY KEY,\n        region VARCHAR(50),\n        operational_efficiency_score DECIMAL(5,2),\n        daily_throughput_units INT,\n        energy_cost_per_unit DECIMAL(8,4)\n    );\n      INSERT INTO distribution_centers VALUES\n    (1001, 'Southeast', 92.5, 125000, 0.0485),\n    (1002, 'Southeast', 88.7, 98000, 0.0520),\n    (1003, 'Midwest', 94.2, 142000, 0.0445),\n    (1004, 'Midwest', 91.8, 118000, 0.0465),\n    (1005, 'West Coast', 87.3, 89000, 0.0580),\n    (1006, 'Northeast', 93.6, 135000, 0.0470),\n    (1007, 'Southwest', 90.1, 105000, 0.0495),\n    (1008, 'Southwest', 86.9, 92000, 0.0545),\n    (1010, 'Southeast_v1', 92.60, 125010, 0.15),\n    (1012, 'Southeast_v2', 88.90, 98020, 0.25),\n    (1014, 'Midwest_v3', 94.50, 142030, 0.34),\n    (1016, 'Midwest_v4', 92.20, 118040, 0.45),\n    (1018, 'West Coast_v5', 87.80, 89050, 0.56),\n    (1020, 'Northeast_v6', 94.20, 135060, 0.65),\n    (1022, 'Southwest_v7', 90.80, 105070, 0.75),\n    (1024, 'Southwest_v8', 87.70, 92080, 0.85),\n    (1019, 'Southeast_v9', 93.40, 125090, 0.95),\n    (1021, 'Southeast_v10', 89.70, 98100, 1.05),\n    (1023, 'Midwest_v11', 95.30, 142110, 1.14),\n    (1025, 'Midwest_v12', 93.00, 118120, 1.25),\n    (1026, 'West Coast_v13', 88.60, 89130, 1.36),\n    (1028, 'Northeast_v14', 95.00, 135140, 1.45),\n    (1030, 'Southwest_v15', 91.60, 105150, 1.55),\n    (1032, 'Southwest_v16', 88.50, 92160, 1.65),\n    (1027, 'Southeast_v17', 94.20, 125170, 1.75);",
      "solution_sql": "SELECT region, AVG(operational_efficiency_score) as avg_efficiency\nFROM distribution_centers \nGROUP BY region \nHAVING AVG(operational_efficiency_score) > 90 \nORDER BY avg_efficiency DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.671Z",
      "expected_output": [
        {
          "region": "Midwest_v11",
          "avg_efficiency": "95.3000000000000000"
        },
        {
          "region": "Northeast_v14",
          "avg_efficiency": "95.0000000000000000"
        },
        {
          "region": "Midwest_v3",
          "avg_efficiency": "94.5000000000000000"
        },
        {
          "region": "Southeast_v17",
          "avg_efficiency": "94.2000000000000000"
        },
        {
          "region": "Northeast_v6",
          "avg_efficiency": "94.2000000000000000"
        },
        {
          "region": "Northeast",
          "avg_efficiency": "93.6000000000000000"
        },
        {
          "region": "Southeast_v9",
          "avg_efficiency": "93.4000000000000000"
        },
        {
          "region": "Midwest",
          "avg_efficiency": "93.0000000000000000"
        },
        {
          "region": "Midwest_v12",
          "avg_efficiency": "93.0000000000000000"
        },
        {
          "region": "Southeast_v1",
          "avg_efficiency": "92.6000000000000000"
        },
        {
          "region": "Midwest_v4",
          "avg_efficiency": "92.2000000000000000"
        },
        {
          "region": "Southwest_v15",
          "avg_efficiency": "91.6000000000000000"
        },
        {
          "region": "Southwest_v7",
          "avg_efficiency": "90.8000000000000000"
        },
        {
          "region": "Southeast",
          "avg_efficiency": "90.6000000000000000"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Walmart Supply Chain Efficiency Analytics",
      "problem_slug": "walmart-revenue-analysis"
    },
    {
      "id": "aa88bf67-6d71-4ed6-8db5-4e4563adc0f6",
      "problem_id": "24bde9ed-3686-42bc-8256-0623c8140863",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE distribution_centers (\n        center_id INT PRIMARY KEY,\n        region VARCHAR(50),\n        operational_efficiency_score DECIMAL(5,2),\n        daily_throughput_units INT,\n        energy_cost_per_unit DECIMAL(8,4)\n    );\n      INSERT INTO distribution_centers VALUES\n    (1001, 'Southeast', 92.5, 125000, 0.0485),\n    (1002, 'Southeast', 88.7, 98000, 0.0520),\n    (1003, 'Midwest', 94.2, 142000, 0.0445),\n    (1004, 'Midwest', 91.8, 118000, 0.0465),\n    (1005, 'West Coast', 87.3, 89000, 0.0580),\n    (1006, 'Northeast', 93.6, 135000, 0.0470),\n    (1007, 'Southwest', 90.1, 105000, 0.0495),\n    (1008, 'Southwest', 86.9, 92000, 0.0545),\n    (1010, 'Southeast_v1', 92.60, 125010, 0.15),\n    (1012, 'Southeast_v2', 88.90, 98020, 0.25),\n    (1014, 'Midwest_v3', 94.50, 142030, 0.34),\n    (1016, 'Midwest_v4', 92.20, 118040, 0.45),\n    (1018, 'West Coast_v5', 87.80, 89050, 0.56),\n    (1020, 'Northeast_v6', 94.20, 135060, 0.65),\n    (1022, 'Southwest_v7', 90.80, 105070, 0.75),\n    (1024, 'Southwest_v8', 87.70, 92080, 0.85),\n    (1019, 'Southeast_v9', 93.40, 125090, 0.95),\n    (1021, 'Southeast_v10', 89.70, 98100, 1.05),\n    (1023, 'Midwest_v11', 95.30, 142110, 1.14),\n    (1025, 'Midwest_v12', 93.00, 118120, 1.25),\n    (1026, 'West Coast_v13', 88.60, 89130, 1.36),\n    (1028, 'Northeast_v14', 95.00, 135140, 1.45),\n    (1030, 'Southwest_v15', 91.60, 105150, 1.55),\n    (1032, 'Southwest_v16', 88.50, 92160, 1.65),\n    (1027, 'Southeast_v17', 94.20, 125170, 1.75);",
      "solution_sql": "SELECT region, AVG(operational_efficiency_score) as avg_efficiency\nFROM distribution_centers \nGROUP BY region \nHAVING AVG(operational_efficiency_score) > 90 \nORDER BY avg_efficiency DESC;",
      "explanation": "Walmart supply chain analytics using inventory turnover calculations for operational efficiency optimization.",
      "created_at": "2025-08-11T17:08:07.746Z",
      "expected_output": [
        {
          "region": "Midwest_v11",
          "avg_efficiency": "95.3000000000000000"
        },
        {
          "region": "Northeast_v14",
          "avg_efficiency": "95.0000000000000000"
        },
        {
          "region": "Midwest_v3",
          "avg_efficiency": "94.5000000000000000"
        },
        {
          "region": "Southeast_v17",
          "avg_efficiency": "94.2000000000000000"
        },
        {
          "region": "Northeast_v6",
          "avg_efficiency": "94.2000000000000000"
        },
        {
          "region": "Northeast",
          "avg_efficiency": "93.6000000000000000"
        },
        {
          "region": "Southeast_v9",
          "avg_efficiency": "93.4000000000000000"
        },
        {
          "region": "Midwest",
          "avg_efficiency": "93.0000000000000000"
        },
        {
          "region": "Midwest_v12",
          "avg_efficiency": "93.0000000000000000"
        },
        {
          "region": "Southeast_v1",
          "avg_efficiency": "92.6000000000000000"
        },
        {
          "region": "Midwest_v4",
          "avg_efficiency": "92.2000000000000000"
        },
        {
          "region": "Southwest_v15",
          "avg_efficiency": "91.6000000000000000"
        },
        {
          "region": "Southwest_v7",
          "avg_efficiency": "90.8000000000000000"
        },
        {
          "region": "Southeast",
          "avg_efficiency": "90.6000000000000000"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Walmart Supply Chain Efficiency Analytics",
      "problem_slug": "walmart-revenue-analysis"
    },
    {
      "id": "57cc9e2c-2770-437b-9339-a9f932b16ccb",
      "problem_id": "c70ce01f-a0c6-4231-b7f1-16576810ba1b",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE wellsfargo_commercial_banking (\n        loan_id INT PRIMARY KEY,\n        industry_sector VARCHAR(50),\n        loan_amount DECIMAL(15,2),\n        loan_interest_rate DECIMAL(6,3),\n        cost_of_funds DECIMAL(6,3),\n        default_probability DECIMAL(5,3),\n        loan_term_years INT,\n        collateral_coverage_ratio DECIMAL(5,2),\n        relationship_revenue DECIMAL(10,2),\n        regulatory_risk_weight DECIMAL(4,2),\n        loan_date DATE\n    );\n      INSERT INTO wellsfargo_commercial_banking  VALUES\n      (1, 'Technology Services', 450000000.00, 0.0485, 0.0125, 0.015, 5, 1.85, 2250000.00, 1.00, '2024-01-15'),\n      (2, 'Healthcare', 280000000.00, 0.0525, 0.0125, 0.018, 7, 1.95, 1850000.00, 0.75, '2024-01-15'),\n      (3, 'Manufacturing', 650000000.00, 0.0465, 0.0125, 0.022, 10, 2.15, 3200000.00, 1.25, '2024-01-16'),\n      (4, 'Real Estate', 820000000.00, 0.0545, 0.0125, 0.025, 15, 1.45, 4850000.00, 1.50, '2024-01-16'),\n      (5, 'Professional Services', 185000000.00, 0.0505, 0.0125, 0.012, 3, 1.65, 1250000.00, 0.85, '2024-01-17'),\n      (7, 'Technology Services_v1', 450000000.10, 0.15, 0.11, 0.12, 15, 1.95, 2250000.10, 1.10, '2024-01-16'),\n      (9, 'Healthcare_v2', 280000000.20, 0.25, 0.21, 0.22, 27, 2.15, 1850000.20, 0.95, '2024-01-17'),\n      (11, 'Manufacturing_v3', 650000000.30, 0.35, 0.31, 0.32, 40, 2.45, 3200000.30, 1.55, '2024-01-19'),\n      (13, 'Real Estate_v4', 820000000.40, 0.45, 0.41, 0.43, 55, 1.85, 4850000.40, 1.90, '2024-01-20'),\n      (15, 'Professional Services_v5', 185000000.50, 0.55, 0.51, 0.51, 53, 2.15, 1250000.50, 1.35, '2024-01-22'),\n      (12, 'Technology Services_v6', 450000000.60, 0.65, 0.61, 0.62, 65, 2.45, 2250000.60, 1.60, '2024-01-21'),\n      (14, 'Healthcare_v7', 280000000.70, 0.75, 0.71, 0.72, 77, 2.65, 1850000.70, 1.45, '2024-01-22'),\n      (16, 'Manufacturing_v8', 650000000.80, 0.85, 0.81, 0.82, 90, 2.95, 3200000.80, 2.05, '2024-01-24'),\n      (18, 'Real Estate_v9', 820000000.90, 0.95, 0.91, 0.93, 105, 2.35, 4850000.90, 2.40, '2024-01-25'),\n      (20, 'Professional Services_v10', 185000001.00, 1.05, 1.01, 1.01, 103, 2.65, 1250001.00, 1.85, '2024-01-27'),\n      (17, 'Technology Services_v11', 450000001.10, 1.15, 1.11, 1.11, 115, 2.95, 2250001.10, 2.10, '2024-01-26'),\n      (19, 'Healthcare_v12', 280000001.20, 1.25, 1.21, 1.22, 127, 3.15, 1850001.20, 1.95, '2024-01-27'),\n      (21, 'Manufacturing_v13', 650000001.30, 1.35, 1.31, 1.32, 140, 3.45, 3200001.30, 2.55, '2024-01-29'),\n      (23, 'Real Estate_v14', 820000001.40, 1.45, 1.41, 1.43, 155, 2.85, 4850001.40, 2.90, '2024-01-30'),\n      (25, 'Professional Services_v15', 185000001.50, 1.55, 1.51, 1.51, 153, 3.15, 1250001.50, 2.35, '2024-02-01'),\n      (22, 'Technology Services_v16', 450000001.60, 1.65, 1.61, 1.61, 165, 3.45, 2250001.60, 2.60, '2024-01-31'),\n      (24, 'Healthcare_v17', 280000001.70, 1.75, 1.71, 1.72, 177, 3.65, 1850001.70, 2.45, '2024-02-01'),\n      (26, 'Manufacturing_v18', 650000001.80, 1.85, 1.81, 1.82, 190, 3.95, 3200001.80, 3.05, '2024-02-03'),\n      (28, 'Real Estate_v19', 820000001.90, 1.95, 1.91, 1.93, 205, 3.35, 4850001.90, 3.40, '2024-02-04'),\n      (30, 'Professional Services_v20', 185000002.00, 2.05, 2.01, 2.01, 203, 3.65, 1250002.00, 2.85, '2024-02-06');",
      "solution_sql": "WITH banking_metrics AS (\n        SELECT \n            industry_sector,\n            loan_amount,\n            loan_interest_rate,\n            cost_of_funds,\n            default_probability,\n            -- Net Interest Margin calculation\n            loan_interest_rate - cost_of_funds as net_interest_margin,\n            -- Risk-adjusted return\n            (loan_interest_rate - cost_of_funds - default_probability) as risk_adjusted_return,\n            collateral_coverage_ratio,\n            relationship_revenue\n        FROM wellsfargo_commercial_banking\n    )\n    SELECT \n        industry_sector,\n        ROUND(AVG(loan_amount) / 1000000, 2) as avg_loan_millions,\n        ROUND(CAST(AVG(default_probability) * 100 AS NUMERIC), 3) as avg_default_rate_pct,\n        ROUND(CAST(AVG(net_interest_margin) * 100 AS NUMERIC), 3) as avg_nim_pct,\n        ROUND(CAST(AVG(risk_adjusted_return) * 100 AS NUMERIC), 3) as avg_risk_adj_return_pct,\n        ROUND(AVG(collateral_coverage_ratio), 2) as avg_collateral_ratio,\n        ROUND(AVG(relationship_revenue) / 1000, 2) as avg_relationship_revenue_thousands\n    FROM banking_metrics\n    GROUP BY industry_sector\n    HAVING AVG(default_probability) < 0.02 AND AVG(net_interest_margin) > 0.035\n    ORDER BY avg_nim_pct DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.765Z",
      "expected_output": [
        {
          "avg_nim_pct": "4.000",
          "industry_sector": "Healthcare",
          "avg_loan_millions": "280.00",
          "avg_collateral_ratio": "1.95",
          "avg_default_rate_pct": "1.800",
          "avg_risk_adj_return_pct": "2.200",
          "avg_relationship_revenue_thousands": "1850.00"
        },
        {
          "avg_nim_pct": "3.800",
          "industry_sector": "Professional Services",
          "avg_loan_millions": "185.00",
          "avg_collateral_ratio": "1.65",
          "avg_default_rate_pct": "1.200",
          "avg_risk_adj_return_pct": "2.600",
          "avg_relationship_revenue_thousands": "1250.00"
        },
        {
          "avg_nim_pct": "3.600",
          "industry_sector": "Technology Services",
          "avg_loan_millions": "450.00",
          "avg_collateral_ratio": "1.85",
          "avg_default_rate_pct": "1.500",
          "avg_risk_adj_return_pct": "2.100",
          "avg_relationship_revenue_thousands": "2250.00"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Wells Fargo Commercial Banking Analytics",
      "problem_slug": "wells-fargo-portfolio-analytics"
    },
    {
      "id": "0553e2f3-46c7-4632-8dcc-dd51c54d2234",
      "problem_id": "c70ce01f-a0c6-4231-b7f1-16576810ba1b",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE wellsfargo_commercial_banking (\n        loan_id INT PRIMARY KEY,\n        industry_sector VARCHAR(50),\n        loan_amount DECIMAL(15,2),\n        loan_interest_rate DECIMAL(6,3),\n        cost_of_funds DECIMAL(6,3),\n        default_probability DECIMAL(5,3),\n        loan_term_years INT,\n        collateral_coverage_ratio DECIMAL(5,2),\n        relationship_revenue DECIMAL(10,2),\n        regulatory_risk_weight DECIMAL(4,2),\n        loan_date DATE\n    );\n      INSERT INTO wellsfargo_commercial_banking  VALUES\n      (1, 'Technology Services', 450000000.00, 0.0485, 0.0125, 0.015, 5, 1.85, 2250000.00, 1.00, '2024-01-15'),\n      (2, 'Healthcare', 280000000.00, 0.0525, 0.0125, 0.018, 7, 1.95, 1850000.00, 0.75, '2024-01-15'),\n      (3, 'Manufacturing', 650000000.00, 0.0465, 0.0125, 0.022, 10, 2.15, 3200000.00, 1.25, '2024-01-16'),\n      (4, 'Real Estate', 820000000.00, 0.0545, 0.0125, 0.025, 15, 1.45, 4850000.00, 1.50, '2024-01-16'),\n      (5, 'Professional Services', 185000000.00, 0.0505, 0.0125, 0.012, 3, 1.65, 1250000.00, 0.85, '2024-01-17'),\n      (7, 'Technology Services_v1', 450000000.10, 0.15, 0.11, 0.12, 15, 1.95, 2250000.10, 1.10, '2024-01-16'),\n      (9, 'Healthcare_v2', 280000000.20, 0.25, 0.21, 0.22, 27, 2.15, 1850000.20, 0.95, '2024-01-17'),\n      (11, 'Manufacturing_v3', 650000000.30, 0.35, 0.31, 0.32, 40, 2.45, 3200000.30, 1.55, '2024-01-19'),\n      (13, 'Real Estate_v4', 820000000.40, 0.45, 0.41, 0.43, 55, 1.85, 4850000.40, 1.90, '2024-01-20'),\n      (15, 'Professional Services_v5', 185000000.50, 0.55, 0.51, 0.51, 53, 2.15, 1250000.50, 1.35, '2024-01-22'),\n      (12, 'Technology Services_v6', 450000000.60, 0.65, 0.61, 0.62, 65, 2.45, 2250000.60, 1.60, '2024-01-21'),\n      (14, 'Healthcare_v7', 280000000.70, 0.75, 0.71, 0.72, 77, 2.65, 1850000.70, 1.45, '2024-01-22'),\n      (16, 'Manufacturing_v8', 650000000.80, 0.85, 0.81, 0.82, 90, 2.95, 3200000.80, 2.05, '2024-01-24'),\n      (18, 'Real Estate_v9', 820000000.90, 0.95, 0.91, 0.93, 105, 2.35, 4850000.90, 2.40, '2024-01-25'),\n      (20, 'Professional Services_v10', 185000001.00, 1.05, 1.01, 1.01, 103, 2.65, 1250001.00, 1.85, '2024-01-27'),\n      (17, 'Technology Services_v11', 450000001.10, 1.15, 1.11, 1.11, 115, 2.95, 2250001.10, 2.10, '2024-01-26'),\n      (19, 'Healthcare_v12', 280000001.20, 1.25, 1.21, 1.22, 127, 3.15, 1850001.20, 1.95, '2024-01-27'),\n      (21, 'Manufacturing_v13', 650000001.30, 1.35, 1.31, 1.32, 140, 3.45, 3200001.30, 2.55, '2024-01-29'),\n      (23, 'Real Estate_v14', 820000001.40, 1.45, 1.41, 1.43, 155, 2.85, 4850001.40, 2.90, '2024-01-30'),\n      (25, 'Professional Services_v15', 185000001.50, 1.55, 1.51, 1.51, 153, 3.15, 1250001.50, 2.35, '2024-02-01'),\n      (22, 'Technology Services_v16', 450000001.60, 1.65, 1.61, 1.61, 165, 3.45, 2250001.60, 2.60, '2024-01-31'),\n      (24, 'Healthcare_v17', 280000001.70, 1.75, 1.71, 1.72, 177, 3.65, 1850001.70, 2.45, '2024-02-01'),\n      (26, 'Manufacturing_v18', 650000001.80, 1.85, 1.81, 1.82, 190, 3.95, 3200001.80, 3.05, '2024-02-03'),\n      (28, 'Real Estate_v19', 820000001.90, 1.95, 1.91, 1.93, 205, 3.35, 4850001.90, 3.40, '2024-02-04'),\n      (30, 'Professional Services_v20', 185000002.00, 2.05, 2.01, 2.01, 203, 3.65, 1250002.00, 2.85, '2024-02-06');",
      "solution_sql": "WITH banking_metrics AS (\n        SELECT \n            industry_sector,\n            loan_amount,\n            loan_interest_rate,\n            cost_of_funds,\n            default_probability,\n            -- Net Interest Margin calculation\n            loan_interest_rate - cost_of_funds as net_interest_margin,\n            -- Risk-adjusted return\n            (loan_interest_rate - cost_of_funds - default_probability) as risk_adjusted_return,\n            collateral_coverage_ratio,\n            relationship_revenue\n        FROM wellsfargo_commercial_banking\n    )\n    SELECT \n        industry_sector,\n        ROUND(AVG(loan_amount) / 1000000, 2) as avg_loan_millions,\n        ROUND(CAST(AVG(default_probability) * 100 AS NUMERIC), 3) as avg_default_rate_pct,\n        ROUND(CAST(AVG(net_interest_margin) * 100 AS NUMERIC), 3) as avg_nim_pct,\n        ROUND(CAST(AVG(risk_adjusted_return) * 100 AS NUMERIC), 3) as avg_risk_adj_return_pct,\n        ROUND(AVG(collateral_coverage_ratio), 2) as avg_collateral_ratio,\n        ROUND(AVG(relationship_revenue) / 1000, 2) as avg_relationship_revenue_thousands\n    FROM banking_metrics\n    GROUP BY industry_sector\n    HAVING AVG(default_probability) < 0.02 AND AVG(net_interest_margin) > 0.035\n    ORDER BY avg_nim_pct DESC;",
      "explanation": "Wells Fargo commercial banking analytics using default rates and net interest margins for sector-based lending optimization.",
      "created_at": "2025-08-11T17:08:07.872Z",
      "expected_output": [
        {
          "avg_nim_pct": "4.000",
          "industry_sector": "Healthcare",
          "avg_loan_millions": "280.00",
          "avg_collateral_ratio": "1.95",
          "avg_default_rate_pct": "1.800",
          "avg_risk_adj_return_pct": "2.200",
          "avg_relationship_revenue_thousands": "1850.00"
        },
        {
          "avg_nim_pct": "3.800",
          "industry_sector": "Professional Services",
          "avg_loan_millions": "185.00",
          "avg_collateral_ratio": "1.65",
          "avg_default_rate_pct": "1.200",
          "avg_risk_adj_return_pct": "2.600",
          "avg_relationship_revenue_thousands": "1250.00"
        },
        {
          "avg_nim_pct": "3.600",
          "industry_sector": "Technology Services",
          "avg_loan_millions": "450.00",
          "avg_collateral_ratio": "1.85",
          "avg_default_rate_pct": "1.500",
          "avg_risk_adj_return_pct": "2.100",
          "avg_relationship_revenue_thousands": "2250.00"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Wells Fargo Commercial Banking Analytics",
      "problem_slug": "wells-fargo-portfolio-analytics"
    },
    {
      "id": "e6d46aa5-484b-40ee-a2c7-e3e30be988ac",
      "problem_id": "9992b85b-7f74-4ada-ab73-2daa3ef60e32",
      "sql_dialect": "mysql",
      "setup_sql": "CREATE TABLE wf_borrowers (\n        borrower_id INT PRIMARY KEY,\n        credit_score INT,\n        annual_income DECIMAL(12,2),\n        employment_years DECIMAL(8,2),\n        total_debt DECIMAL(12,2),\n        loan_amount DECIMAL(12,2),\n        home_value DECIMAL(12,2),\n        loan_status VARCHAR(100)\n    );\n      INSERT INTO wf_borrowers VALUES\n    (9001, 750, 95000.00, 8.5, 25000.00, 380000.00, 450000.00, 'Current'),\n    (9002, 680, 72000.00, 4.2, 35000.00, 320000.00, 400000.00, 'Default'),\n    (9003, 720, 88000.00, 6.8, 28000.00, 350000.00, 425000.00, 'Current'),\n    (9004, 620, 55000.00, 2.1, 45000.00, 280000.00, 325000.00, 'Default'),\n    (9005, 780, 125000.00, 12.3, 18000.00, 420000.00, 500000.00, 'Current'),\n    (9006, 640, 58000.00, 3.5, 42000.00, 295000.00, 340000.00, 'Default'),\n    (9007, 710, 82000.00, 7.2, 31000.00, 365000.00, 430000.00, 'Current'),\n    (9008, 590, 48000.00, 1.8, 38000.00, 265000.00, 310000.00, 'Default'),\n    (9009, 800, 150000.00, 15.6, 22000.00, 480000.00, 580000.00, 'Current'),\n    (9010, 660, 68000.00, 5.1, 39000.00, 315000.00, 375000.00, 'Current'),\n    (9012, 760, 95000.10, 8.60, 25000.10, 380000.10, 450000.10, 'Current_v1'),\n    (9014, 700, 72000.20, 4.40, 35000.20, 320000.20, 400000.20, 'Default_v2'),\n    (9016, 750, 88000.30, 7.10, 28000.30, 350000.30, 425000.30, 'Current_v3'),\n    (9018, 660, 55000.40, 2.50, 45000.40, 280000.40, 325000.40, 'Default_v4'),\n    (9020, 830, 125000.50, 12.80, 18000.50, 420000.50, 500000.50, 'Current_v5'),\n    (9022, 700, 58000.60, 4.10, 42000.60, 295000.60, 340000.60, 'Default_v6'),\n    (9024, 780, 82000.70, 7.90, 31000.70, 365000.70, 430000.70, 'Current_v7'),\n    (9026, 670, 48000.80, 2.60, 38000.80, 265000.80, 310000.80, 'Default_v8'),\n    (9028, 890, 150000.90, 16.50, 22000.90, 480000.90, 580000.90, 'Current_v9'),\n    (9030, 760, 68001.00, 6.10, 39001.00, 315001.00, 375001.00, 'Current_v10'),\n    (9023, 860, 95001.10, 9.60, 25001.10, 380001.10, 450001.10, 'Current_v11'),\n    (9025, 800, 72001.20, 5.40, 35001.20, 320001.20, 400001.20, 'Default_v12'),\n    (9027, 850, 88001.30, 8.10, 28001.30, 350001.30, 425001.30, 'Current_v13'),\n    (9029, 760, 55001.40, 3.50, 45001.40, 280001.40, 325001.40, 'Default_v14'),\n    (9031, 930, 125001.50, 13.80, 18001.50, 420001.50, 500001.50, 'Current_v15');",
      "solution_sql": "WITH risk_calculations AS (\n        SELECT \n            borrower_id,\n            credit_score,\n            annual_income,\n            employment_years,\n            loan_amount,\n            home_value,\n            total_debt,\n            loan_status,\n            (total_debt / annual_income) as debt_to_income_ratio,\n            (loan_amount / home_value) as loan_to_value_ratio,\n            -- Normalize factors to 0-100 scale and apply weights\n            (\n                (credit_score / 850.0 * 100 * 0.30) +\n                ((1 - LEAST(total_debt / annual_income, 1)) * 100 * 0.25) +\n                ((1 - LEAST(loan_amount / home_value, 1)) * 100 * 0.25) +\n                (LEAST(employment_years / 20.0, 1) * 100 * 0.20)\n            ) as composite_risk_score\n        FROM wf_borrowers\n    ),\n    risk_deciles AS (\n        SELECT \n            *,\n            NTILE(10) OVER (ORDER BY composite_risk_score) as risk_decile\n        FROM risk_calculations\n    ),\n    decile_analysis AS (\n        SELECT \n            risk_decile,\n            COUNT(*) as borrower_count,\n            AVG(composite_risk_score) as avg_risk_score,\n            SUM(CASE WHEN loan_status = 'Default' THEN 1 ELSE 0 END) as defaults,\n            AVG(loan_amount) as avg_loan_amount,\n            CAST(SUM(CASE WHEN loan_status = 'Default' THEN 1 ELSE 0 END) AS DECIMAL) / COUNT(*) as default_rate\n        FROM risk_deciles\n        GROUP BY risk_decile\n    )\n    SELECT \n        risk_decile,\n        borrower_count,\n        ROUND(avg_risk_score, 2) as avg_risk_score,\n        defaults,\n        ROUND(default_rate * 100, 2) as default_rate_percent,\n        ROUND(avg_loan_amount, 0) as avg_loan_amount,\n        ROUND(default_rate * avg_loan_amount * 0.5, 0) as expected_loss_per_borrower\n    FROM decile_analysis\n    WHERE default_rate > 0.08\n    ORDER BY risk_decile DESC;",
      "explanation": null,
      "created_at": "2025-08-23T13:23:40.732Z",
      "expected_output": [
        {
          "defaults": "1",
          "risk_decile": "3",
          "avg_risk_score": "42.70",
          "borrower_count": "3",
          "avg_loan_amount": "310000",
          "default_rate_percent": "33.33",
          "expected_loss_per_borrower": "51662"
        },
        {
          "defaults": "1",
          "risk_decile": "2",
          "avg_risk_score": "36.57",
          "borrower_count": "3",
          "avg_loan_amount": "280001",
          "default_rate_percent": "33.33",
          "expected_loss_per_borrower": "46662"
        },
        {
          "defaults": "2",
          "risk_decile": "1",
          "avg_risk_score": "32.42",
          "borrower_count": "3",
          "avg_loan_amount": "275000",
          "default_rate_percent": "66.67",
          "expected_loss_per_borrower": "91671"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Wells Fargo Mortgage Risk Assessment",
      "problem_slug": "wells-fargo-mortgage-risk-assessment"
    },
    {
      "id": "bcface37-02ba-4bd6-8212-a482a1fa5f51",
      "problem_id": "9992b85b-7f74-4ada-ab73-2daa3ef60e32",
      "sql_dialect": "postgresql",
      "setup_sql": "CREATE TABLE wf_borrowers (\n        borrower_id INT PRIMARY KEY,\n        credit_score INT,\n        annual_income DECIMAL(12,2),\n        employment_years DECIMAL(8,2),\n        total_debt DECIMAL(12,2),\n        loan_amount DECIMAL(12,2),\n        home_value DECIMAL(12,2),\n        loan_status VARCHAR(100)\n    );\n      INSERT INTO wf_borrowers VALUES\n    (9001, 750, 95000.00, 8.5, 25000.00, 380000.00, 450000.00, 'Current'),\n    (9002, 680, 72000.00, 4.2, 35000.00, 320000.00, 400000.00, 'Default'),\n    (9003, 720, 88000.00, 6.8, 28000.00, 350000.00, 425000.00, 'Current'),\n    (9004, 620, 55000.00, 2.1, 45000.00, 280000.00, 325000.00, 'Default'),\n    (9005, 780, 125000.00, 12.3, 18000.00, 420000.00, 500000.00, 'Current'),\n    (9006, 640, 58000.00, 3.5, 42000.00, 295000.00, 340000.00, 'Default'),\n    (9007, 710, 82000.00, 7.2, 31000.00, 365000.00, 430000.00, 'Current'),\n    (9008, 590, 48000.00, 1.8, 38000.00, 265000.00, 310000.00, 'Default'),\n    (9009, 800, 150000.00, 15.6, 22000.00, 480000.00, 580000.00, 'Current'),\n    (9010, 660, 68000.00, 5.1, 39000.00, 315000.00, 375000.00, 'Current'),\n    (9012, 760, 95000.10, 8.60, 25000.10, 380000.10, 450000.10, 'Current_v1'),\n    (9014, 700, 72000.20, 4.40, 35000.20, 320000.20, 400000.20, 'Default_v2'),\n    (9016, 750, 88000.30, 7.10, 28000.30, 350000.30, 425000.30, 'Current_v3'),\n    (9018, 660, 55000.40, 2.50, 45000.40, 280000.40, 325000.40, 'Default_v4'),\n    (9020, 830, 125000.50, 12.80, 18000.50, 420000.50, 500000.50, 'Current_v5'),\n    (9022, 700, 58000.60, 4.10, 42000.60, 295000.60, 340000.60, 'Default_v6'),\n    (9024, 780, 82000.70, 7.90, 31000.70, 365000.70, 430000.70, 'Current_v7'),\n    (9026, 670, 48000.80, 2.60, 38000.80, 265000.80, 310000.80, 'Default_v8'),\n    (9028, 890, 150000.90, 16.50, 22000.90, 480000.90, 580000.90, 'Current_v9'),\n    (9030, 760, 68001.00, 6.10, 39001.00, 315001.00, 375001.00, 'Current_v10'),\n    (9023, 860, 95001.10, 9.60, 25001.10, 380001.10, 450001.10, 'Current_v11'),\n    (9025, 800, 72001.20, 5.40, 35001.20, 320001.20, 400001.20, 'Default_v12'),\n    (9027, 850, 88001.30, 8.10, 28001.30, 350001.30, 425001.30, 'Current_v13'),\n    (9029, 760, 55001.40, 3.50, 45001.40, 280001.40, 325001.40, 'Default_v14'),\n    (9031, 930, 125001.50, 13.80, 18001.50, 420001.50, 500001.50, 'Current_v15');",
      "solution_sql": "WITH risk_calculations AS (\n        SELECT \n            borrower_id,\n            credit_score,\n            annual_income,\n            employment_years,\n            loan_amount,\n            home_value,\n            total_debt,\n            loan_status,\n            (total_debt / annual_income) as debt_to_income_ratio,\n            (loan_amount / home_value) as loan_to_value_ratio,\n            -- Normalize factors to 0-100 scale and apply weights\n            (\n                (credit_score / 850.0 * 100 * 0.30) +\n                ((1 - LEAST(total_debt / annual_income, 1)) * 100 * 0.25) +\n                ((1 - LEAST(loan_amount / home_value, 1)) * 100 * 0.25) +\n                (LEAST(employment_years / 20.0, 1) * 100 * 0.20)\n            ) as composite_risk_score\n        FROM wf_borrowers\n    ),\n    risk_deciles AS (\n        SELECT \n            *,\n            NTILE(10) OVER (ORDER BY composite_risk_score) as risk_decile\n        FROM risk_calculations\n    ),\n    decile_analysis AS (\n        SELECT \n            risk_decile,\n            COUNT(*) as borrower_count,\n            AVG(composite_risk_score) as avg_risk_score,\n            SUM(CASE WHEN loan_status = 'Default' THEN 1 ELSE 0 END) as defaults,\n            AVG(loan_amount) as avg_loan_amount,\n            CAST(SUM(CASE WHEN loan_status = 'Default' THEN 1 ELSE 0 END) AS DECIMAL) / COUNT(*) as default_rate\n        FROM risk_deciles\n        GROUP BY risk_decile\n    )\n    SELECT \n        risk_decile,\n        borrower_count,\n        ROUND(avg_risk_score, 2) as avg_risk_score,\n        defaults,\n        ROUND(default_rate * 100, 2) as default_rate_percent,\n        ROUND(avg_loan_amount, 0) as avg_loan_amount,\n        ROUND(default_rate * avg_loan_amount * 0.5, 0) as expected_loss_per_borrower\n    FROM decile_analysis\n    WHERE default_rate > 0.08\n    ORDER BY risk_decile DESC;",
      "explanation": "Sophisticated mortgage risk modeling using weighted composite scoring, decile analysis, and expected loss calculations for regulatory compliance and risk management.",
      "created_at": "2025-08-11T13:51:12.118Z",
      "expected_output": [
        {
          "defaults": "1",
          "risk_decile": "3",
          "avg_risk_score": "42.70",
          "borrower_count": "3",
          "avg_loan_amount": "310000",
          "default_rate_percent": "33.33",
          "expected_loss_per_borrower": "51667"
        },
        {
          "defaults": "1",
          "risk_decile": "2",
          "avg_risk_score": "36.57",
          "borrower_count": "3",
          "avg_loan_amount": "280001",
          "default_rate_percent": "33.33",
          "expected_loss_per_borrower": "46667"
        },
        {
          "defaults": "2",
          "risk_decile": "1",
          "avg_risk_score": "32.42",
          "borrower_count": "3",
          "avg_loan_amount": "275000",
          "default_rate_percent": "66.67",
          "expected_loss_per_borrower": "91667"
        }
      ],
      "explanation_detailed": null,
      "approach_summary": null,
      "key_concepts": null,
      "alternative_solutions": null,
      "time_complexity": null,
      "space_complexity": null,
      "common_mistakes": null,
      "optimization_tips": null,
      "problem_title": "Wells Fargo Mortgage Risk Assessment",
      "problem_slug": "wells-fargo-mortgage-risk-assessment"
    }
  ],
  "exportedAt": "2025-08-24T17:04:04.770Z",
  "totalProblems": 70,
  "totalCategories": 12,
  "totalSchemas": 140
}