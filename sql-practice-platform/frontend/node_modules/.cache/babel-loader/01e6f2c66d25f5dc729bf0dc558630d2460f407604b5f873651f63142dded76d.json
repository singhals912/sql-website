{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AchievementSystem=_ref=>{let{showNotifications=true}=_ref;const[achievements,setAchievements]=useState({earned:[],available:[]});const[newAchievements,setNewAchievements]=useState([]);const[loading,setLoading]=useState(true);useEffect(()=>{fetchAchievements();},[]);const fetchAchievements=async()=>{try{const sessionId=localStorage.getItem('sessionId')||'anonymous-'+Date.now();const response=await axios.get('http://localhost:5001/api/recommendations/achievements',{headers:{'x-session-id':sessionId}});if(response.data.success){const newData=response.data.data;// Check for new achievements\nconst previousEarned=JSON.parse(localStorage.getItem('earnedAchievements')||'[]');const newlyEarned=newData.earned.filter(achievement=>!previousEarned.some(prev=>prev.key===achievement.key));if(newlyEarned.length>0&&showNotifications){setNewAchievements(newlyEarned);setTimeout(()=>setNewAchievements([]),5000);}// Store current achievements\nlocalStorage.setItem('earnedAchievements',JSON.stringify(newData.earned));setAchievements(newData);}}catch(error){console.error('Error fetching achievements:',error);}finally{setLoading(false);}};const AchievementBadge=_ref2=>{let{achievement,isEarned=false,isNew=false}=_ref2;const[isHovered,setIsHovered]=useState(false);return/*#__PURE__*/_jsxs(\"div\",{className:\"relative group transform transition-all duration-300 \".concat(isEarned?'hover:scale-110 cursor-pointer':'opacity-60',\" \").concat(isNew?'animate-bounce':''),onMouseEnter:()=>setIsHovered(true),onMouseLeave:()=>setIsHovered(false),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"relative w-20 h-20 rounded-full flex items-center justify-center text-2xl font-bold shadow-lg transition-all duration-300 \".concat(isEarned?'bg-gradient-to-br from-yellow-400 via-yellow-500 to-orange-500 text-white shadow-yellow-200':'bg-gray-200 dark:bg-gray-700 text-gray-400 dark:text-gray-500'),children:[achievement.icon,isEarned&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0 rounded-full bg-gradient-to-r from-transparent via-white/30 to-transparent transform -skew-x-12 -translate-x-full group-hover:translate-x-full transition-transform duration-1000\"}),isNew&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute -top-1 -right-1 w-4 h-4 bg-red-500 rounded-full border-2 border-white animate-pulse\"})]}),isHovered&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-900 text-white text-xs rounded-lg py-2 px-3 whitespace-nowrap shadow-lg\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-semibold\",children:achievement.name}),/*#__PURE__*/_jsx(\"div\",{className:\"opacity-80\",children:achievement.description}),achievement.progress!==undefined&&!isEarned&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-700 rounded-full h-1\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-blue-500 h-1 rounded-full transition-all duration-300\",style:{width:\"\".concat(Math.min(achievement.progress,100),\"%\")}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs mt-1\",children:[achievement.progress,\"% complete\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute top-full left-1/2 transform -translate-x-1/2 w-0 h-0 border-l-4 border-r-4 border-t-4 border-transparent border-t-gray-900\"})]})})]});};const AchievementNotification=_ref3=>{let{achievement,onClose}=_ref3;return/*#__PURE__*/_jsx(\"div\",{className:\"fixed top-4 right-4 z-50 animate-slideInRight\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-gradient-to-r from-yellow-400 to-orange-500 text-white rounded-lg shadow-2xl p-4 max-w-sm\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-3xl animate-bounce\",children:achievement.icon}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-bold text-lg\",children:\"Achievement Unlocked!\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm opacity-90\",children:achievement.name}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs opacity-80\",children:achievement.description})]}),/*#__PURE__*/_jsx(\"button\",{onClick:onClose,className:\"text-white hover:text-gray-200 transition-colors\",children:/*#__PURE__*/_jsx(\"svg\",{className:\"w-5 h-5\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:2,d:\"M6 18L18 6M6 6l12 12\"})})})]})})});};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center p-8\",children:/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[newAchievements.map((achievement,index)=>/*#__PURE__*/_jsx(AchievementNotification,{achievement:achievement,onClose:()=>setNewAchievements(prev=>prev.filter((_,i)=>i!==index))},achievement.key)),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-6\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-2xl font-bold text-gray-900 dark:text-white flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83C\\uDFC6\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Your Achievements\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gradient-to-r from-yellow-400 to-orange-500 text-white px-4 py-2 rounded-full font-semibold shadow-lg\",children:[achievements.earned.length,\" earned\"]})]}),achievements.earned.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-4 md:grid-cols-6 lg:grid-cols-8 gap-6 justify-items-center\",children:achievements.earned.map(achievement=>/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(AchievementBadge,{achievement:achievement,isEarned:true,isNew:newAchievements.some(newAch=>newAch.key===achievement.key)}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm font-semibold text-gray-900 dark:text-white\",children:achievement.name}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-500 dark:text-gray-400\",children:achievement.description})]})]},achievement.key))}):/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-6xl mb-4\",children:\"\\uD83C\\uDFAF\"}),/*#__PURE__*/_jsx(\"h4\",{className:\"text-xl font-semibold text-gray-700 dark:text-gray-300 mb-2\",children:\"Start your achievement journey!\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500 dark:text-gray-400\",children:\"Solve problems to unlock your first achievement\"})]})]}),achievements.available.length>0&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-xl font-bold text-gray-900 dark:text-white mb-6 flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83C\\uDFAF\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Coming Up Next\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",children:achievements.available.slice(0,6).map(achievement=>/*#__PURE__*/_jsx(\"div\",{className:\"bg-white dark:bg-gray-800 border-2 border-dashed border-gray-300 dark:border-gray-600 rounded-xl p-6 hover:border-blue-400 dark:hover:border-blue-500 transition-all duration-300 hover:shadow-lg\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-4\",children:[/*#__PURE__*/_jsx(AchievementBadge,{achievement:achievement,isEarned:false}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-bold text-gray-900 dark:text-white mb-1\",children:achievement.name}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 dark:text-gray-400 mb-2\",children:achievement.description}),achievement.progress!==undefined&&achievement.progress>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-1\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between text-xs text-gray-500 dark:text-gray-400\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Progress\"}),/*#__PURE__*/_jsxs(\"span\",{children:[achievement.progress,\"%\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-gradient-to-r from-blue-500 to-purple-500 h-2 rounded-full transition-all duration-500\",style:{width:\"\".concat(Math.min(achievement.progress,100),\"%\")}})})]})]})]})},achievement.key))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gradient-to-r from-blue-50 to-indigo-50 dark:from-gray-800 dark:to-gray-700 rounded-xl p-6\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-lg font-bold text-gray-900 dark:text-white mb-4 flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDCCA\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Achievement Stats\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 md:grid-cols-4 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-3xl font-bold text-blue-600 dark:text-blue-400\",children:achievements.earned.length}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600 dark:text-gray-400\",children:\"Earned\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-3xl font-bold text-purple-600 dark:text-purple-400\",children:achievements.total_available}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600 dark:text-gray-400\",children:\"Total\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-3xl font-bold text-green-600 dark:text-green-400\",children:[Math.round(achievements.earned.length/achievements.total_available*100),\"%\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600 dark:text-gray-400\",children:\"Complete\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-3xl font-bold text-orange-600 dark:text-orange-400\",children:achievements.available.length}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600 dark:text-gray-400\",children:\"Available\"})]})]})]})]});};export default AchievementSystem;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","AchievementSystem","_ref","showNotifications","achievements","setAchievements","earned","available","newAchievements","setNewAchievements","loading","setLoading","fetchAchievements","sessionId","localStorage","getItem","Date","now","response","get","headers","data","success","newData","previousEarned","JSON","parse","newlyEarned","filter","achievement","some","prev","key","length","setTimeout","setItem","stringify","error","console","AchievementBadge","_ref2","isEarned","isNew","isHovered","setIsHovered","className","concat","onMouseEnter","onMouseLeave","children","icon","name","description","progress","undefined","style","width","Math","min","AchievementNotification","_ref3","onClose","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","map","index","_","i","newAch","slice","total_available","round"],"sources":["/Users/ss/Downloads/Code/Vibe_coding/SQL_practice_website/sql-practice-platform/frontend/src/components/AchievementSystem.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst AchievementSystem = ({ showNotifications = true }) => {\n  const [achievements, setAchievements] = useState({ earned: [], available: [] });\n  const [newAchievements, setNewAchievements] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchAchievements();\n  }, []);\n\n  const fetchAchievements = async () => {\n    try {\n      const sessionId = localStorage.getItem('sessionId') || 'anonymous-' + Date.now();\n      const response = await axios.get('http://localhost:5001/api/recommendations/achievements', {\n        headers: { 'x-session-id': sessionId }\n      });\n      \n      if (response.data.success) {\n        const newData = response.data.data;\n        \n        // Check for new achievements\n        const previousEarned = JSON.parse(localStorage.getItem('earnedAchievements') || '[]');\n        const newlyEarned = newData.earned.filter(\n          achievement => !previousEarned.some(prev => prev.key === achievement.key)\n        );\n        \n        if (newlyEarned.length > 0 && showNotifications) {\n          setNewAchievements(newlyEarned);\n          setTimeout(() => setNewAchievements([]), 5000);\n        }\n        \n        // Store current achievements\n        localStorage.setItem('earnedAchievements', JSON.stringify(newData.earned));\n        setAchievements(newData);\n      }\n    } catch (error) {\n      console.error('Error fetching achievements:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const AchievementBadge = ({ achievement, isEarned = false, isNew = false }) => {\n    const [isHovered, setIsHovered] = useState(false);\n    \n    return (\n      <div\n        className={`relative group transform transition-all duration-300 ${\n          isEarned ? 'hover:scale-110 cursor-pointer' : 'opacity-60'\n        } ${isNew ? 'animate-bounce' : ''}`}\n        onMouseEnter={() => setIsHovered(true)}\n        onMouseLeave={() => setIsHovered(false)}\n      >\n        <div\n          className={`relative w-20 h-20 rounded-full flex items-center justify-center text-2xl font-bold shadow-lg transition-all duration-300 ${\n            isEarned\n              ? 'bg-gradient-to-br from-yellow-400 via-yellow-500 to-orange-500 text-white shadow-yellow-200'\n              : 'bg-gray-200 dark:bg-gray-700 text-gray-400 dark:text-gray-500'\n          }`}\n        >\n          {achievement.icon}\n          \n          {/* Shine effect for earned achievements */}\n          {isEarned && (\n            <div className=\"absolute inset-0 rounded-full bg-gradient-to-r from-transparent via-white/30 to-transparent transform -skew-x-12 -translate-x-full group-hover:translate-x-full transition-transform duration-1000\"></div>\n          )}\n          \n          {/* New achievement indicator */}\n          {isNew && (\n            <div className=\"absolute -top-1 -right-1 w-4 h-4 bg-red-500 rounded-full border-2 border-white animate-pulse\"></div>\n          )}\n        </div>\n        \n        {/* Tooltip */}\n        {isHovered && (\n          <div className=\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 z-50\">\n            <div className=\"bg-gray-900 text-white text-xs rounded-lg py-2 px-3 whitespace-nowrap shadow-lg\">\n              <div className=\"font-semibold\">{achievement.name}</div>\n              <div className=\"opacity-80\">{achievement.description}</div>\n              {achievement.progress !== undefined && !isEarned && (\n                <div className=\"mt-1\">\n                  <div className=\"w-full bg-gray-700 rounded-full h-1\">\n                    <div\n                      className=\"bg-blue-500 h-1 rounded-full transition-all duration-300\"\n                      style={{ width: `${Math.min(achievement.progress, 100)}%` }}\n                    ></div>\n                  </div>\n                  <div className=\"text-xs mt-1\">{achievement.progress}% complete</div>\n                </div>\n              )}\n              <div className=\"absolute top-full left-1/2 transform -translate-x-1/2 w-0 h-0 border-l-4 border-r-4 border-t-4 border-transparent border-t-gray-900\"></div>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  const AchievementNotification = ({ achievement, onClose }) => {\n    return (\n      <div className=\"fixed top-4 right-4 z-50 animate-slideInRight\">\n        <div className=\"bg-gradient-to-r from-yellow-400 to-orange-500 text-white rounded-lg shadow-2xl p-4 max-w-sm\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"text-3xl animate-bounce\">{achievement.icon}</div>\n            <div className=\"flex-1\">\n              <h4 className=\"font-bold text-lg\">Achievement Unlocked!</h4>\n              <p className=\"text-sm opacity-90\">{achievement.name}</p>\n              <p className=\"text-xs opacity-80\">{achievement.description}</p>\n            </div>\n            <button\n              onClick={onClose}\n              className=\"text-white hover:text-gray-200 transition-colors\"\n            >\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center p-8\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Achievement Notifications */}\n      {newAchievements.map((achievement, index) => (\n        <AchievementNotification\n          key={achievement.key}\n          achievement={achievement}\n          onClose={() => setNewAchievements(prev => prev.filter((_, i) => i !== index))}\n        />\n      ))}\n\n      {/* Earned Achievements Section */}\n      <div>\n        <div className=\"flex items-center justify-between mb-6\">\n          <h3 className=\"text-2xl font-bold text-gray-900 dark:text-white flex items-center space-x-2\">\n            <span>🏆</span>\n            <span>Your Achievements</span>\n          </h3>\n          <div className=\"bg-gradient-to-r from-yellow-400 to-orange-500 text-white px-4 py-2 rounded-full font-semibold shadow-lg\">\n            {achievements.earned.length} earned\n          </div>\n        </div>\n\n        {achievements.earned.length > 0 ? (\n          <div className=\"grid grid-cols-4 md:grid-cols-6 lg:grid-cols-8 gap-6 justify-items-center\">\n            {achievements.earned.map((achievement) => (\n              <div key={achievement.key} className=\"text-center\">\n                <AchievementBadge \n                  achievement={achievement} \n                  isEarned={true}\n                  isNew={newAchievements.some(newAch => newAch.key === achievement.key)}\n                />\n                <div className=\"mt-2\">\n                  <div className=\"text-sm font-semibold text-gray-900 dark:text-white\">\n                    {achievement.name}\n                  </div>\n                  <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n                    {achievement.description}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div className=\"text-center py-8\">\n            <div className=\"text-6xl mb-4\">🎯</div>\n            <h4 className=\"text-xl font-semibold text-gray-700 dark:text-gray-300 mb-2\">\n              Start your achievement journey!\n            </h4>\n            <p className=\"text-gray-500 dark:text-gray-400\">\n              Solve problems to unlock your first achievement\n            </p>\n          </div>\n        )}\n      </div>\n\n      {/* Available Achievements Section */}\n      {achievements.available.length > 0 && (\n        <div>\n          <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-6 flex items-center space-x-2\">\n            <span>🎯</span>\n            <span>Coming Up Next</span>\n          </h3>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {achievements.available.slice(0, 6).map((achievement) => (\n              <div\n                key={achievement.key}\n                className=\"bg-white dark:bg-gray-800 border-2 border-dashed border-gray-300 dark:border-gray-600 rounded-xl p-6 hover:border-blue-400 dark:hover:border-blue-500 transition-all duration-300 hover:shadow-lg\"\n              >\n                <div className=\"flex items-center space-x-4\">\n                  <AchievementBadge achievement={achievement} isEarned={false} />\n                  <div className=\"flex-1\">\n                    <h4 className=\"font-bold text-gray-900 dark:text-white mb-1\">\n                      {achievement.name}\n                    </h4>\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-2\">\n                      {achievement.description}\n                    </p>\n                    \n                    {/* Progress bar for achievements with progress */}\n                    {achievement.progress !== undefined && achievement.progress > 0 && (\n                      <div className=\"space-y-1\">\n                        <div className=\"flex justify-between text-xs text-gray-500 dark:text-gray-400\">\n                          <span>Progress</span>\n                          <span>{achievement.progress}%</span>\n                        </div>\n                        <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\n                          <div\n                            className=\"bg-gradient-to-r from-blue-500 to-purple-500 h-2 rounded-full transition-all duration-500\"\n                            style={{ width: `${Math.min(achievement.progress, 100)}%` }}\n                          ></div>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Achievement Stats */}\n      <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 dark:from-gray-800 dark:to-gray-700 rounded-xl p-6\">\n        <h3 className=\"text-lg font-bold text-gray-900 dark:text-white mb-4 flex items-center space-x-2\">\n          <span>📊</span>\n          <span>Achievement Stats</span>\n        </h3>\n        \n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n          <div className=\"text-center\">\n            <div className=\"text-3xl font-bold text-blue-600 dark:text-blue-400\">\n              {achievements.earned.length}\n            </div>\n            <div className=\"text-sm text-gray-600 dark:text-gray-400\">Earned</div>\n          </div>\n          \n          <div className=\"text-center\">\n            <div className=\"text-3xl font-bold text-purple-600 dark:text-purple-400\">\n              {achievements.total_available}\n            </div>\n            <div className=\"text-sm text-gray-600 dark:text-gray-400\">Total</div>\n          </div>\n          \n          <div className=\"text-center\">\n            <div className=\"text-3xl font-bold text-green-600 dark:text-green-400\">\n              {Math.round((achievements.earned.length / achievements.total_available) * 100)}%\n            </div>\n            <div className=\"text-sm text-gray-600 dark:text-gray-400\">Complete</div>\n          </div>\n          \n          <div className=\"text-center\">\n            <div className=\"text-3xl font-bold text-orange-600 dark:text-orange-400\">\n              {achievements.available.length}\n            </div>\n            <div className=\"text-sm text-gray-600 dark:text-gray-400\">Available</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AchievementSystem;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}