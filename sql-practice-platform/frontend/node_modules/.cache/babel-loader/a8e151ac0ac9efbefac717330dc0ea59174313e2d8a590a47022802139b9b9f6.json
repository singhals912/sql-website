{"ast":null,"code":"import{useAuth}from'../contexts/AuthContext';import ProgressService from'./progressService';class HintService{// Get headers with authentication\nstatic getHeaders(){let token=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;const headers={'Content-Type':'application/json','X-Session-ID':ProgressService.sessionId};if(token){headers['Authorization']=\"Bearer \".concat(token);}return headers;}// Get hints for a problem\nstatic async getHintsForProblem(problemId){let token=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;try{const response=await fetch(\"\".concat(this.baseURL,\"/hints/problem/\").concat(problemId),{headers:this.getHeaders(token)});const data=await response.json();if(data.success){return data.hints;}else{throw new Error(data.error||'Failed to fetch hints');}}catch(error){console.error('Error fetching hints:',error);return[];}}// Reveal a specific hint\nstatic async revealHint(problemId,hintId){let token=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;try{const response=await fetch(\"\".concat(this.baseURL,\"/hints/\").concat(hintId,\"/reveal\"),{method:'POST',headers:this.getHeaders(token),body:JSON.stringify({problemId})});const data=await response.json();if(data.success){return data;}else{throw new Error(data.error||'Failed to reveal hint');}}catch(error){console.error('Error revealing hint:',error);throw error;}}// Get hint usage for user\nstatic async getHintUsage(problemId){let token=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;try{const response=await fetch(\"\".concat(this.baseURL,\"/hints/usage/\").concat(problemId),{headers:this.getHeaders(token)});const data=await response.json();if(data.success){return data.usage;}else{return[];}}catch(error){console.error('Error fetching hint usage:',error);return[];}}// Get available hints for problem (without revealing content)\nstatic async getAvailableHints(problemId){let attemptCount=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;let token=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;try{const response=await fetch(\"\".concat(this.baseURL,\"/hints/available/\").concat(problemId,\"?attempts=\").concat(attemptCount),{headers:this.getHeaders(token)});const data=await response.json();if(data.success){return data.hints;}else{return[];}}catch(error){console.error('Error fetching available hints:',error);return[];}}}HintService.baseURL='http://localhost:5001/api';export default HintService;","map":{"version":3,"names":["useAuth","ProgressService","HintService","getHeaders","token","arguments","length","undefined","headers","sessionId","concat","getHintsForProblem","problemId","response","fetch","baseURL","data","json","success","hints","Error","error","console","revealHint","hintId","method","body","JSON","stringify","getHintUsage","usage","getAvailableHints","attemptCount"],"sources":["/Users/ss/Downloads/Code/Vibe_coding/SQL_practice_website/sql-practice-platform/frontend/src/services/hintService.js"],"sourcesContent":["import { useAuth } from '../contexts/AuthContext';\nimport ProgressService from './progressService';\n\nclass HintService {\n  static baseURL = 'http://localhost:5001/api';\n\n  // Get headers with authentication\n  static getHeaders(token = null) {\n    const headers = {\n      'Content-Type': 'application/json',\n      'X-Session-ID': ProgressService.sessionId,\n    };\n\n    if (token) {\n      headers['Authorization'] = `Bearer ${token}`;\n    }\n\n    return headers;\n  }\n\n  // Get hints for a problem\n  static async getHintsForProblem(problemId, token = null) {\n    try {\n      const response = await fetch(`${this.baseURL}/hints/problem/${problemId}`, {\n        headers: this.getHeaders(token)\n      });\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        return data.hints;\n      } else {\n        throw new Error(data.error || 'Failed to fetch hints');\n      }\n    } catch (error) {\n      console.error('Error fetching hints:', error);\n      return [];\n    }\n  }\n\n  // Reveal a specific hint\n  static async revealHint(problemId, hintId, token = null) {\n    try {\n      const response = await fetch(`${this.baseURL}/hints/${hintId}/reveal`, {\n        method: 'POST',\n        headers: this.getHeaders(token),\n        body: JSON.stringify({ problemId })\n      });\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        return data;\n      } else {\n        throw new Error(data.error || 'Failed to reveal hint');\n      }\n    } catch (error) {\n      console.error('Error revealing hint:', error);\n      throw error;\n    }\n  }\n\n  // Get hint usage for user\n  static async getHintUsage(problemId, token = null) {\n    try {\n      const response = await fetch(`${this.baseURL}/hints/usage/${problemId}`, {\n        headers: this.getHeaders(token)\n      });\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        return data.usage;\n      } else {\n        return [];\n      }\n    } catch (error) {\n      console.error('Error fetching hint usage:', error);\n      return [];\n    }\n  }\n\n  // Get available hints for problem (without revealing content)\n  static async getAvailableHints(problemId, attemptCount = 0, token = null) {\n    try {\n      const response = await fetch(`${this.baseURL}/hints/available/${problemId}?attempts=${attemptCount}`, {\n        headers: this.getHeaders(token)\n      });\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        return data.hints;\n      } else {\n        return [];\n      }\n    } catch (error) {\n      console.error('Error fetching available hints:', error);\n      return [];\n    }\n  }\n}\n\nexport default HintService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}