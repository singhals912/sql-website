{"ast":null,"code":"var _jsxFileName = \"/Users/ss/Downloads/Code/Vibe_coding/SQL_practice_website/sql-practice-platform/frontend/src/components/SQLHighlightDisplay.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SQLHighlightDisplay = ({\n  value,\n  height = 'auto',\n  className = ''\n}) => {\n  // Simple SQL highlighting function that returns JSX\n  const highlightSQL = text => {\n    if (!text) return [];\n    const lines = text.split('\\n');\n    return lines.map((line, lineIndex) => {\n      const tokens = [];\n\n      // Define SQL keywords\n      const keywords = ['SELECT', 'FROM', 'WHERE', 'JOIN', 'INNER', 'LEFT', 'RIGHT', 'FULL', 'OUTER', 'ON', 'GROUP', 'BY', 'HAVING', 'ORDER', 'LIMIT', 'OFFSET', 'DISTINCT', 'COUNT', 'SUM', 'AVG', 'MIN', 'MAX', 'AS', 'AND', 'OR', 'NOT', 'IN', 'LIKE', 'BETWEEN', 'IS', 'NULL', 'EXISTS', 'CASE', 'WHEN', 'THEN', 'ELSE', 'END', 'UNION', 'ALL', 'INSERT', 'INTO', 'VALUES', 'UPDATE', 'SET', 'DELETE', 'CREATE', 'ALTER', 'DROP', 'TABLE', 'INDEX', 'PRIMARY', 'KEY', 'FOREIGN', 'REFERENCES', 'CONSTRAINT', 'CHECK', 'DEFAULT', 'UNIQUE', 'AUTO_INCREMENT', 'DESC', 'ASC'];\n\n      // Split line into words and spaces\n      const parts = line.split(/(\\s+|[(),;])/);\n      parts.forEach((part, partIndex) => {\n        const key = `${lineIndex}-${partIndex}`;\n        if (!part) return;\n\n        // Check if it's a keyword\n        if (keywords.includes(part.toUpperCase())) {\n          tokens.push(/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#569cd6',\n              fontWeight: 'bold'\n            },\n            children: part\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this));\n        }\n        // Check if it's a string\n        else if (part.startsWith(\"'\") && part.endsWith(\"'\") || part.startsWith('\"') && part.endsWith('\"')) {\n          tokens.push(/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#ce9178'\n            },\n            children: part\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this));\n        }\n        // Check if it's a number\n        else if (/^\\d+\\.?\\d*$/.test(part)) {\n          tokens.push(/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#b5cea8'\n            },\n            children: part\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this));\n        }\n        // Check if it's a comment\n        else if (part.startsWith('--')) {\n          tokens.push(/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#6a9955',\n              fontStyle: 'italic'\n            },\n            children: part\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this));\n        }\n        // Regular text\n        else {\n          tokens.push(/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#d4d4d4'\n            },\n            children: part\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this));\n        }\n      });\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          minHeight: '21px'\n        },\n        children: tokens.length > 0 ? tokens : /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#d4d4d4'\n          },\n          children: \"\\xA0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 41\n        }, this)\n      }, lineIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  const containerStyle = {\n    width: '100%',\n    height: height,\n    backgroundColor: '#1e1e1e',\n    fontFamily: 'Monaco, Menlo, \"Ubuntu Mono\", monospace',\n    fontSize: '14px',\n    lineHeight: '1.5',\n    padding: '16px',\n    borderRadius: '4px',\n    overflow: 'auto',\n    overflowX: 'auto',\n    overflowY: 'auto',\n    whiteSpace: 'pre',\n    wordWrap: 'break-word',\n    boxSizing: 'border-box'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    className: className,\n    children: highlightSQL(value || '')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_c = SQLHighlightDisplay;\nexport default SQLHighlightDisplay;\nvar _c;\n$RefreshReg$(_c, \"SQLHighlightDisplay\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","SQLHighlightDisplay","value","height","className","highlightSQL","text","lines","split","map","line","lineIndex","tokens","keywords","parts","forEach","part","partIndex","key","includes","toUpperCase","push","style","color","fontWeight","children","fileName","_jsxFileName","lineNumber","columnNumber","startsWith","endsWith","test","fontStyle","minHeight","length","containerStyle","width","backgroundColor","fontFamily","fontSize","lineHeight","padding","borderRadius","overflow","overflowX","overflowY","whiteSpace","wordWrap","boxSizing","_c","$RefreshReg$"],"sources":["/Users/ss/Downloads/Code/Vibe_coding/SQL_practice_website/sql-practice-platform/frontend/src/components/SQLHighlightDisplay.js"],"sourcesContent":["import React from 'react';\n\nconst SQLHighlightDisplay = ({ \n  value, \n  height = 'auto',\n  className = ''\n}) => {\n  // Simple SQL highlighting function that returns JSX\n  const highlightSQL = (text) => {\n    if (!text) return [];\n    \n    const lines = text.split('\\n');\n    return lines.map((line, lineIndex) => {\n      const tokens = [];\n      \n      // Define SQL keywords\n      const keywords = [\n        'SELECT', 'FROM', 'WHERE', 'JOIN', 'INNER', 'LEFT', 'RIGHT', 'FULL', 'OUTER',\n        'ON', 'GROUP', 'BY', 'HAVING', 'ORDER', 'LIMIT', 'OFFSET', 'DISTINCT',\n        'COUNT', 'SUM', 'AVG', 'MIN', 'MAX', 'AS', 'AND', 'OR', 'NOT', 'IN', 'LIKE',\n        'BETWEEN', 'IS', 'NULL', 'EXISTS', 'CASE', 'WHEN', 'THEN', 'ELSE', 'END',\n        'UNION', 'ALL', 'INSERT', 'INTO', 'VALUES', 'UPDATE', 'SET', 'DELETE',\n        'CREATE', 'ALTER', 'DROP', 'TABLE', 'INDEX', 'PRIMARY', 'KEY', 'FOREIGN',\n        'REFERENCES', 'CONSTRAINT', 'CHECK', 'DEFAULT', 'UNIQUE', 'AUTO_INCREMENT',\n        'DESC', 'ASC'\n      ];\n      \n      // Split line into words and spaces\n      const parts = line.split(/(\\s+|[(),;])/);\n      \n      parts.forEach((part, partIndex) => {\n        const key = `${lineIndex}-${partIndex}`;\n        \n        if (!part) return;\n        \n        // Check if it's a keyword\n        if (keywords.includes(part.toUpperCase())) {\n          tokens.push(\n            <span key={key} style={{ color: '#569cd6', fontWeight: 'bold' }}>\n              {part}\n            </span>\n          );\n        }\n        // Check if it's a string\n        else if ((part.startsWith(\"'\") && part.endsWith(\"'\")) || (part.startsWith('\"') && part.endsWith('\"'))) {\n          tokens.push(\n            <span key={key} style={{ color: '#ce9178' }}>\n              {part}\n            </span>\n          );\n        }\n        // Check if it's a number\n        else if (/^\\d+\\.?\\d*$/.test(part)) {\n          tokens.push(\n            <span key={key} style={{ color: '#b5cea8' }}>\n              {part}\n            </span>\n          );\n        }\n        // Check if it's a comment\n        else if (part.startsWith('--')) {\n          tokens.push(\n            <span key={key} style={{ color: '#6a9955', fontStyle: 'italic' }}>\n              {part}\n            </span>\n          );\n        }\n        // Regular text\n        else {\n          tokens.push(\n            <span key={key} style={{ color: '#d4d4d4' }}>\n              {part}\n            </span>\n          );\n        }\n      });\n      \n      return (\n        <div key={lineIndex} style={{ minHeight: '21px' }}>\n          {tokens.length > 0 ? tokens : <span style={{ color: '#d4d4d4' }}>&nbsp;</span>}\n        </div>\n      );\n    });\n  };\n\n  const containerStyle = {\n    width: '100%',\n    height: height,\n    backgroundColor: '#1e1e1e',\n    fontFamily: 'Monaco, Menlo, \"Ubuntu Mono\", monospace',\n    fontSize: '14px',\n    lineHeight: '1.5',\n    padding: '16px',\n    borderRadius: '4px',\n    overflow: 'auto',\n    overflowX: 'auto',\n    overflowY: 'auto',\n    whiteSpace: 'pre',\n    wordWrap: 'break-word',\n    boxSizing: 'border-box'\n  };\n\n  return (\n    <div style={containerStyle} className={className}>\n      {highlightSQL(value || '')}\n    </div>\n  );\n};\n\nexport default SQLHighlightDisplay;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}