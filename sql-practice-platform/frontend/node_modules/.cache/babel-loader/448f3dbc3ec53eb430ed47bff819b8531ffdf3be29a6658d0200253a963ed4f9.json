{"ast":null,"code":"import _objectSpread from\"/Users/ss/Downloads/Code/Vibe_coding/SQL_practice_website/sql-practice-platform/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{Link,useLocation}from'react-router-dom';import BookmarkButton from'../components/BookmarkButton';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ProblemsPage(){const location=useLocation();const searchParams=new URLSearchParams(location.search);// Map category slugs to display names\nconst categorySlugToName={'a/b-testing':'A/B Testing','advanced-topics':'Advanced Topics','aggregation':'Aggregation','basic-queries':'Basic Queries','energy-analytics':'Energy Analytics','fraud-detection':'Fraud Detection','joins':'Joins','recommendation-systems':'Recommendation Systems','subqueries':'Subqueries','supply-chain':'Supply Chain','time-analysis':'Time Analysis','window-functions':'Window Functions'};const categoryParam=searchParams.get('category');const initialCategory=categoryParam&&categorySlugToName[categoryParam]?categorySlugToName[categoryParam]:'all';const[selectedDifficulty,setSelectedDifficulty]=useState(searchParams.get('difficulty')||'all');const[selectedCategory,setSelectedCategory]=useState(initialCategory);const[selectedCompany,setSelectedCompany]=useState(searchParams.get('company')||'all');const[searchTerm,setSearchTerm]=useState('');const[statusFilter,setStatusFilter]=useState('all');const[problems,setProblems]=useState([]);const[companies,setCompanies]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const fetchProblems=async()=>{setLoading(true);try{const params=new URLSearchParams();if(selectedDifficulty!=='all')params.append('difficulty',selectedDifficulty);// Convert category display name back to slug for API call\nif(selectedCategory!=='all'){const categoryNameToSlug={'A/B Testing':'a/b-testing','Advanced Topics':'advanced-topics','Aggregation':'aggregation','Basic Queries':'basic-queries','Energy Analytics':'energy-analytics','Fraud Detection':'fraud-detection','Joins':'joins','Recommendation Systems':'recommendation-systems','Subqueries':'subqueries','Supply Chain':'supply-chain','Time Analysis':'time-analysis','Window Functions':'window-functions'};const categorySlug=categoryNameToSlug[selectedCategory]||selectedCategory;params.append('category',categorySlug);}if(selectedCompany!=='all')params.append('company',selectedCompany);const response=await fetch(\"http://localhost:5001/api/sql/problems?\".concat(params));const data=await response.json();if(response.ok){// Sort problems by numeric_id and format for display\nconst sortedProblems=data.problems.sort((a,b)=>(a.numeric_id||0)-(b.numeric_id||0)).map(p=>_objectSpread(_objectSpread({},p),{},{category:p.category_name,acceptance:\"\".concat(p.acceptance_rate,\"%\"),solved:Math.random()>0.7// Random solved status for demo\n}));setProblems(sortedProblems);}else{setError(data.error||'Failed to fetch problems');}}catch(err){setError('Failed to connect to server');}finally{setLoading(false);}};// Load companies on component mount\nuseEffect(()=>{const fetchCompanies=async()=>{try{const response=await fetch('http://localhost:5001/api/sql/companies');const data=await response.json();if(response.ok){setCompanies([{name:'all',display:'All Companies',count:0},...data]);}}catch(err){console.error('Failed to fetch companies:',err);}};fetchCompanies();},[]);useEffect(()=>{fetchProblems();},[selectedDifficulty,selectedCategory,selectedCompany]);const categories=[\"all\",\"A/B Testing\",\"Advanced Topics\",\"Aggregation\",\"Basic Queries\",\"Energy Analytics\",\"Fraud Detection\",\"Joins\",\"Recommendation Systems\",\"Subqueries\",\"Supply Chain\",\"Time Analysis\",\"Window Functions\"];const difficulties=[\"all\",\"easy\",\"medium\",\"hard\"];const filteredProblems=problems.filter(problem=>{// Basic filters\nif(selectedDifficulty!=='all'&&problem.difficulty!==selectedDifficulty)return false;if(selectedCategory!=='all'&&problem.category!==selectedCategory)return false;if(selectedCompany!=='all'&&problem.company!==selectedCompany)return false;// Status filter\nif(statusFilter==='solved'&&!problem.solved)return false;if(statusFilter==='unsolved'&&problem.solved)return false;// Search term filter\nif(searchTerm){const searchLower=searchTerm.toLowerCase();return problem.title.toLowerCase().includes(searchLower)||problem.category&&problem.category.toLowerCase().includes(searchLower)||problem.company&&problem.company.toLowerCase().includes(searchLower)||problem.numeric_id&&problem.numeric_id.toString().includes(searchTerm);}return true;});const getDifficultyBadge=difficulty=>{const styles={easy:'bg-green-100 text-green-800 border border-green-200',medium:'bg-yellow-100 text-yellow-800 border border-yellow-200',hard:'bg-red-100 text-red-800 border border-red-200'};const style=styles[difficulty]||'bg-gray-100 text-gray-800 border border-gray-200';return\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium \".concat(style);};const getCompanyBadge=company=>{if(!company||company==='-')return null;return'inline-flex items-center px-2 py-1 rounded text-xs font-medium bg-gray-100 text-gray-700 border border-gray-200 hover:bg-gray-200 transition-colors';};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-white dark:bg-gray-900\",children:/*#__PURE__*/_jsx(\"div\",{className:\"max-w-7xl mx-auto px-4 py-8\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-12\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-500 dark:text-gray-400 mt-2\",children:\"Loading problems...\"})]})})});}if(error){return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-white dark:bg-gray-900\",children:/*#__PURE__*/_jsx(\"div\",{className:\"max-w-7xl mx-auto px-4 py-8\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-red-50 dark:bg-red-900/50 border border-red-200 dark:border-red-800 rounded-md p-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-red-800 dark:text-red-300 font-medium\",children:\"Error\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-red-600 dark:text-red-400 text-sm mt-1\",children:error})]})})});}return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gray-50 dark:bg-gray-900\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-8xl mx-auto\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700\",children:/*#__PURE__*/_jsx(\"div\",{className:\"px-6 py-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-semibold text-gray-900 dark:text-white\",children:\"Problems\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"mt-1 text-sm text-gray-600 dark:text-gray-400\",children:[\"Solve \",problems.length,\" SQL challenges from real companies\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-500 dark:text-gray-400\",children:[filteredProblems.length,\" results\"]})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700\",children:/*#__PURE__*/_jsx(\"div\",{className:\"px-6 py-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 max-w-md\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\",children:/*#__PURE__*/_jsx(\"svg\",{className:\"h-4 w-4 text-gray-400\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:2,d:\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"})})}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search problems...\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value),className:\"block w-full pl-10 pr-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md leading-5 bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none focus:placeholder-gray-400 focus:ring-1 focus:ring-blue-500 focus:border-blue-500 text-sm\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsxs(\"select\",{value:statusFilter,onChange:e=>setStatusFilter(e.target.value),className:\"block w-full pl-3 pr-10 py-2 text-sm border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white rounded-md focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"all\",children:\"All Status\"}),/*#__PURE__*/_jsx(\"option\",{value:\"solved\",children:\"Solved\"}),/*#__PURE__*/_jsx(\"option\",{value:\"unsolved\",children:\"Todo\"})]}),/*#__PURE__*/_jsxs(\"select\",{value:selectedDifficulty,onChange:e=>setSelectedDifficulty(e.target.value),className:\"block w-full pl-3 pr-10 py-2 text-sm border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white rounded-md focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"all\",children:\"All Difficulty\"}),difficulties.slice(1).map(diff=>/*#__PURE__*/_jsx(\"option\",{value:diff,children:diff.charAt(0).toUpperCase()+diff.slice(1)},diff))]}),/*#__PURE__*/_jsxs(\"select\",{value:selectedCategory,onChange:e=>setSelectedCategory(e.target.value),className:\"block w-full pl-3 pr-10 py-2 text-sm border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white rounded-md focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"all\",children:\"All Topics\"}),categories.slice(1).map(cat=>/*#__PURE__*/_jsx(\"option\",{value:cat,children:cat},cat))]})]})]})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white dark:bg-gray-800\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"border-b border-gray-200 dark:border-gray-700 bg-gray-50 dark:bg-gray-900\",children:/*#__PURE__*/_jsx(\"div\",{className:\"px-6 py-3\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-12 gap-4 text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-span-1 flex items-center\",children:\"Status\"}),/*#__PURE__*/_jsx(\"div\",{className:\"col-span-6 flex items-center\",children:\"Title\"}),/*#__PURE__*/_jsx(\"div\",{className:\"col-span-2 flex items-center\",children:\"Acceptance\"}),/*#__PURE__*/_jsx(\"div\",{className:\"col-span-2 flex items-center\",children:\"Difficulty\"}),/*#__PURE__*/_jsx(\"div\",{className:\"col-span-1 flex items-center justify-end\",children:\"Actions\"})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"divide-y divide-gray-200 dark:divide-gray-700\",children:filteredProblems.map((problem,index)=>{var _problem$difficulty,_problem$difficulty2;return/*#__PURE__*/_jsx(\"div\",{className:\"group hover:bg-gray-50 dark:hover:bg-gray-750 transition-colors duration-150\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"px-6 py-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-12 gap-4 items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-span-1\",children:problem.solved?/*#__PURE__*/_jsx(\"div\",{className:\"w-5 h-5 bg-green-500 rounded-full flex items-center justify-center\",children:/*#__PURE__*/_jsx(\"svg\",{className:\"w-3 h-3 text-white\",fill:\"currentColor\",viewBox:\"0 0 20 20\",children:/*#__PURE__*/_jsx(\"path\",{fillRule:\"evenodd\",d:\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\",clipRule:\"evenodd\"})})}):/*#__PURE__*/_jsx(\"div\",{className:\"w-5 h-5 border-2 border-gray-300 dark:border-gray-600 rounded-full\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-span-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"text-gray-500 dark:text-gray-400 text-sm font-medium min-w-0\",children:[problem.numeric_id,\".\"]}),/*#__PURE__*/_jsx(Link,{to:\"/practice/\".concat(problem.numeric_id),className:\"text-gray-900 dark:text-white hover:text-blue-600 dark:hover:text-blue-400 transition-colors font-medium group-hover:text-blue-600 dark:group-hover:text-blue-400 truncate\",children:problem.title}),problem.category&&/*#__PURE__*/_jsx(\"span\",{className:\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-blue-100 text-blue-800 border border-blue-200\",children:problem.category})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-span-2\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-gray-600 dark:text-gray-400 font-medium\",children:problem.acceptance})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-span-2\",children:/*#__PURE__*/_jsx(\"span\",{className:getDifficultyBadge(problem.difficulty),children:((_problem$difficulty=problem.difficulty)===null||_problem$difficulty===void 0?void 0:_problem$difficulty.charAt(0).toUpperCase())+((_problem$difficulty2=problem.difficulty)===null||_problem$difficulty2===void 0?void 0:_problem$difficulty2.slice(1))})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-span-1 flex justify-end\",children:/*#__PURE__*/_jsx(BookmarkButton,{problemId:problem.numeric_id,size:\"sm\"})})]}),problem.company&&problem.company!=='-'&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-2 pl-9\",children:/*#__PURE__*/_jsx(\"span\",{className:getCompanyBadge(problem.company),children:problem.company})})]})},problem.id);})}),filteredProblems.length===0&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-16\",children:[/*#__PURE__*/_jsx(\"svg\",{className:\"mx-auto h-12 w-12 text-gray-400\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:1,d:\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"})}),/*#__PURE__*/_jsx(\"h3\",{className:\"mt-2 text-sm font-medium text-gray-900 dark:text-white\",children:\"No problems found\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-1 text-sm text-gray-500 dark:text-gray-400\",children:\"Try adjusting your search criteria or filters.\"})]})]})]})});}export default ProblemsPage;","map":{"version":3,"names":["React","useState","useEffect","Link","useLocation","BookmarkButton","jsx","_jsx","jsxs","_jsxs","ProblemsPage","location","searchParams","URLSearchParams","search","categorySlugToName","categoryParam","get","initialCategory","selectedDifficulty","setSelectedDifficulty","selectedCategory","setSelectedCategory","selectedCompany","setSelectedCompany","searchTerm","setSearchTerm","statusFilter","setStatusFilter","problems","setProblems","companies","setCompanies","loading","setLoading","error","setError","fetchProblems","params","append","categoryNameToSlug","categorySlug","response","fetch","concat","data","json","ok","sortedProblems","sort","a","b","numeric_id","map","p","_objectSpread","category","category_name","acceptance","acceptance_rate","solved","Math","random","err","fetchCompanies","name","display","count","console","categories","difficulties","filteredProblems","filter","problem","difficulty","company","searchLower","toLowerCase","title","includes","toString","getDifficultyBadge","styles","easy","medium","hard","style","getCompanyBadge","className","children","length","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","type","placeholder","value","onChange","e","target","slice","diff","charAt","toUpperCase","cat","index","_problem$difficulty","_problem$difficulty2","fillRule","clipRule","to","problemId","size","id"],"sources":["/Users/ss/Downloads/Code/Vibe_coding/SQL_practice_website/sql-practice-platform/frontend/src/pages/ProblemsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport BookmarkButton from '../components/BookmarkButton';\n\nfunction ProblemsPage() {\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  \n  // Map category slugs to display names\n  const categorySlugToName = {\n    'a/b-testing': 'A/B Testing',\n    'advanced-topics': 'Advanced Topics',\n    'aggregation': 'Aggregation',\n    'basic-queries': 'Basic Queries',\n    'energy-analytics': 'Energy Analytics',\n    'fraud-detection': 'Fraud Detection',\n    'joins': 'Joins',\n    'recommendation-systems': 'Recommendation Systems',\n    'subqueries': 'Subqueries',\n    'supply-chain': 'Supply Chain',\n    'time-analysis': 'Time Analysis',\n    'window-functions': 'Window Functions'\n  };\n  \n  const categoryParam = searchParams.get('category');\n  const initialCategory = categoryParam && categorySlugToName[categoryParam] ? categorySlugToName[categoryParam] : 'all';\n  \n  const [selectedDifficulty, setSelectedDifficulty] = useState(searchParams.get('difficulty') || 'all');\n  const [selectedCategory, setSelectedCategory] = useState(initialCategory);\n  const [selectedCompany, setSelectedCompany] = useState(searchParams.get('company') || 'all');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState('all');\n  const [problems, setProblems] = useState([]);\n  const [companies, setCompanies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const fetchProblems = async () => {\n    setLoading(true);\n    try {\n      const params = new URLSearchParams();\n      if (selectedDifficulty !== 'all') params.append('difficulty', selectedDifficulty);\n      \n      // Convert category display name back to slug for API call\n      if (selectedCategory !== 'all') {\n        const categoryNameToSlug = {\n          'A/B Testing': 'a/b-testing',\n          'Advanced Topics': 'advanced-topics',\n          'Aggregation': 'aggregation',\n          'Basic Queries': 'basic-queries',\n          'Energy Analytics': 'energy-analytics',\n          'Fraud Detection': 'fraud-detection',\n          'Joins': 'joins',\n          'Recommendation Systems': 'recommendation-systems',\n          'Subqueries': 'subqueries',\n          'Supply Chain': 'supply-chain',\n          'Time Analysis': 'time-analysis',\n          'Window Functions': 'window-functions'\n        };\n        const categorySlug = categoryNameToSlug[selectedCategory] || selectedCategory;\n        params.append('category', categorySlug);\n      }\n      \n      if (selectedCompany !== 'all') params.append('company', selectedCompany);\n      \n      const response = await fetch(`http://localhost:5001/api/sql/problems?${params}`);\n      const data = await response.json();\n      \n      if (response.ok) {\n        // Sort problems by numeric_id and format for display\n        const sortedProblems = data.problems\n          .sort((a, b) => (a.numeric_id || 0) - (b.numeric_id || 0))\n          .map(p => ({\n            ...p,\n            category: p.category_name,\n            acceptance: `${p.acceptance_rate}%`,\n            solved: Math.random() > 0.7 // Random solved status for demo\n          }));\n        setProblems(sortedProblems);\n      } else {\n        setError(data.error || 'Failed to fetch problems');\n      }\n    } catch (err) {\n      setError('Failed to connect to server');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Load companies on component mount\n  useEffect(() => {\n    const fetchCompanies = async () => {\n      try {\n        const response = await fetch('http://localhost:5001/api/sql/companies');\n        const data = await response.json();\n        if (response.ok) {\n          setCompanies([\n            { name: 'all', display: 'All Companies', count: 0 },\n            ...data\n          ]);\n        }\n      } catch (err) {\n        console.error('Failed to fetch companies:', err);\n      }\n    };\n    \n    fetchCompanies();\n  }, []);\n\n  useEffect(() => {\n    fetchProblems();\n  }, [selectedDifficulty, selectedCategory, selectedCompany]);\n\n  const categories = [\"all\", \"A/B Testing\", \"Advanced Topics\", \"Aggregation\", \"Basic Queries\", \"Energy Analytics\", \"Fraud Detection\", \"Joins\", \"Recommendation Systems\", \"Subqueries\", \"Supply Chain\", \"Time Analysis\", \"Window Functions\"];\n  const difficulties = [\"all\", \"easy\", \"medium\", \"hard\"];\n\n  const filteredProblems = problems.filter(problem => {\n    // Basic filters\n    if (selectedDifficulty !== 'all' && problem.difficulty !== selectedDifficulty) return false;\n    if (selectedCategory !== 'all' && problem.category !== selectedCategory) return false;\n    if (selectedCompany !== 'all' && problem.company !== selectedCompany) return false;\n    \n    // Status filter\n    if (statusFilter === 'solved' && !problem.solved) return false;\n    if (statusFilter === 'unsolved' && problem.solved) return false;\n    \n    // Search term filter\n    if (searchTerm) {\n      const searchLower = searchTerm.toLowerCase();\n      return problem.title.toLowerCase().includes(searchLower) ||\n             (problem.category && problem.category.toLowerCase().includes(searchLower)) ||\n             (problem.company && problem.company.toLowerCase().includes(searchLower)) ||\n             (problem.numeric_id && problem.numeric_id.toString().includes(searchTerm));\n    }\n    \n    return true;\n  });\n\n  const getDifficultyBadge = (difficulty) => {\n    const styles = {\n      easy: 'bg-green-100 text-green-800 border border-green-200',\n      medium: 'bg-yellow-100 text-yellow-800 border border-yellow-200', \n      hard: 'bg-red-100 text-red-800 border border-red-200'\n    };\n    const style = styles[difficulty] || 'bg-gray-100 text-gray-800 border border-gray-200';\n    return `inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${style}`;\n  };\n\n  const getCompanyBadge = (company) => {\n    if (!company || company === '-') return null;\n    return 'inline-flex items-center px-2 py-1 rounded text-xs font-medium bg-gray-100 text-gray-700 border border-gray-200 hover:bg-gray-200 transition-colors';\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-white dark:bg-gray-900\">\n        <div className=\"max-w-7xl mx-auto px-4 py-8\">\n          <div className=\"text-center py-12\">\n            <div className=\"inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n            <div className=\"text-gray-500 dark:text-gray-400 mt-2\">Loading problems...</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen bg-white dark:bg-gray-900\">\n        <div className=\"max-w-7xl mx-auto px-4 py-8\">\n          <div className=\"bg-red-50 dark:bg-red-900/50 border border-red-200 dark:border-red-800 rounded-md p-4\">\n            <div className=\"text-red-800 dark:text-red-300 font-medium\">Error</div>\n            <div className=\"text-red-600 dark:text-red-400 text-sm mt-1\">{error}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\n      <div className=\"max-w-8xl mx-auto\">\n        {/* Header */}\n        <div className=\"bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700\">\n          <div className=\"px-6 py-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <h1 className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\n                  Problems\n                </h1>\n                <p className=\"mt-1 text-sm text-gray-600 dark:text-gray-400\">\n                  Solve {problems.length} SQL challenges from real companies\n                </p>\n              </div>\n              <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                {filteredProblems.length} results\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Filters Bar */}\n        <div className=\"bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700\">\n          <div className=\"px-6 py-4\">\n            <div className=\"flex items-center space-x-4\">\n              {/* Search */}\n              <div className=\"flex-1 max-w-md\">\n                <div className=\"relative\">\n                  <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                    <svg className=\"h-4 w-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n                    </svg>\n                  </div>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Search problems...\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    className=\"block w-full pl-10 pr-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md leading-5 bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none focus:placeholder-gray-400 focus:ring-1 focus:ring-blue-500 focus:border-blue-500 text-sm\"\n                  />\n                </div>\n              </div>\n\n              {/* Filters */}\n              <div className=\"flex items-center space-x-3\">\n                <select\n                  value={statusFilter}\n                  onChange={(e) => setStatusFilter(e.target.value)}\n                  className=\"block w-full pl-3 pr-10 py-2 text-sm border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white rounded-md focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500\"\n                >\n                  <option value=\"all\">All Status</option>\n                  <option value=\"solved\">Solved</option>\n                  <option value=\"unsolved\">Todo</option>\n                </select>\n\n                <select\n                  value={selectedDifficulty}\n                  onChange={(e) => setSelectedDifficulty(e.target.value)}\n                  className=\"block w-full pl-3 pr-10 py-2 text-sm border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white rounded-md focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500\"\n                >\n                  <option value=\"all\">All Difficulty</option>\n                  {difficulties.slice(1).map(diff => (\n                    <option key={diff} value={diff}>\n                      {diff.charAt(0).toUpperCase() + diff.slice(1)}\n                    </option>\n                  ))}\n                </select>\n\n                <select\n                  value={selectedCategory}\n                  onChange={(e) => setSelectedCategory(e.target.value)}\n                  className=\"block w-full pl-3 pr-10 py-2 text-sm border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white rounded-md focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500\"\n                >\n                  <option value=\"all\">All Topics</option>\n                  {categories.slice(1).map(cat => (\n                    <option key={cat} value={cat}>{cat}</option>\n                  ))}\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Problems Table */}\n        <div className=\"bg-white dark:bg-gray-800\">\n          {/* Table Header */}\n          <div className=\"border-b border-gray-200 dark:border-gray-700 bg-gray-50 dark:bg-gray-900\">\n            <div className=\"px-6 py-3\">\n              <div className=\"grid grid-cols-12 gap-4 text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                <div className=\"col-span-1 flex items-center\">Status</div>\n                <div className=\"col-span-6 flex items-center\">Title</div>\n                <div className=\"col-span-2 flex items-center\">Acceptance</div>\n                <div className=\"col-span-2 flex items-center\">Difficulty</div>\n                <div className=\"col-span-1 flex items-center justify-end\">Actions</div>\n              </div>\n            </div>\n          </div>\n\n          {/* Table Body */}\n          <div className=\"divide-y divide-gray-200 dark:divide-gray-700\">\n            {filteredProblems.map((problem, index) => (\n              <div key={problem.id} className=\"group hover:bg-gray-50 dark:hover:bg-gray-750 transition-colors duration-150\">\n                <div className=\"px-6 py-4\">\n                  <div className=\"grid grid-cols-12 gap-4 items-center\">\n                    {/* Status */}\n                    <div className=\"col-span-1\">\n                      {problem.solved ? (\n                        <div className=\"w-5 h-5 bg-green-500 rounded-full flex items-center justify-center\">\n                          <svg className=\"w-3 h-3 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                            <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                          </svg>\n                        </div>\n                      ) : (\n                        <div className=\"w-5 h-5 border-2 border-gray-300 dark:border-gray-600 rounded-full\"></div>\n                      )}\n                    </div>\n\n                    {/* Title */}\n                    <div className=\"col-span-6\">\n                      <div className=\"flex items-center space-x-3\">\n                        <span className=\"text-gray-500 dark:text-gray-400 text-sm font-medium min-w-0\">\n                          {problem.numeric_id}.\n                        </span>\n                        <Link\n                          to={`/practice/${problem.numeric_id}`}\n                          className=\"text-gray-900 dark:text-white hover:text-blue-600 dark:hover:text-blue-400 transition-colors font-medium group-hover:text-blue-600 dark:group-hover:text-blue-400 truncate\"\n                        >\n                          {problem.title}\n                        </Link>\n                        {problem.category && (\n                          <span className=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-blue-100 text-blue-800 border border-blue-200\">\n                            {problem.category}\n                          </span>\n                        )}\n                      </div>\n                    </div>\n\n                    {/* Acceptance */}\n                    <div className=\"col-span-2\">\n                      <span className=\"text-sm text-gray-600 dark:text-gray-400 font-medium\">\n                        {problem.acceptance}\n                      </span>\n                    </div>\n\n                    {/* Difficulty */}\n                    <div className=\"col-span-2\">\n                      <span className={getDifficultyBadge(problem.difficulty)}>\n                        {problem.difficulty?.charAt(0).toUpperCase() + problem.difficulty?.slice(1)}\n                      </span>\n                    </div>\n\n                    {/* Actions */}\n                    <div className=\"col-span-1 flex justify-end\">\n                      <BookmarkButton problemId={problem.numeric_id} size=\"sm\" />\n                    </div>\n                  </div>\n\n                  {/* Company tag - separate row for better spacing */}\n                  {problem.company && problem.company !== '-' && (\n                    <div className=\"mt-2 pl-9\">\n                      <span className={getCompanyBadge(problem.company)}>\n                        {problem.company}\n                      </span>\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {/* Empty State */}\n          {filteredProblems.length === 0 && (\n            <div className=\"text-center py-16\">\n              <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n              </svg>\n              <h3 className=\"mt-2 text-sm font-medium text-gray-900 dark:text-white\">No problems found</h3>\n              <p className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">\n                Try adjusting your search criteria or filters.\n              </p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProblemsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}