{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import{useAuth}from'../contexts/AuthContext';import LearningPathService from'../services/learningPathService';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const LearningPathsPage=()=>{var _selectedPath$steps;const[learningPaths,setLearningPaths]=useState([]);const[userProgress,setUserProgress]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState('');const[selectedPath,setSelectedPath]=useState(null);const[startingPath,setStartingPath]=useState(null);const{user,token,isAuthenticated}=useAuth();const navigate=useNavigate();useEffect(()=>{loadLearningPaths();if(isAuthenticated){loadUserProgress();}},[isAuthenticated]);const loadLearningPaths=async()=>{try{const paths=await LearningPathService.getLearningPaths();console.log('Loaded learning paths:',paths);// Debug log\nsetLearningPaths(paths);}catch(error){setError('Failed to load learning paths');console.error('Error loading learning paths:',error);}finally{setLoading(false);}};const loadUserProgress=async()=>{try{const progress=await LearningPathService.getUserProgress(token);setUserProgress(progress);}catch(error){console.error('Error loading progress:',error);}};const getUserProgressForPath=pathId=>{return userProgress.find(p=>p.learning_path_id===pathId);};const getDifficultyColor=difficulty=>{switch(difficulty===null||difficulty===void 0?void 0:difficulty.toLowerCase()){case'beginner':return'bg-green-100 text-green-800';case'intermediate':return'bg-yellow-100 text-yellow-800';case'advanced':return'bg-red-100 text-red-800';default:return'bg-gray-100 text-gray-800';}};const handleStartPath=async pathId=>{try{console.log(\"\\uD83D\\uDE80 Starting learning path \".concat(pathId));setStartingPath(pathId);// Get the detailed learning path with steps\nconst pathDetails=await LearningPathService.getLearningPath(pathId);console.log(\"\\uD83D\\uDD0D Path details for \".concat(pathId,\":\"),{hasPathDetails:!!pathDetails,hasSteps:!!(pathDetails&&pathDetails.steps),stepsLength:pathDetails&&pathDetails.steps?pathDetails.steps.length:0,firstStep:pathDetails&&pathDetails.steps&&pathDetails.steps[0]?{numeric_id:pathDetails.steps[0].numeric_id,problem_numeric_id:pathDetails.steps[0].problem_numeric_id,title:pathDetails.steps[0].title}:null});if(pathDetails&&pathDetails.steps&&pathDetails.steps.length>0){// Navigate to the first problem in the learning path\nconst firstStep=pathDetails.steps[0];const targetUrl=\"/practice/\".concat(firstStep.problem_numeric_id,\"?learningPath=\").concat(pathId);console.log(\"\\u2705 Navigating to: \".concat(targetUrl));navigate(targetUrl);}else{console.warn(\"\\u26A0\\uFE0F Learning path \".concat(pathId,\" has no steps, falling back to problems page\"));// Fallback to problems page\nnavigate(\"/problems\");}}catch(error){console.error(\"\\u274C Error starting learning path \".concat(pathId,\":\"),error);navigate(\"/problems\");}finally{setStartingPath(null);}};const handleContinuePath=pathId=>{const progress=getUserProgressForPath(pathId);const path=learningPaths.find(p=>p.id===pathId);if(progress&&path){// Find next uncompleted step or first step\nconst nextStep=path.steps.find(step=>{// This would need to be enhanced with actual completion tracking\nreturn true;// For now, just go to first step\n});if(nextStep){navigate(\"/practice/\".concat(nextStep.problem_numeric_id,\"?learningPath=\").concat(pathId));}}};const handleViewDetails=async pathId=>{try{const pathDetails=await LearningPathService.getLearningPath(pathId);setSelectedPath(pathDetails);}catch(error){console.error('Error loading path details:',error);}};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"max-w-7xl mx-auto px-4 py-8\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-2 text-gray-600 dark:text-gray-400\",children:\"Loading learning paths...\"})]})});}if(error){return/*#__PURE__*/_jsx(\"div\",{className:\"max-w-7xl mx-auto px-4 py-8\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-red-600 mb-4\",children:error}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setError('');loadLearningPaths();},className:\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\",children:\"Try Again\"})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-7xl mx-auto px-4 py-8 bg-gray-50 dark:bg-gray-900 min-h-screen transition-colors\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-8\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold text-gray-900 dark:text-white mb-4\",children:\"Learning Paths\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 dark:text-gray-400 text-lg\",children:\"Structured learning tracks to master SQL from beginner to advanced level. Each path contains carefully curated problems that build upon each other.\"})]}),isAuthenticated&&userProgress.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-8 bg-blue-50 border border-blue-200 rounded-lg p-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-semibold text-blue-900 mb-4\",children:\"Your Progress\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-3 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-2xl font-bold text-blue-600\",children:userProgress.filter(p=>p.is_active).length}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-blue-700\",children:\"Active Paths\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-2xl font-bold text-green-600\",children:userProgress.filter(p=>p.completion_percentage>=100).length}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-green-700\",children:\"Completed Paths\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-2xl font-bold text-purple-600\",children:[Math.round(userProgress.reduce((sum,p)=>sum+p.completion_percentage,0)/userProgress.length)||0,\"%\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-purple-700\",children:\"Average Progress\"})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-2 gap-6\",children:learningPaths.map(path=>{var _path$difficulty_leve,_path$difficulty_leve2;const progress=getUserProgressForPath(path.id);const isStarted=!!progress;const isCompleted=(progress===null||progress===void 0?void 0:progress.completion_percentage)>=100;return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-lg shadow-lg border hover:shadow-xl transition-shadow\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"p-6 border-b border-gray-200 dark:border-gray-700\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start justify-between mb-3\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold text-gray-900 dark:text-white\",children:path.name}),/*#__PURE__*/_jsx(\"span\",{className:\"px-3 py-1 rounded-full text-sm font-medium \".concat(getDifficultyColor(path.difficulty_level)),children:((_path$difficulty_leve=path.difficulty_level)===null||_path$difficulty_leve===void 0?void 0:_path$difficulty_leve.charAt(0).toUpperCase())+((_path$difficulty_leve2=path.difficulty_level)===null||_path$difficulty_leve2===void 0?void 0:_path$difficulty_leve2.slice(1))})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 dark:text-gray-400 mb-4\",children:path.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-4 text-sm text-gray-500\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"\\uD83D\\uDCDA \",path.total_steps||0,\" problems\"]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"\\u23F1\\uFE0F \",path.estimated_hours,\"h estimated\"]}),path.difficulty_level&&/*#__PURE__*/_jsxs(\"span\",{children:[\"\\uD83D\\uDCC8 \",path.difficulty_level]})]})]}),progress&&/*#__PURE__*/_jsxs(\"div\",{className:\"px-6 py-3 bg-gray-50\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium text-gray-700\",children:\"Progress\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm text-gray-600 dark:text-gray-400\",children:[Math.round(progress.completion_percentage),\"%\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-200 rounded-full h-2\",children:/*#__PURE__*/_jsx(\"div\",{className:\"h-2 rounded-full transition-all duration-300 \".concat(isCompleted?'bg-green-500':'bg-blue-500'),style:{width:\"\".concat(progress.completion_percentage,\"%\")}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-2 text-xs text-gray-500\",children:[progress.steps_completed,\" of \",progress.total_steps,\" problems completed\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-6\",children:[path.skills_learned&&path.skills_learned.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-sm font-semibold text-gray-700 dark:text-gray-300 mb-2\",children:\"Skills You'll Learn\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-wrap gap-2\",children:[path.skills_learned.slice(0,4).map((skill,index)=>/*#__PURE__*/_jsx(\"span\",{className:\"px-2 py-1 bg-blue-100 text-blue-700 text-xs rounded\",children:skill},index)),path.skills_learned.length>4&&/*#__PURE__*/_jsxs(\"span\",{className:\"px-2 py-1 bg-gray-100 text-gray-600 dark:text-gray-400 text-xs rounded\",children:[\"+\",path.skills_learned.length-4,\" more\"]})]})]}),path.prerequisites&&path.prerequisites.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-sm font-semibold text-gray-700 dark:text-gray-300 mb-2\",children:\"Prerequisites\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600 dark:text-gray-400\",children:path.prerequisites.join(', ')})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-3 mt-6\",children:[isCompleted?/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleContinuePath(path.id),className:\"flex-1 bg-green-600 text-white py-2 px-4 rounded-md hover:bg-green-700 transition-colors\",children:\"\\u2705 Review Path\"}):isStarted?/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleContinuePath(path.id),className:\"flex-1 bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 transition-colors\",children:\"Continue Learning\"}):/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleStartPath(path.id),disabled:startingPath===path.id,className:\"flex-1 bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 disabled:opacity-50 transition-colors\",children:startingPath===path.id?'Starting...':'Start Path'}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleViewDetails(path.id),className:\"px-4 py-2 border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 rounded-md hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors\",children:\"View Details\"})]})]})]},path.id);})}),selectedPath&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-lg max-w-4xl w-full max-h-screen overflow-y-auto\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-6 border-b border-gray-200 dark:border-gray-700\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-start\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-gray-900 dark:text-white mb-2\",children:selectedPath.name}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 dark:text-gray-400\",children:selectedPath.description})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSelectedPath(null),className:\"text-gray-400 hover:text-gray-600 dark:text-gray-400\",children:/*#__PURE__*/_jsx(\"svg\",{className:\"w-6 h-6\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:2,d:\"M6 18L18 6M6 6l12 12\"})})})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900 dark:text-white mb-4\",children:\"Problems in this path\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-3\",children:(_selectedPath$steps=selectedPath.steps)===null||_selectedPath$steps===void 0?void 0:_selectedPath$steps.map((step,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3 p-3 border border-gray-200 dark:border-gray-700 rounded-lg\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-shrink-0 w-8 h-8 bg-blue-100 text-blue-600 rounded-full flex items-center justify-center text-sm font-medium\",children:index+1}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"font-medium text-gray-900 dark:text-white\",children:[\"#\",step.problem_numeric_id,\" - \",step.problem_title]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600 dark:text-gray-400\",children:step.description}),step.estimated_time_minutes&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-500 mt-1\",children:[\"~\",step.estimated_time_minutes,\" minutes\"]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{navigate(\"/practice/\".concat(step.problem_numeric_id,\"?learningPath=\").concat(selectedPath.id));setSelectedPath(null);},className:\"text-blue-600 hover:text-blue-800 text-sm font-medium\",children:\"Practice\"})]},step.id))})]})]})}),!isAuthenticated&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-8 bg-yellow-50 border border-yellow-200 rounded-lg p-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-yellow-800 mb-2\",children:\"\\uD83D\\uDCA1 Get the Most Out of Learning Paths\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-yellow-700 mb-4\",children:\"Create an account to track your progress, earn achievements, and get personalized recommendations!\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-yellow-600\",children:[/*#__PURE__*/_jsx(\"div\",{children:\"\\u2705 Save your progress across devices\"}),/*#__PURE__*/_jsx(\"div\",{children:\"\\u2705 Unlock hints and detailed explanations\"}),/*#__PURE__*/_jsx(\"div\",{children:\"\\u2705 Compete on leaderboards\"}),/*#__PURE__*/_jsx(\"div\",{children:\"\\u2705 Get learning path certificates\"})]})]})]});};export default LearningPathsPage;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useAuth","LearningPathService","jsx","_jsx","jsxs","_jsxs","LearningPathsPage","_selectedPath$steps","learningPaths","setLearningPaths","userProgress","setUserProgress","loading","setLoading","error","setError","selectedPath","setSelectedPath","startingPath","setStartingPath","user","token","isAuthenticated","navigate","loadLearningPaths","loadUserProgress","paths","getLearningPaths","console","log","progress","getUserProgress","getUserProgressForPath","pathId","find","p","learning_path_id","getDifficultyColor","difficulty","toLowerCase","handleStartPath","concat","pathDetails","getLearningPath","hasPathDetails","hasSteps","steps","stepsLength","length","firstStep","numeric_id","problem_numeric_id","title","targetUrl","warn","handleContinuePath","path","id","nextStep","step","handleViewDetails","className","children","onClick","filter","is_active","completion_percentage","Math","round","reduce","sum","map","_path$difficulty_leve","_path$difficulty_leve2","isStarted","isCompleted","name","difficulty_level","charAt","toUpperCase","slice","description","total_steps","estimated_hours","style","width","steps_completed","skills_learned","skill","index","prerequisites","join","disabled","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","problem_title","estimated_time_minutes"],"sources":["/Users/ss/Downloads/Code/Vibe_coding/SQL_practice_website/sql-practice-platform/frontend/src/pages/LearningPathsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport LearningPathService from '../services/learningPathService';\n\nconst LearningPathsPage = () => {\n  const [learningPaths, setLearningPaths] = useState([]);\n  const [userProgress, setUserProgress] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [selectedPath, setSelectedPath] = useState(null);\n  const [startingPath, setStartingPath] = useState(null);\n\n  const { user, token, isAuthenticated } = useAuth();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    loadLearningPaths();\n    if (isAuthenticated) {\n      loadUserProgress();\n    }\n  }, [isAuthenticated]);\n\n  const loadLearningPaths = async () => {\n    try {\n      const paths = await LearningPathService.getLearningPaths();\n      console.log('Loaded learning paths:', paths); // Debug log\n      setLearningPaths(paths);\n    } catch (error) {\n      setError('Failed to load learning paths');\n      console.error('Error loading learning paths:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadUserProgress = async () => {\n    try {\n      const progress = await LearningPathService.getUserProgress(token);\n      setUserProgress(progress);\n    } catch (error) {\n      console.error('Error loading progress:', error);\n    }\n  };\n\n  const getUserProgressForPath = (pathId) => {\n    return userProgress.find(p => p.learning_path_id === pathId);\n  };\n\n  const getDifficultyColor = (difficulty) => {\n    switch (difficulty?.toLowerCase()) {\n      case 'beginner': return 'bg-green-100 text-green-800';\n      case 'intermediate': return 'bg-yellow-100 text-yellow-800';\n      case 'advanced': return 'bg-red-100 text-red-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const handleStartPath = async (pathId) => {\n    try {\n      console.log(`🚀 Starting learning path ${pathId}`);\n      setStartingPath(pathId);\n      \n      // Get the detailed learning path with steps\n      const pathDetails = await LearningPathService.getLearningPath(pathId);\n      \n      console.log(`🔍 Path details for ${pathId}:`, {\n        hasPathDetails: !!pathDetails,\n        hasSteps: !!(pathDetails && pathDetails.steps),\n        stepsLength: pathDetails && pathDetails.steps ? pathDetails.steps.length : 0,\n        firstStep: pathDetails && pathDetails.steps && pathDetails.steps[0] ? {\n          numeric_id: pathDetails.steps[0].numeric_id,\n          problem_numeric_id: pathDetails.steps[0].problem_numeric_id,\n          title: pathDetails.steps[0].title\n        } : null\n      });\n      \n      if (pathDetails && pathDetails.steps && pathDetails.steps.length > 0) {\n        // Navigate to the first problem in the learning path\n        const firstStep = pathDetails.steps[0];\n        const targetUrl = `/practice/${firstStep.problem_numeric_id}?learningPath=${pathId}`;\n        console.log(`✅ Navigating to: ${targetUrl}`);\n        navigate(targetUrl);\n      } else {\n        console.warn(`⚠️ Learning path ${pathId} has no steps, falling back to problems page`);\n        // Fallback to problems page\n        navigate(`/problems`);\n      }\n    } catch (error) {\n      console.error(`❌ Error starting learning path ${pathId}:`, error);\n      navigate(`/problems`);\n    } finally {\n      setStartingPath(null);\n    }\n  };\n\n  const handleContinuePath = (pathId) => {\n    const progress = getUserProgressForPath(pathId);\n    const path = learningPaths.find(p => p.id === pathId);\n    \n    if (progress && path) {\n      // Find next uncompleted step or first step\n      const nextStep = path.steps.find(step => {\n        // This would need to be enhanced with actual completion tracking\n        return true; // For now, just go to first step\n      });\n      \n      if (nextStep) {\n        navigate(`/practice/${nextStep.problem_numeric_id}?learningPath=${pathId}`);\n      }\n    }\n  };\n\n  const handleViewDetails = async (pathId) => {\n    try {\n      const pathDetails = await LearningPathService.getLearningPath(pathId);\n      setSelectedPath(pathDetails);\n    } catch (error) {\n      console.error('Error loading path details:', error);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"max-w-7xl mx-auto px-4 py-8\">\n        <div className=\"text-center\">\n          <div className=\"inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n          <div className=\"mt-2 text-gray-600 dark:text-gray-400\">Loading learning paths...</div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"max-w-7xl mx-auto px-4 py-8\">\n        <div className=\"text-center\">\n          <div className=\"text-red-600 mb-4\">{error}</div>\n          <button\n            onClick={() => {\n              setError('');\n              loadLearningPaths();\n            }}\n            className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700\"\n          >\n            Try Again\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-7xl mx-auto px-4 py-8 bg-gray-50 dark:bg-gray-900 min-h-screen transition-colors\">\n      {/* Header */}\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white mb-4\">Learning Paths</h1>\n        <p className=\"text-gray-600 dark:text-gray-400 text-lg\">\n          Structured learning tracks to master SQL from beginner to advanced level. \n          Each path contains carefully curated problems that build upon each other.\n        </p>\n      </div>\n\n      {/* User Progress Summary */}\n      {isAuthenticated && userProgress.length > 0 && (\n        <div className=\"mb-8 bg-blue-50 border border-blue-200 rounded-lg p-6\">\n          <h2 className=\"text-lg font-semibold text-blue-900 mb-4\">Your Progress</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-blue-600\">{userProgress.filter(p => p.is_active).length}</div>\n              <div className=\"text-sm text-blue-700\">Active Paths</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-green-600\">\n                {userProgress.filter(p => p.completion_percentage >= 100).length}\n              </div>\n              <div className=\"text-sm text-green-700\">Completed Paths</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-purple-600\">\n                {Math.round(userProgress.reduce((sum, p) => sum + p.completion_percentage, 0) / userProgress.length) || 0}%\n              </div>\n              <div className=\"text-sm text-purple-700\">Average Progress</div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Learning Paths Grid */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {learningPaths.map((path) => {\n          const progress = getUserProgressForPath(path.id);\n          const isStarted = !!progress;\n          const isCompleted = progress?.completion_percentage >= 100;\n          \n          return (\n            <div key={path.id} className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg border hover:shadow-xl transition-shadow\">\n              {/* Header */}\n              <div className=\"p-6 border-b border-gray-200 dark:border-gray-700\">\n                <div className=\"flex items-start justify-between mb-3\">\n                  <h3 className=\"text-xl font-bold text-gray-900 dark:text-white\">{path.name}</h3>\n                  <span className={`px-3 py-1 rounded-full text-sm font-medium ${getDifficultyColor(path.difficulty_level)}`}>\n                    {path.difficulty_level?.charAt(0).toUpperCase() + path.difficulty_level?.slice(1)}\n                  </span>\n                </div>\n                \n                <p className=\"text-gray-600 dark:text-gray-400 mb-4\">{path.description}</p>\n                \n                {/* Path Stats */}\n                <div className=\"flex items-center space-x-4 text-sm text-gray-500\">\n                  <span>📚 {path.total_steps || 0} problems</span>\n                  <span>⏱️ {path.estimated_hours}h estimated</span>\n                  {path.difficulty_level && <span>📈 {path.difficulty_level}</span>}\n                </div>\n              </div>\n\n              {/* Progress Bar (if started) */}\n              {progress && (\n                <div className=\"px-6 py-3 bg-gray-50\">\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <span className=\"text-sm font-medium text-gray-700\">Progress</span>\n                    <span className=\"text-sm text-gray-600 dark:text-gray-400\">{Math.round(progress.completion_percentage)}%</span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                    <div \n                      className={`h-2 rounded-full transition-all duration-300 ${\n                        isCompleted ? 'bg-green-500' : 'bg-blue-500'\n                      }`}\n                      style={{ width: `${progress.completion_percentage}%` }}\n                    ></div>\n                  </div>\n                  <div className=\"mt-2 text-xs text-gray-500\">\n                    {progress.steps_completed} of {progress.total_steps} problems completed\n                  </div>\n                </div>\n              )}\n\n              {/* Skills and Prerequisites */}\n              <div className=\"p-6\">\n                {path.skills_learned && path.skills_learned.length > 0 && (\n                  <div className=\"mb-4\">\n                    <h4 className=\"text-sm font-semibold text-gray-700 dark:text-gray-300 mb-2\">Skills You'll Learn</h4>\n                    <div className=\"flex flex-wrap gap-2\">\n                      {path.skills_learned.slice(0, 4).map((skill, index) => (\n                        <span key={index} className=\"px-2 py-1 bg-blue-100 text-blue-700 text-xs rounded\">\n                          {skill}\n                        </span>\n                      ))}\n                      {path.skills_learned.length > 4 && (\n                        <span className=\"px-2 py-1 bg-gray-100 text-gray-600 dark:text-gray-400 text-xs rounded\">\n                          +{path.skills_learned.length - 4} more\n                        </span>\n                      )}\n                    </div>\n                  </div>\n                )}\n\n                {path.prerequisites && path.prerequisites.length > 0 && (\n                  <div className=\"mb-4\">\n                    <h4 className=\"text-sm font-semibold text-gray-700 dark:text-gray-300 mb-2\">Prerequisites</h4>\n                    <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                      {path.prerequisites.join(', ')}\n                    </div>\n                  </div>\n                )}\n\n                {/* Action Buttons */}\n                <div className=\"flex space-x-3 mt-6\">\n                  {isCompleted ? (\n                    <button\n                      onClick={() => handleContinuePath(path.id)}\n                      className=\"flex-1 bg-green-600 text-white py-2 px-4 rounded-md hover:bg-green-700 transition-colors\"\n                    >\n                      ✅ Review Path\n                    </button>\n                  ) : isStarted ? (\n                    <button\n                      onClick={() => handleContinuePath(path.id)}\n                      className=\"flex-1 bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 transition-colors\"\n                    >\n                      Continue Learning\n                    </button>\n                  ) : (\n                    <button\n                      onClick={() => handleStartPath(path.id)}\n                      disabled={startingPath === path.id}\n                      className=\"flex-1 bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 disabled:opacity-50 transition-colors\"\n                    >\n                      {startingPath === path.id ? 'Starting...' : 'Start Path'}\n                    </button>\n                  )}\n                  \n                  <button\n                    onClick={() => handleViewDetails(path.id)}\n                    className=\"px-4 py-2 border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 rounded-md hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors\"\n                  >\n                    View Details\n                  </button>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      {/* Path Details Modal */}\n      {selectedPath && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg max-w-4xl w-full max-h-screen overflow-y-auto\">\n            <div className=\"p-6 border-b border-gray-200 dark:border-gray-700\">\n              <div className=\"flex justify-between items-start\">\n                <div>\n                  <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-2\">{selectedPath.name}</h2>\n                  <p className=\"text-gray-600 dark:text-gray-400\">{selectedPath.description}</p>\n                </div>\n                <button\n                  onClick={() => setSelectedPath(null)}\n                  className=\"text-gray-400 hover:text-gray-600 dark:text-gray-400\"\n                >\n                  <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n                </button>\n              </div>\n            </div>\n            \n            <div className=\"p-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">Problems in this path</h3>\n              <div className=\"space-y-3\">\n                {selectedPath.steps?.map((step, index) => (\n                  <div key={step.id} className=\"flex items-center space-x-3 p-3 border border-gray-200 dark:border-gray-700 rounded-lg\">\n                    <div className=\"flex-shrink-0 w-8 h-8 bg-blue-100 text-blue-600 rounded-full flex items-center justify-center text-sm font-medium\">\n                      {index + 1}\n                    </div>\n                    <div className=\"flex-1\">\n                      <div className=\"font-medium text-gray-900 dark:text-white\">#{step.problem_numeric_id} - {step.problem_title}</div>\n                      <div className=\"text-sm text-gray-600 dark:text-gray-400\">{step.description}</div>\n                      {step.estimated_time_minutes && (\n                        <div className=\"text-xs text-gray-500 mt-1\">~{step.estimated_time_minutes} minutes</div>\n                      )}\n                    </div>\n                    <button\n                      onClick={() => {\n                        navigate(`/practice/${step.problem_numeric_id}?learningPath=${selectedPath.id}`);\n                        setSelectedPath(null);\n                      }}\n                      className=\"text-blue-600 hover:text-blue-800 text-sm font-medium\"\n                    >\n                      Practice\n                    </button>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Tips for non-authenticated users */}\n      {!isAuthenticated && (\n        <div className=\"mt-8 bg-yellow-50 border border-yellow-200 rounded-lg p-6\">\n          <h3 className=\"text-lg font-semibold text-yellow-800 mb-2\">💡 Get the Most Out of Learning Paths</h3>\n          <p className=\"text-yellow-700 mb-4\">\n            Create an account to track your progress, earn achievements, and get personalized recommendations!\n          </p>\n          <div className=\"text-sm text-yellow-600\">\n            <div>✅ Save your progress across devices</div>\n            <div>✅ Unlock hints and detailed explanations</div>\n            <div>✅ Compete on leaderboards</div>\n            <div>✅ Get learning path certificates</div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LearningPathsPage;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,OAAO,KAAQ,yBAAyB,CACjD,MAAO,CAAAC,mBAAmB,KAAM,iCAAiC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElE,KAAM,CAAAC,iBAAiB,CAAGA,CAAA,GAAM,KAAAC,mBAAA,CAC9B,KAAM,CAACC,aAAa,CAAEC,gBAAgB,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAACa,YAAY,CAAEC,eAAe,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAACe,OAAO,CAAEC,UAAU,CAAC,CAAGhB,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACiB,KAAK,CAAEC,QAAQ,CAAC,CAAGlB,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACmB,YAAY,CAAEC,eAAe,CAAC,CAAGpB,QAAQ,CAAC,IAAI,CAAC,CACtD,KAAM,CAACqB,YAAY,CAAEC,eAAe,CAAC,CAAGtB,QAAQ,CAAC,IAAI,CAAC,CAEtD,KAAM,CAAEuB,IAAI,CAAEC,KAAK,CAAEC,eAAgB,CAAC,CAAGtB,OAAO,CAAC,CAAC,CAClD,KAAM,CAAAuB,QAAQ,CAAGxB,WAAW,CAAC,CAAC,CAE9BD,SAAS,CAAC,IAAM,CACd0B,iBAAiB,CAAC,CAAC,CACnB,GAAIF,eAAe,CAAE,CACnBG,gBAAgB,CAAC,CAAC,CACpB,CACF,CAAC,CAAE,CAACH,eAAe,CAAC,CAAC,CAErB,KAAM,CAAAE,iBAAiB,CAAG,KAAAA,CAAA,GAAY,CACpC,GAAI,CACF,KAAM,CAAAE,KAAK,CAAG,KAAM,CAAAzB,mBAAmB,CAAC0B,gBAAgB,CAAC,CAAC,CAC1DC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAEH,KAAK,CAAC,CAAE;AAC9CjB,gBAAgB,CAACiB,KAAK,CAAC,CACzB,CAAE,MAAOZ,KAAK,CAAE,CACdC,QAAQ,CAAC,+BAA+B,CAAC,CACzCa,OAAO,CAACd,KAAK,CAAC,+BAA+B,CAAEA,KAAK,CAAC,CACvD,CAAC,OAAS,CACRD,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,KAAM,CAAAY,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CACF,KAAM,CAAAK,QAAQ,CAAG,KAAM,CAAA7B,mBAAmB,CAAC8B,eAAe,CAACV,KAAK,CAAC,CACjEV,eAAe,CAACmB,QAAQ,CAAC,CAC3B,CAAE,MAAOhB,KAAK,CAAE,CACdc,OAAO,CAACd,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CACjD,CACF,CAAC,CAED,KAAM,CAAAkB,sBAAsB,CAAIC,MAAM,EAAK,CACzC,MAAO,CAAAvB,YAAY,CAACwB,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACC,gBAAgB,GAAKH,MAAM,CAAC,CAC9D,CAAC,CAED,KAAM,CAAAI,kBAAkB,CAAIC,UAAU,EAAK,CACzC,OAAQA,UAAU,SAAVA,UAAU,iBAAVA,UAAU,CAAEC,WAAW,CAAC,CAAC,EAC/B,IAAK,UAAU,CAAE,MAAO,6BAA6B,CACrD,IAAK,cAAc,CAAE,MAAO,+BAA+B,CAC3D,IAAK,UAAU,CAAE,MAAO,yBAAyB,CACjD,QAAS,MAAO,2BAA2B,CAC7C,CACF,CAAC,CAED,KAAM,CAAAC,eAAe,CAAG,KAAO,CAAAP,MAAM,EAAK,CACxC,GAAI,CACFL,OAAO,CAACC,GAAG,wCAAAY,MAAA,CAA8BR,MAAM,CAAE,CAAC,CAClDd,eAAe,CAACc,MAAM,CAAC,CAEvB;AACA,KAAM,CAAAS,WAAW,CAAG,KAAM,CAAAzC,mBAAmB,CAAC0C,eAAe,CAACV,MAAM,CAAC,CAErEL,OAAO,CAACC,GAAG,kCAAAY,MAAA,CAAwBR,MAAM,MAAK,CAC5CW,cAAc,CAAE,CAAC,CAACF,WAAW,CAC7BG,QAAQ,CAAE,CAAC,EAAEH,WAAW,EAAIA,WAAW,CAACI,KAAK,CAAC,CAC9CC,WAAW,CAAEL,WAAW,EAAIA,WAAW,CAACI,KAAK,CAAGJ,WAAW,CAACI,KAAK,CAACE,MAAM,CAAG,CAAC,CAC5EC,SAAS,CAAEP,WAAW,EAAIA,WAAW,CAACI,KAAK,EAAIJ,WAAW,CAACI,KAAK,CAAC,CAAC,CAAC,CAAG,CACpEI,UAAU,CAAER,WAAW,CAACI,KAAK,CAAC,CAAC,CAAC,CAACI,UAAU,CAC3CC,kBAAkB,CAAET,WAAW,CAACI,KAAK,CAAC,CAAC,CAAC,CAACK,kBAAkB,CAC3DC,KAAK,CAAEV,WAAW,CAACI,KAAK,CAAC,CAAC,CAAC,CAACM,KAC9B,CAAC,CAAG,IACN,CAAC,CAAC,CAEF,GAAIV,WAAW,EAAIA,WAAW,CAACI,KAAK,EAAIJ,WAAW,CAACI,KAAK,CAACE,MAAM,CAAG,CAAC,CAAE,CACpE;AACA,KAAM,CAAAC,SAAS,CAAGP,WAAW,CAACI,KAAK,CAAC,CAAC,CAAC,CACtC,KAAM,CAAAO,SAAS,cAAAZ,MAAA,CAAgBQ,SAAS,CAACE,kBAAkB,mBAAAV,MAAA,CAAiBR,MAAM,CAAE,CACpFL,OAAO,CAACC,GAAG,0BAAAY,MAAA,CAAqBY,SAAS,CAAE,CAAC,CAC5C9B,QAAQ,CAAC8B,SAAS,CAAC,CACrB,CAAC,IAAM,CACLzB,OAAO,CAAC0B,IAAI,+BAAAb,MAAA,CAAqBR,MAAM,gDAA8C,CAAC,CACtF;AACAV,QAAQ,YAAY,CAAC,CACvB,CACF,CAAE,MAAOT,KAAK,CAAE,CACdc,OAAO,CAACd,KAAK,wCAAA2B,MAAA,CAAmCR,MAAM,MAAKnB,KAAK,CAAC,CACjES,QAAQ,YAAY,CAAC,CACvB,CAAC,OAAS,CACRJ,eAAe,CAAC,IAAI,CAAC,CACvB,CACF,CAAC,CAED,KAAM,CAAAoC,kBAAkB,CAAItB,MAAM,EAAK,CACrC,KAAM,CAAAH,QAAQ,CAAGE,sBAAsB,CAACC,MAAM,CAAC,CAC/C,KAAM,CAAAuB,IAAI,CAAGhD,aAAa,CAAC0B,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACsB,EAAE,GAAKxB,MAAM,CAAC,CAErD,GAAIH,QAAQ,EAAI0B,IAAI,CAAE,CACpB;AACA,KAAM,CAAAE,QAAQ,CAAGF,IAAI,CAACV,KAAK,CAACZ,IAAI,CAACyB,IAAI,EAAI,CACvC;AACA,MAAO,KAAI,CAAE;AACf,CAAC,CAAC,CAEF,GAAID,QAAQ,CAAE,CACZnC,QAAQ,cAAAkB,MAAA,CAAciB,QAAQ,CAACP,kBAAkB,mBAAAV,MAAA,CAAiBR,MAAM,CAAE,CAAC,CAC7E,CACF,CACF,CAAC,CAED,KAAM,CAAA2B,iBAAiB,CAAG,KAAO,CAAA3B,MAAM,EAAK,CAC1C,GAAI,CACF,KAAM,CAAAS,WAAW,CAAG,KAAM,CAAAzC,mBAAmB,CAAC0C,eAAe,CAACV,MAAM,CAAC,CACrEhB,eAAe,CAACyB,WAAW,CAAC,CAC9B,CAAE,MAAO5B,KAAK,CAAE,CACdc,OAAO,CAACd,KAAK,CAAC,6BAA6B,CAAEA,KAAK,CAAC,CACrD,CACF,CAAC,CAED,GAAIF,OAAO,CAAE,CACX,mBACET,IAAA,QAAK0D,SAAS,CAAC,6BAA6B,CAAAC,QAAA,cAC1CzD,KAAA,QAAKwD,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1B3D,IAAA,QAAK0D,SAAS,CAAC,2EAA2E,CAAM,CAAC,cACjG1D,IAAA,QAAK0D,SAAS,CAAC,uCAAuC,CAAAC,QAAA,CAAC,2BAAyB,CAAK,CAAC,EACnF,CAAC,CACH,CAAC,CAEV,CAEA,GAAIhD,KAAK,CAAE,CACT,mBACEX,IAAA,QAAK0D,SAAS,CAAC,6BAA6B,CAAAC,QAAA,cAC1CzD,KAAA,QAAKwD,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1B3D,IAAA,QAAK0D,SAAS,CAAC,mBAAmB,CAAAC,QAAA,CAAEhD,KAAK,CAAM,CAAC,cAChDX,IAAA,WACE4D,OAAO,CAAEA,CAAA,GAAM,CACbhD,QAAQ,CAAC,EAAE,CAAC,CACZS,iBAAiB,CAAC,CAAC,CACrB,CAAE,CACFqC,SAAS,CAAC,+DAA+D,CAAAC,QAAA,CAC1E,WAED,CAAQ,CAAC,EACN,CAAC,CACH,CAAC,CAEV,CAEA,mBACEzD,KAAA,QAAKwD,SAAS,CAAC,wFAAwF,CAAAC,QAAA,eAErGzD,KAAA,QAAKwD,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnB3D,IAAA,OAAI0D,SAAS,CAAC,uDAAuD,CAAAC,QAAA,CAAC,gBAAc,CAAI,CAAC,cACzF3D,IAAA,MAAG0D,SAAS,CAAC,0CAA0C,CAAAC,QAAA,CAAC,qJAGxD,CAAG,CAAC,EACD,CAAC,CAGLxC,eAAe,EAAIZ,YAAY,CAACsC,MAAM,CAAG,CAAC,eACzC3C,KAAA,QAAKwD,SAAS,CAAC,uDAAuD,CAAAC,QAAA,eACpE3D,IAAA,OAAI0D,SAAS,CAAC,0CAA0C,CAAAC,QAAA,CAAC,eAAa,CAAI,CAAC,cAC3EzD,KAAA,QAAKwD,SAAS,CAAC,uCAAuC,CAAAC,QAAA,eACpDzD,KAAA,QAAKwD,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1B3D,IAAA,QAAK0D,SAAS,CAAC,kCAAkC,CAAAC,QAAA,CAAEpD,YAAY,CAACsD,MAAM,CAAC7B,CAAC,EAAIA,CAAC,CAAC8B,SAAS,CAAC,CAACjB,MAAM,CAAM,CAAC,cACtG7C,IAAA,QAAK0D,SAAS,CAAC,uBAAuB,CAAAC,QAAA,CAAC,cAAY,CAAK,CAAC,EACtD,CAAC,cACNzD,KAAA,QAAKwD,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1B3D,IAAA,QAAK0D,SAAS,CAAC,mCAAmC,CAAAC,QAAA,CAC/CpD,YAAY,CAACsD,MAAM,CAAC7B,CAAC,EAAIA,CAAC,CAAC+B,qBAAqB,EAAI,GAAG,CAAC,CAAClB,MAAM,CAC7D,CAAC,cACN7C,IAAA,QAAK0D,SAAS,CAAC,wBAAwB,CAAAC,QAAA,CAAC,iBAAe,CAAK,CAAC,EAC1D,CAAC,cACNzD,KAAA,QAAKwD,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BzD,KAAA,QAAKwD,SAAS,CAAC,oCAAoC,CAAAC,QAAA,EAChDK,IAAI,CAACC,KAAK,CAAC1D,YAAY,CAAC2D,MAAM,CAAC,CAACC,GAAG,CAAEnC,CAAC,GAAKmC,GAAG,CAAGnC,CAAC,CAAC+B,qBAAqB,CAAE,CAAC,CAAC,CAAGxD,YAAY,CAACsC,MAAM,CAAC,EAAI,CAAC,CAAC,GAC5G,EAAK,CAAC,cACN7C,IAAA,QAAK0D,SAAS,CAAC,yBAAyB,CAAAC,QAAA,CAAC,kBAAgB,CAAK,CAAC,EAC5D,CAAC,EACH,CAAC,EACH,CACN,cAGD3D,IAAA,QAAK0D,SAAS,CAAC,uCAAuC,CAAAC,QAAA,CACnDtD,aAAa,CAAC+D,GAAG,CAAEf,IAAI,EAAK,KAAAgB,qBAAA,CAAAC,sBAAA,CAC3B,KAAM,CAAA3C,QAAQ,CAAGE,sBAAsB,CAACwB,IAAI,CAACC,EAAE,CAAC,CAChD,KAAM,CAAAiB,SAAS,CAAG,CAAC,CAAC5C,QAAQ,CAC5B,KAAM,CAAA6C,WAAW,CAAG,CAAA7C,QAAQ,SAARA,QAAQ,iBAARA,QAAQ,CAAEoC,qBAAqB,GAAI,GAAG,CAE1D,mBACE7D,KAAA,QAAmBwD,SAAS,CAAC,yFAAyF,CAAAC,QAAA,eAEpHzD,KAAA,QAAKwD,SAAS,CAAC,mDAAmD,CAAAC,QAAA,eAChEzD,KAAA,QAAKwD,SAAS,CAAC,uCAAuC,CAAAC,QAAA,eACpD3D,IAAA,OAAI0D,SAAS,CAAC,iDAAiD,CAAAC,QAAA,CAAEN,IAAI,CAACoB,IAAI,CAAK,CAAC,cAChFzE,IAAA,SAAM0D,SAAS,+CAAApB,MAAA,CAAgDJ,kBAAkB,CAACmB,IAAI,CAACqB,gBAAgB,CAAC,CAAG,CAAAf,QAAA,CACxG,EAAAU,qBAAA,CAAAhB,IAAI,CAACqB,gBAAgB,UAAAL,qBAAA,iBAArBA,qBAAA,CAAuBM,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,IAAAN,sBAAA,CAAGjB,IAAI,CAACqB,gBAAgB,UAAAJ,sBAAA,iBAArBA,sBAAA,CAAuBO,KAAK,CAAC,CAAC,CAAC,EAC7E,CAAC,EACJ,CAAC,cAEN7E,IAAA,MAAG0D,SAAS,CAAC,uCAAuC,CAAAC,QAAA,CAAEN,IAAI,CAACyB,WAAW,CAAI,CAAC,cAG3E5E,KAAA,QAAKwD,SAAS,CAAC,mDAAmD,CAAAC,QAAA,eAChEzD,KAAA,SAAAyD,QAAA,EAAM,eAAG,CAACN,IAAI,CAAC0B,WAAW,EAAI,CAAC,CAAC,WAAS,EAAM,CAAC,cAChD7E,KAAA,SAAAyD,QAAA,EAAM,eAAG,CAACN,IAAI,CAAC2B,eAAe,CAAC,aAAW,EAAM,CAAC,CAChD3B,IAAI,CAACqB,gBAAgB,eAAIxE,KAAA,SAAAyD,QAAA,EAAM,eAAG,CAACN,IAAI,CAACqB,gBAAgB,EAAO,CAAC,EAC9D,CAAC,EACH,CAAC,CAGL/C,QAAQ,eACPzB,KAAA,QAAKwD,SAAS,CAAC,sBAAsB,CAAAC,QAAA,eACnCzD,KAAA,QAAKwD,SAAS,CAAC,wCAAwC,CAAAC,QAAA,eACrD3D,IAAA,SAAM0D,SAAS,CAAC,mCAAmC,CAAAC,QAAA,CAAC,UAAQ,CAAM,CAAC,cACnEzD,KAAA,SAAMwD,SAAS,CAAC,0CAA0C,CAAAC,QAAA,EAAEK,IAAI,CAACC,KAAK,CAACtC,QAAQ,CAACoC,qBAAqB,CAAC,CAAC,GAAC,EAAM,CAAC,EAC5G,CAAC,cACN/D,IAAA,QAAK0D,SAAS,CAAC,qCAAqC,CAAAC,QAAA,cAClD3D,IAAA,QACE0D,SAAS,iDAAApB,MAAA,CACPkC,WAAW,CAAG,cAAc,CAAG,aAAa,CAC3C,CACHS,KAAK,CAAE,CAAEC,KAAK,IAAA5C,MAAA,CAAKX,QAAQ,CAACoC,qBAAqB,KAAI,CAAE,CACnD,CAAC,CACJ,CAAC,cACN7D,KAAA,QAAKwD,SAAS,CAAC,4BAA4B,CAAAC,QAAA,EACxChC,QAAQ,CAACwD,eAAe,CAAC,MAAI,CAACxD,QAAQ,CAACoD,WAAW,CAAC,qBACtD,EAAK,CAAC,EACH,CACN,cAGD7E,KAAA,QAAKwD,SAAS,CAAC,KAAK,CAAAC,QAAA,EACjBN,IAAI,CAAC+B,cAAc,EAAI/B,IAAI,CAAC+B,cAAc,CAACvC,MAAM,CAAG,CAAC,eACpD3C,KAAA,QAAKwD,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnB3D,IAAA,OAAI0D,SAAS,CAAC,6DAA6D,CAAAC,QAAA,CAAC,qBAAmB,CAAI,CAAC,cACpGzD,KAAA,QAAKwD,SAAS,CAAC,sBAAsB,CAAAC,QAAA,EAClCN,IAAI,CAAC+B,cAAc,CAACP,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAACT,GAAG,CAAC,CAACiB,KAAK,CAAEC,KAAK,gBAChDtF,IAAA,SAAkB0D,SAAS,CAAC,qDAAqD,CAAAC,QAAA,CAC9E0B,KAAK,EADGC,KAEL,CACP,CAAC,CACDjC,IAAI,CAAC+B,cAAc,CAACvC,MAAM,CAAG,CAAC,eAC7B3C,KAAA,SAAMwD,SAAS,CAAC,wEAAwE,CAAAC,QAAA,EAAC,GACtF,CAACN,IAAI,CAAC+B,cAAc,CAACvC,MAAM,CAAG,CAAC,CAAC,OACnC,EAAM,CACP,EACE,CAAC,EACH,CACN,CAEAQ,IAAI,CAACkC,aAAa,EAAIlC,IAAI,CAACkC,aAAa,CAAC1C,MAAM,CAAG,CAAC,eAClD3C,KAAA,QAAKwD,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnB3D,IAAA,OAAI0D,SAAS,CAAC,6DAA6D,CAAAC,QAAA,CAAC,eAAa,CAAI,CAAC,cAC9F3D,IAAA,QAAK0D,SAAS,CAAC,0CAA0C,CAAAC,QAAA,CACtDN,IAAI,CAACkC,aAAa,CAACC,IAAI,CAAC,IAAI,CAAC,CAC3B,CAAC,EACH,CACN,cAGDtF,KAAA,QAAKwD,SAAS,CAAC,qBAAqB,CAAAC,QAAA,EACjCa,WAAW,cACVxE,IAAA,WACE4D,OAAO,CAAEA,CAAA,GAAMR,kBAAkB,CAACC,IAAI,CAACC,EAAE,CAAE,CAC3CI,SAAS,CAAC,0FAA0F,CAAAC,QAAA,CACrG,oBAED,CAAQ,CAAC,CACPY,SAAS,cACXvE,IAAA,WACE4D,OAAO,CAAEA,CAAA,GAAMR,kBAAkB,CAACC,IAAI,CAACC,EAAE,CAAE,CAC3CI,SAAS,CAAC,wFAAwF,CAAAC,QAAA,CACnG,mBAED,CAAQ,CAAC,cAET3D,IAAA,WACE4D,OAAO,CAAEA,CAAA,GAAMvB,eAAe,CAACgB,IAAI,CAACC,EAAE,CAAE,CACxCmC,QAAQ,CAAE1E,YAAY,GAAKsC,IAAI,CAACC,EAAG,CACnCI,SAAS,CAAC,4GAA4G,CAAAC,QAAA,CAErH5C,YAAY,GAAKsC,IAAI,CAACC,EAAE,CAAG,aAAa,CAAG,YAAY,CAClD,CACT,cAEDtD,IAAA,WACE4D,OAAO,CAAEA,CAAA,GAAMH,iBAAiB,CAACJ,IAAI,CAACC,EAAE,CAAE,CAC1CI,SAAS,CAAC,6JAA6J,CAAAC,QAAA,CACxK,cAED,CAAQ,CAAC,EACN,CAAC,EACH,CAAC,GAvGEN,IAAI,CAACC,EAwGV,CAAC,CAEV,CAAC,CAAC,CACC,CAAC,CAGLzC,YAAY,eACXb,IAAA,QAAK0D,SAAS,CAAC,gFAAgF,CAAAC,QAAA,cAC7FzD,KAAA,QAAKwD,SAAS,CAAC,oFAAoF,CAAAC,QAAA,eACjG3D,IAAA,QAAK0D,SAAS,CAAC,mDAAmD,CAAAC,QAAA,cAChEzD,KAAA,QAAKwD,SAAS,CAAC,kCAAkC,CAAAC,QAAA,eAC/CzD,KAAA,QAAAyD,QAAA,eACE3D,IAAA,OAAI0D,SAAS,CAAC,uDAAuD,CAAAC,QAAA,CAAE9C,YAAY,CAAC4D,IAAI,CAAK,CAAC,cAC9FzE,IAAA,MAAG0D,SAAS,CAAC,kCAAkC,CAAAC,QAAA,CAAE9C,YAAY,CAACiE,WAAW,CAAI,CAAC,EAC3E,CAAC,cACN9E,IAAA,WACE4D,OAAO,CAAEA,CAAA,GAAM9C,eAAe,CAAC,IAAI,CAAE,CACrC4C,SAAS,CAAC,sDAAsD,CAAAC,QAAA,cAEhE3D,IAAA,QAAK0D,SAAS,CAAC,SAAS,CAACgC,IAAI,CAAC,MAAM,CAACC,MAAM,CAAC,cAAc,CAACC,OAAO,CAAC,WAAW,CAAAjC,QAAA,cAC5E3D,IAAA,SAAM6F,aAAa,CAAC,OAAO,CAACC,cAAc,CAAC,OAAO,CAACC,WAAW,CAAE,CAAE,CAACC,CAAC,CAAC,sBAAsB,CAAE,CAAC,CAC3F,CAAC,CACA,CAAC,EACN,CAAC,CACH,CAAC,cAEN9F,KAAA,QAAKwD,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClB3D,IAAA,OAAI0D,SAAS,CAAC,0DAA0D,CAAAC,QAAA,CAAC,uBAAqB,CAAI,CAAC,cACnG3D,IAAA,QAAK0D,SAAS,CAAC,WAAW,CAAAC,QAAA,EAAAvD,mBAAA,CACvBS,YAAY,CAAC8B,KAAK,UAAAvC,mBAAA,iBAAlBA,mBAAA,CAAoBgE,GAAG,CAAC,CAACZ,IAAI,CAAE8B,KAAK,gBACnCpF,KAAA,QAAmBwD,SAAS,CAAC,wFAAwF,CAAAC,QAAA,eACnH3D,IAAA,QAAK0D,SAAS,CAAC,mHAAmH,CAAAC,QAAA,CAC/H2B,KAAK,CAAG,CAAC,CACP,CAAC,cACNpF,KAAA,QAAKwD,SAAS,CAAC,QAAQ,CAAAC,QAAA,eACrBzD,KAAA,QAAKwD,SAAS,CAAC,2CAA2C,CAAAC,QAAA,EAAC,GAAC,CAACH,IAAI,CAACR,kBAAkB,CAAC,KAAG,CAACQ,IAAI,CAACyC,aAAa,EAAM,CAAC,cAClHjG,IAAA,QAAK0D,SAAS,CAAC,0CAA0C,CAAAC,QAAA,CAAEH,IAAI,CAACsB,WAAW,CAAM,CAAC,CACjFtB,IAAI,CAAC0C,sBAAsB,eAC1BhG,KAAA,QAAKwD,SAAS,CAAC,4BAA4B,CAAAC,QAAA,EAAC,GAAC,CAACH,IAAI,CAAC0C,sBAAsB,CAAC,UAAQ,EAAK,CACxF,EACE,CAAC,cACNlG,IAAA,WACE4D,OAAO,CAAEA,CAAA,GAAM,CACbxC,QAAQ,cAAAkB,MAAA,CAAckB,IAAI,CAACR,kBAAkB,mBAAAV,MAAA,CAAiBzB,YAAY,CAACyC,EAAE,CAAE,CAAC,CAChFxC,eAAe,CAAC,IAAI,CAAC,CACvB,CAAE,CACF4C,SAAS,CAAC,uDAAuD,CAAAC,QAAA,CAClE,UAED,CAAQ,CAAC,GAnBDH,IAAI,CAACF,EAoBV,CACN,CAAC,CACC,CAAC,EACH,CAAC,EACH,CAAC,CACH,CACN,CAGA,CAACnC,eAAe,eACfjB,KAAA,QAAKwD,SAAS,CAAC,2DAA2D,CAAAC,QAAA,eACxE3D,IAAA,OAAI0D,SAAS,CAAC,4CAA4C,CAAAC,QAAA,CAAC,iDAAqC,CAAI,CAAC,cACrG3D,IAAA,MAAG0D,SAAS,CAAC,sBAAsB,CAAAC,QAAA,CAAC,oGAEpC,CAAG,CAAC,cACJzD,KAAA,QAAKwD,SAAS,CAAC,yBAAyB,CAAAC,QAAA,eACtC3D,IAAA,QAAA2D,QAAA,CAAK,0CAAmC,CAAK,CAAC,cAC9C3D,IAAA,QAAA2D,QAAA,CAAK,+CAAwC,CAAK,CAAC,cACnD3D,IAAA,QAAA2D,QAAA,CAAK,gCAAyB,CAAK,CAAC,cACpC3D,IAAA,QAAA2D,QAAA,CAAK,uCAAgC,CAAK,CAAC,EACxC,CAAC,EACH,CACN,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAxD,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}