{"ast":null,"code":"import _objectSpread from\"/Users/ss/Downloads/Code/Vibe_coding/SQL_practice_website/sql-practice-platform/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useCallback}from'react';import{useParams,useNavigate,Navigate,useLocation}from'react-router-dom';import{useAuth}from'../contexts/AuthContext';import ProgressService from'../services/progressService';import SmartHintsPanel from'../components/SmartHintsPanel';import BookmarkButton from'../components/BookmarkButton';import EnhancedErrorDisplay from'../components/EnhancedErrorDisplay';import SQLHighlightEditor from'../components/SQLHighlightEditor';import SQLHighlightDisplay from'../components/SQLHighlightDisplay';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function PracticePage(){var _problem$numeric_id,_problem$difficulty,_problem$difficulty2,_results$rows,_results$rows2,_results$rows3;const{problemId}=useParams();const navigate=useNavigate();const location=useLocation();const{token}=useAuth();const[sqlQuery,setSqlQuery]=useState('-- Write your SQL query here\\n');const[selectedDialect,setSelectedDialect]=useState('postgresql');const[isExecuting,setIsExecuting]=useState(false);const[results,setResults]=useState(null);const[error,setError]=useState(null);const[problem,setProblem]=useState(null);const[schema,setSchema]=useState(null);const[showSolution,setShowSolution]=useState(false);const[allProblems,setAllProblems]=useState([]);const[showProblemsList,setShowProblemsList]=useState(false);const[currentProblemIndex,setCurrentProblemIndex]=useState(0);const[attemptCount,setAttemptCount]=useState(0);const[showHints,setShowHints]=useState(false);const[learningPathContext,setLearningPathContext]=useState(null);const[pathPosition,setPathPosition]=useState(null);const[errorAnalysis,setErrorAnalysis]=useState(null);const[expandedSection,setExpandedSection]=useState(null);// 'schema' or 'expected' or null\n// Load cached query from localStorage when problem changes\nuseEffect(()=>{if(problemId){const cachedQuery=localStorage.getItem(\"sql_query_\".concat(problemId));console.log('DEBUG: Loading cached query for problem',problemId,':',cachedQuery?cachedQuery.substring(0,50)+'...':'not found');// Clean up problematic cached queries\nif(cachedQuery&&cachedQuery.includes('SELECT * FROM customers;')){console.log('DEBUG: Removing problematic cached query');localStorage.removeItem(\"sql_query_\".concat(problemId));setSqlQuery('-- Write your SQL query here\\n');}else if(cachedQuery&&cachedQuery!=='-- Write your SQL query here\\n'&&cachedQuery.trim()!==''){setSqlQuery(cachedQuery);}else{setSqlQuery('-- Write your SQL query here\\n');}}},[problemId]);// Save query to localStorage whenever it changes\nuseEffect(()=>{if(problemId&&sqlQuery&&sqlQuery!=='-- Write your SQL query here\\n'&&sqlQuery.trim()!==''){const timeoutId=setTimeout(()=>{console.log('DEBUG: Saving query to localStorage for problem',problemId,sqlQuery.substring(0,50)+'...');localStorage.setItem(\"sql_query_\".concat(problemId),sqlQuery);},500);// Debounce saving for 500ms\nreturn()=>clearTimeout(timeoutId);}},[sqlQuery,problemId]);// Define callback functions first (before useEffect that uses them)\nconst setupProblemEnvironment=async id=>{try{await fetch(\"http://localhost:5001/api/sql/problems/\".concat(id,\"/setup\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({dialect:selectedDialect})});}catch(error){console.error('Failed to setup problem environment:',error);}};const loadProblem=useCallback(async id=>{try{const response=await fetch(\"http://localhost:5001/api/sql/problems/\".concat(id));const data=await response.json();if(response.ok){setProblem(data.problem);setSchema(data.schema);// Don't reset sqlQuery here - let the caching useEffect handle it\nsetShowSolution(false);// Reset solution visibility\n// Clear results and errors when loading a new problem\nsetResults(null);setError(null);// Reset attempt count for new problem\nsetAttemptCount(0);setShowHints(false);// Setup problem environment\nawait setupProblemEnvironment(id);}}catch(error){console.error('Failed to load problem:',error);}},[selectedDialect]);const checkLearningPathContext=useCallback(async problemId=>{try{// Check if learning path is specified in URL parameters\nconst searchParams=new URLSearchParams(location.search);const learningPathId=searchParams.get('learningPath');if(learningPathId){// User came from a specific learning path, use that context\nconst positionResponse=await fetch(\"http://localhost:5001/api/learning-paths/\".concat(learningPathId,\"/position/\").concat(problemId));const positionData=await positionResponse.json();if(positionResponse.ok){setLearningPathContext({learning_path_id:learningPathId,learning_path_name:'Learning Path'});setPathPosition(positionData.position);return;}}// Fallback: check if problem belongs to any learning paths\nconst response=await fetch(\"http://localhost:5001/api/problems/\".concat(problemId,\"/learning-paths\"));const data=await response.json();if(response.ok&&data.learningPaths&&data.learningPaths.length>0){// Set the first learning path as context\nconst primaryPath=data.learningPaths[0];setLearningPathContext(primaryPath);// Get position information for this problem in the learning path\nconst positionResponse=await fetch(\"http://localhost:5001/api/learning-paths/\".concat(primaryPath.learning_path_id,\"/position/\").concat(problemId));const positionData=await positionResponse.json();if(positionResponse.ok){setPathPosition(positionData.position);}}else{setLearningPathContext(null);setPathPosition(null);}}catch(error){console.error('Failed to check learning path context:',error);setLearningPathContext(null);setPathPosition(null);}},[location.search]);// Load all problems and current problem\nuseEffect(()=>{const initialize=async()=>{// Initialize session first\ntry{console.log('DEBUG PracticePage: Initializing session');await ProgressService.initializeSession();console.log('DEBUG PracticePage: Session initialized with ID:',ProgressService.sessionId);}catch(error){console.error('Failed to initialize session in PracticePage:',error);}// Then load problems and current problem\nloadAllProblems();if(problemId){loadProblem(problemId);checkLearningPathContext(problemId);}else{// Set up default environment\nsetupDefaultEnvironment();}};initialize();},[problemId,location.search,loadProblem,checkLearningPathContext]);// Update current problem index when problem changes\nuseEffect(()=>{if(problemId&&allProblems&&allProblems.length>0){const index=allProblems.findIndex(p=>p.id===problemId||p.slug===problemId||p.numeric_id===parseInt(problemId));if(index!==-1){setCurrentProblemIndex(index);}}},[problemId,allProblems]);const loadAllProblems=async()=>{try{// Check if we're in a learning path context\nconst searchParams=new URLSearchParams(location.search);const learningPathId=searchParams.get('learningPath');if(learningPathId){// Load problems specific to this learning path\nconst response=await fetch(\"http://localhost:5001/api/learning-paths/\".concat(learningPathId));const data=await response.json();if(response.ok&&data.problems){// Sort by step order for learning paths\nconst sortedProblems=data.problems.sort((a,b)=>(a.stepOrder||0)-(b.stepOrder||0)).map(problem=>_objectSpread(_objectSpread({},problem),{},{// Ensure compatibility with existing problem structure\nid:problem.id,numeric_id:problem.numeric_id,title:problem.title,difficulty:problem.difficulty,slug:problem.slug}));setAllProblems(sortedProblems);console.log(\"Loaded \".concat(sortedProblems.length,\" problems for learning path\"));}else{console.error('Learning path problems not found:',data);setAllProblems([]);}}else{// Load all problems (default behavior)\nconst response=await fetch('http://localhost:5001/api/sql/problems');const data=await response.json();if(response.ok&&data.problems){// Sort problems by numeric_id for sequential ordering\nconst sortedProblems=data.problems.sort((a,b)=>(a.numeric_id||0)-(b.numeric_id||0));setAllProblems(sortedProblems);}else{console.error('Problems data not found in response:',data);setAllProblems([]);}}}catch(error){console.error('Failed to load problems list:',error);setAllProblems([]);}};const navigateToProblem=problemId=>{// Preserve learning path context in URL if it exists\nconst searchParams=new URLSearchParams(location.search);const learningPathId=searchParams.get('learningPath');const url=learningPathId?\"/practice/\".concat(problemId,\"?learningPath=\").concat(learningPathId):\"/practice/\".concat(problemId);navigate(url);setShowProblemsList(false);// Clear results and errors when navigating to a new problem\nsetResults(null);setError(null);// Scroll to top when navigating to new problem\nwindow.scrollTo({top:0,behavior:'smooth'});};const navigateToNextProblem=useCallback(async()=>{// If in learning path context, use learning path navigation\nif(learningPathContext&&pathPosition){try{const response=await fetch(\"http://localhost:5001/api/learning-paths/\".concat(learningPathContext.learning_path_id,\"/next/\").concat(problemId));const data=await response.json();if(response.ok&&data.nextProblem){navigateToProblem(data.nextProblem.problem_numeric_id);}else if(data.message){// Show completion message for learning path\nalert(data.message);}return;}catch(error){console.error('Failed to get next problem in path:',error);// Fall through to regular navigation\n}}// Regular navigation (not in learning path or API failed)\nif(allProblems&&allProblems.length>0&&currentProblemIndex<allProblems.length-1){const nextProblem=allProblems[currentProblemIndex+1];if(nextProblem){navigateToProblem(nextProblem.numeric_id);}}},[learningPathContext,pathPosition,problemId,allProblems,currentProblemIndex]);const navigateToPreviousProblem=useCallback(async()=>{// If in learning path context, use learning path navigation\nif(learningPathContext&&pathPosition&&pathPosition.has_previous){const prevProblem=pathPosition.previous_problem;if(prevProblem){navigateToProblem(prevProblem.problem_numeric_id);return;}}// Regular navigation (not in learning path or no previous in path)\nif(currentProblemIndex>0){const prevProblem=allProblems[currentProblemIndex-1];navigateToProblem(prevProblem.numeric_id);}},[learningPathContext,pathPosition,currentProblemIndex,allProblems]);const getDifficultyColor=difficulty=>{switch(difficulty===null||difficulty===void 0?void 0:difficulty.toLowerCase()){case'easy':return'text-green-600 bg-green-100';case'medium':return'text-yellow-600 bg-yellow-100';case'hard':return'text-red-600 bg-red-100';default:return'text-gray-600 bg-gray-100';}};const setupDefaultEnvironment=async()=>{// Default environment is set up automatically by the backend\nconsole.log('Using default practice environment');};const executeQuery=async()=>{if(!sqlQuery.trim()){setError('Please enter a SQL query');return;}setIsExecuting(true);setError(null);setResults(null);// Clear previous results\n// Increment attempt count\nconst newAttemptCount=attemptCount+1;setAttemptCount(newAttemptCount);try{console.log('DEBUG: Executing query with session ID:',ProgressService.sessionId,'for problem:',problemId);// Create AbortController for timeout\nconst controller=new AbortController();const timeoutId=setTimeout(()=>controller.abort(),30000);// 30 second timeout\nconst response=await fetch('http://localhost:5001/api/execute/sql',{method:'POST',signal:controller.signal,headers:_objectSpread({'Content-Type':'application/json','X-Session-ID':ProgressService.sessionId},token&&{'Authorization':\"Bearer \".concat(token)}),body:JSON.stringify({sql:sqlQuery,dialect:selectedDialect,problemId:problem===null||problem===void 0?void 0:problem.id,// UUID from problem object\nproblemNumericId:(problem===null||problem===void 0?void 0:problem.numeric_id)||parseInt(problemId)// Numeric ID\n})});clearTimeout(timeoutId);console.log('DEBUG: Response status:',response.status);if(!response.ok){throw new Error(\"HTTP error! status: \".concat(response.status));}const data=await response.json();console.log('DEBUG: Response data:',data);if(data.success){setResults(data.data);setError(null);setErrorAnalysis(null);// Clear progress cache to ensure fresh data\nProgressService.clearCache();// Progress is automatically tracked by the backend in execute.js\nconsole.log('DEBUG: Query completed. Progress should be automatically tracked by backend.',{sessionId:ProgressService.sessionId,problemId:(problem===null||problem===void 0?void 0:problem.id)||problemId,problemNumericId:problemId,isCorrect:data.data.isCorrect});// Emit progress update event if problem was solved correctly\nif(data.data.isCorrect){console.log('🎉 Problem solved correctly! Emitting progressUpdated event...');window.dispatchEvent(new CustomEvent('progressUpdated',{detail:{problemId,solved:true}}));console.log('✅ progressUpdated event emitted');}}else{console.log('DEBUG: Setting error:',data.error);setError(data.error);setErrorAnalysis(data.errorAnalysis||null);setResults(null);// Clear results on error\nconsole.log('DEBUG: Error state should now be set');// Note: Progress tracking for failed attempts is handled by the backend in execute.js\n}}catch(err){console.error('DEBUG: Query execution error:',err);if(err.name==='AbortError'){setError('Query timed out after 30 seconds. Please try a simpler query.');}else{setError(\"Failed to execute query: \".concat(err.message));}setErrorAnalysis(null);setResults(null);// Clear results on network error\n}finally{setIsExecuting(false);}};// Close problems list when clicking outside\nuseEffect(()=>{const handleClickOutside=event=>{if(!event.target.closest('.relative')){setShowProblemsList(false);}};if(showProblemsList){document.addEventListener('mousedown',handleClickOutside);}return()=>{document.removeEventListener('mousedown',handleClickOutside);};},[showProblemsList]);// Debug: Track error state changes\nuseEffect(()=>{console.log('DEBUG: Error state changed to:',error);},[error]);// Add keyboard shortcuts\nuseEffect(()=>{const handleKeyPress=event=>{// Only trigger shortcuts when not typing in textarea or input\nif(event.target.tagName==='TEXTAREA'||event.target.tagName==='INPUT'){return;}if(event.key==='ArrowLeft'&&event.ctrlKey){event.preventDefault();navigateToPreviousProblem();}else if(event.key==='ArrowRight'&&event.ctrlKey){event.preventDefault();navigateToNextProblem();}else if(event.key==='p'&&event.ctrlKey){event.preventDefault();setShowProblemsList(!showProblemsList);}};document.addEventListener('keydown',handleKeyPress);return()=>{document.removeEventListener('keydown',handleKeyPress);};},[currentProblemIndex,allProblems===null||allProblems===void 0?void 0:allProblems.length,showProblemsList,navigateToNextProblem,navigateToPreviousProblem]);// If no problem is selected, redirect to problems page\nif(!problemId){return/*#__PURE__*/_jsx(Navigate,{to:\"/problems\",replace:true});}// Problem mode - show the full problem-solving interface\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-7xl mx-auto px-4 py-8 animate-fade-in bg-gray-50 dark:bg-gray-900 min-h-screen transition-colors\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"mb-6\",children:problem&&/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start justify-between mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start space-x-3\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"text-2xl font-bold text-blue-600 dark:text-blue-400 bg-blue-100 dark:bg-blue-900 px-3 py-1 rounded-lg\",children:[\"#\",((_problem$numeric_id=problem.numeric_id)===null||_problem$numeric_id===void 0?void 0:_problem$numeric_id.toString().padStart(3,'0'))||'000']}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold text-gray-900 dark:text-white\",children:problem.title}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-4 mt-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"px-2 py-1 rounded text-xs font-medium \".concat(getDifficultyColor(problem.difficulty)),children:((_problem$difficulty=problem.difficulty)===null||_problem$difficulty===void 0?void 0:_problem$difficulty.charAt(0).toUpperCase())+((_problem$difficulty2=problem.difficulty)===null||_problem$difficulty2===void 0?void 0:_problem$difficulty2.slice(1))}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-gray-500 dark:text-gray-400\",children:problem.category_name}),learningPathContext&&pathPosition&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2 px-3 py-1 bg-blue-100 dark:bg-blue-900/50 rounded-full border border-blue-200 dark:border-blue-800\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs text-blue-700 dark:text-blue-300 font-medium\",children:[\"\\uD83D\\uDCDA \",learningPathContext.learning_path_name]}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs text-blue-600 dark:text-blue-400\",children:[\"(\",pathPosition.current_step,\"/\",pathPosition.total_steps,\")\"]})]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(BookmarkButton,{problemId:problem===null||problem===void 0?void 0:problem.id,size:\"md\"}),/*#__PURE__*/_jsx(\"div\",{className:\"w-px h-8 bg-gray-300 dark:bg-gray-600 mx-2\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-500 mr-2\",children:[/*#__PURE__*/_jsx(\"div\",{children:\"Ctrl + \\u2190 / \\u2192\"}),/*#__PURE__*/_jsx(\"div\",{children:\"Ctrl + P\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:navigateToPreviousProblem,disabled:currentProblemIndex===0,className:\"px-3 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-md hover:bg-gray-50 dark:hover:bg-gray-700 hover:shadow-md disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 hover-lift btn-press\",title:\"Previous Problem (Ctrl + Left Arrow)\",children:\"\\u2190 Previous\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setShowProblemsList(!showProblemsList),className:\"px-4 py-2 text-sm font-medium text-white bg-blue-600 dark:bg-blue-700 border border-blue-600 dark:border-blue-700 rounded-md hover:bg-blue-700 dark:hover:bg-blue-600 hover:shadow-lg transition-all duration-200 hover-lift btn-press animate-pulse-gentle\",children:[\"All Problems (\",(allProblems===null||allProblems===void 0?void 0:allProblems.length)||0,\")\"]}),showProblemsList&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute right-0 mt-2 w-80 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg z-50 max-h-96 overflow-y-auto\",children:/*#__PURE__*/_jsx(\"div\",{className:\"p-2\",children:allProblems===null||allProblems===void 0?void 0:allProblems.map((prob,index)=>{var _prob$numeric_id,_prob$difficulty;return/*#__PURE__*/_jsx(\"button\",{onClick:()=>{navigateToProblem(prob.numeric_id);setShowProblemsList(false);},className:\"w-full text-left px-3 py-2 rounded text-sm transition-colors \".concat(prob.numeric_id===(problem===null||problem===void 0?void 0:problem.numeric_id)?'bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300':'hover:bg-gray-100 dark:hover:bg-gray-700 text-gray-700 dark:text-gray-300'),children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"font-medium\",children:[\"#\",((_prob$numeric_id=prob.numeric_id)===null||_prob$numeric_id===void 0?void 0:_prob$numeric_id.toString().padStart(3,'0'))||'000']}),/*#__PURE__*/_jsx(\"span\",{className:\"truncate flex-1\",children:prob.title}),/*#__PURE__*/_jsx(\"span\",{className:\"px-1 py-0.5 rounded text-xs \".concat(getDifficultyColor(prob.difficulty)),children:(_prob$difficulty=prob.difficulty)===null||_prob$difficulty===void 0?void 0:_prob$difficulty.charAt(0).toUpperCase()})]})},prob.id);})})})]}),/*#__PURE__*/_jsx(\"button\",{onClick:navigateToNextProblem,disabled:currentProblemIndex===((allProblems===null||allProblems===void 0?void 0:allProblems.length)||0)-1,className:\"px-3 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-md hover:bg-gray-50 dark:hover:bg-gray-700 hover:shadow-md disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 hover-lift btn-press\",title:\"Next Problem (Ctrl + Right Arrow)\",children:\"Next \\u2192\"})]})]})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-2 gap-6 min-h-[600px]\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col space-y-4 h-full max-h-[80vh] overflow-y-auto pr-2\",children:[problem&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"border-b border-gray-200 dark:border-gray-700 px-4 py-3 flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-medium text-gray-900 dark:text-white\",children:\"Problem Description\"}),schema&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowSolution(!showSolution),className:\"text-sm px-3 py-1 rounded border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors\",children:showSolution?'Hide Solution':'Show Solution'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"prose max-w-none text-gray-900 dark:text-white\",children:/*#__PURE__*/_jsx(\"div\",{dangerouslySetInnerHTML:{__html:problem.description.replace(/\\*\\*Expected Output:\\*\\*.*?(?=\\*\\*|$)/g,'')// Remove Expected Output section\n.replace(/Expected Output:.*?(?=\\n\\n|\\n\\*\\*|$)/g,'')// Remove Expected Output without bold\n// Make section headers bold (whether they already are or not)\n.replace(/\\*\\*Business Context:\\*\\*/g,'<strong class=\"text-gray-900 dark:text-white\">Business Context:</strong>').replace(/\\*\\*Scenario:\\*\\*/g,'<strong class=\"text-gray-900 dark:text-white\">Scenario:</strong>').replace(/\\*\\*Problem:\\*\\*/g,'<strong class=\"text-gray-900 dark:text-white\">Problem:</strong>').replace(/Business Context:/g,'<strong class=\"text-gray-900 dark:text-white\">Business Context:</strong>').replace(/Scenario:/g,'<strong class=\"text-gray-900 dark:text-white\">Scenario:</strong>').replace(/Problem:/g,'<strong class=\"text-gray-900 dark:text-white\">Problem:</strong>')// Handle other bold text\n.replace(/\\*\\*(.*?)\\*\\*/g,'<strong class=\"text-gray-900 dark:text-white\">$1</strong>').replace(/`(.*?)`/g,'<code class=\"bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-white px-1 rounded\">$1</code>').replace(/```sql\\n([\\s\\S]*?)\\n```/g,'<pre class=\"bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-white p-3 rounded overflow-x-auto\"><code>$1</code></pre>').replace(/\\n/g,'<br>').replace(/<br><br>/g,'<br>')// Clean up double line breaks\n}})}),showSolution&&schema&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 p-4 bg-blue-50 dark:bg-blue-900/50 border border-blue-200 dark:border-blue-800 rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-lg\",children:\"\\uD83D\\uDCA1\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"font-semibold text-blue-800 dark:text-blue-300\",children:\"Solution\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:e=>{navigator.clipboard.writeText(schema.solution_sql);const btn=e.target;const originalText=btn.textContent;btn.textContent='Copied!';setTimeout(()=>{btn.textContent=originalText;},2000);},className:\"text-xs px-2 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors\",title:\"Copy SQL to clipboard\",children:\"\\uD83D\\uDCCB Copy\"})]}),/*#__PURE__*/_jsx(SQLHighlightDisplay,{value:schema.solution_sql,height:\"400px\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setExpandedSection(expandedSection==='schema'?null:'schema'),className:\"w-full px-4 py-3 text-left flex items-center justify-between hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors rounded-lg\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-medium text-gray-900 dark:text-white\",children:\"Database Schema\"}),/*#__PURE__*/_jsx(\"svg\",{className:\"w-5 h-5 text-gray-500 dark:text-gray-400 transform transition-transform \".concat(expandedSection==='schema'?'rotate-180':''),fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:2,d:\"M19 9l-7 7-7-7\"})})]}),expandedSection==='schema'&&/*#__PURE__*/_jsx(\"div\",{className:\"border-t border-gray-200 dark:border-gray-700 p-4\",children:schema?/*#__PURE__*/_jsx(\"div\",{children:(()=>{const createTableRegex=/CREATE TABLE (\\w+) \\(([\\s\\S]*?)\\);/g;const tables=[];const sampleData={};let match;// Parse table structures\nwhile((match=createTableRegex.exec(schema.setup_sql))!==null){const tableName=match[1];const columnsText=match[2];const parseColumns=columnsText=>{const columns=[];let current='';let parenDepth=0;for(let i=0;i<columnsText.length;i++){const char=columnsText[i];if(char==='(')parenDepth++;if(char===')')parenDepth--;if(char===','&&parenDepth===0){if(current.trim())columns.push(current.trim());current='';}else{current+=char;}}if(current.trim())columns.push(current.trim());return columns;};const columns=parseColumns(columnsText).filter(col=>col.length>0).map(col=>{const parts=col.split(' ');const name=parts[0];const type=parts.slice(1).join(' ').toUpperCase();return{name,type};});tables.push({name:tableName,columns});}// Parse sample data\nconst insertMatches=[...schema.setup_sql.matchAll(/INSERT INTO\\s+(\\w+)\\s+VALUES\\s+([\\s\\S]*?);/g)];insertMatches.forEach(match=>{const tableName=match[1];const valuesText=match[2];const rowMatches=[...valuesText.matchAll(/\\(([\\s\\S]*?)\\)/g)];sampleData[tableName]=rowMatches.slice(0,5).map(rowMatch=>{return rowMatch[1].split(',').map(val=>{const trimmed=val.trim();// Remove quotes and handle nulls\nif(trimmed==='NULL')return'NULL';return trimmed.replace(/^'|'$/g,'').replace(/''/g,\"'\");});});});return/*#__PURE__*/_jsx(\"div\",{className:\"space-y-6\",children:tables.map(table=>/*#__PURE__*/_jsxs(\"div\",{className:\"border border-gray-200 dark:border-gray-600 rounded-lg\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-50 dark:bg-gray-700 px-4 py-2 border-b border-gray-200 dark:border-gray-600 rounded-t-lg\",children:/*#__PURE__*/_jsx(\"h3\",{className:\"font-semibold text-gray-900 dark:text-white\",children:table.name})}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2 mb-4\",children:table.columns.map(col=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center py-2 border-b border-gray-100 dark:border-gray-700 last:border-0\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium text-gray-700 dark:text-gray-300\",children:col.name}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-blue-600 dark:text-blue-400 bg-blue-50 dark:bg-blue-900/50 px-2 py-0.5 rounded\",children:col.type})]},col.name))}),sampleData[table.name]&&sampleData[table.name].length>0&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\",children:\"Sample Data:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"min-w-full text-xs border border-gray-200 dark:border-gray-600\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"bg-gray-50 dark:bg-gray-700\",children:/*#__PURE__*/_jsx(\"tr\",{children:table.columns.map(col=>/*#__PURE__*/_jsx(\"th\",{className:\"px-2 py-1 text-left font-medium text-gray-700 dark:text-gray-300 border-r border-gray-200 dark:border-gray-600 last:border-0\",children:col.name},col.name))})}),/*#__PURE__*/_jsx(\"tbody\",{children:sampleData[table.name].map((row,idx)=>/*#__PURE__*/_jsx(\"tr\",{className:\"border-t border-gray-200 dark:border-gray-600\",children:row.map((cell,cellIdx)=>/*#__PURE__*/_jsx(\"td\",{className:\"px-2 py-1 text-gray-700 dark:text-gray-300 border-r border-gray-200 dark:border-gray-600 last:border-0\",children:cell},cellIdx))},idx))})]})})]})]})]},table.name))});})()}):/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-500 dark:text-gray-400\",children:\"No database schema available\"})})]}),problem&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setExpandedSection(expandedSection==='expected'?null:'expected'),className:\"w-full px-4 py-3 text-left flex items-center justify-between hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors rounded-lg\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-medium text-gray-900 dark:text-white\",children:\"Expected Output\"}),/*#__PURE__*/_jsx(\"svg\",{className:\"w-5 h-5 text-gray-500 dark:text-gray-400 transform transition-transform \".concat(expandedSection==='expected'?'rotate-180':''),fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:2,d:\"M19 9l-7 7-7-7\"})})]}),expandedSection==='expected'&&/*#__PURE__*/_jsx(\"div\",{className:\"border-t border-gray-200 dark:border-gray-700 p-4\",children:schema&&schema.expected_output&&schema.expected_output.length>0?/*#__PURE__*/_jsxs(\"div\",{className:\"overflow-x-auto\",children:[/*#__PURE__*/_jsxs(\"table\",{className:\"min-w-full divide-y divide-gray-200 dark:divide-gray-600\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"bg-gray-50 dark:bg-gray-700\",children:/*#__PURE__*/_jsx(\"tr\",{children:Object.keys(schema.expected_output[0]).map((column,index)=>/*#__PURE__*/_jsx(\"th\",{className:\"px-4 py-2 text-left text-xs font-medium text-gray-700 dark:text-gray-300 uppercase tracking-wider border border-gray-300 dark:border-gray-500\",children:column},index))})}),/*#__PURE__*/_jsx(\"tbody\",{className:\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-600\",children:schema.expected_output.slice(0,10).map((row,rowIndex)=>/*#__PURE__*/_jsx(\"tr\",{className:\"hover:bg-gray-50 dark:hover:bg-gray-700\",children:Object.values(row).map((cell,cellIndex)=>/*#__PURE__*/_jsx(\"td\",{className:\"px-4 py-2 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100 border border-gray-300 dark:border-gray-500\",children:cell!==null?cell.toString():'NULL'},cellIndex))},rowIndex))})]}),schema.expected_output.length>10&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-500 dark:text-gray-400 mt-2 text-center\",children:[\"Showing first 10 rows of \",schema.expected_output.length,\" expected rows\"]})]}):/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-500 dark:text-gray-400\",children:\"Expected output will be shown when available.\"})})]})]}),problem&&showHints&&/*#__PURE__*/_jsx(SmartHintsPanel,{problemId:(problem===null||problem===void 0?void 0:problem.id)||problemId,attemptCount:attemptCount,userQuery:sqlQuery,onClose:()=>setShowHints(false)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col space-y-4 overflow-hidden\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"border-b border-gray-200 dark:border-gray-700 px-4 py-3 flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-medium text-gray-900 dark:text-white\",children:\"SQL Query\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[problem&&attemptCount>0&&/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setShowHints(true),className:\"text-xs px-2 py-1 bg-yellow-100 dark:bg-yellow-900/50 text-yellow-700 dark:text-yellow-300 rounded hover:bg-yellow-200 dark:hover:bg-yellow-900 transition-colors\",children:[\"\\uD83D\\uDCA1 Hints (\",Math.min(attemptCount,3),\")\"]}),/*#__PURE__*/_jsxs(\"select\",{value:selectedDialect,onChange:e=>setSelectedDialect(e.target.value),className:\"text-sm px-2 py-1 border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-700 text-gray-900 dark:text-white\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"postgresql\",children:\"PostgreSQL\"}),/*#__PURE__*/_jsx(\"option\",{value:\"mysql\",children:\"MySQL\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:executeQuery,disabled:isExecuting,className:\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50 transition-all duration-200 hover-lift btn-press\",title:\"Execute query (Ctrl+Enter)\",children:isExecuting?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{className:\"inline-block animate-spin w-4 h-4 border-2 border-white border-t-transparent rounded-full mr-2\"}),\"Running...\"]}):'Run Query'})]})]}),/*#__PURE__*/_jsx(\"div\",{style:{height:'400px'},children:/*#__PURE__*/_jsx(SQLHighlightEditor,{value:sqlQuery,onChange:setSqlQuery,onExecute:executeQuery,isExecuting:isExecuting,height:\"100%\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700\",style:{minHeight:'400px'},children:[/*#__PURE__*/_jsx(\"div\",{className:\"border-b border-gray-200 dark:border-gray-700 px-4 py-3\",children:/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-medium text-gray-900 dark:text-white\",children:\"Results\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 overflow-y-auto\",style:{maxHeight:'350px'},children:[error&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4 p-4 bg-red-50 dark:bg-red-900/50 border border-red-200 dark:border-red-800 rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2 text-red-800 dark:text-red-300 mb-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-lg\",children:\"\\u274C\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:\"SQL Error\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-red-700 dark:text-red-400\",children:error})]}),results&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-500\",children:[\"Execution time: \",results.executionTime,\" \\u2022 \",results.rowCount||((_results$rows=results.rows)===null||_results$rows===void 0?void 0:_results$rows.length)||0,\" rows returned\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-green-600 font-medium\",children:\"\\u2713 Query executed successfully\"})]}),(results.isCorrect!==null||results.feedback)&&/*#__PURE__*/_jsxs(\"div\",{className:\"p-3 rounded-md border \".concat(results.isCorrect===true?'bg-green-50 dark:bg-green-900/50 border-green-200 dark:border-green-800':'bg-red-50 dark:bg-red-900/50 border-red-200 dark:border-red-800'),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2 \".concat(results.isCorrect===true?'text-green-800 dark:text-green-300':'text-red-800 dark:text-red-300'),children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-lg\",children:results.isCorrect?'🎉':'❌'}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:results.isCorrect?'Correct Solution!':'Incorrect Solution'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm mt-1 \".concat(results.isCorrect?'text-green-700 dark:text-green-400':'text-red-700 dark:text-red-400'),children:results.feedback})]})]}),results.rows&&results.rows.length>0?/*#__PURE__*/_jsxs(\"div\",{className:\"overflow-x-auto\",children:[/*#__PURE__*/_jsxs(\"table\",{className:\"min-w-full border border-gray-200 dark:border-gray-600\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"bg-gray-50 dark:bg-gray-700\",children:/*#__PURE__*/_jsx(\"tr\",{children:Object.keys(results.rows[0]).map(column=>/*#__PURE__*/_jsx(\"th\",{className:\"px-3 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider border-b border-gray-200 dark:border-gray-600\",children:column},column))})}),/*#__PURE__*/_jsx(\"tbody\",{className:\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-600\",children:results.rows.slice(0,100).map((row,index)=>/*#__PURE__*/_jsx(\"tr\",{children:Object.values(row).map((value,i)=>/*#__PURE__*/_jsx(\"td\",{className:\"px-3 py-2 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100 border-b border-gray-200 dark:border-gray-600\",children:value!==null?value.toString():/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-400\",children:\"NULL\"})},i))},index))})]}),((_results$rows2=results.rows)===null||_results$rows2===void 0?void 0:_results$rows2.length)>100&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-500 dark:text-gray-400 mt-2 text-center\",children:[\"Showing first 100 rows of \",((_results$rows3=results.rows)===null||_results$rows3===void 0?void 0:_results$rows3.length)||0,\" total rows\"]})]}):/*#__PURE__*/_jsx(\"div\",{className:\"text-center py-8\",children:/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-500 dark:text-gray-400\",children:\"Query executed successfully but returned no rows\"})})]}),problem&&problem.expected_output&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 border-t border-gray-200 dark:border-gray-700 pt-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900 dark:text-white mb-3\",children:\"Expected Output\"}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-50 dark:bg-gray-700 rounded-lg p-4\",children:problem.expected_output.length>0?/*#__PURE__*/_jsxs(\"div\",{className:\"overflow-x-auto\",children:[/*#__PURE__*/_jsxs(\"table\",{className:\"min-w-full divide-y divide-gray-200 dark:divide-gray-600\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"bg-gray-100 dark:bg-gray-600\",children:/*#__PURE__*/_jsx(\"tr\",{children:Object.keys(problem.expected_output[0]).map((column,index)=>/*#__PURE__*/_jsx(\"th\",{className:\"px-4 py-2 text-left text-xs font-medium text-gray-700 dark:text-gray-300 uppercase tracking-wider border border-gray-300 dark:border-gray-500\",children:column},index))})}),/*#__PURE__*/_jsx(\"tbody\",{className:\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-600\",children:problem.expected_output.slice(0,20).map((row,rowIndex)=>/*#__PURE__*/_jsx(\"tr\",{className:\"hover:bg-gray-50 dark:hover:bg-gray-700\",children:Object.values(row).map((cell,cellIndex)=>/*#__PURE__*/_jsx(\"td\",{className:\"px-4 py-2 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100 border border-gray-300 dark:border-gray-500\",children:cell!==null?cell.toString():'NULL'},cellIndex))},rowIndex))})]}),problem.expected_output.length>20&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-500 dark:text-gray-400 mt-2 text-center\",children:[\"Showing first 20 rows of \",problem.expected_output.length,\" expected rows\"]})]}):/*#__PURE__*/_jsx(\"div\",{className:\"text-center py-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-500 dark:text-gray-400\",children:\"Expected output not available for this problem\"})})})]}),!results&&!error&&!isExecuting&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-500 dark:text-gray-400\",children:\"\\uD83D\\uDCBB\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-500 dark:text-gray-400 mt-2\",children:\"Run a query to see results\"})]}),isExecuting&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"inline-block animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600 dark:border-blue-400\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-500 dark:text-gray-400 mt-2\",children:\"Executing query...\"})]})]})]})]})]})]});}export default PracticePage;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useParams","useNavigate","Navigate","useLocation","useAuth","ProgressService","SmartHintsPanel","BookmarkButton","EnhancedErrorDisplay","SQLHighlightEditor","SQLHighlightDisplay","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PracticePage","_problem$numeric_id","_problem$difficulty","_problem$difficulty2","_results$rows","_results$rows2","_results$rows3","problemId","navigate","location","token","sqlQuery","setSqlQuery","selectedDialect","setSelectedDialect","isExecuting","setIsExecuting","results","setResults","error","setError","problem","setProblem","schema","setSchema","showSolution","setShowSolution","allProblems","setAllProblems","showProblemsList","setShowProblemsList","currentProblemIndex","setCurrentProblemIndex","attemptCount","setAttemptCount","showHints","setShowHints","learningPathContext","setLearningPathContext","pathPosition","setPathPosition","errorAnalysis","setErrorAnalysis","expandedSection","setExpandedSection","cachedQuery","localStorage","getItem","concat","console","log","substring","includes","removeItem","trim","timeoutId","setTimeout","setItem","clearTimeout","setupProblemEnvironment","id","fetch","method","headers","body","JSON","stringify","dialect","loadProblem","response","data","json","ok","checkLearningPathContext","searchParams","URLSearchParams","search","learningPathId","get","positionResponse","positionData","learning_path_id","learning_path_name","position","learningPaths","length","primaryPath","initialize","initializeSession","sessionId","loadAllProblems","setupDefaultEnvironment","index","findIndex","p","slug","numeric_id","parseInt","problems","sortedProblems","sort","a","b","stepOrder","map","_objectSpread","title","difficulty","navigateToProblem","url","window","scrollTo","top","behavior","navigateToNextProblem","nextProblem","problem_numeric_id","message","alert","navigateToPreviousProblem","has_previous","prevProblem","previous_problem","getDifficultyColor","toLowerCase","executeQuery","newAttemptCount","controller","AbortController","abort","signal","sql","problemNumericId","status","Error","success","clearCache","isCorrect","dispatchEvent","CustomEvent","detail","solved","err","name","handleClickOutside","event","target","closest","document","addEventListener","removeEventListener","handleKeyPress","tagName","key","ctrlKey","preventDefault","to","replace","className","children","toString","padStart","charAt","toUpperCase","slice","category_name","current_step","total_steps","size","onClick","disabled","prob","_prob$numeric_id","_prob$difficulty","dangerouslySetInnerHTML","__html","description","e","navigator","clipboard","writeText","solution_sql","btn","originalText","textContent","value","height","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","createTableRegex","tables","sampleData","match","exec","setup_sql","tableName","columnsText","parseColumns","columns","current","parenDepth","i","char","push","filter","col","parts","split","type","join","insertMatches","matchAll","forEach","valuesText","rowMatches","rowMatch","val","trimmed","table","row","idx","cell","cellIdx","expected_output","Object","keys","column","rowIndex","values","cellIndex","userQuery","onClose","Math","min","onChange","style","onExecute","minHeight","maxHeight","executionTime","rowCount","rows","feedback"],"sources":["/Users/ss/Downloads/Code/Vibe_coding/SQL_practice_website/sql-practice-platform/frontend/src/pages/PracticePage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useParams, useNavigate, Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport ProgressService from '../services/progressService';\nimport SmartHintsPanel from '../components/SmartHintsPanel';\nimport BookmarkButton from '../components/BookmarkButton';\nimport EnhancedErrorDisplay from '../components/EnhancedErrorDisplay';\nimport SQLHighlightEditor from '../components/SQLHighlightEditor';\nimport SQLHighlightDisplay from '../components/SQLHighlightDisplay';\n\n\nfunction PracticePage() {\n  const { problemId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { token } = useAuth();\n  const [sqlQuery, setSqlQuery] = useState('-- Write your SQL query here\\n');\n  const [selectedDialect, setSelectedDialect] = useState('postgresql');\n  const [isExecuting, setIsExecuting] = useState(false);\n  const [results, setResults] = useState(null);\n  const [error, setError] = useState(null);\n  const [problem, setProblem] = useState(null);\n  const [schema, setSchema] = useState(null);\n  const [showSolution, setShowSolution] = useState(false);\n  const [allProblems, setAllProblems] = useState([]);\n  const [showProblemsList, setShowProblemsList] = useState(false);\n  const [currentProblemIndex, setCurrentProblemIndex] = useState(0);\n  const [attemptCount, setAttemptCount] = useState(0);\n  const [showHints, setShowHints] = useState(false);\n  const [learningPathContext, setLearningPathContext] = useState(null);\n  const [pathPosition, setPathPosition] = useState(null);\n  const [errorAnalysis, setErrorAnalysis] = useState(null);\n  const [expandedSection, setExpandedSection] = useState(null); // 'schema' or 'expected' or null\n\n  // Load cached query from localStorage when problem changes\n  useEffect(() => {\n    if (problemId) {\n      const cachedQuery = localStorage.getItem(`sql_query_${problemId}`);\n      console.log('DEBUG: Loading cached query for problem', problemId, ':', cachedQuery ? cachedQuery.substring(0, 50) + '...' : 'not found');\n      \n      // Clean up problematic cached queries\n      if (cachedQuery && cachedQuery.includes('SELECT * FROM customers;')) {\n        console.log('DEBUG: Removing problematic cached query');\n        localStorage.removeItem(`sql_query_${problemId}`);\n        setSqlQuery('-- Write your SQL query here\\n');\n      } else if (cachedQuery && cachedQuery !== '-- Write your SQL query here\\n' && cachedQuery.trim() !== '') {\n        setSqlQuery(cachedQuery);\n      } else {\n        setSqlQuery('-- Write your SQL query here\\n');\n      }\n    }\n  }, [problemId]);\n\n  // Save query to localStorage whenever it changes\n  useEffect(() => {\n    if (problemId && sqlQuery && sqlQuery !== '-- Write your SQL query here\\n' && sqlQuery.trim() !== '') {\n      const timeoutId = setTimeout(() => {\n        console.log('DEBUG: Saving query to localStorage for problem', problemId, sqlQuery.substring(0, 50) + '...');\n        localStorage.setItem(`sql_query_${problemId}`, sqlQuery);\n      }, 500); // Debounce saving for 500ms\n      \n      return () => clearTimeout(timeoutId);\n    }\n  }, [sqlQuery, problemId]);\n\n  // Define callback functions first (before useEffect that uses them)\n  const setupProblemEnvironment = async (id) => {\n    try {\n      await fetch(`http://localhost:5001/api/sql/problems/${id}/setup`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ dialect: selectedDialect })\n      });\n    } catch (error) {\n      console.error('Failed to setup problem environment:', error);\n    }\n  };\n\n  const loadProblem = useCallback(async (id) => {\n    try {\n      const response = await fetch(`http://localhost:5001/api/sql/problems/${id}`);\n      const data = await response.json();\n      \n      if (response.ok) {\n        setProblem(data.problem);\n        setSchema(data.schema);\n        // Don't reset sqlQuery here - let the caching useEffect handle it\n        setShowSolution(false); // Reset solution visibility\n        // Clear results and errors when loading a new problem\n        setResults(null);\n        setError(null);\n        // Reset attempt count for new problem\n        setAttemptCount(0);\n        setShowHints(false);\n        \n        // Setup problem environment\n        await setupProblemEnvironment(id);\n      }\n    } catch (error) {\n      console.error('Failed to load problem:', error);\n    }\n  }, [selectedDialect]);\n\n  const checkLearningPathContext = useCallback(async (problemId) => {\n    try {\n      // Check if learning path is specified in URL parameters\n      const searchParams = new URLSearchParams(location.search);\n      const learningPathId = searchParams.get('learningPath');\n      \n      if (learningPathId) {\n        // User came from a specific learning path, use that context\n        const positionResponse = await fetch(`http://localhost:5001/api/learning-paths/${learningPathId}/position/${problemId}`);\n        const positionData = await positionResponse.json();\n        \n        if (positionResponse.ok) {\n          setLearningPathContext({ learning_path_id: learningPathId, learning_path_name: 'Learning Path' });\n          setPathPosition(positionData.position);\n          return;\n        }\n      }\n      \n      // Fallback: check if problem belongs to any learning paths\n      const response = await fetch(`http://localhost:5001/api/problems/${problemId}/learning-paths`);\n      const data = await response.json();\n      \n      if (response.ok && data.learningPaths && data.learningPaths.length > 0) {\n        // Set the first learning path as context\n        const primaryPath = data.learningPaths[0];\n        setLearningPathContext(primaryPath);\n        \n        // Get position information for this problem in the learning path\n        const positionResponse = await fetch(`http://localhost:5001/api/learning-paths/${primaryPath.learning_path_id}/position/${problemId}`);\n        const positionData = await positionResponse.json();\n        \n        if (positionResponse.ok) {\n          setPathPosition(positionData.position);\n        }\n      } else {\n        setLearningPathContext(null);\n        setPathPosition(null);\n      }\n    } catch (error) {\n      console.error('Failed to check learning path context:', error);\n      setLearningPathContext(null);\n      setPathPosition(null);\n    }\n  }, [location.search]);\n\n  // Load all problems and current problem\n  useEffect(() => {\n    const initialize = async () => {\n      // Initialize session first\n      try {\n        console.log('DEBUG PracticePage: Initializing session');\n        await ProgressService.initializeSession();\n        console.log('DEBUG PracticePage: Session initialized with ID:', ProgressService.sessionId);\n      } catch (error) {\n        console.error('Failed to initialize session in PracticePage:', error);\n      }\n      \n      // Then load problems and current problem\n      loadAllProblems();\n      if (problemId) {\n        loadProblem(problemId);\n        checkLearningPathContext(problemId);\n      } else {\n        // Set up default environment\n        setupDefaultEnvironment();\n      }\n    };\n    \n    initialize();\n  }, [problemId, location.search, loadProblem, checkLearningPathContext]);\n\n  // Update current problem index when problem changes\n  useEffect(() => {\n    if (problemId && allProblems && allProblems.length > 0) {\n      const index = allProblems.findIndex(p => \n        p.id === problemId || \n        p.slug === problemId || \n        p.numeric_id === parseInt(problemId)\n      );\n      if (index !== -1) {\n        setCurrentProblemIndex(index);\n      }\n    }\n  }, [problemId, allProblems]);\n\n  const loadAllProblems = async () => {\n    try {\n      // Check if we're in a learning path context\n      const searchParams = new URLSearchParams(location.search);\n      const learningPathId = searchParams.get('learningPath');\n      \n      if (learningPathId) {\n        // Load problems specific to this learning path\n        const response = await fetch(`http://localhost:5001/api/learning-paths/${learningPathId}`);\n        const data = await response.json();\n        if (response.ok && data.problems) {\n          // Sort by step order for learning paths\n          const sortedProblems = data.problems\n            .sort((a, b) => (a.stepOrder || 0) - (b.stepOrder || 0))\n            .map(problem => ({\n              ...problem,\n              // Ensure compatibility with existing problem structure\n              id: problem.id,\n              numeric_id: problem.numeric_id,\n              title: problem.title,\n              difficulty: problem.difficulty,\n              slug: problem.slug\n            }));\n          setAllProblems(sortedProblems);\n          console.log(`Loaded ${sortedProblems.length} problems for learning path`);\n        } else {\n          console.error('Learning path problems not found:', data);\n          setAllProblems([]);\n        }\n      } else {\n        // Load all problems (default behavior)\n        const response = await fetch('http://localhost:5001/api/sql/problems');\n        const data = await response.json();\n        if (response.ok && data.problems) {\n          // Sort problems by numeric_id for sequential ordering\n          const sortedProblems = data.problems.sort((a, b) => (a.numeric_id || 0) - (b.numeric_id || 0));\n          setAllProblems(sortedProblems);\n        } else {\n          console.error('Problems data not found in response:', data);\n          setAllProblems([]);\n        }\n      }\n    } catch (error) {\n      console.error('Failed to load problems list:', error);\n      setAllProblems([]);\n    }\n  };\n\n  const navigateToProblem = (problemId) => {\n    // Preserve learning path context in URL if it exists\n    const searchParams = new URLSearchParams(location.search);\n    const learningPathId = searchParams.get('learningPath');\n    const url = learningPathId ? `/practice/${problemId}?learningPath=${learningPathId}` : `/practice/${problemId}`;\n    \n    navigate(url);\n    setShowProblemsList(false);\n    // Clear results and errors when navigating to a new problem\n    setResults(null);\n    setError(null);\n    // Scroll to top when navigating to new problem\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  const navigateToNextProblem = useCallback(async () => {\n    // If in learning path context, use learning path navigation\n    if (learningPathContext && pathPosition) {\n      try {\n        const response = await fetch(`http://localhost:5001/api/learning-paths/${learningPathContext.learning_path_id}/next/${problemId}`);\n        const data = await response.json();\n        \n        if (response.ok && data.nextProblem) {\n          navigateToProblem(data.nextProblem.problem_numeric_id);\n        } else if (data.message) {\n          // Show completion message for learning path\n          alert(data.message);\n        }\n        return;\n      } catch (error) {\n        console.error('Failed to get next problem in path:', error);\n        // Fall through to regular navigation\n      }\n    }\n    \n    // Regular navigation (not in learning path or API failed)\n    if (allProblems && allProblems.length > 0 && currentProblemIndex < allProblems.length - 1) {\n      const nextProblem = allProblems[currentProblemIndex + 1];\n      if (nextProblem) {\n        navigateToProblem(nextProblem.numeric_id);\n      }\n    }\n  }, [learningPathContext, pathPosition, problemId, allProblems, currentProblemIndex]);\n\n  const navigateToPreviousProblem = useCallback(async () => {\n    // If in learning path context, use learning path navigation\n    if (learningPathContext && pathPosition && pathPosition.has_previous) {\n      const prevProblem = pathPosition.previous_problem;\n      if (prevProblem) {\n        navigateToProblem(prevProblem.problem_numeric_id);\n        return;\n      }\n    }\n    \n    // Regular navigation (not in learning path or no previous in path)\n    if (currentProblemIndex > 0) {\n      const prevProblem = allProblems[currentProblemIndex - 1];\n      navigateToProblem(prevProblem.numeric_id);\n    }\n  }, [learningPathContext, pathPosition, currentProblemIndex, allProblems]);\n\n  const getDifficultyColor = (difficulty) => {\n    switch (difficulty?.toLowerCase()) {\n      case 'easy': return 'text-green-600 bg-green-100';\n      case 'medium': return 'text-yellow-600 bg-yellow-100';\n      case 'hard': return 'text-red-600 bg-red-100';\n      default: return 'text-gray-600 bg-gray-100';\n    }\n  };\n\n  const setupDefaultEnvironment = async () => {\n    // Default environment is set up automatically by the backend\n    console.log('Using default practice environment');\n  };\n\n  const executeQuery = async () => {\n    if (!sqlQuery.trim()) {\n      setError('Please enter a SQL query');\n      return;\n    }\n\n    setIsExecuting(true);\n    setError(null);\n    setResults(null); // Clear previous results\n    \n    // Increment attempt count\n    const newAttemptCount = attemptCount + 1;\n    setAttemptCount(newAttemptCount);\n    \n    try {\n      console.log('DEBUG: Executing query with session ID:', ProgressService.sessionId, 'for problem:', problemId);\n      \n      // Create AbortController for timeout\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 30000); // 30 second timeout\n      \n      const response = await fetch('http://localhost:5001/api/execute/sql', {\n        method: 'POST',\n        signal: controller.signal,\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Session-ID': ProgressService.sessionId,\n          ...(token && { 'Authorization': `Bearer ${token}` })\n        },\n        body: JSON.stringify({ \n          sql: sqlQuery, \n          dialect: selectedDialect,\n          problemId: problem?.id, // UUID from problem object\n          problemNumericId: problem?.numeric_id || parseInt(problemId) // Numeric ID\n        })\n      });\n      \n      clearTimeout(timeoutId);\n      \n      console.log('DEBUG: Response status:', response.status);\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      console.log('DEBUG: Response data:', data);\n      \n      if (data.success) {\n        setResults(data.data);\n        setError(null);\n        setErrorAnalysis(null);\n        \n        // Clear progress cache to ensure fresh data\n        ProgressService.clearCache();\n        \n        // Progress is automatically tracked by the backend in execute.js\n        console.log('DEBUG: Query completed. Progress should be automatically tracked by backend.', {\n          sessionId: ProgressService.sessionId,\n          problemId: problem?.id || problemId,\n          problemNumericId: problemId,\n          isCorrect: data.data.isCorrect\n        });\n\n        // Emit progress update event if problem was solved correctly\n        if (data.data.isCorrect) {\n          console.log('🎉 Problem solved correctly! Emitting progressUpdated event...');\n          window.dispatchEvent(new CustomEvent('progressUpdated', {\n            detail: { problemId, solved: true }\n          }));\n          console.log('✅ progressUpdated event emitted');\n        }\n      } else {\n        console.log('DEBUG: Setting error:', data.error);\n        setError(data.error);\n        setErrorAnalysis(data.errorAnalysis || null);\n        setResults(null); // Clear results on error\n        console.log('DEBUG: Error state should now be set');\n        \n        // Note: Progress tracking for failed attempts is handled by the backend in execute.js\n      }\n    } catch (err) {\n      console.error('DEBUG: Query execution error:', err);\n      if (err.name === 'AbortError') {\n        setError('Query timed out after 30 seconds. Please try a simpler query.');\n      } else {\n        setError(`Failed to execute query: ${err.message}`);\n      }\n      setErrorAnalysis(null);\n      setResults(null); // Clear results on network error\n    } finally {\n      setIsExecuting(false);\n    }\n  };\n\n  // Close problems list when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (!event.target.closest('.relative')) {\n        setShowProblemsList(false);\n      }\n    };\n    \n    if (showProblemsList) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n    \n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [showProblemsList]);\n\n  // Debug: Track error state changes\n  useEffect(() => {\n    console.log('DEBUG: Error state changed to:', error);\n  }, [error]);\n\n  // Add keyboard shortcuts\n  useEffect(() => {\n    const handleKeyPress = (event) => {\n      // Only trigger shortcuts when not typing in textarea or input\n      if (event.target.tagName === 'TEXTAREA' || event.target.tagName === 'INPUT') {\n        return;\n      }\n      \n      if (event.key === 'ArrowLeft' && event.ctrlKey) {\n        event.preventDefault();\n        navigateToPreviousProblem();\n      } else if (event.key === 'ArrowRight' && event.ctrlKey) {\n        event.preventDefault();\n        navigateToNextProblem();\n      } else if (event.key === 'p' && event.ctrlKey) {\n        event.preventDefault();\n        setShowProblemsList(!showProblemsList);\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyPress);\n    return () => {\n      document.removeEventListener('keydown', handleKeyPress);\n    };\n  }, [currentProblemIndex, allProblems?.length, showProblemsList, navigateToNextProblem, navigateToPreviousProblem]);\n\n  // If no problem is selected, redirect to problems page\n  if (!problemId) {\n    return <Navigate to=\"/problems\" replace />;\n  }\n  // Problem mode - show the full problem-solving interface\n  return (\n    <div className=\"max-w-7xl mx-auto px-4 py-8 animate-fade-in bg-gray-50 dark:bg-gray-900 min-h-screen transition-colors\">\n      <div className=\"mb-6\">\n        {problem && (\n          <div>\n            <div className=\"flex items-start justify-between mb-4\">\n              <div className=\"flex items-start space-x-3\">\n                <span className=\"text-2xl font-bold text-blue-600 dark:text-blue-400 bg-blue-100 dark:bg-blue-900 px-3 py-1 rounded-lg\">\n                  #{problem.numeric_id?.toString().padStart(3, '0') || '000'}\n                </span>\n                <div>\n                  <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">{problem.title}</h1>\n                  <div className=\"flex items-center space-x-4 mt-2\">\n                    <span className={`px-2 py-1 rounded text-xs font-medium ${getDifficultyColor(problem.difficulty)}`}>\n                      {problem.difficulty?.charAt(0).toUpperCase() + problem.difficulty?.slice(1)}\n                    </span>\n                    <span className=\"text-sm text-gray-500 dark:text-gray-400\">{problem.category_name}</span>\n                    {learningPathContext && pathPosition && (\n                      <div className=\"flex items-center space-x-2 px-3 py-1 bg-blue-100 dark:bg-blue-900/50 rounded-full border border-blue-200 dark:border-blue-800\">\n                        <span className=\"text-xs text-blue-700 dark:text-blue-300 font-medium\">\n                          📚 {learningPathContext.learning_path_name}\n                        </span>\n                        <span className=\"text-xs text-blue-600 dark:text-blue-400\">\n                          ({pathPosition.current_step}/{pathPosition.total_steps})\n                        </span>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n              \n              {/* Navigation Controls */}\n              <div className=\"flex items-center space-x-2\">\n                {/* Bookmark Button */}\n                <BookmarkButton problemId={problem?.id} size=\"md\" />\n                \n                <div className=\"w-px h-8 bg-gray-300 dark:bg-gray-600 mx-2\"></div>\n                <div className=\"text-xs text-gray-500 mr-2\">\n                  <div>Ctrl + ← / →</div>\n                  <div>Ctrl + P</div>\n                </div>\n                <button\n                  onClick={navigateToPreviousProblem}\n                  disabled={currentProblemIndex === 0}\n                  className=\"px-3 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-md hover:bg-gray-50 dark:hover:bg-gray-700 hover:shadow-md disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 hover-lift btn-press\"\n                  title=\"Previous Problem (Ctrl + Left Arrow)\"\n                >\n                  ← Previous\n                </button>\n                \n                <div className=\"relative\">\n                  <button\n                    onClick={() => setShowProblemsList(!showProblemsList)}\n                    className=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 dark:bg-blue-700 border border-blue-600 dark:border-blue-700 rounded-md hover:bg-blue-700 dark:hover:bg-blue-600 hover:shadow-lg transition-all duration-200 hover-lift btn-press animate-pulse-gentle\"\n                  >\n                    All Problems ({allProblems?.length || 0})\n                  </button>\n                  \n                  {/* Problems dropdown */}\n                  {showProblemsList && (\n                    <div className=\"absolute right-0 mt-2 w-80 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg z-50 max-h-96 overflow-y-auto\">\n                      <div className=\"p-2\">\n                        {allProblems?.map((prob, index) => (\n                          <button\n                            key={prob.id}\n                            onClick={() => {\n                              navigateToProblem(prob.numeric_id);\n                              setShowProblemsList(false);\n                            }}\n                            className={`w-full text-left px-3 py-2 rounded text-sm transition-colors ${\n                              prob.numeric_id === problem?.numeric_id\n                                ? 'bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300'\n                                : 'hover:bg-gray-100 dark:hover:bg-gray-700 text-gray-700 dark:text-gray-300'\n                            }`}\n                          >\n                            <div className=\"flex items-center space-x-2\">\n                              <span className=\"font-medium\">#{prob.numeric_id?.toString().padStart(3, '0') || '000'}</span>\n                              <span className=\"truncate flex-1\">{prob.title}</span>\n                              <span className={`px-1 py-0.5 rounded text-xs ${getDifficultyColor(prob.difficulty)}`}>\n                                {prob.difficulty?.charAt(0).toUpperCase()}\n                              </span>\n                            </div>\n                          </button>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                </div>\n                \n                <button\n                  onClick={navigateToNextProblem}\n                  disabled={currentProblemIndex === (allProblems?.length || 0) - 1}\n                  className=\"px-3 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-md hover:bg-gray-50 dark:hover:bg-gray-700 hover:shadow-md disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 hover-lift btn-press\"\n                  title=\"Next Problem (Ctrl + Right Arrow)\"\n                >\n                  Next →\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Main Content: Left/Right Split Layout */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 min-h-[600px]\">\n        \n        {/* LEFT PANEL: Problem Info, Schema, Hints */}\n        <div className=\"flex flex-col space-y-4 h-full max-h-[80vh] overflow-y-auto pr-2\">\n          \n          {/* Problem Description */}\n          {problem && (\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700\">\n              <div className=\"border-b border-gray-200 dark:border-gray-700 px-4 py-3 flex justify-between items-center\">\n                <h2 className=\"text-lg font-medium text-gray-900 dark:text-white\">Problem Description</h2>\n                {schema && (\n                  <button\n                    onClick={() => setShowSolution(!showSolution)}\n                    className=\"text-sm px-3 py-1 rounded border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors\"\n                  >\n                    {showSolution ? 'Hide Solution' : 'Show Solution'}\n                  </button>\n                )}\n              </div>\n              <div className=\"p-4\">\n                <div className=\"prose max-w-none text-gray-900 dark:text-white\">\n                  <div dangerouslySetInnerHTML={{ \n                    __html: problem.description\n                      .replace(/\\*\\*Expected Output:\\*\\*.*?(?=\\*\\*|$)/g, '') // Remove Expected Output section\n                      .replace(/Expected Output:.*?(?=\\n\\n|\\n\\*\\*|$)/g, '') // Remove Expected Output without bold\n                      // Make section headers bold (whether they already are or not)\n                      .replace(/\\*\\*Business Context:\\*\\*/g, '<strong class=\"text-gray-900 dark:text-white\">Business Context:</strong>')\n                      .replace(/\\*\\*Scenario:\\*\\*/g, '<strong class=\"text-gray-900 dark:text-white\">Scenario:</strong>')\n                      .replace(/\\*\\*Problem:\\*\\*/g, '<strong class=\"text-gray-900 dark:text-white\">Problem:</strong>')\n                      .replace(/Business Context:/g, '<strong class=\"text-gray-900 dark:text-white\">Business Context:</strong>')\n                      .replace(/Scenario:/g, '<strong class=\"text-gray-900 dark:text-white\">Scenario:</strong>')\n                      .replace(/Problem:/g, '<strong class=\"text-gray-900 dark:text-white\">Problem:</strong>')\n                      // Handle other bold text\n                      .replace(/\\*\\*(.*?)\\*\\*/g, '<strong class=\"text-gray-900 dark:text-white\">$1</strong>')\n                      .replace(/`(.*?)`/g, '<code class=\"bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-white px-1 rounded\">$1</code>')\n                      .replace(/```sql\\n([\\s\\S]*?)\\n```/g, '<pre class=\"bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-white p-3 rounded overflow-x-auto\"><code>$1</code></pre>')\n                      .replace(/\\n/g, '<br>')\n                      .replace(/<br><br>/g, '<br>') // Clean up double line breaks\n                  }} />\n                </div>\n                \n                {/* Show Solution */}\n                {showSolution && schema && (\n                  <div className=\"mt-6 p-4 bg-blue-50 dark:bg-blue-900/50 border border-blue-200 dark:border-blue-800 rounded-lg\">\n                    <div className=\"flex items-center justify-between mb-3\">\n                      <div className=\"flex items-center space-x-2\">\n                        <span className=\"text-lg\">💡</span>\n                        <h3 className=\"font-semibold text-blue-800 dark:text-blue-300\">Solution</h3>\n                      </div>\n                      <button\n                        onClick={(e) => {\n                          navigator.clipboard.writeText(schema.solution_sql);\n                          const btn = e.target;\n                          const originalText = btn.textContent;\n                          btn.textContent = 'Copied!';\n                          setTimeout(() => {\n                            btn.textContent = originalText;\n                          }, 2000);\n                        }}\n                        className=\"text-xs px-2 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors\"\n                        title=\"Copy SQL to clipboard\"\n                      >\n                        📋 Copy\n                      </button>\n                    </div>\n                    <SQLHighlightDisplay\n                      value={schema.solution_sql}\n                      height=\"400px\"\n                    />\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n\n          {/* Collapsible Sections */}\n          <div className=\"space-y-4\">\n            {/* Database Schema Section */}\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700\">\n              <button\n                onClick={() => setExpandedSection(expandedSection === 'schema' ? null : 'schema')}\n                className=\"w-full px-4 py-3 text-left flex items-center justify-between hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors rounded-lg\"\n              >\n                <h2 className=\"text-lg font-medium text-gray-900 dark:text-white\">Database Schema</h2>\n                <svg\n                  className={`w-5 h-5 text-gray-500 dark:text-gray-400 transform transition-transform ${\n                    expandedSection === 'schema' ? 'rotate-180' : ''\n                  }`}\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                </svg>\n              </button>\n              \n              {expandedSection === 'schema' && (\n                <div className=\"border-t border-gray-200 dark:border-gray-700 p-4\">\n                  {schema ? (\n                    <div>\n                      {/* Parse and display schema tables */}\n                      {(() => {\n                        const createTableRegex = /CREATE TABLE (\\w+) \\(([\\s\\S]*?)\\);/g;\n                        const tables = [];\n                        const sampleData = {};\n                        let match;\n                        \n                        // Parse table structures\n                        while ((match = createTableRegex.exec(schema.setup_sql)) !== null) {\n                          const tableName = match[1];\n                          const columnsText = match[2];\n                          \n                          const parseColumns = (columnsText) => {\n                            const columns = [];\n                            let current = '';\n                            let parenDepth = 0;\n                            \n                            for (let i = 0; i < columnsText.length; i++) {\n                              const char = columnsText[i];\n                              if (char === '(') parenDepth++;\n                              if (char === ')') parenDepth--;\n                              \n                              if (char === ',' && parenDepth === 0) {\n                                if (current.trim()) columns.push(current.trim());\n                                current = '';\n                              } else {\n                                current += char;\n                              }\n                            }\n                            if (current.trim()) columns.push(current.trim());\n                            return columns;\n                          };\n                          \n                          const columns = parseColumns(columnsText)\n                            .filter(col => col.length > 0)\n                            .map(col => {\n                              const parts = col.split(' ');\n                              const name = parts[0];\n                              const type = parts.slice(1).join(' ').toUpperCase();\n                              return { name, type };\n                            });\n                          \n                          tables.push({ name: tableName, columns });\n                        }\n                        \n                        // Parse sample data\n                        const insertMatches = [...schema.setup_sql.matchAll(/INSERT INTO\\s+(\\w+)\\s+VALUES\\s+([\\s\\S]*?);/g)];\n                        insertMatches.forEach(match => {\n                          const tableName = match[1];\n                          const valuesText = match[2];\n                          const rowMatches = [...valuesText.matchAll(/\\(([\\s\\S]*?)\\)/g)];\n                          sampleData[tableName] = rowMatches.slice(0, 5).map(rowMatch => {\n                            return rowMatch[1].split(',').map(val => {\n                              const trimmed = val.trim();\n                              // Remove quotes and handle nulls\n                              if (trimmed === 'NULL') return 'NULL';\n                              return trimmed.replace(/^'|'$/g, '').replace(/''/g, \"'\");\n                            });\n                          });\n                        });\n                        \n                        return (\n                          <div className=\"space-y-6\">\n                            {tables.map(table => (\n                              <div key={table.name} className=\"border border-gray-200 dark:border-gray-600 rounded-lg\">\n                                <div className=\"bg-gray-50 dark:bg-gray-700 px-4 py-2 border-b border-gray-200 dark:border-gray-600 rounded-t-lg\">\n                                  <h3 className=\"font-semibold text-gray-900 dark:text-white\">{table.name}</h3>\n                                </div>\n                                <div className=\"p-4\">\n                                  <div className=\"space-y-2 mb-4\">\n                                    {table.columns.map(col => (\n                                      <div key={col.name} className=\"flex justify-between items-center py-2 border-b border-gray-100 dark:border-gray-700 last:border-0\">\n                                        <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">{col.name}</span>\n                                        <span className=\"text-xs text-blue-600 dark:text-blue-400 bg-blue-50 dark:bg-blue-900/50 px-2 py-0.5 rounded\">{col.type}</span>\n                                      </div>\n                                    ))}\n                                  </div>\n                                  \n                                  {/* Sample Data */}\n                                  {sampleData[table.name] && sampleData[table.name].length > 0 && (\n                                    <div>\n                                      <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">Sample Data:</h4>\n                                      <div className=\"overflow-x-auto\">\n                                        <table className=\"min-w-full text-xs border border-gray-200 dark:border-gray-600\">\n                                          <thead className=\"bg-gray-50 dark:bg-gray-700\">\n                                            <tr>\n                                              {table.columns.map(col => (\n                                                <th key={col.name} className=\"px-2 py-1 text-left font-medium text-gray-700 dark:text-gray-300 border-r border-gray-200 dark:border-gray-600 last:border-0\">\n                                                  {col.name}\n                                                </th>\n                                              ))}\n                                            </tr>\n                                          </thead>\n                                          <tbody>\n                                            {sampleData[table.name].map((row, idx) => (\n                                              <tr key={idx} className=\"border-t border-gray-200 dark:border-gray-600\">\n                                                {row.map((cell, cellIdx) => (\n                                                  <td key={cellIdx} className=\"px-2 py-1 text-gray-700 dark:text-gray-300 border-r border-gray-200 dark:border-gray-600 last:border-0\">\n                                                    {cell}\n                                                  </td>\n                                                ))}\n                                              </tr>\n                                            ))}\n                                          </tbody>\n                                        </table>\n                                      </div>\n                                    </div>\n                                  )}\n                                </div>\n                              </div>\n                            ))}\n                          </div>\n                        );\n                      })()}\n                    </div>\n                  ) : (\n                    <div className=\"text-gray-500 dark:text-gray-400\">No database schema available</div>\n                  )}\n                </div>\n              )}\n            </div>\n\n            {/* Expected Output Section */}\n            {problem && (\n              <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700\">\n                <button\n                  onClick={() => setExpandedSection(expandedSection === 'expected' ? null : 'expected')}\n                  className=\"w-full px-4 py-3 text-left flex items-center justify-between hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors rounded-lg\"\n                >\n                  <h2 className=\"text-lg font-medium text-gray-900 dark:text-white\">Expected Output</h2>\n                  <svg\n                    className={`w-5 h-5 text-gray-500 dark:text-gray-400 transform transition-transform ${\n                      expandedSection === 'expected' ? 'rotate-180' : ''\n                    }`}\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                  </svg>\n                </button>\n                \n                {expandedSection === 'expected' && (\n                  <div className=\"border-t border-gray-200 dark:border-gray-700 p-4\">\n                    {schema && schema.expected_output && schema.expected_output.length > 0 ? (\n                      <div className=\"overflow-x-auto\">\n                        <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-600\">\n                          <thead className=\"bg-gray-50 dark:bg-gray-700\">\n                            <tr>\n                              {Object.keys(schema.expected_output[0]).map((column, index) => (\n                                <th\n                                  key={index}\n                                  className=\"px-4 py-2 text-left text-xs font-medium text-gray-700 dark:text-gray-300 uppercase tracking-wider border border-gray-300 dark:border-gray-500\"\n                                >\n                                  {column}\n                                </th>\n                              ))}\n                            </tr>\n                          </thead>\n                          <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-600\">\n                            {schema.expected_output.slice(0, 10).map((row, rowIndex) => (\n                              <tr key={rowIndex} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\n                                {Object.values(row).map((cell, cellIndex) => (\n                                  <td\n                                    key={cellIndex}\n                                    className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100 border border-gray-300 dark:border-gray-500\"\n                                  >\n                                    {cell !== null ? cell.toString() : 'NULL'}\n                                  </td>\n                                ))}\n                              </tr>\n                            ))}\n                          </tbody>\n                        </table>\n                        {schema.expected_output.length > 10 && (\n                          <div className=\"text-sm text-gray-500 dark:text-gray-400 mt-2 text-center\">\n                            Showing first 10 rows of {schema.expected_output.length} expected rows\n                          </div>\n                        )}\n                      </div>\n                    ) : (\n                      <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                        Expected output will be shown when available.\n                      </div>\n                    )}\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n\n          {/* Hints Panel */}\n          {problem && showHints && (\n            <SmartHintsPanel \n              problemId={problem?.id || problemId}\n              attemptCount={attemptCount}\n              userQuery={sqlQuery}\n              onClose={() => setShowHints(false)}\n            />\n          )}\n        </div>\n        \n        {/* RIGHT PANEL: SQL Editor, Results */}\n        <div className=\"flex flex-col space-y-4 overflow-hidden\">\n          \n          {/* SQL Editor */}\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700\">\n            <div className=\"border-b border-gray-200 dark:border-gray-700 px-4 py-3 flex justify-between items-center\">\n              <h2 className=\"text-lg font-medium text-gray-900 dark:text-white\">SQL Query</h2>\n              <div className=\"flex items-center space-x-2\">\n                {problem && attemptCount > 0 && (\n                  <button\n                    onClick={() => setShowHints(true)}\n                    className=\"text-xs px-2 py-1 bg-yellow-100 dark:bg-yellow-900/50 text-yellow-700 dark:text-yellow-300 rounded hover:bg-yellow-200 dark:hover:bg-yellow-900 transition-colors\"\n                  >\n                    💡 Hints ({Math.min(attemptCount, 3)})\n                  </button>\n                )}\n                <select\n                  value={selectedDialect}\n                  onChange={(e) => setSelectedDialect(e.target.value)}\n                  className=\"text-sm px-2 py-1 border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                >\n                  <option value=\"postgresql\">PostgreSQL</option>\n                  <option value=\"mysql\">MySQL</option>\n                </select>\n                <button\n                  onClick={executeQuery}\n                  disabled={isExecuting}\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50 transition-all duration-200 hover-lift btn-press\"\n                  title=\"Execute query (Ctrl+Enter)\"\n                >\n                  {isExecuting ? (\n                    <>\n                      <span className=\"inline-block animate-spin w-4 h-4 border-2 border-white border-t-transparent rounded-full mr-2\"></span>\n                      Running...\n                    </>\n                  ) : (\n                    'Run Query'\n                  )}\n                </button>\n              </div>\n            </div>\n            \n            <div style={{ height: '400px' }}>\n              <SQLHighlightEditor\n                value={sqlQuery}\n                onChange={setSqlQuery}\n                onExecute={executeQuery}\n                isExecuting={isExecuting}\n                height=\"100%\"\n              />\n            </div>\n          </div>\n          \n          {/* Results Panel */}\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700\" style={{ minHeight: '400px' }}>\n            <div className=\"border-b border-gray-200 dark:border-gray-700 px-4 py-3\">\n              <h2 className=\"text-lg font-medium text-gray-900 dark:text-white\">Results</h2>\n            </div>\n            \n            <div className=\"p-4 overflow-y-auto\" style={{ maxHeight: '350px' }}>\n              \n              {error && (\n                <div className=\"mb-4 p-4 bg-red-50 dark:bg-red-900/50 border border-red-200 dark:border-red-800 rounded-lg\">\n                  <div className=\"flex items-center space-x-2 text-red-800 dark:text-red-300 mb-2\">\n                    <span className=\"text-lg\">❌</span>\n                    <span className=\"font-medium\">SQL Error</span>\n                  </div>\n                  <div className=\"text-sm text-red-700 dark:text-red-400\">\n                    {error}\n                  </div>\n                </div>\n              )}\n              \n              {results && (\n                <div>\n                  <div className=\"mb-4\">\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <div className=\"text-sm text-gray-500\">\n                        Execution time: {results.executionTime} • {results.rowCount || results.rows?.length || 0} rows returned\n                      </div>\n                      <div className=\"text-sm text-green-600 font-medium\">\n                        ✓ Query executed successfully\n                      </div>\n                    </div>\n                    \n                    {/* Validation Results */}\n                    {(results.isCorrect !== null || results.feedback) && (\n                      <div className={`p-3 rounded-md border ${\n                        results.isCorrect === true\n                          ? 'bg-green-50 dark:bg-green-900/50 border-green-200 dark:border-green-800' \n                          : 'bg-red-50 dark:bg-red-900/50 border-red-200 dark:border-red-800'\n                      }`}>\n                        <div className={`flex items-center space-x-2 ${\n                          results.isCorrect === true\n                            ? 'text-green-800 dark:text-green-300' \n                            : 'text-red-800 dark:text-red-300'\n                        }`}>\n                          <span className=\"text-lg\">\n                            {results.isCorrect ? '🎉' : '❌'}\n                          </span>\n                          <span className=\"font-medium\">\n                            {results.isCorrect ? 'Correct Solution!' : 'Incorrect Solution'}\n                          </span>\n                        </div>\n                        <div className={`text-sm mt-1 ${\n                          results.isCorrect \n                            ? 'text-green-700 dark:text-green-400' \n                            : 'text-red-700 dark:text-red-400'\n                        }`}>\n                          {results.feedback}\n                        </div>\n                      </div>\n                    )}\n                  </div>\n\n                  {/* Results Table */}\n                  {results.rows && results.rows.length > 0 ? (\n                    <div className=\"overflow-x-auto\">\n                      <table className=\"min-w-full border border-gray-200 dark:border-gray-600\">\n                        <thead className=\"bg-gray-50 dark:bg-gray-700\">\n                          <tr>\n                            {Object.keys(results.rows[0]).map((column) => (\n                              <th key={column} className=\"px-3 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider border-b border-gray-200 dark:border-gray-600\">\n                                {column}\n                              </th>\n                            ))}\n                          </tr>\n                        </thead>\n                        <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-600\">\n                          {results.rows.slice(0, 100).map((row, index) => (\n                            <tr key={index}>\n                              {Object.values(row).map((value, i) => (\n                                <td key={i} className=\"px-3 py-2 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100 border-b border-gray-200 dark:border-gray-600\">\n                                  {value !== null ? value.toString() : <span className=\"text-gray-400\">NULL</span>}\n                                </td>\n                              ))}\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                      \n                      {results.rows?.length > 100 && (\n                        <div className=\"text-sm text-gray-500 dark:text-gray-400 mt-2 text-center\">\n                          Showing first 100 rows of {results.rows?.length || 0} total rows\n                        </div>\n                      )}\n                    </div>\n                  ) : (\n                    <div className=\"text-center py-8\">\n                      <div className=\"text-gray-500 dark:text-gray-400\">\n                        Query executed successfully but returned no rows\n                      </div>\n                    </div>\n                  )}\n                </div>\n              )}\n\n              {/* Expected Output Section */}\n              {problem && problem.expected_output && (\n                <div className=\"mt-6 border-t border-gray-200 dark:border-gray-700 pt-4\">\n                  <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-3\">Expected Output</h3>\n                  <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-4\">\n                    {problem.expected_output.length > 0 ? (\n                      <div className=\"overflow-x-auto\">\n                        <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-600\">\n                          <thead className=\"bg-gray-100 dark:bg-gray-600\">\n                            <tr>\n                              {Object.keys(problem.expected_output[0]).map((column, index) => (\n                                <th\n                                  key={index}\n                                  className=\"px-4 py-2 text-left text-xs font-medium text-gray-700 dark:text-gray-300 uppercase tracking-wider border border-gray-300 dark:border-gray-500\"\n                                >\n                                  {column}\n                                </th>\n                              ))}\n                            </tr>\n                          </thead>\n                          <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-600\">\n                            {problem.expected_output.slice(0, 20).map((row, rowIndex) => (\n                              <tr key={rowIndex} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\n                                {Object.values(row).map((cell, cellIndex) => (\n                                  <td\n                                    key={cellIndex}\n                                    className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100 border border-gray-300 dark:border-gray-500\"\n                                  >\n                                    {cell !== null ? cell.toString() : 'NULL'}\n                                  </td>\n                                ))}\n                              </tr>\n                            ))}\n                          </tbody>\n                        </table>\n                        {problem.expected_output.length > 20 && (\n                          <div className=\"text-sm text-gray-500 dark:text-gray-400 mt-2 text-center\">\n                            Showing first 20 rows of {problem.expected_output.length} expected rows\n                          </div>\n                        )}\n                      </div>\n                    ) : (\n                      <div className=\"text-center py-4\">\n                        <div className=\"text-gray-500 dark:text-gray-400\">\n                          Expected output not available for this problem\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              )}\n              \n              {!results && !error && !isExecuting && (\n                <div className=\"text-center py-8\">\n                  <div className=\"text-gray-500 dark:text-gray-400\">💻</div>\n                  <div className=\"text-gray-500 dark:text-gray-400 mt-2\">Run a query to see results</div>\n                </div>\n              )}\n              \n              {isExecuting && (\n                <div className=\"text-center py-8\">\n                  <div className=\"inline-block animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600 dark:border-blue-400\"></div>\n                  <div className=\"text-gray-500 dark:text-gray-400 mt-2\">Executing query...</div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default PracticePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}