{"ast":null,"code":"var _jsxFileName = \"/Users/ss/Downloads/Code/Vibe_coding/SQL_practice_website/sql-practice-platform/frontend/src/components/SQLSyntaxEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SQLSyntaxEditor = ({\n  value,\n  onChange,\n  onExecute,\n  isExecuting,\n  height = '500px',\n  readOnly = false\n}) => {\n  _s();\n  const textareaRef = useRef(null);\n  const highlightRef = useRef(null);\n  const [displayValue, setDisplayValue] = useState(value || '');\n\n  // SQL keywords for syntax highlighting\n  const sqlKeywords = ['SELECT', 'FROM', 'WHERE', 'JOIN', 'INNER', 'LEFT', 'RIGHT', 'FULL', 'OUTER', 'ON', 'GROUP', 'BY', 'HAVING', 'ORDER', 'LIMIT', 'OFFSET', 'DISTINCT', 'COUNT', 'SUM', 'AVG', 'MIN', 'MAX', 'AS', 'AND', 'OR', 'NOT', 'IN', 'LIKE', 'BETWEEN', 'IS', 'NULL', 'EXISTS', 'CASE', 'WHEN', 'THEN', 'ELSE', 'END', 'UNION', 'ALL', 'INSERT', 'INTO', 'VALUES', 'UPDATE', 'SET', 'DELETE', 'CREATE', 'ALTER', 'DROP', 'TABLE', 'INDEX', 'PRIMARY', 'KEY', 'FOREIGN', 'REFERENCES', 'CONSTRAINT', 'CHECK', 'DEFAULT', 'UNIQUE', 'AUTO_INCREMENT'];\n\n  // Create highlighted HTML\n  const highlightSQL = text => {\n    if (!text) return '';\n    let highlighted = text;\n\n    // Escape HTML\n    highlighted = highlighted.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n\n    // Highlight SQL keywords (case insensitive)\n    sqlKeywords.forEach(keyword => {\n      const regex = new RegExp(`\\\\b(${keyword})\\\\b`, 'gi');\n      highlighted = highlighted.replace(regex, '<span class=\"sql-keyword\">$1</span>');\n    });\n\n    // Highlight strings\n    highlighted = highlighted.replace(/'([^']*)'/g, '<span class=\"sql-string\">\\'$1\\'</span>');\n    highlighted = highlighted.replace(/\"([^\"]*)\"/g, '<span class=\"sql-string\">\"$1\"</span>');\n\n    // Highlight numbers\n    highlighted = highlighted.replace(/\\b(\\d+\\.?\\d*)\\b/g, '<span class=\"sql-number\">$1</span>');\n\n    // Highlight comments\n    highlighted = highlighted.replace(/--.*$/gm, '<span class=\"sql-comment\">$&</span>');\n    highlighted = highlighted.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '<span class=\"sql-comment\">$&</span>');\n    return highlighted;\n  };\n\n  // Update highlighting when value changes\n  useEffect(() => {\n    setDisplayValue(value || '');\n    if (highlightRef.current) {\n      highlightRef.current.innerHTML = highlightSQL(value || '');\n    }\n  }, [value, highlightSQL]);\n\n  // Inject CSS for syntax highlighting\n  useEffect(() => {\n    const style = document.createElement('style');\n    style.textContent = `\n      .sql-editor-container {\n        position: relative;\n        background: #1e1e1e;\n        border-radius: 4px;\n        overflow: hidden;\n      }\n      \n      .sql-textarea {\n        background: transparent !important;\n        color: transparent !important;\n        caret-color: #ffffff !important;\n        font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace !important;\n        font-size: 14px !important;\n        line-height: 1.5 !important;\n        padding: 16px !important;\n        border: none !important;\n        outline: none !important;\n        resize: none !important;\n        position: absolute !important;\n        top: 0 !important;\n        left: 0 !important;\n        width: 100% !important;\n        height: 100% !important;\n        z-index: 2 !important;\n        tab-size: 2 !important;\n        white-space: pre !important;\n      }\n      \n      .sql-highlight {\n        background: #1e1e1e !important;\n        color: #d4d4d4 !important;\n        font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace !important;\n        font-size: 14px !important;\n        line-height: 1.5 !important;\n        padding: 16px !important;\n        border: none !important;\n        position: absolute !important;\n        top: 0 !important;\n        left: 0 !important;\n        width: 100% !important;\n        height: 100% !important;\n        z-index: 1 !important;\n        pointer-events: none !important;\n        tab-size: 2 !important;\n        white-space: pre !important;\n        overflow: hidden !important;\n      }\n      \n      .sql-keyword {\n        color: #569cd6 !important;\n        font-weight: bold !important;\n      }\n      \n      .sql-string {\n        color: #ce9178 !important;\n      }\n      \n      .sql-number {\n        color: #b5cea8 !important;\n      }\n      \n      .sql-comment {\n        color: #6a9955 !important;\n        font-style: italic !important;\n      }\n      \n      .sql-textarea::placeholder {\n        color: #6b7280 !important;\n      }\n      \n      .sql-textarea:focus {\n        outline: 2px solid #3b82f6 !important;\n        outline-offset: -2px !important;\n      }\n    `;\n    if (!document.head.querySelector('#sql-syntax-styles')) {\n      style.id = 'sql-syntax-styles';\n      document.head.appendChild(style);\n    }\n    return () => {\n      const existingStyle = document.head.querySelector('#sql-syntax-styles');\n      if (existingStyle) {\n        existingStyle.remove();\n      }\n    };\n  }, []);\n  const handleKeyDown = e => {\n    // Handle Ctrl+Enter for execution\n    if ((e.ctrlKey || e.metaKey) && e.key === 'Enter') {\n      e.preventDefault();\n      if (onExecute && !isExecuting) {\n        onExecute();\n      }\n    }\n\n    // Handle Tab for indentation\n    if (e.key === 'Tab') {\n      e.preventDefault();\n      const textarea = e.target;\n      const start = textarea.selectionStart;\n      const end = textarea.selectionEnd;\n\n      // Insert spaces for tab\n      const newValue = value.substring(0, start) + '  ' + value.substring(end);\n      onChange(newValue);\n\n      // Set cursor position after the inserted spaces\n      setTimeout(() => {\n        textarea.selectionStart = textarea.selectionEnd = start + 2;\n      }, 0);\n    }\n  };\n  const handleChange = e => {\n    onChange(e.target.value);\n  };\n  const handleScroll = e => {\n    // Sync scroll between textarea and highlight layer\n    if (highlightRef.current) {\n      highlightRef.current.scrollTop = e.target.scrollTop;\n      highlightRef.current.scrollLeft = e.target.scrollLeft;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative w-full\",\n    style: {\n      height\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sql-editor-container w-full h-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: highlightRef,\n        className: \"sql-highlight\",\n        dangerouslySetInnerHTML: {\n          __html: highlightSQL(displayValue)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: textareaRef,\n        value: displayValue,\n        onChange: handleChange,\n        onKeyDown: handleKeyDown,\n        onScroll: handleScroll,\n        readOnly: readOnly,\n        className: \"sql-textarea\",\n        placeholder: \"-- Write your SQL query here\\n-- Use Ctrl+Enter to execute\\n-- Keywords: SELECT, FROM, WHERE, JOIN, GROUP BY, ORDER BY\",\n        spellCheck: false,\n        autoCapitalize: \"off\",\n        autoComplete: \"off\",\n        autoCorrect: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-2 right-2 text-xs text-gray-300 bg-gray-800 bg-opacity-80 px-2 py-1 rounded pointer-events-none z-10\",\n      children: \"SQL Editor \\u2022 Ctrl+Enter to run\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n};\n_s(SQLSyntaxEditor, \"0BMuGgWKUEsm8NjTLT0p8TwIg0M=\");\n_c = SQLSyntaxEditor;\nexport default SQLSyntaxEditor;\nvar _c;\n$RefreshReg$(_c, \"SQLSyntaxEditor\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","SQLSyntaxEditor","value","onChange","onExecute","isExecuting","height","readOnly","_s","textareaRef","highlightRef","displayValue","setDisplayValue","sqlKeywords","highlightSQL","text","highlighted","replace","forEach","keyword","regex","RegExp","current","innerHTML","style","document","createElement","textContent","head","querySelector","id","appendChild","existingStyle","remove","handleKeyDown","e","ctrlKey","metaKey","key","preventDefault","textarea","target","start","selectionStart","end","selectionEnd","newValue","substring","setTimeout","handleChange","handleScroll","scrollTop","scrollLeft","className","children","ref","dangerouslySetInnerHTML","__html","fileName","_jsxFileName","lineNumber","columnNumber","onKeyDown","onScroll","placeholder","spellCheck","autoCapitalize","autoComplete","autoCorrect","_c","$RefreshReg$"],"sources":["/Users/ss/Downloads/Code/Vibe_coding/SQL_practice_website/sql-practice-platform/frontend/src/components/SQLSyntaxEditor.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\n\nconst SQLSyntaxEditor = ({ \n  value, \n  onChange, \n  onExecute, \n  isExecuting, \n  height = '500px',\n  readOnly = false\n}) => {\n  const textareaRef = useRef(null);\n  const highlightRef = useRef(null);\n  const [displayValue, setDisplayValue] = useState(value || '');\n\n  // SQL keywords for syntax highlighting\n  const sqlKeywords = [\n    'SELECT', 'FROM', 'WHERE', 'JOIN', 'INNER', 'LEFT', 'RIGHT', 'FULL', 'OUTER',\n    'ON', 'GROUP', 'BY', 'HAVING', 'ORDER', 'LIMIT', 'OFFSET', 'DISTINCT',\n    'COUNT', 'SUM', 'AVG', 'MIN', 'MAX', 'AS', 'AND', 'OR', 'NOT', 'IN', 'LIKE',\n    'BETWEEN', 'IS', 'NULL', 'EXISTS', 'CASE', 'WHEN', 'THEN', 'ELSE', 'END',\n    'UNION', 'ALL', 'INSERT', 'INTO', 'VALUES', 'UPDATE', 'SET', 'DELETE',\n    'CREATE', 'ALTER', 'DROP', 'TABLE', 'INDEX', 'PRIMARY', 'KEY', 'FOREIGN',\n    'REFERENCES', 'CONSTRAINT', 'CHECK', 'DEFAULT', 'UNIQUE', 'AUTO_INCREMENT'\n  ];\n\n  // Create highlighted HTML\n  const highlightSQL = (text) => {\n    if (!text) return '';\n    \n    let highlighted = text;\n    \n    // Escape HTML\n    highlighted = highlighted\n      .replace(/&/g, '&amp;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;');\n    \n    // Highlight SQL keywords (case insensitive)\n    sqlKeywords.forEach(keyword => {\n      const regex = new RegExp(`\\\\b(${keyword})\\\\b`, 'gi');\n      highlighted = highlighted.replace(regex, '<span class=\"sql-keyword\">$1</span>');\n    });\n    \n    // Highlight strings\n    highlighted = highlighted.replace(/'([^']*)'/g, '<span class=\"sql-string\">\\'$1\\'</span>');\n    highlighted = highlighted.replace(/\"([^\"]*)\"/g, '<span class=\"sql-string\">\"$1\"</span>');\n    \n    // Highlight numbers\n    highlighted = highlighted.replace(/\\b(\\d+\\.?\\d*)\\b/g, '<span class=\"sql-number\">$1</span>');\n    \n    // Highlight comments\n    highlighted = highlighted.replace(/--.*$/gm, '<span class=\"sql-comment\">$&</span>');\n    highlighted = highlighted.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '<span class=\"sql-comment\">$&</span>');\n    \n    return highlighted;\n  };\n\n  // Update highlighting when value changes\n  useEffect(() => {\n    setDisplayValue(value || '');\n    if (highlightRef.current) {\n      highlightRef.current.innerHTML = highlightSQL(value || '');\n    }\n  }, [value, highlightSQL]);\n\n  // Inject CSS for syntax highlighting\n  useEffect(() => {\n    const style = document.createElement('style');\n    style.textContent = `\n      .sql-editor-container {\n        position: relative;\n        background: #1e1e1e;\n        border-radius: 4px;\n        overflow: hidden;\n      }\n      \n      .sql-textarea {\n        background: transparent !important;\n        color: transparent !important;\n        caret-color: #ffffff !important;\n        font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace !important;\n        font-size: 14px !important;\n        line-height: 1.5 !important;\n        padding: 16px !important;\n        border: none !important;\n        outline: none !important;\n        resize: none !important;\n        position: absolute !important;\n        top: 0 !important;\n        left: 0 !important;\n        width: 100% !important;\n        height: 100% !important;\n        z-index: 2 !important;\n        tab-size: 2 !important;\n        white-space: pre !important;\n      }\n      \n      .sql-highlight {\n        background: #1e1e1e !important;\n        color: #d4d4d4 !important;\n        font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace !important;\n        font-size: 14px !important;\n        line-height: 1.5 !important;\n        padding: 16px !important;\n        border: none !important;\n        position: absolute !important;\n        top: 0 !important;\n        left: 0 !important;\n        width: 100% !important;\n        height: 100% !important;\n        z-index: 1 !important;\n        pointer-events: none !important;\n        tab-size: 2 !important;\n        white-space: pre !important;\n        overflow: hidden !important;\n      }\n      \n      .sql-keyword {\n        color: #569cd6 !important;\n        font-weight: bold !important;\n      }\n      \n      .sql-string {\n        color: #ce9178 !important;\n      }\n      \n      .sql-number {\n        color: #b5cea8 !important;\n      }\n      \n      .sql-comment {\n        color: #6a9955 !important;\n        font-style: italic !important;\n      }\n      \n      .sql-textarea::placeholder {\n        color: #6b7280 !important;\n      }\n      \n      .sql-textarea:focus {\n        outline: 2px solid #3b82f6 !important;\n        outline-offset: -2px !important;\n      }\n    `;\n    \n    if (!document.head.querySelector('#sql-syntax-styles')) {\n      style.id = 'sql-syntax-styles';\n      document.head.appendChild(style);\n    }\n\n    return () => {\n      const existingStyle = document.head.querySelector('#sql-syntax-styles');\n      if (existingStyle) {\n        existingStyle.remove();\n      }\n    };\n  }, []);\n\n  const handleKeyDown = (e) => {\n    // Handle Ctrl+Enter for execution\n    if ((e.ctrlKey || e.metaKey) && e.key === 'Enter') {\n      e.preventDefault();\n      if (onExecute && !isExecuting) {\n        onExecute();\n      }\n    }\n    \n    // Handle Tab for indentation\n    if (e.key === 'Tab') {\n      e.preventDefault();\n      const textarea = e.target;\n      const start = textarea.selectionStart;\n      const end = textarea.selectionEnd;\n      \n      // Insert spaces for tab\n      const newValue = value.substring(0, start) + '  ' + value.substring(end);\n      onChange(newValue);\n      \n      // Set cursor position after the inserted spaces\n      setTimeout(() => {\n        textarea.selectionStart = textarea.selectionEnd = start + 2;\n      }, 0);\n    }\n  };\n\n  const handleChange = (e) => {\n    onChange(e.target.value);\n  };\n\n  const handleScroll = (e) => {\n    // Sync scroll between textarea and highlight layer\n    if (highlightRef.current) {\n      highlightRef.current.scrollTop = e.target.scrollTop;\n      highlightRef.current.scrollLeft = e.target.scrollLeft;\n    }\n  };\n\n  return (\n    <div className=\"relative w-full\" style={{ height }}>\n      <div className=\"sql-editor-container w-full h-full\">\n        {/* Syntax highlighting layer */}\n        <div\n          ref={highlightRef}\n          className=\"sql-highlight\"\n          dangerouslySetInnerHTML={{ __html: highlightSQL(displayValue) }}\n        />\n        \n        {/* Transparent textarea for input */}\n        <textarea\n          ref={textareaRef}\n          value={displayValue}\n          onChange={handleChange}\n          onKeyDown={handleKeyDown}\n          onScroll={handleScroll}\n          readOnly={readOnly}\n          className=\"sql-textarea\"\n          placeholder=\"-- Write your SQL query here\n-- Use Ctrl+Enter to execute\n-- Keywords: SELECT, FROM, WHERE, JOIN, GROUP BY, ORDER BY\"\n          spellCheck={false}\n          autoCapitalize=\"off\"\n          autoComplete=\"off\"\n          autoCorrect=\"off\"\n        />\n      </div>\n      \n      {/* Help text overlay */}\n      <div className=\"absolute top-2 right-2 text-xs text-gray-300 bg-gray-800 bg-opacity-80 px-2 py-1 rounded pointer-events-none z-10\">\n        SQL Editor • Ctrl+Enter to run\n      </div>\n    </div>\n  );\n};\n\nexport default SQLSyntaxEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}