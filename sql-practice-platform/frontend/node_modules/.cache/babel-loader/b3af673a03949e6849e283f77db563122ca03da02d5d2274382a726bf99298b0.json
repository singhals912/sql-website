{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import ProgressService from'../services/progressService';import{apiUrl}from'../config/environment';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ProgressPage(){const[loading,setLoading]=useState(true);const[stats,setStats]=useState({totalProblems:0,solvedProblems:0,totalAttempts:0,correctAttempts:0,accuracyRate:0});const[recentActivity,setRecentActivity]=useState([]);useEffect(()=>{const fetchProgress=async()=>{setLoading(true);try{var _problemsData$problem;// Clear cache to get fresh data\nProgressService.clearCache();// Get basic problem count\nconst problemsResponse=await fetch(apiUrl('sql/problems'));const problemsData=await problemsResponse.json();const totalProblems=((_problemsData$problem=problemsData.problems)===null||_problemsData$problem===void 0?void 0:_problemsData$problem.length)||0;// Get user progress\nconst detailedProgress=await ProgressService.getDetailedProgress();// Calculate key metrics\nconst solvedProblems=detailedProgress.filter(p=>p.status==='completed').length;const totalAttempts=detailedProgress.reduce((sum,p)=>sum+(p.total_attempts||0),0);const correctAttempts=detailedProgress.reduce((sum,p)=>sum+(p.correct_attempts||0),0);const accuracyRate=totalAttempts>0?Math.round(correctAttempts/totalAttempts*100):0;// Get recent activity (last 10 problems worked on)\nconst recentActivity=detailedProgress.filter(p=>p.total_attempts>0).sort((a,b)=>new Date(b.last_attempt_at)-new Date(a.last_attempt_at)).slice(0,10);setStats({totalProblems,solvedProblems,totalAttempts,correctAttempts,accuracyRate});setRecentActivity(recentActivity);}catch(error){console.error('Failed to load progress:',error);}finally{setLoading(false);}};fetchProgress();},[]);const getDifficultyColor=difficulty=>{switch(difficulty===null||difficulty===void 0?void 0:difficulty.toLowerCase()){case'easy':return'text-green-600 bg-green-100';case'medium':return'text-yellow-600 bg-yellow-100';case'hard':return'text-red-600 bg-red-100';default:return'text-gray-600 bg-gray-100';}};const getStatusIcon=status=>{switch(status){case'completed':return'âœ…';case'attempted':return'ðŸ”„';default:return'â­•';}};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"max-w-4xl mx-auto px-4 py-8\",children:/*#__PURE__*/_jsx(\"div\",{className:\"text-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"text-lg text-gray-600\",children:\"Loading your progress...\"})})});}const completionRate=stats.totalProblems>0?Math.round(stats.solvedProblems/stats.totalProblems*100):0;return/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-4xl mx-auto px-4 py-8 animate-fade-in\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-8 animate-slide-up\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold text-gray-900 dark:text-white mb-2 gradient-text\",children:\"Your Progress\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 dark:text-gray-400 animate-slide-up animation-delay-100\",children:\"Track your SQL learning journey\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-8 animate-slide-up animation-delay-200\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-lg shadow p-6 border border-gray-200 dark:border-gray-700 card-hover animate-scale-in\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-3xl font-bold text-blue-600 dark:text-blue-400 animate-bounce-in\",children:stats.solvedProblems}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600 dark:text-gray-400\",children:\"Problems Solved\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-500 mt-1\",children:[\"of \",stats.totalProblems,\" total\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-lg shadow p-6 border border-gray-200 dark:border-gray-700 card-hover animate-scale-in animation-delay-100\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-3xl font-bold text-green-600 dark:text-green-400 animate-bounce-in animation-delay-100\",children:[completionRate,\"%\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600 dark:text-gray-400\",children:\"Completion Rate\"}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2 mt-2 progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-green-600 h-2 rounded-full animate-progress\",style:{'--progress-width':\"\".concat(completionRate,\"%\"),width:\"\".concat(completionRate,\"%\")}})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-lg shadow p-6 border border-gray-200 dark:border-gray-700 card-hover animate-scale-in animation-delay-200\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-3xl font-bold text-purple-600 dark:text-purple-400 animate-bounce-in animation-delay-200\",children:stats.totalAttempts}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600 dark:text-gray-400\",children:\"Total Attempts\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-500 mt-1\",children:[stats.correctAttempts,\" correct\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-lg shadow p-6 border border-gray-200 dark:border-gray-700 card-hover animate-scale-in animation-delay-300\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-3xl font-bold text-orange-600 dark:text-orange-400 animate-bounce-in animation-delay-300\",children:[stats.accuracyRate,\"%\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600 dark:text-gray-400\",children:\"Accuracy Rate\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-500 mt-1\",children:\"first-try success\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-lg shadow border border-gray-200 dark:border-gray-700 card-hover animate-slide-up animation-delay-400\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"px-6 py-4 border-b border-gray-200 dark:border-gray-700 animate-slide-down\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold text-gray-900 dark:text-white\",children:\"Recent Activity\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 dark:text-gray-400\",children:\"Your last 10 problems\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"p-6\",children:recentActivity.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-500 dark:text-gray-400 mb-4\",children:\"No activity yet\"}),/*#__PURE__*/_jsx(Link,{to:\"/problems\",className:\"inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors hover-lift btn-press animate-pulse-glow\",children:\"Start Solving Problems\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"space-y-3 animate-slide-up animation-delay-100\",children:recentActivity.map((activity,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-lg card-hover animate-slide-right animation-delay-\".concat(index*100+100),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-lg animate-bounce-in\",children:getStatusIcon(activity.status)}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(Link,{to:\"/practice/\".concat(activity.problem_numeric_id),className:\"font-medium text-gray-900 dark:text-white hover:text-blue-600 dark:hover:text-blue-400 hover-glow\",children:[\"Problem #\",activity.problem_numeric_id]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-500 dark:text-gray-400\",children:[activity.total_attempts,\" attempts \\u2022 \",activity.correct_attempts,\" correct\",activity.best_execution_time_ms&&\" \\u2022 \".concat(activity.best_execution_time_ms,\"ms best time\")]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"px-2 py-1 rounded text-xs font-medium \".concat(getDifficultyColor(activity.difficulty)),children:activity.difficulty}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-gray-500 dark:text-gray-400\",children:new Date(activity.last_attempt_at).toLocaleDateString()})]})]},activity.problem_numeric_id))})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-8 flex flex-col sm:flex-row gap-4 animate-slide-up animation-delay-500\",children:[/*#__PURE__*/_jsx(Link,{to:\"/problems\",className:\"flex-1 bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors text-center font-medium hover-lift btn-press animate-scale-in\",children:\"Browse All Problems\"}),/*#__PURE__*/_jsx(Link,{to:\"/practice\",className:\"flex-1 bg-green-600 text-white px-6 py-3 rounded-lg hover:bg-green-700 transition-colors text-center font-medium hover-lift btn-press animate-scale-in animation-delay-100\",children:\"Continue Practicing\"})]})]});}export default ProgressPage;","map":{"version":3,"names":["React","useState","useEffect","Link","ProgressService","apiUrl","jsx","_jsx","jsxs","_jsxs","ProgressPage","loading","setLoading","stats","setStats","totalProblems","solvedProblems","totalAttempts","correctAttempts","accuracyRate","recentActivity","setRecentActivity","fetchProgress","_problemsData$problem","clearCache","problemsResponse","fetch","problemsData","json","problems","length","detailedProgress","getDetailedProgress","filter","p","status","reduce","sum","total_attempts","correct_attempts","Math","round","sort","a","b","Date","last_attempt_at","slice","error","console","getDifficultyColor","difficulty","toLowerCase","getStatusIcon","className","children","completionRate","style","concat","width","to","map","activity","index","problem_numeric_id","best_execution_time_ms","toLocaleDateString"],"sources":["/Users/ss/Downloads/Code/Vibe_coding/SQL_practice_website/sql-practice-platform/frontend/src/pages/ProgressPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport ProgressService from '../services/progressService';\nimport { apiUrl } from '../config/environment';\n\nfunction ProgressPage() {\n  const [loading, setLoading] = useState(true);\n  const [stats, setStats] = useState({\n    totalProblems: 0,\n    solvedProblems: 0,\n    totalAttempts: 0,\n    correctAttempts: 0,\n    accuracyRate: 0\n  });\n  const [recentActivity, setRecentActivity] = useState([]);\n\n  useEffect(() => {\n    const fetchProgress = async () => {\n      setLoading(true);\n      try {\n        // Clear cache to get fresh data\n        ProgressService.clearCache();\n        \n        // Get basic problem count\n        const problemsResponse = await fetch(apiUrl('sql/problems'));\n        const problemsData = await problemsResponse.json();\n        const totalProblems = problemsData.problems?.length || 0;\n\n        // Get user progress\n        const detailedProgress = await ProgressService.getDetailedProgress();\n        \n        // Calculate key metrics\n        const solvedProblems = detailedProgress.filter(p => p.status === 'completed').length;\n        const totalAttempts = detailedProgress.reduce((sum, p) => sum + (p.total_attempts || 0), 0);\n        const correctAttempts = detailedProgress.reduce((sum, p) => sum + (p.correct_attempts || 0), 0);\n        const accuracyRate = totalAttempts > 0 ? Math.round((correctAttempts / totalAttempts) * 100) : 0;\n\n        // Get recent activity (last 10 problems worked on)\n        const recentActivity = detailedProgress\n          .filter(p => p.total_attempts > 0)\n          .sort((a, b) => new Date(b.last_attempt_at) - new Date(a.last_attempt_at))\n          .slice(0, 10);\n\n        setStats({\n          totalProblems,\n          solvedProblems,\n          totalAttempts,\n          correctAttempts,\n          accuracyRate\n        });\n        \n        setRecentActivity(recentActivity);\n      } catch (error) {\n        console.error('Failed to load progress:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchProgress();\n  }, []);\n\n  const getDifficultyColor = (difficulty) => {\n    switch (difficulty?.toLowerCase()) {\n      case 'easy': return 'text-green-600 bg-green-100';\n      case 'medium': return 'text-yellow-600 bg-yellow-100';\n      case 'hard': return 'text-red-600 bg-red-100';\n      default: return 'text-gray-600 bg-gray-100';\n    }\n  };\n\n  const getStatusIcon = (status) => {\n    switch (status) {\n      case 'completed': return 'âœ…';\n      case 'attempted': return 'ðŸ”„';\n      default: return 'â­•';\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"max-w-4xl mx-auto px-4 py-8\">\n        <div className=\"text-center\">\n          <div className=\"text-lg text-gray-600\">Loading your progress...</div>\n        </div>\n      </div>\n    );\n  }\n\n  const completionRate = stats.totalProblems > 0 ? Math.round((stats.solvedProblems / stats.totalProblems) * 100) : 0;\n\n  return (\n    <div className=\"max-w-4xl mx-auto px-4 py-8 animate-fade-in\">\n      {/* Header */}\n      <div className=\"mb-8 animate-slide-up\">\n        <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white mb-2 gradient-text\">Your Progress</h1>\n        <p className=\"text-gray-600 dark:text-gray-400 animate-slide-up animation-delay-100\">Track your SQL learning journey</p>\n      </div>\n\n      {/* Key Stats */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-8 animate-slide-up animation-delay-200\">\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6 border border-gray-200 dark:border-gray-700 card-hover animate-scale-in\">\n          <div className=\"text-3xl font-bold text-blue-600 dark:text-blue-400 animate-bounce-in\">{stats.solvedProblems}</div>\n          <div className=\"text-sm text-gray-600 dark:text-gray-400\">Problems Solved</div>\n          <div className=\"text-xs text-gray-500 mt-1\">of {stats.totalProblems} total</div>\n        </div>\n        \n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6 border border-gray-200 dark:border-gray-700 card-hover animate-scale-in animation-delay-100\">\n          <div className=\"text-3xl font-bold text-green-600 dark:text-green-400 animate-bounce-in animation-delay-100\">{completionRate}%</div>\n          <div className=\"text-sm text-gray-600 dark:text-gray-400\">Completion Rate</div>\n          <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2 mt-2 progress-bar\">\n            <div className=\"bg-green-600 h-2 rounded-full animate-progress\" style={{ '--progress-width': `${completionRate}%`, width: `${completionRate}%` }}></div>\n          </div>\n        </div>\n        \n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6 border border-gray-200 dark:border-gray-700 card-hover animate-scale-in animation-delay-200\">\n          <div className=\"text-3xl font-bold text-purple-600 dark:text-purple-400 animate-bounce-in animation-delay-200\">{stats.totalAttempts}</div>\n          <div className=\"text-sm text-gray-600 dark:text-gray-400\">Total Attempts</div>\n          <div className=\"text-xs text-gray-500 mt-1\">{stats.correctAttempts} correct</div>\n        </div>\n        \n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6 border border-gray-200 dark:border-gray-700 card-hover animate-scale-in animation-delay-300\">\n          <div className=\"text-3xl font-bold text-orange-600 dark:text-orange-400 animate-bounce-in animation-delay-300\">{stats.accuracyRate}%</div>\n          <div className=\"text-sm text-gray-600 dark:text-gray-400\">Accuracy Rate</div>\n          <div className=\"text-xs text-gray-500 mt-1\">first-try success</div>\n        </div>\n      </div>\n\n      {/* Recent Activity */}\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow border border-gray-200 dark:border-gray-700 card-hover animate-slide-up animation-delay-400\">\n        <div className=\"px-6 py-4 border-b border-gray-200 dark:border-gray-700 animate-slide-down\">\n          <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">Recent Activity</h2>\n          <p className=\"text-sm text-gray-600 dark:text-gray-400\">Your last 10 problems</p>\n        </div>\n        \n        <div className=\"p-6\">\n          {recentActivity.length === 0 ? (\n            <div className=\"text-center py-8\">\n              <div className=\"text-gray-500 dark:text-gray-400 mb-4\">No activity yet</div>\n              <Link \n                to=\"/problems\" \n                className=\"inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors hover-lift btn-press animate-pulse-glow\"\n              >\n                Start Solving Problems\n              </Link>\n            </div>\n          ) : (\n            <div className=\"space-y-3 animate-slide-up animation-delay-100\">\n              {recentActivity.map((activity, index) => (\n                <div key={activity.problem_numeric_id} className={`flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-lg card-hover animate-slide-right animation-delay-${index * 100 + 100}`}>\n                  <div className=\"flex items-center space-x-3\">\n                    <span className=\"text-lg animate-bounce-in\">{getStatusIcon(activity.status)}</span>\n                    <div>\n                      <Link \n                        to={`/practice/${activity.problem_numeric_id}`}\n                        className=\"font-medium text-gray-900 dark:text-white hover:text-blue-600 dark:hover:text-blue-400 hover-glow\"\n                      >\n                        Problem #{activity.problem_numeric_id}\n                      </Link>\n                      <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n                        {activity.total_attempts} attempts â€¢ {activity.correct_attempts} correct\n                        {activity.best_execution_time_ms && ` â€¢ ${activity.best_execution_time_ms}ms best time`}\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-center space-x-2\">\n                    <span className={`px-2 py-1 rounded text-xs font-medium ${getDifficultyColor(activity.difficulty)}`}>\n                      {activity.difficulty}\n                    </span>\n                    <span className=\"text-xs text-gray-500 dark:text-gray-400\">\n                      {new Date(activity.last_attempt_at).toLocaleDateString()}\n                    </span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Quick Actions */}\n      <div className=\"mt-8 flex flex-col sm:flex-row gap-4 animate-slide-up animation-delay-500\">\n        <Link \n          to=\"/problems\" \n          className=\"flex-1 bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors text-center font-medium hover-lift btn-press animate-scale-in\"\n        >\n          Browse All Problems\n        </Link>\n        <Link \n          to=\"/practice\" \n          className=\"flex-1 bg-green-600 text-white px-6 py-3 rounded-lg hover:bg-green-700 transition-colors text-center font-medium hover-lift btn-press animate-scale-in animation-delay-100\"\n        >\n          Continue Practicing\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default ProgressPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}