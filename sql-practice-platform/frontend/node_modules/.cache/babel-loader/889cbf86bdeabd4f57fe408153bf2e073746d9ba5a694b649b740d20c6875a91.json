{"ast":null,"code":"import _objectSpread from\"/Users/ss/Downloads/Code/Vibe_coding/SQL_practice_website/sql-practice-platform/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useCallback,useMemo}from'react';import{useParams,useNavigate,Navigate,useLocation}from'react-router-dom';import{useAuth}from'../contexts/AuthContext';import ProgressService from'../services/progressService';import SmartHintsPanel from'../components/SmartHintsPanel';import BookmarkButton from'../components/BookmarkButton';import EnhancedErrorDisplay from'../components/EnhancedErrorDisplay';import SQLHighlightEditor from'../components/SQLHighlightEditor';import SQLHighlightDisplay from'../components/SQLHighlightDisplay';import{sqlUrl,apiUrl,learningPathsUrl}from'../config/environment';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function PracticePage(){var _problem$difficulty,_problem$difficulty2;const{problemId}=useParams();const navigate=useNavigate();const location=useLocation();const{token}=useAuth();const[sqlQuery,setSqlQuery]=useState('-- Write your SQL query here\\n');const[selectedDialect,setSelectedDialect]=useState('postgresql');const[isExecuting,setIsExecuting]=useState(false);const[results,setResults]=useState(null);const[error,setError]=useState(null);const[problem,setProblem]=useState(null);const[schema,setSchema]=useState(null);const[showSolution,setShowSolution]=useState(false);const[allProblems,setAllProblems]=useState([]);const[showProblemsList,setShowProblemsList]=useState(false);const[currentProblemIndex,setCurrentProblemIndex]=useState(0);const[attemptCount,setAttemptCount]=useState(0);const[showHints,setShowHints]=useState(false);const[learningPathContext,setLearningPathContext]=useState(null);const[pathPosition,setPathPosition]=useState(null);const[errorAnalysis,setErrorAnalysis]=useState(null);const[expandedSection,setExpandedSection]=useState(null);// 'schema' or 'expected' or null\nconst[activeTab,setActiveTab]=useState('description');// 'description', 'editorial', 'solutions'\n// Load cached query from localStorage when problem changes\nuseEffect(()=>{if(problemId){const cachedQuery=localStorage.getItem(\"sql_query_\".concat(problemId));console.log('DEBUG: Loading cached query for problem',problemId,':',cachedQuery?cachedQuery.substring(0,50)+'...':'not found');// Clean up problematic cached queries\nif(cachedQuery&&cachedQuery.includes('SELECT * FROM customers;')){console.log('DEBUG: Removing problematic cached query');localStorage.removeItem(\"sql_query_\".concat(problemId));setSqlQuery('-- Write your SQL query here\\n');}else if(cachedQuery&&cachedQuery!=='-- Write your SQL query here\\n'&&cachedQuery.trim()!==''){setSqlQuery(cachedQuery);}else{setSqlQuery('-- Write your SQL query here\\n');}}},[problemId]);// Save query to localStorage whenever it changes\nuseEffect(()=>{if(problemId&&sqlQuery&&sqlQuery!=='-- Write your SQL query here\\n'&&sqlQuery.trim()!==''){const timeoutId=setTimeout(()=>{console.log('DEBUG: Saving query to localStorage for problem',problemId,sqlQuery.substring(0,50)+'...');localStorage.setItem(\"sql_query_\".concat(problemId),sqlQuery);},500);// Debounce saving for 500ms\nreturn()=>clearTimeout(timeoutId);}},[sqlQuery,problemId]);// Define callback functions first (before useEffect that uses them)\nconst setupProblemEnvironment=async id=>{try{await fetch(sqlUrl(\"problems/\".concat(id,\"/setup\")),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({dialect:selectedDialect})});}catch(error){console.error('Failed to setup problem environment:',error);}};const loadProblem=useCallback(async id=>{try{const response=await fetch(sqlUrl(\"problems/\".concat(id)));const data=await response.json();if(response.ok){var _data$problem,_data$problem2,_data$problem3;console.log('DEBUG: Successfully loaded problem data:',data);console.log('DEBUG: Problem object exists:',!!data.problem);console.log('DEBUG: Problem title:',(_data$problem=data.problem)===null||_data$problem===void 0?void 0:_data$problem.title);console.log('DEBUG: Problem numeric_id:',(_data$problem2=data.problem)===null||_data$problem2===void 0?void 0:_data$problem2.numeric_id);console.log('DEBUG: Full problem object:',JSON.stringify(data.problem));setProblem(data.problem);setSchema(data.schema||((_data$problem3=data.problem)===null||_data$problem3===void 0?void 0:_data$problem3.schema));// Don't reset sqlQuery here - let the caching useEffect handle it\nsetShowSolution(false);// Reset solution visibility\n// Clear results and errors when loading a new problem\nsetResults(null);setError(null);// Reset attempt count for new problem\nsetAttemptCount(0);setShowHints(false);// Setup problem environment\nawait setupProblemEnvironment(id);}else{console.error('DEBUG: API response not ok:',response.status,response.statusText);console.error('DEBUG: Response data:',data);}}catch(error){console.error('DEBUG: Failed to load problem:',error);console.error('DEBUG: Error details:',error.message,error.stack);}},[selectedDialect]);const checkLearningPathContext=useCallback(async problemId=>{try{// Check if learning path is specified in URL parameters\nconst searchParams=new URLSearchParams(location.search);const learningPathId=searchParams.get('learningPath');if(learningPathId){// User came from a specific learning path, use that context\nconst positionResponse=await fetch(learningPathsUrl(\"\".concat(learningPathId,\"/position/\").concat(problemId)));const positionData=await positionResponse.json();if(positionResponse.ok){setLearningPathContext({learning_path_id:learningPathId,learning_path_name:'Learning Path'});setPathPosition(positionData.position);return;}}// Fallback: check if problem belongs to any learning paths\nconst response=await fetch(apiUrl(\"problems/\".concat(problemId,\"/learning-paths\")));const data=await response.json();if(response.ok&&data.learningPaths&&data.learningPaths.length>0){// Set the first learning path as context\nconst primaryPath=data.learningPaths[0];setLearningPathContext(primaryPath);// Get position information for this problem in the learning path\nconst positionResponse=await fetch(learningPathsUrl(\"\".concat(primaryPath.learning_path_id,\"/position/\").concat(problemId)));const positionData=await positionResponse.json();if(positionResponse.ok){setPathPosition(positionData.position);}}else{setLearningPathContext(null);setPathPosition(null);}}catch(error){console.error('Failed to check learning path context:',error);setLearningPathContext(null);setPathPosition(null);}},[location.search]);// Load all problems and current problem\nuseEffect(()=>{const initialize=async()=>{// Initialize session first\ntry{console.log('DEBUG PracticePage: Initializing session');await ProgressService.initializeSession();console.log('DEBUG PracticePage: Session initialized with ID:',ProgressService.sessionId);}catch(error){console.error('Failed to initialize session in PracticePage:',error);}// Then load problems and current problem\nloadAllProblems();if(problemId){loadProblem(problemId);checkLearningPathContext(problemId);}else{// Set up default environment\nsetupDefaultEnvironment();}};initialize();},[problemId,location.search,loadProblem,checkLearningPathContext]);// Update current problem index when problem changes\nuseEffect(()=>{if(problemId&&allProblems&&allProblems.length>0){const index=allProblems.findIndex(p=>p.id===problemId||p.slug===problemId||p.numeric_id===parseInt(problemId));if(index!==-1){setCurrentProblemIndex(index);}}},[problemId,allProblems]);const loadAllProblems=async()=>{try{// Check if we're in a learning path context\nconst searchParams=new URLSearchParams(location.search);const learningPathId=searchParams.get('learningPath');if(learningPathId){// Load problems specific to this learning path\nconst response=await fetch(learningPathsUrl(\"\".concat(learningPathId)));const data=await response.json();if(response.ok&&data.problems){// Sort by step order for learning paths\nconst sortedProblems=data.problems.sort((a,b)=>(a.stepOrder||0)-(b.stepOrder||0)).map(problem=>_objectSpread(_objectSpread({},problem),{},{// Ensure compatibility with existing problem structure\nid:problem.id,numeric_id:problem.numeric_id,title:problem.title,difficulty:problem.difficulty,slug:problem.slug}));setAllProblems(sortedProblems);console.log(\"Loaded \".concat(sortedProblems.length,\" problems for learning path\"));}else{console.error('Learning path problems not found:',data);setAllProblems([]);}}else{// Load all problems (default behavior)\nconst response=await fetch(sqlUrl('problems'));const data=await response.json();if(response.ok&&data.problems){// Sort problems by numeric_id for sequential ordering\nconst sortedProblems=data.problems.sort((a,b)=>(a.numeric_id||0)-(b.numeric_id||0));setAllProblems(sortedProblems);}else{console.error('Problems data not found in response:',data);setAllProblems([]);}}}catch(error){console.error('Failed to load problems list:',error);setAllProblems([]);}};const navigateToProblem=problemId=>{// Preserve learning path context in URL if it exists\nconst searchParams=new URLSearchParams(location.search);const learningPathId=searchParams.get('learningPath');const url=learningPathId?\"/practice/\".concat(problemId,\"?learningPath=\").concat(learningPathId):\"/practice/\".concat(problemId);navigate(url);setShowProblemsList(false);// Clear results and errors when navigating to a new problem\nsetResults(null);setError(null);// Scroll to top when navigating to new problem\nwindow.scrollTo({top:0,behavior:'smooth'});};const navigateToNextProblem=useCallback(async()=>{// If in learning path context, use learning path navigation\nif(learningPathContext&&pathPosition){try{const response=await fetch(learningPathsUrl(\"\".concat(learningPathContext.learning_path_id,\"/next/\").concat(problemId)));const data=await response.json();if(response.ok&&data.nextProblem){navigateToProblem(data.nextProblem.problem_numeric_id);}else if(data.message){// Show completion message for learning path\nalert(data.message);}return;}catch(error){console.error('Failed to get next problem in path:',error);// Fall through to regular navigation\n}}// Regular navigation (not in learning path or API failed)\nif(allProblems&&allProblems.length>0&&currentProblemIndex<allProblems.length-1){const nextProblem=allProblems[currentProblemIndex+1];if(nextProblem){navigateToProblem(nextProblem.numeric_id);}}},[learningPathContext,pathPosition,problemId,allProblems,currentProblemIndex]);const navigateToPreviousProblem=useCallback(async()=>{// If in learning path context, use learning path navigation\nif(learningPathContext&&pathPosition&&pathPosition.has_previous){const prevProblem=pathPosition.previous_problem;if(prevProblem){navigateToProblem(prevProblem.problem_numeric_id);return;}}// Regular navigation (not in learning path or no previous in path)\nif(currentProblemIndex>0){const prevProblem=allProblems[currentProblemIndex-1];navigateToProblem(prevProblem.numeric_id);}},[learningPathContext,pathPosition,currentProblemIndex,allProblems]);const getDifficultyColor=difficulty=>{switch(difficulty===null||difficulty===void 0?void 0:difficulty.toLowerCase()){case'easy':return'text-green-600 bg-green-100';case'medium':return'text-yellow-600 bg-yellow-100';case'hard':return'text-red-600 bg-red-100';default:return'text-gray-600 bg-gray-100';}};// Memoize the expensive schema parsing to prevent re-computation on every render\nconst parsedSchema=useMemo(()=>{if(!(schema!==null&&schema!==void 0&&schema.setup_sql))return{tables:[],sampleData:{}};const createTableRegex=/CREATE TABLE (\\w+) \\(([\\s\\S]*?)\\);/g;const tables=[];const sampleData={};let match;// Parse table structures\nwhile((match=createTableRegex.exec(schema.setup_sql))!==null){const tableName=match[1];const columnsText=match[2];const parseColumns=columnsText=>{const columns=[];let current='';let parenDepth=0;for(let i=0;i<columnsText.length;i++){const char=columnsText[i];if(char==='(')parenDepth++;if(char===')')parenDepth--;if(char===','&&parenDepth===0){if(current.trim())columns.push(current.trim());current='';}else{current+=char;}}if(current.trim())columns.push(current.trim());return columns;};const columns=parseColumns(columnsText).filter(col=>col.length>0).map(col=>{const parts=col.split(' ');const name=parts[0];const type=parts.slice(1).join(' ').toUpperCase();return{name,type};});tables.push({name:tableName,columns});}// Parse sample data\nconst insertMatches=[...schema.setup_sql.matchAll(/INSERT\\s+INTO\\s+(\\w+)(?:\\s*\\([^)]+\\))?\\s+VALUES\\s+([\\s\\S]*?);/gi)];insertMatches.forEach(match=>{const tableName=match[1];const valuesText=match[2];const rowMatches=[...valuesText.matchAll(/\\(([\\s\\S]*?)\\)/g)];sampleData[tableName]=rowMatches.slice(0,3).map(rowMatch=>{return rowMatch[1].split(',').map(val=>{const trimmed=val.trim();if(trimmed==='NULL')return'NULL';return trimmed.replace(/^'|'$/g,'').replace(/''/g,\"'\");});});});return{tables,sampleData};},[schema===null||schema===void 0?void 0:schema.setup_sql]);// Memoize the processed problem description to prevent re-processing\nconst processedDescription=useMemo(()=>{if(!(problem!==null&&problem!==void 0&&problem.description))return'';return problem.description.replace(/\\*\\*Expected Output:\\*\\*.*?(?=\\*\\*|$)/g,'').replace(/Expected Output:.*?(?=\\n\\n|\\n\\*\\*|$)/g,'').replace(/\\*\\*Business Context:\\*\\*/g,'<h4 class=\"text-gray-900 dark:text-white font-semibold mt-6 mb-2\">Business Context</h4>').replace(/\\*\\*Scenario:\\*\\*/g,'<h4 class=\"text-gray-900 dark:text-white font-semibold mt-6 mb-2\">Scenario</h4>').replace(/\\*\\*Problem:\\*\\*/g,'<h4 class=\"text-gray-900 dark:text-white font-semibold mt-6 mb-2\">Problem</h4>').replace(/Business Context:/g,'<h4 class=\"text-gray-900 dark:text-white font-semibold mt-6 mb-2\">Business Context</h4>').replace(/Scenario:/g,'<h4 class=\"text-gray-900 dark:text-white font-semibold mt-6 mb-2\">Scenario</h4>').replace(/Problem:/g,'<h4 class=\"text-gray-900 dark:text-white font-semibold mt-6 mb-2\">Problem</h4>').replace(/\\*\\*(.*?)\\*\\*/g,'<strong class=\"text-gray-900 dark:text-white\">$1</strong>').replace(/`(.*?)`/g,'<code class=\"bg-gray-100 dark:bg-gray-800 text-red-600 dark:text-red-400 px-1 py-0.5 rounded text-sm\">$1</code>').replace(/```sql\\n([\\s\\S]*?)\\n```/g,'<pre class=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg overflow-x-auto mt-4 mb-4\"><code class=\"text-sm text-gray-900 dark:text-gray-100\">$1</code></pre>').replace(/\\n/g,'<br>').replace(/<br><br>/g,'<br>');},[problem===null||problem===void 0?void 0:problem.description]);const setupDefaultEnvironment=async()=>{// Default environment is set up automatically by the backend\nconsole.log('Using default practice environment');};const executeQuery=async()=>{if(!sqlQuery.trim()){setError('Please enter a SQL query');return;}setIsExecuting(true);setError(null);setResults(null);// Clear previous results\n// Increment attempt count\nconst newAttemptCount=attemptCount+1;setAttemptCount(newAttemptCount);try{console.log('DEBUG: Executing query with session ID:',ProgressService.sessionId,'for problem:',problemId);// Create AbortController for timeout\nconst controller=new AbortController();const timeoutId=setTimeout(()=>controller.abort(),30000);// 30 second timeout\nconst response=await fetch(apiUrl('execute/sql'),{method:'POST',signal:controller.signal,headers:_objectSpread({'Content-Type':'application/json','X-Session-ID':ProgressService.sessionId},token&&{'Authorization':\"Bearer \".concat(token)}),body:JSON.stringify({sql:sqlQuery,dialect:selectedDialect,problemId:problem===null||problem===void 0?void 0:problem.id,// UUID from problem object\nproblemNumericId:(problem===null||problem===void 0?void 0:problem.numeric_id)||parseInt(problemId)// Numeric ID\n})});clearTimeout(timeoutId);console.log('DEBUG: Response status:',response.status);if(!response.ok){throw new Error(\"HTTP error! status: \".concat(response.status));}const data=await response.json();console.log('DEBUG: Response data:',data);if(data.success){setResults(data.data);setError(null);setErrorAnalysis(null);// Clear progress cache to ensure fresh data\nProgressService.clearCache();// Progress is automatically tracked by the backend in execute.js\nconsole.log('DEBUG: Query completed. Progress should be automatically tracked by backend.',{sessionId:ProgressService.sessionId,problemId:(problem===null||problem===void 0?void 0:problem.id)||problemId,problemNumericId:problemId,isCorrect:data.data.isCorrect});// Emit progress update event if problem was solved correctly\nif(data.data.isCorrect){console.log('🎉 Problem solved correctly! Emitting progressUpdated event...');window.dispatchEvent(new CustomEvent('progressUpdated',{detail:{problemId,solved:true}}));console.log('✅ progressUpdated event emitted');}}else{console.log('DEBUG: Setting error:',data.error);setError(data.error);setErrorAnalysis(data.errorAnalysis||null);setResults(null);// Clear results on error\nconsole.log('DEBUG: Error state should now be set');// Note: Progress tracking for failed attempts is handled by the backend in execute.js\n}}catch(err){console.error('DEBUG: Query execution error:',err);if(err.name==='AbortError'){setError('Query timed out after 30 seconds. Please try a simpler query.');}else{setError(\"Failed to execute query: \".concat(err.message));}setErrorAnalysis(null);setResults(null);// Clear results on network error\n}finally{setIsExecuting(false);}};// Close problems list when clicking outside\nuseEffect(()=>{const handleClickOutside=event=>{if(!event.target.closest('.relative')){setShowProblemsList(false);}};if(showProblemsList){document.addEventListener('mousedown',handleClickOutside);}return()=>{document.removeEventListener('mousedown',handleClickOutside);};},[showProblemsList]);// Debug: Track error state changes\nuseEffect(()=>{console.log('DEBUG: Error state changed to:',error);},[error]);// Add keyboard shortcuts\nuseEffect(()=>{const handleKeyPress=event=>{// Only trigger shortcuts when not typing in textarea or input\nif(event.target.tagName==='TEXTAREA'||event.target.tagName==='INPUT'){return;}if(event.key==='ArrowLeft'&&event.ctrlKey){event.preventDefault();navigateToPreviousProblem();}else if(event.key==='ArrowRight'&&event.ctrlKey){event.preventDefault();navigateToNextProblem();}else if(event.key==='p'&&event.ctrlKey){event.preventDefault();setShowProblemsList(!showProblemsList);}};document.addEventListener('keydown',handleKeyPress);return()=>{document.removeEventListener('keydown',handleKeyPress);};},[currentProblemIndex,allProblems===null||allProblems===void 0?void 0:allProblems.length,showProblemsList,navigateToNextProblem,navigateToPreviousProblem]);// If no problem is selected, redirect to problems page\nif(!problemId){return/*#__PURE__*/_jsx(Navigate,{to:\"/problems\",replace:true});}// Problem mode - show the full problem-solving interface\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"h-screen flex flex-col bg-white dark:bg-gray-900\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"border-b border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800\",children:/*#__PURE__*/_jsx(\"div\",{className:\"px-4 py-3\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-4\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/problems'),className:\"text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\",children:/*#__PURE__*/_jsx(\"svg\",{className:\"w-5 h-5\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:2,d:\"M15 19l-7-7 7-7\"})})}),problem&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsxs(\"h1\",{className:\"text-lg font-medium text-gray-900 dark:text-white\",children:[console.log('DEBUG RENDER: problem object:',problem)||'',console.log('DEBUG RENDER: numeric_id:',problem.numeric_id,'title:',problem.title)||'',problem.numeric_id||'No ID',\". \",problem.title||'No Title']}),/*#__PURE__*/_jsx(\"span\",{className:\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium \".concat(problem.difficulty==='easy'?'bg-green-100 text-green-800':problem.difficulty==='medium'?'bg-yellow-100 text-yellow-800':'bg-red-100 text-red-800'),children:((_problem$difficulty=problem.difficulty)===null||_problem$difficulty===void 0?void 0:_problem$difficulty.charAt(0).toUpperCase())+((_problem$difficulty2=problem.difficulty)===null||_problem$difficulty2===void 0?void 0:_problem$difficulty2.slice(1))})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsx(BookmarkButton,{problemId:problem===null||problem===void 0?void 0:problem.id,size:\"sm\"}),/*#__PURE__*/_jsx(\"button\",{onClick:navigateToPreviousProblem,disabled:currentProblemIndex===0,className:\"p-2 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 disabled:opacity-50\",children:/*#__PURE__*/_jsx(\"svg\",{className:\"w-4 h-4\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:2,d:\"M15 19l-7-7 7-7\"})})}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setShowProblemsList(!showProblemsList),className:\"px-3 py-1.5 text-sm text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white border border-gray-300 dark:border-gray-600 rounded\",children:[currentProblemIndex+1,\" / \",(allProblems===null||allProblems===void 0?void 0:allProblems.length)||0]}),/*#__PURE__*/_jsx(\"button\",{onClick:navigateToNextProblem,disabled:currentProblemIndex===((allProblems===null||allProblems===void 0?void 0:allProblems.length)||0)-1,className:\"p-2 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 disabled:opacity-50\",children:/*#__PURE__*/_jsx(\"svg\",{className:\"w-4 h-4\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:2,d:\"M9 5l7 7-7 7\"})})})]})]})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 flex\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"w-1/2 border-r border-gray-200 dark:border-gray-700 flex flex-col\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"border-b border-gray-200 dark:border-gray-700\",children:/*#__PURE__*/_jsxs(\"nav\",{className:\"flex px-4\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setActiveTab('description'),className:\"px-4 py-3 text-sm font-medium transition-colors \".concat(activeTab==='description'?'text-blue-600 border-b-2 border-blue-600':'text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300'),children:\"Description\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setActiveTab('editorial'),className:\"px-4 py-3 text-sm font-medium transition-colors \".concat(activeTab==='editorial'?'text-blue-600 border-b-2 border-blue-600':'text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300'),children:\"Editorial\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setActiveTab('solutions'),className:\"px-4 py-3 text-sm font-medium transition-colors \".concat(activeTab==='solutions'?'text-blue-600 border-b-2 border-blue-600':'text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300'),children:\"Solutions\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 overflow-y-auto p-4\",children:problem&&/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[activeTab==='description'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"prose prose-sm max-w-none text-gray-700 dark:text-gray-300\",children:/*#__PURE__*/_jsx(\"div\",{dangerouslySetInnerHTML:{__html:processedDescription}})}),parsedSchema.tables.length>0&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-gray-900 dark:text-white font-semibold mb-4\",children:\"Database Schema\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4\",children:parsedSchema.tables.map(table=>/*#__PURE__*/_jsxs(\"div\",{className:\"border border-gray-200 dark:border-gray-700 rounded-lg\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-50 dark:bg-gray-800 px-4 py-2 border-b border-gray-200 dark:border-gray-700\",children:/*#__PURE__*/_jsx(\"span\",{className:\"font-mono text-sm font-semibold text-gray-900 dark:text-white\",children:table.name})}),/*#__PURE__*/_jsx(\"div\",{className:\"divide-y divide-gray-100 dark:divide-gray-700\",children:table.columns.map(col=>/*#__PURE__*/_jsxs(\"div\",{className:\"px-4 py-2 flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-mono text-sm text-gray-700 dark:text-gray-300\",children:col.name}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-gray-500 dark:text-gray-400 bg-gray-100 dark:bg-gray-800 px-2 py-1 rounded\",children:col.type})]},col.name))}),parsedSchema.sampleData[table.name]&&parsedSchema.sampleData[table.name].length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"border-t border-gray-200 dark:border-gray-700 p-4\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"text-xs font-medium text-gray-600 dark:text-gray-400 mb-2 uppercase tracking-wider\",children:\"Sample Data\"}),/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"min-w-full text-xs\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsx(\"tr\",{className:\"bg-gray-50 dark:bg-gray-800\",children:table.columns.map(col=>/*#__PURE__*/_jsx(\"th\",{className:\"px-3 py-2 text-left font-medium text-gray-600 dark:text-gray-400 border border-gray-200 dark:border-gray-600\",children:col.name},col.name))})}),/*#__PURE__*/_jsx(\"tbody\",{children:parsedSchema.sampleData[table.name].map((row,idx)=>/*#__PURE__*/_jsx(\"tr\",{className:\"bg-white dark:bg-gray-900\",children:row.map((cell,cellIdx)=>/*#__PURE__*/_jsx(\"td\",{className:\"px-3 py-2 text-gray-700 dark:text-gray-300 border border-gray-200 dark:border-gray-600\",children:cell},cellIdx))},idx))})]})})]})]},table.name))})]}),schema&&schema.expected_output&&schema.expected_output.length>0&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-gray-900 dark:text-white font-semibold mb-4\",children:\"Expected Output\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"border border-gray-200 dark:border-gray-700 rounded-lg overflow-hidden\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"bg-gray-50 dark:bg-gray-800\",children:/*#__PURE__*/_jsx(\"tr\",{children:Object.keys(schema.expected_output[0]).map(column=>/*#__PURE__*/_jsx(\"th\",{className:\"px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\",children:column},column))})}),/*#__PURE__*/_jsx(\"tbody\",{className:\"bg-white dark:bg-gray-900 divide-y divide-gray-200 dark:divide-gray-700\",children:schema.expected_output.slice(0,5).map((row,idx)=>/*#__PURE__*/_jsx(\"tr\",{children:Object.values(row).map((cell,cellIdx)=>/*#__PURE__*/_jsx(\"td\",{className:\"px-4 py-2 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100\",children:cell!==null?cell.toString():'NULL'},cellIdx))},idx))})]})}),schema.expected_output.length>5&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 dark:bg-gray-800 px-4 py-2 text-xs text-gray-500 dark:text-gray-400 text-center\",children:[\"Showing 5 of \",schema.expected_output.length,\" rows\"]})]})]})]}),activeTab==='editorial'&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-12\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-400 text-6xl mb-4\",children:\"\\uD83D\\uDCDA\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900 dark:text-white mb-2\",children:\"Editorial Coming Soon\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 dark:text-gray-400\",children:\"Detailed explanations and approaches for this problem will be available soon.\"})]}),activeTab==='solutions'&&/*#__PURE__*/_jsx(\"div\",{className:\"space-y-6\",children:schema&&schema.solution_sql?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-4\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-gray-900 dark:text-white font-semibold\",children:\"Official Solution\"}),/*#__PURE__*/_jsx(\"button\",{onClick:async event=>{try{if(navigator.clipboard&&navigator.clipboard.writeText){await navigator.clipboard.writeText(schema.solution_sql);// Show success feedback\nconst button=event.target;const originalText=button.textContent;button.textContent='Copied!';button.className='px-3 py-1.5 bg-green-600 text-white text-sm rounded transition-colors';setTimeout(()=>{button.textContent=originalText;button.className='px-3 py-1.5 bg-blue-600 hover:bg-blue-700 text-white text-sm rounded transition-colors';},2000);}else{// Fallback for older browsers\nconst textArea=document.createElement('textarea');textArea.value=schema.solution_sql;textArea.style.position='fixed';textArea.style.opacity='0';document.body.appendChild(textArea);textArea.select();document.execCommand('copy');document.body.removeChild(textArea);// Show success feedback\nconst button=event.target;const originalText=button.textContent;button.textContent='Copied!';button.className='px-3 py-1.5 bg-green-600 text-white text-sm rounded transition-colors';setTimeout(()=>{button.textContent=originalText;button.className='px-3 py-1.5 bg-blue-600 hover:bg-blue-700 text-white text-sm rounded transition-colors';},2000);}}catch(error){console.error('Failed to copy solution:',error);// Show error feedback\nconst button=event.target;const originalText=button.textContent;button.textContent='Copy Failed!';button.className='px-3 py-1.5 bg-red-600 text-white text-sm rounded transition-colors';setTimeout(()=>{button.textContent=originalText;button.className='px-3 py-1.5 bg-blue-600 hover:bg-blue-700 text-white text-sm rounded transition-colors';},2000);}},className:\"px-3 py-1.5 bg-blue-600 hover:bg-blue-700 text-white text-sm rounded transition-colors\",children:\"Copy Solution\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-50 dark:bg-gray-800 rounded-lg p-4\",children:/*#__PURE__*/_jsx(\"pre\",{className:\"text-sm text-gray-900 dark:text-gray-100 overflow-x-auto\",children:/*#__PURE__*/_jsx(\"code\",{children:schema.solution_sql})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 p-4 bg-blue-50 dark:bg-blue-900/50 border border-blue-200 dark:border-blue-800 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"font-medium text-blue-900 dark:text-blue-300 mb-2\",children:\"Approach\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-blue-800 dark:text-blue-300\",children:\"This solution demonstrates the optimal approach to solving this problem. Study the query structure and try to understand the logic before looking at the code.\"})]})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-12\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-400 text-6xl mb-4\",children:\"\\uD83D\\uDD10\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900 dark:text-white mb-2\",children:\"Solution Locked\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 dark:text-gray-400\",children:\"Complete this problem to unlock the official solution.\"})]})})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"w-1/2 flex flex-col\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"border-b border-gray-200 dark:border-gray-700 px-4 py-3\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium text-gray-700 dark:text-gray-300\",children:\"SQL\"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedDialect,onChange:e=>setSelectedDialect(e.target.value),className:\"text-sm border border-gray-300 dark:border-gray-600 rounded px-2 py-1 bg-white dark:bg-gray-800 text-gray-900 dark:text-white\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"postgresql\",children:\"PostgreSQL\"}),/*#__PURE__*/_jsx(\"option\",{value:\"mysql\",children:\"MySQL\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:executeQuery,disabled:isExecuting,className:\"px-4 py-2 bg-gray-200 hover:bg-gray-300 dark:bg-gray-700 dark:hover:bg-gray-600 text-gray-900 dark:text-white text-sm font-medium rounded-md transition-colors\",children:[/*#__PURE__*/_jsx(\"svg\",{className:\"w-4 h-4 inline mr-2\",fill:\"currentColor\",viewBox:\"0 0 20 20\",children:/*#__PURE__*/_jsx(\"path\",{fillRule:\"evenodd\",d:\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\",clipRule:\"evenodd\"})}),\"Run\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:executeQuery,disabled:isExecuting||!sqlQuery.trim(),className:\"px-4 py-2 bg-green-600 hover:bg-green-700 disabled:bg-gray-400 text-white text-sm font-medium rounded-md transition-colors\",children:\"Submit\"})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 flex flex-col\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"h-80 border-b border-gray-200 dark:border-gray-700\",children:/*#__PURE__*/_jsx(SQLHighlightEditor,{value:sqlQuery,onChange:setSqlQuery,onExecute:executeQuery,isExecuting:isExecuting,height:\"100%\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 p-4 bg-gray-50 dark:bg-gray-900\",children:[isExecuting&&/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center py-8\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"inline-flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-gray-600 dark:text-gray-400\",children:\"Running...\"})]})}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4 p-3 bg-red-50 dark:bg-red-900/50 border border-red-200 dark:border-red-800 rounded text-sm\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-red-800 dark:text-red-300 mb-1\",children:\"Error\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-red-700 dark:text-red-400\",children:error})]}),results&&/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[results.isCorrect!==null&&/*#__PURE__*/_jsxs(\"div\",{className:\"p-3 rounded border \".concat(results.isCorrect?'bg-green-50 dark:bg-green-900/50 border-green-200 dark:border-green-800 text-green-800 dark:text-green-300':'bg-red-50 dark:bg-red-900/50 border-red-200 dark:border-red-800 text-red-800 dark:text-red-300'),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"span\",{children:results.isCorrect?'✓':'✗'}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:results.isCorrect?'Accepted':'Wrong Answer'})]}),results.feedback&&/*#__PURE__*/_jsx(\"div\",{className:\"text-sm mt-1\",children:results.feedback})]}),results.rows&&results.rows.length>0&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-500 dark:text-gray-400 mb-2\",children:[results.rows.length,\" rows \\u2022 \",results.executionTime]}),/*#__PURE__*/_jsxs(\"div\",{className:\"border border-gray-200 dark:border-gray-700 rounded max-h-80 overflow-y-auto\",children:[/*#__PURE__*/_jsxs(\"table\",{className:\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"bg-gray-50 dark:bg-gray-800 sticky top-0\",children:/*#__PURE__*/_jsx(\"tr\",{children:Object.keys(results.rows[0]).map(column=>/*#__PURE__*/_jsx(\"th\",{className:\"px-3 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\",children:column},column))})}),/*#__PURE__*/_jsx(\"tbody\",{className:\"bg-white dark:bg-gray-900 divide-y divide-gray-200 dark:divide-gray-700\",children:results.rows.map((row,idx)=>/*#__PURE__*/_jsx(\"tr\",{children:Object.values(row).map((cell,cellIdx)=>/*#__PURE__*/_jsx(\"td\",{className:\"px-3 py-2 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100\",children:cell!==null?cell.toString():/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-400\",children:\"NULL\"})},cellIdx))},idx))})]}),results.rows.length>10&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 dark:bg-gray-800 px-4 py-2 text-xs text-gray-500 dark:text-gray-400 text-center border-t border-gray-200 dark:border-gray-700\",children:[\"Showing all \",results.rows.length,\" rows \\u2022 Scroll to see more\"]})]})]}),results.rows&&results.rows.length===0&&/*#__PURE__*/_jsx(\"div\",{className:\"text-center py-8 text-gray-500 dark:text-gray-400\",children:\"Query executed successfully but returned no rows\"})]}),!results&&!error&&!isExecuting&&/*#__PURE__*/_jsx(\"div\",{className:\"text-center py-8 text-gray-500 dark:text-gray-400\",children:\"Run your code to see results here\"})]})]})]})]}),showProblemsList&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed top-16 right-4 w-80 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg z-50 max-h-96 overflow-y-auto\",children:/*#__PURE__*/_jsx(\"div\",{className:\"p-2\",children:allProblems===null||allProblems===void 0?void 0:allProblems.map((prob,index)=>{var _prob$difficulty;return/*#__PURE__*/_jsx(\"button\",{onClick:()=>{navigateToProblem(prob.numeric_id);setShowProblemsList(false);},className:\"w-full text-left px-3 py-2 rounded text-sm transition-colors \".concat(prob.numeric_id===(problem===null||problem===void 0?void 0:problem.numeric_id)?'bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300':'hover:bg-gray-100 dark:hover:bg-gray-700 text-gray-700 dark:text-gray-300'),children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"font-medium\",children:[prob.numeric_id,\".\"]}),/*#__PURE__*/_jsx(\"span\",{className:\"truncate flex-1\",children:prob.title}),/*#__PURE__*/_jsx(\"span\",{className:\"px-1 py-0.5 rounded text-xs \".concat(prob.difficulty==='easy'?'bg-green-100 text-green-800':prob.difficulty==='medium'?'bg-yellow-100 text-yellow-800':'bg-red-100 text-red-800'),children:(_prob$difficulty=prob.difficulty)===null||_prob$difficulty===void 0?void 0:_prob$difficulty.charAt(0).toUpperCase()})]})},prob.id);})})})]});}export default PracticePage;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","useParams","useNavigate","Navigate","useLocation","useAuth","ProgressService","SmartHintsPanel","BookmarkButton","EnhancedErrorDisplay","SQLHighlightEditor","SQLHighlightDisplay","sqlUrl","apiUrl","learningPathsUrl","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PracticePage","_problem$difficulty","_problem$difficulty2","problemId","navigate","location","token","sqlQuery","setSqlQuery","selectedDialect","setSelectedDialect","isExecuting","setIsExecuting","results","setResults","error","setError","problem","setProblem","schema","setSchema","showSolution","setShowSolution","allProblems","setAllProblems","showProblemsList","setShowProblemsList","currentProblemIndex","setCurrentProblemIndex","attemptCount","setAttemptCount","showHints","setShowHints","learningPathContext","setLearningPathContext","pathPosition","setPathPosition","errorAnalysis","setErrorAnalysis","expandedSection","setExpandedSection","activeTab","setActiveTab","cachedQuery","localStorage","getItem","concat","console","log","substring","includes","removeItem","trim","timeoutId","setTimeout","setItem","clearTimeout","setupProblemEnvironment","id","fetch","method","headers","body","JSON","stringify","dialect","loadProblem","response","data","json","ok","_data$problem","_data$problem2","_data$problem3","title","numeric_id","status","statusText","message","stack","checkLearningPathContext","searchParams","URLSearchParams","search","learningPathId","get","positionResponse","positionData","learning_path_id","learning_path_name","position","learningPaths","length","primaryPath","initialize","initializeSession","sessionId","loadAllProblems","setupDefaultEnvironment","index","findIndex","p","slug","parseInt","problems","sortedProblems","sort","a","b","stepOrder","map","_objectSpread","difficulty","navigateToProblem","url","window","scrollTo","top","behavior","navigateToNextProblem","nextProblem","problem_numeric_id","alert","navigateToPreviousProblem","has_previous","prevProblem","previous_problem","getDifficultyColor","toLowerCase","parsedSchema","setup_sql","tables","sampleData","createTableRegex","match","exec","tableName","columnsText","parseColumns","columns","current","parenDepth","i","char","push","filter","col","parts","split","name","type","slice","join","toUpperCase","insertMatches","matchAll","forEach","valuesText","rowMatches","rowMatch","val","trimmed","replace","processedDescription","description","executeQuery","newAttemptCount","controller","AbortController","abort","signal","sql","problemNumericId","Error","success","clearCache","isCorrect","dispatchEvent","CustomEvent","detail","solved","err","handleClickOutside","event","target","closest","document","addEventListener","removeEventListener","handleKeyPress","tagName","key","ctrlKey","preventDefault","to","className","children","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","charAt","size","disabled","dangerouslySetInnerHTML","__html","table","row","idx","cell","cellIdx","expected_output","Object","keys","column","values","toString","solution_sql","navigator","clipboard","writeText","button","originalText","textContent","textArea","createElement","value","style","opacity","appendChild","select","execCommand","removeChild","onChange","e","fillRule","clipRule","onExecute","height","feedback","rows","executionTime","prob","_prob$difficulty"],"sources":["/Users/ss/Downloads/Code/Vibe_coding/SQL_practice_website/sql-practice-platform/frontend/src/pages/PracticePage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { useParams, useNavigate, Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport ProgressService from '../services/progressService';\nimport SmartHintsPanel from '../components/SmartHintsPanel';\nimport BookmarkButton from '../components/BookmarkButton';\nimport EnhancedErrorDisplay from '../components/EnhancedErrorDisplay';\nimport SQLHighlightEditor from '../components/SQLHighlightEditor';\nimport SQLHighlightDisplay from '../components/SQLHighlightDisplay';\nimport { sqlUrl, apiUrl, learningPathsUrl } from '../config/environment';\n\n\nfunction PracticePage() {\n  const { problemId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { token } = useAuth();\n  const [sqlQuery, setSqlQuery] = useState('-- Write your SQL query here\\n');\n  const [selectedDialect, setSelectedDialect] = useState('postgresql');\n  const [isExecuting, setIsExecuting] = useState(false);\n  const [results, setResults] = useState(null);\n  const [error, setError] = useState(null);\n  const [problem, setProblem] = useState(null);\n  const [schema, setSchema] = useState(null);\n  const [showSolution, setShowSolution] = useState(false);\n  const [allProblems, setAllProblems] = useState([]);\n  const [showProblemsList, setShowProblemsList] = useState(false);\n  const [currentProblemIndex, setCurrentProblemIndex] = useState(0);\n  const [attemptCount, setAttemptCount] = useState(0);\n  const [showHints, setShowHints] = useState(false);\n  const [learningPathContext, setLearningPathContext] = useState(null);\n  const [pathPosition, setPathPosition] = useState(null);\n  const [errorAnalysis, setErrorAnalysis] = useState(null);\n  const [expandedSection, setExpandedSection] = useState(null); // 'schema' or 'expected' or null\n  const [activeTab, setActiveTab] = useState('description'); // 'description', 'editorial', 'solutions'\n\n  // Load cached query from localStorage when problem changes\n  useEffect(() => {\n    if (problemId) {\n      const cachedQuery = localStorage.getItem(`sql_query_${problemId}`);\n      console.log('DEBUG: Loading cached query for problem', problemId, ':', cachedQuery ? cachedQuery.substring(0, 50) + '...' : 'not found');\n      \n      // Clean up problematic cached queries\n      if (cachedQuery && cachedQuery.includes('SELECT * FROM customers;')) {\n        console.log('DEBUG: Removing problematic cached query');\n        localStorage.removeItem(`sql_query_${problemId}`);\n        setSqlQuery('-- Write your SQL query here\\n');\n      } else if (cachedQuery && cachedQuery !== '-- Write your SQL query here\\n' && cachedQuery.trim() !== '') {\n        setSqlQuery(cachedQuery);\n      } else {\n        setSqlQuery('-- Write your SQL query here\\n');\n      }\n    }\n  }, [problemId]);\n\n  // Save query to localStorage whenever it changes\n  useEffect(() => {\n    if (problemId && sqlQuery && sqlQuery !== '-- Write your SQL query here\\n' && sqlQuery.trim() !== '') {\n      const timeoutId = setTimeout(() => {\n        console.log('DEBUG: Saving query to localStorage for problem', problemId, sqlQuery.substring(0, 50) + '...');\n        localStorage.setItem(`sql_query_${problemId}`, sqlQuery);\n      }, 500); // Debounce saving for 500ms\n      \n      return () => clearTimeout(timeoutId);\n    }\n  }, [sqlQuery, problemId]);\n\n  // Define callback functions first (before useEffect that uses them)\n  const setupProblemEnvironment = async (id) => {\n    try {\n      await fetch(sqlUrl(`problems/${id}/setup`), {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ dialect: selectedDialect })\n      });\n    } catch (error) {\n      console.error('Failed to setup problem environment:', error);\n    }\n  };\n\n  const loadProblem = useCallback(async (id) => {\n    try {\n      const response = await fetch(sqlUrl(`problems/${id}`));\n      const data = await response.json();\n      \n      if (response.ok) {\n        console.log('DEBUG: Successfully loaded problem data:', data);\n        console.log('DEBUG: Problem object exists:', !!data.problem);\n        console.log('DEBUG: Problem title:', data.problem?.title);\n        console.log('DEBUG: Problem numeric_id:', data.problem?.numeric_id);\n        console.log('DEBUG: Full problem object:', JSON.stringify(data.problem));\n        setProblem(data.problem);\n        setSchema(data.schema || data.problem?.schema);\n        // Don't reset sqlQuery here - let the caching useEffect handle it\n        setShowSolution(false); // Reset solution visibility\n        // Clear results and errors when loading a new problem\n        setResults(null);\n        setError(null);\n        // Reset attempt count for new problem\n        setAttemptCount(0);\n        setShowHints(false);\n        \n        // Setup problem environment\n        await setupProblemEnvironment(id);\n      } else {\n        console.error('DEBUG: API response not ok:', response.status, response.statusText);\n        console.error('DEBUG: Response data:', data);\n      }\n    } catch (error) {\n      console.error('DEBUG: Failed to load problem:', error);\n      console.error('DEBUG: Error details:', error.message, error.stack);\n    }\n  }, [selectedDialect]);\n\n  const checkLearningPathContext = useCallback(async (problemId) => {\n    try {\n      // Check if learning path is specified in URL parameters\n      const searchParams = new URLSearchParams(location.search);\n      const learningPathId = searchParams.get('learningPath');\n      \n      if (learningPathId) {\n        // User came from a specific learning path, use that context\n        const positionResponse = await fetch(learningPathsUrl(`${learningPathId}/position/${problemId}`));\n        const positionData = await positionResponse.json();\n        \n        if (positionResponse.ok) {\n          setLearningPathContext({ learning_path_id: learningPathId, learning_path_name: 'Learning Path' });\n          setPathPosition(positionData.position);\n          return;\n        }\n      }\n      \n      // Fallback: check if problem belongs to any learning paths\n      const response = await fetch(apiUrl(`problems/${problemId}/learning-paths`));\n      const data = await response.json();\n      \n      if (response.ok && data.learningPaths && data.learningPaths.length > 0) {\n        // Set the first learning path as context\n        const primaryPath = data.learningPaths[0];\n        setLearningPathContext(primaryPath);\n        \n        // Get position information for this problem in the learning path\n        const positionResponse = await fetch(learningPathsUrl(`${primaryPath.learning_path_id}/position/${problemId}`));\n        const positionData = await positionResponse.json();\n        \n        if (positionResponse.ok) {\n          setPathPosition(positionData.position);\n        }\n      } else {\n        setLearningPathContext(null);\n        setPathPosition(null);\n      }\n    } catch (error) {\n      console.error('Failed to check learning path context:', error);\n      setLearningPathContext(null);\n      setPathPosition(null);\n    }\n  }, [location.search]);\n\n  // Load all problems and current problem\n  useEffect(() => {\n    const initialize = async () => {\n      // Initialize session first\n      try {\n        console.log('DEBUG PracticePage: Initializing session');\n        await ProgressService.initializeSession();\n        console.log('DEBUG PracticePage: Session initialized with ID:', ProgressService.sessionId);\n      } catch (error) {\n        console.error('Failed to initialize session in PracticePage:', error);\n      }\n      \n      // Then load problems and current problem\n      loadAllProblems();\n      if (problemId) {\n        loadProblem(problemId);\n        checkLearningPathContext(problemId);\n      } else {\n        // Set up default environment\n        setupDefaultEnvironment();\n      }\n    };\n    \n    initialize();\n  }, [problemId, location.search, loadProblem, checkLearningPathContext]);\n\n  // Update current problem index when problem changes\n  useEffect(() => {\n    if (problemId && allProblems && allProblems.length > 0) {\n      const index = allProblems.findIndex(p => \n        p.id === problemId || \n        p.slug === problemId || \n        p.numeric_id === parseInt(problemId)\n      );\n      if (index !== -1) {\n        setCurrentProblemIndex(index);\n      }\n    }\n  }, [problemId, allProblems]);\n\n  const loadAllProblems = async () => {\n    try {\n      // Check if we're in a learning path context\n      const searchParams = new URLSearchParams(location.search);\n      const learningPathId = searchParams.get('learningPath');\n      \n      if (learningPathId) {\n        // Load problems specific to this learning path\n        const response = await fetch(learningPathsUrl(`${learningPathId}`));\n        const data = await response.json();\n        if (response.ok && data.problems) {\n          // Sort by step order for learning paths\n          const sortedProblems = data.problems\n            .sort((a, b) => (a.stepOrder || 0) - (b.stepOrder || 0))\n            .map(problem => ({\n              ...problem,\n              // Ensure compatibility with existing problem structure\n              id: problem.id,\n              numeric_id: problem.numeric_id,\n              title: problem.title,\n              difficulty: problem.difficulty,\n              slug: problem.slug\n            }));\n          setAllProblems(sortedProblems);\n          console.log(`Loaded ${sortedProblems.length} problems for learning path`);\n        } else {\n          console.error('Learning path problems not found:', data);\n          setAllProblems([]);\n        }\n      } else {\n        // Load all problems (default behavior)\n        const response = await fetch(sqlUrl('problems'));\n        const data = await response.json();\n        if (response.ok && data.problems) {\n          // Sort problems by numeric_id for sequential ordering\n          const sortedProblems = data.problems.sort((a, b) => (a.numeric_id || 0) - (b.numeric_id || 0));\n          setAllProblems(sortedProblems);\n        } else {\n          console.error('Problems data not found in response:', data);\n          setAllProblems([]);\n        }\n      }\n    } catch (error) {\n      console.error('Failed to load problems list:', error);\n      setAllProblems([]);\n    }\n  };\n\n  const navigateToProblem = (problemId) => {\n    // Preserve learning path context in URL if it exists\n    const searchParams = new URLSearchParams(location.search);\n    const learningPathId = searchParams.get('learningPath');\n    const url = learningPathId ? `/practice/${problemId}?learningPath=${learningPathId}` : `/practice/${problemId}`;\n    \n    navigate(url);\n    setShowProblemsList(false);\n    // Clear results and errors when navigating to a new problem\n    setResults(null);\n    setError(null);\n    // Scroll to top when navigating to new problem\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  const navigateToNextProblem = useCallback(async () => {\n    // If in learning path context, use learning path navigation\n    if (learningPathContext && pathPosition) {\n      try {\n        const response = await fetch(learningPathsUrl(`${learningPathContext.learning_path_id}/next/${problemId}`));\n        const data = await response.json();\n        \n        if (response.ok && data.nextProblem) {\n          navigateToProblem(data.nextProblem.problem_numeric_id);\n        } else if (data.message) {\n          // Show completion message for learning path\n          alert(data.message);\n        }\n        return;\n      } catch (error) {\n        console.error('Failed to get next problem in path:', error);\n        // Fall through to regular navigation\n      }\n    }\n    \n    // Regular navigation (not in learning path or API failed)\n    if (allProblems && allProblems.length > 0 && currentProblemIndex < allProblems.length - 1) {\n      const nextProblem = allProblems[currentProblemIndex + 1];\n      if (nextProblem) {\n        navigateToProblem(nextProblem.numeric_id);\n      }\n    }\n  }, [learningPathContext, pathPosition, problemId, allProblems, currentProblemIndex]);\n\n  const navigateToPreviousProblem = useCallback(async () => {\n    // If in learning path context, use learning path navigation\n    if (learningPathContext && pathPosition && pathPosition.has_previous) {\n      const prevProblem = pathPosition.previous_problem;\n      if (prevProblem) {\n        navigateToProblem(prevProblem.problem_numeric_id);\n        return;\n      }\n    }\n    \n    // Regular navigation (not in learning path or no previous in path)\n    if (currentProblemIndex > 0) {\n      const prevProblem = allProblems[currentProblemIndex - 1];\n      navigateToProblem(prevProblem.numeric_id);\n    }\n  }, [learningPathContext, pathPosition, currentProblemIndex, allProblems]);\n\n  const getDifficultyColor = (difficulty) => {\n    switch (difficulty?.toLowerCase()) {\n      case 'easy': return 'text-green-600 bg-green-100';\n      case 'medium': return 'text-yellow-600 bg-yellow-100';\n      case 'hard': return 'text-red-600 bg-red-100';\n      default: return 'text-gray-600 bg-gray-100';\n    }\n  };\n\n  // Memoize the expensive schema parsing to prevent re-computation on every render\n  const parsedSchema = useMemo(() => {\n    if (!schema?.setup_sql) return { tables: [], sampleData: {} };\n    \n    const createTableRegex = /CREATE TABLE (\\w+) \\(([\\s\\S]*?)\\);/g;\n    const tables = [];\n    const sampleData = {};\n    let match;\n    \n    // Parse table structures\n    while ((match = createTableRegex.exec(schema.setup_sql)) !== null) {\n      const tableName = match[1];\n      const columnsText = match[2];\n      \n      const parseColumns = (columnsText) => {\n        const columns = [];\n        let current = '';\n        let parenDepth = 0;\n        \n        for (let i = 0; i < columnsText.length; i++) {\n          const char = columnsText[i];\n          if (char === '(') parenDepth++;\n          if (char === ')') parenDepth--;\n          \n          if (char === ',' && parenDepth === 0) {\n            if (current.trim()) columns.push(current.trim());\n            current = '';\n          } else {\n            current += char;\n          }\n        }\n        if (current.trim()) columns.push(current.trim());\n        return columns;\n      };\n      \n      const columns = parseColumns(columnsText)\n        .filter(col => col.length > 0)\n        .map(col => {\n          const parts = col.split(' ');\n          const name = parts[0];\n          const type = parts.slice(1).join(' ').toUpperCase();\n          return { name, type };\n        });\n      \n      tables.push({ name: tableName, columns });\n    }\n    \n    // Parse sample data\n    const insertMatches = [...schema.setup_sql.matchAll(/INSERT\\s+INTO\\s+(\\w+)(?:\\s*\\([^)]+\\))?\\s+VALUES\\s+([\\s\\S]*?);/gi)];\n    insertMatches.forEach(match => {\n      const tableName = match[1];\n      const valuesText = match[2];\n      const rowMatches = [...valuesText.matchAll(/\\(([\\s\\S]*?)\\)/g)];\n      sampleData[tableName] = rowMatches.slice(0, 3).map(rowMatch => {\n        return rowMatch[1].split(',').map(val => {\n          const trimmed = val.trim();\n          if (trimmed === 'NULL') return 'NULL';\n          return trimmed.replace(/^'|'$/g, '').replace(/''/g, \"'\");\n        });\n      });\n    });\n    \n    return { tables, sampleData };\n  }, [schema?.setup_sql]);\n\n  // Memoize the processed problem description to prevent re-processing\n  const processedDescription = useMemo(() => {\n    if (!problem?.description) return '';\n    \n    return problem.description\n      .replace(/\\*\\*Expected Output:\\*\\*.*?(?=\\*\\*|$)/g, '')\n      .replace(/Expected Output:.*?(?=\\n\\n|\\n\\*\\*|$)/g, '')\n      .replace(/\\*\\*Business Context:\\*\\*/g, '<h4 class=\"text-gray-900 dark:text-white font-semibold mt-6 mb-2\">Business Context</h4>')\n      .replace(/\\*\\*Scenario:\\*\\*/g, '<h4 class=\"text-gray-900 dark:text-white font-semibold mt-6 mb-2\">Scenario</h4>')\n      .replace(/\\*\\*Problem:\\*\\*/g, '<h4 class=\"text-gray-900 dark:text-white font-semibold mt-6 mb-2\">Problem</h4>')\n      .replace(/Business Context:/g, '<h4 class=\"text-gray-900 dark:text-white font-semibold mt-6 mb-2\">Business Context</h4>')\n      .replace(/Scenario:/g, '<h4 class=\"text-gray-900 dark:text-white font-semibold mt-6 mb-2\">Scenario</h4>')\n      .replace(/Problem:/g, '<h4 class=\"text-gray-900 dark:text-white font-semibold mt-6 mb-2\">Problem</h4>')\n      .replace(/\\*\\*(.*?)\\*\\*/g, '<strong class=\"text-gray-900 dark:text-white\">$1</strong>')\n      .replace(/`(.*?)`/g, '<code class=\"bg-gray-100 dark:bg-gray-800 text-red-600 dark:text-red-400 px-1 py-0.5 rounded text-sm\">$1</code>')\n      .replace(/```sql\\n([\\s\\S]*?)\\n```/g, '<pre class=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg overflow-x-auto mt-4 mb-4\"><code class=\"text-sm text-gray-900 dark:text-gray-100\">$1</code></pre>')\n      .replace(/\\n/g, '<br>')\n      .replace(/<br><br>/g, '<br>');\n  }, [problem?.description]);\n\n  const setupDefaultEnvironment = async () => {\n    // Default environment is set up automatically by the backend\n    console.log('Using default practice environment');\n  };\n\n  const executeQuery = async () => {\n    if (!sqlQuery.trim()) {\n      setError('Please enter a SQL query');\n      return;\n    }\n\n    setIsExecuting(true);\n    setError(null);\n    setResults(null); // Clear previous results\n    \n    // Increment attempt count\n    const newAttemptCount = attemptCount + 1;\n    setAttemptCount(newAttemptCount);\n    \n    try {\n      console.log('DEBUG: Executing query with session ID:', ProgressService.sessionId, 'for problem:', problemId);\n      \n      // Create AbortController for timeout\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 30000); // 30 second timeout\n      \n      const response = await fetch(apiUrl('execute/sql'), {\n        method: 'POST',\n        signal: controller.signal,\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Session-ID': ProgressService.sessionId,\n          ...(token && { 'Authorization': `Bearer ${token}` })\n        },\n        body: JSON.stringify({ \n          sql: sqlQuery, \n          dialect: selectedDialect,\n          problemId: problem?.id, // UUID from problem object\n          problemNumericId: problem?.numeric_id || parseInt(problemId) // Numeric ID\n        })\n      });\n      \n      clearTimeout(timeoutId);\n      \n      console.log('DEBUG: Response status:', response.status);\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      console.log('DEBUG: Response data:', data);\n      \n      if (data.success) {\n        setResults(data.data);\n        setError(null);\n        setErrorAnalysis(null);\n        \n        // Clear progress cache to ensure fresh data\n        ProgressService.clearCache();\n        \n        // Progress is automatically tracked by the backend in execute.js\n        console.log('DEBUG: Query completed. Progress should be automatically tracked by backend.', {\n          sessionId: ProgressService.sessionId,\n          problemId: problem?.id || problemId,\n          problemNumericId: problemId,\n          isCorrect: data.data.isCorrect\n        });\n\n        // Emit progress update event if problem was solved correctly\n        if (data.data.isCorrect) {\n          console.log('🎉 Problem solved correctly! Emitting progressUpdated event...');\n          window.dispatchEvent(new CustomEvent('progressUpdated', {\n            detail: { problemId, solved: true }\n          }));\n          console.log('✅ progressUpdated event emitted');\n        }\n      } else {\n        console.log('DEBUG: Setting error:', data.error);\n        setError(data.error);\n        setErrorAnalysis(data.errorAnalysis || null);\n        setResults(null); // Clear results on error\n        console.log('DEBUG: Error state should now be set');\n        \n        // Note: Progress tracking for failed attempts is handled by the backend in execute.js\n      }\n    } catch (err) {\n      console.error('DEBUG: Query execution error:', err);\n      if (err.name === 'AbortError') {\n        setError('Query timed out after 30 seconds. Please try a simpler query.');\n      } else {\n        setError(`Failed to execute query: ${err.message}`);\n      }\n      setErrorAnalysis(null);\n      setResults(null); // Clear results on network error\n    } finally {\n      setIsExecuting(false);\n    }\n  };\n\n  // Close problems list when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (!event.target.closest('.relative')) {\n        setShowProblemsList(false);\n      }\n    };\n    \n    if (showProblemsList) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n    \n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [showProblemsList]);\n\n  // Debug: Track error state changes\n  useEffect(() => {\n    console.log('DEBUG: Error state changed to:', error);\n  }, [error]);\n\n  // Add keyboard shortcuts\n  useEffect(() => {\n    const handleKeyPress = (event) => {\n      // Only trigger shortcuts when not typing in textarea or input\n      if (event.target.tagName === 'TEXTAREA' || event.target.tagName === 'INPUT') {\n        return;\n      }\n      \n      if (event.key === 'ArrowLeft' && event.ctrlKey) {\n        event.preventDefault();\n        navigateToPreviousProblem();\n      } else if (event.key === 'ArrowRight' && event.ctrlKey) {\n        event.preventDefault();\n        navigateToNextProblem();\n      } else if (event.key === 'p' && event.ctrlKey) {\n        event.preventDefault();\n        setShowProblemsList(!showProblemsList);\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyPress);\n    return () => {\n      document.removeEventListener('keydown', handleKeyPress);\n    };\n  }, [currentProblemIndex, allProblems?.length, showProblemsList, navigateToNextProblem, navigateToPreviousProblem]);\n\n  // If no problem is selected, redirect to problems page\n  if (!problemId) {\n    return <Navigate to=\"/problems\" replace />;\n  }\n  // Problem mode - show the full problem-solving interface\n  return (\n    <div className=\"h-screen flex flex-col bg-white dark:bg-gray-900\">\n      {/* Header - LeetCode Style */}\n      <div className=\"border-b border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800\">\n        <div className=\"px-4 py-3\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n              <button\n                onClick={() => navigate('/problems')}\n                className=\"text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\"\n              >\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                </svg>\n              </button>\n              {problem && (\n                <div className=\"flex items-center space-x-3\">\n                  <h1 className=\"text-lg font-medium text-gray-900 dark:text-white\">\n                    {console.log('DEBUG RENDER: problem object:', problem) || ''}\n                    {console.log('DEBUG RENDER: numeric_id:', problem.numeric_id, 'title:', problem.title) || ''}\n                    {problem.numeric_id || 'No ID'}. {problem.title || 'No Title'}\n                  </h1>\n                  <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\n                    problem.difficulty === 'easy' ? 'bg-green-100 text-green-800' :\n                    problem.difficulty === 'medium' ? 'bg-yellow-100 text-yellow-800' :\n                    'bg-red-100 text-red-800'\n                  }`}>\n                    {problem.difficulty?.charAt(0).toUpperCase() + problem.difficulty?.slice(1)}\n                  </span>\n                </div>\n              )}\n            </div>\n            \n            <div className=\"flex items-center space-x-3\">\n              <BookmarkButton problemId={problem?.id} size=\"sm\" />\n              <button\n                onClick={navigateToPreviousProblem}\n                disabled={currentProblemIndex === 0}\n                className=\"p-2 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 disabled:opacity-50\"\n              >\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                </svg>\n              </button>\n              <button\n                onClick={() => setShowProblemsList(!showProblemsList)}\n                className=\"px-3 py-1.5 text-sm text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white border border-gray-300 dark:border-gray-600 rounded\"\n              >\n                {currentProblemIndex + 1} / {allProblems?.length || 0}\n              </button>\n              <button\n                onClick={navigateToNextProblem}\n                disabled={currentProblemIndex === (allProblems?.length || 0) - 1}\n                className=\"p-2 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 disabled:opacity-50\"\n              >\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                </svg>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content - LeetCode Split Layout */}\n      <div className=\"flex-1 flex\">\n        {/* Left Panel - Problem Description */}\n        <div className=\"w-1/2 border-r border-gray-200 dark:border-gray-700 flex flex-col\">\n          {/* Tabs */}\n          <div className=\"border-b border-gray-200 dark:border-gray-700\">\n            <nav className=\"flex px-4\">\n              <button \n                onClick={() => setActiveTab('description')}\n                className={`px-4 py-3 text-sm font-medium transition-colors ${\n                  activeTab === 'description' \n                    ? 'text-blue-600 border-b-2 border-blue-600' \n                    : 'text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300'\n                }`}\n              >\n                Description\n              </button>\n              <button \n                onClick={() => setActiveTab('editorial')}\n                className={`px-4 py-3 text-sm font-medium transition-colors ${\n                  activeTab === 'editorial' \n                    ? 'text-blue-600 border-b-2 border-blue-600' \n                    : 'text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300'\n                }`}\n              >\n                Editorial\n              </button>\n              <button \n                onClick={() => setActiveTab('solutions')}\n                className={`px-4 py-3 text-sm font-medium transition-colors ${\n                  activeTab === 'solutions' \n                    ? 'text-blue-600 border-b-2 border-blue-600' \n                    : 'text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300'\n                }`}\n              >\n                Solutions\n              </button>\n            </nav>\n          </div>\n          \n          {/* Problem Content */}\n          <div className=\"flex-1 overflow-y-auto p-4\">\n            {problem && (\n              <div className=\"space-y-6\">\n                {/* Description Tab */}\n                {activeTab === 'description' && (\n                  <>\n                    {/* Problem Description */}\n                    <div className=\"prose prose-sm max-w-none text-gray-700 dark:text-gray-300\">\n                      <div dangerouslySetInnerHTML={{ __html: processedDescription }} />\n                    </div>\n\n                    {/* Database Schema with Sample Data */}\n                    {parsedSchema.tables.length > 0 && (\n                      <div>\n                        <h4 className=\"text-gray-900 dark:text-white font-semibold mb-4\">Database Schema</h4>\n                        <div className=\"space-y-4\">\n                          {parsedSchema.tables.map(table => (\n                            <div key={table.name} className=\"border border-gray-200 dark:border-gray-700 rounded-lg\">\n                              <div className=\"bg-gray-50 dark:bg-gray-800 px-4 py-2 border-b border-gray-200 dark:border-gray-700\">\n                                <span className=\"font-mono text-sm font-semibold text-gray-900 dark:text-white\">{table.name}</span>\n                              </div>\n                              \n                              {/* Column definitions */}\n                              <div className=\"divide-y divide-gray-100 dark:divide-gray-700\">\n                                {table.columns.map(col => (\n                                  <div key={col.name} className=\"px-4 py-2 flex justify-between items-center\">\n                                    <span className=\"font-mono text-sm text-gray-700 dark:text-gray-300\">{col.name}</span>\n                                    <span className=\"text-xs text-gray-500 dark:text-gray-400 bg-gray-100 dark:bg-gray-800 px-2 py-1 rounded\">\n                                      {col.type}\n                                    </span>\n                                  </div>\n                                ))}\n                              </div>\n                              \n                              {/* Sample Data */}\n                              {parsedSchema.sampleData[table.name] && parsedSchema.sampleData[table.name].length > 0 && (\n                                <div className=\"border-t border-gray-200 dark:border-gray-700 p-4\">\n                                  <h5 className=\"text-xs font-medium text-gray-600 dark:text-gray-400 mb-2 uppercase tracking-wider\">Sample Data</h5>\n                                  <div className=\"overflow-x-auto\">\n                                    <table className=\"min-w-full text-xs\">\n                                      <thead>\n                                        <tr className=\"bg-gray-50 dark:bg-gray-800\">\n                                          {table.columns.map(col => (\n                                            <th key={col.name} className=\"px-3 py-2 text-left font-medium text-gray-600 dark:text-gray-400 border border-gray-200 dark:border-gray-600\">\n                                              {col.name}\n                                            </th>\n                                          ))}\n                                        </tr>\n                                      </thead>\n                                      <tbody>\n                                        {parsedSchema.sampleData[table.name].map((row, idx) => (\n                                          <tr key={idx} className=\"bg-white dark:bg-gray-900\">\n                                            {row.map((cell, cellIdx) => (\n                                              <td key={cellIdx} className=\"px-3 py-2 text-gray-700 dark:text-gray-300 border border-gray-200 dark:border-gray-600\">\n                                                {cell}\n                                              </td>\n                                            ))}\n                                          </tr>\n                                        ))}\n                                      </tbody>\n                                    </table>\n                                  </div>\n                                </div>\n                              )}\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n\n                    {/* Expected Output */}\n                    {schema && schema.expected_output && schema.expected_output.length > 0 && (\n                      <div>\n                        <h4 className=\"text-gray-900 dark:text-white font-semibold mb-4\">Expected Output</h4>\n                        <div className=\"border border-gray-200 dark:border-gray-700 rounded-lg overflow-hidden\">\n                          <div className=\"overflow-x-auto\">\n                            <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n                              <thead className=\"bg-gray-50 dark:bg-gray-800\">\n                                <tr>\n                                  {Object.keys(schema.expected_output[0]).map((column) => (\n                                    <th key={column} className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                                      {column}\n                                    </th>\n                                  ))}\n                                </tr>\n                              </thead>\n                              <tbody className=\"bg-white dark:bg-gray-900 divide-y divide-gray-200 dark:divide-gray-700\">\n                                {schema.expected_output.slice(0, 5).map((row, idx) => (\n                                  <tr key={idx}>\n                                    {Object.values(row).map((cell, cellIdx) => (\n                                      <td key={cellIdx} className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100\">\n                                        {cell !== null ? cell.toString() : 'NULL'}\n                                      </td>\n                                    ))}\n                                  </tr>\n                                ))}\n                              </tbody>\n                            </table>\n                          </div>\n                          {schema.expected_output.length > 5 && (\n                            <div className=\"bg-gray-50 dark:bg-gray-800 px-4 py-2 text-xs text-gray-500 dark:text-gray-400 text-center\">\n                              Showing 5 of {schema.expected_output.length} rows\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    )}\n                  </>\n                )}\n\n                {/* Editorial Tab */}\n                {activeTab === 'editorial' && (\n                  <div className=\"text-center py-12\">\n                    <div className=\"text-gray-400 text-6xl mb-4\">📚</div>\n                    <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">Editorial Coming Soon</h3>\n                    <p className=\"text-gray-600 dark:text-gray-400\">\n                      Detailed explanations and approaches for this problem will be available soon.\n                    </p>\n                  </div>\n                )}\n\n                {/* Solutions Tab */}\n                {activeTab === 'solutions' && (\n                  <div className=\"space-y-6\">\n                    {schema && schema.solution_sql ? (\n                      <div>\n                        <div className=\"flex items-center justify-between mb-4\">\n                          <h4 className=\"text-gray-900 dark:text-white font-semibold\">Official Solution</h4>\n                          <button\n                            onClick={async (event) => {\n                              try {\n                                if (navigator.clipboard && navigator.clipboard.writeText) {\n                                  await navigator.clipboard.writeText(schema.solution_sql);\n                                  // Show success feedback\n                                  const button = event.target;\n                                  const originalText = button.textContent;\n                                  button.textContent = 'Copied!';\n                                  button.className = 'px-3 py-1.5 bg-green-600 text-white text-sm rounded transition-colors';\n                                  setTimeout(() => {\n                                    button.textContent = originalText;\n                                    button.className = 'px-3 py-1.5 bg-blue-600 hover:bg-blue-700 text-white text-sm rounded transition-colors';\n                                  }, 2000);\n                                } else {\n                                  // Fallback for older browsers\n                                  const textArea = document.createElement('textarea');\n                                  textArea.value = schema.solution_sql;\n                                  textArea.style.position = 'fixed';\n                                  textArea.style.opacity = '0';\n                                  document.body.appendChild(textArea);\n                                  textArea.select();\n                                  document.execCommand('copy');\n                                  document.body.removeChild(textArea);\n                                  \n                                  // Show success feedback\n                                  const button = event.target;\n                                  const originalText = button.textContent;\n                                  button.textContent = 'Copied!';\n                                  button.className = 'px-3 py-1.5 bg-green-600 text-white text-sm rounded transition-colors';\n                                  setTimeout(() => {\n                                    button.textContent = originalText;\n                                    button.className = 'px-3 py-1.5 bg-blue-600 hover:bg-blue-700 text-white text-sm rounded transition-colors';\n                                  }, 2000);\n                                }\n                              } catch (error) {\n                                console.error('Failed to copy solution:', error);\n                                // Show error feedback\n                                const button = event.target;\n                                const originalText = button.textContent;\n                                button.textContent = 'Copy Failed!';\n                                button.className = 'px-3 py-1.5 bg-red-600 text-white text-sm rounded transition-colors';\n                                setTimeout(() => {\n                                  button.textContent = originalText;\n                                  button.className = 'px-3 py-1.5 bg-blue-600 hover:bg-blue-700 text-white text-sm rounded transition-colors';\n                                }, 2000);\n                              }\n                            }}\n                            className=\"px-3 py-1.5 bg-blue-600 hover:bg-blue-700 text-white text-sm rounded transition-colors\"\n                          >\n                            Copy Solution\n                          </button>\n                        </div>\n                        <div className=\"bg-gray-50 dark:bg-gray-800 rounded-lg p-4\">\n                          <pre className=\"text-sm text-gray-900 dark:text-gray-100 overflow-x-auto\">\n                            <code>{schema.solution_sql}</code>\n                          </pre>\n                        </div>\n                        <div className=\"mt-4 p-4 bg-blue-50 dark:bg-blue-900/50 border border-blue-200 dark:border-blue-800 rounded-lg\">\n                          <h5 className=\"font-medium text-blue-900 dark:text-blue-300 mb-2\">Approach</h5>\n                          <p className=\"text-sm text-blue-800 dark:text-blue-300\">\n                            This solution demonstrates the optimal approach to solving this problem. \n                            Study the query structure and try to understand the logic before looking at the code.\n                          </p>\n                        </div>\n                      </div>\n                    ) : (\n                      <div className=\"text-center py-12\">\n                        <div className=\"text-gray-400 text-6xl mb-4\">🔐</div>\n                        <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">Solution Locked</h3>\n                        <p className=\"text-gray-600 dark:text-gray-400\">\n                          Complete this problem to unlock the official solution.\n                        </p>\n                      </div>\n                    )}\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Right Panel - Code Editor */}\n        <div className=\"w-1/2 flex flex-col\">\n          {/* Code Editor Header */}\n          <div className=\"border-b border-gray-200 dark:border-gray-700 px-4 py-3\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-3\">\n                <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">SQL</span>\n                <select\n                  value={selectedDialect}\n                  onChange={(e) => setSelectedDialect(e.target.value)}\n                  className=\"text-sm border border-gray-300 dark:border-gray-600 rounded px-2 py-1 bg-white dark:bg-gray-800 text-gray-900 dark:text-white\"\n                >\n                  <option value=\"postgresql\">PostgreSQL</option>\n                  <option value=\"mysql\">MySQL</option>\n                </select>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <button\n                  onClick={executeQuery}\n                  disabled={isExecuting}\n                  className=\"px-4 py-2 bg-gray-200 hover:bg-gray-300 dark:bg-gray-700 dark:hover:bg-gray-600 text-gray-900 dark:text-white text-sm font-medium rounded-md transition-colors\"\n                >\n                  <svg className=\"w-4 h-4 inline mr-2\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\" clipRule=\"evenodd\" />\n                  </svg>\n                  Run\n                </button>\n                <button\n                  onClick={executeQuery}\n                  disabled={isExecuting || !sqlQuery.trim()}\n                  className=\"px-4 py-2 bg-green-600 hover:bg-green-700 disabled:bg-gray-400 text-white text-sm font-medium rounded-md transition-colors\"\n                >\n                  Submit\n                </button>\n              </div>\n            </div>\n          </div>\n\n          {/* Code Editor */}\n          <div className=\"flex-1 flex flex-col\">\n            <div className=\"h-80 border-b border-gray-200 dark:border-gray-700\">\n              <SQLHighlightEditor\n                value={sqlQuery}\n                onChange={setSqlQuery}\n                onExecute={executeQuery}\n                isExecuting={isExecuting}\n                height=\"100%\"\n              />\n            </div>\n\n            {/* Results Panel */}\n            <div className=\"flex-1 p-4 bg-gray-50 dark:bg-gray-900\">\n              {isExecuting && (\n                <div className=\"flex items-center justify-center py-8\">\n                  <div className=\"inline-flex items-center space-x-2\">\n                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600\"></div>\n                    <span className=\"text-sm text-gray-600 dark:text-gray-400\">Running...</span>\n                  </div>\n                </div>\n              )}\n\n              {error && (\n                <div className=\"mb-4 p-3 bg-red-50 dark:bg-red-900/50 border border-red-200 dark:border-red-800 rounded text-sm\">\n                  <div className=\"font-medium text-red-800 dark:text-red-300 mb-1\">Error</div>\n                  <div className=\"text-red-700 dark:text-red-400\">{error}</div>\n                </div>\n              )}\n\n              {results && (\n                <div className=\"space-y-4\">\n                  {/* Validation Results */}\n                  {results.isCorrect !== null && (\n                    <div className={`p-3 rounded border ${\n                      results.isCorrect \n                        ? 'bg-green-50 dark:bg-green-900/50 border-green-200 dark:border-green-800 text-green-800 dark:text-green-300'\n                        : 'bg-red-50 dark:bg-red-900/50 border-red-200 dark:border-red-800 text-red-800 dark:text-red-300'\n                    }`}>\n                      <div className=\"flex items-center space-x-2\">\n                        <span>{results.isCorrect ? '✓' : '✗'}</span>\n                        <span className=\"font-medium\">\n                          {results.isCorrect ? 'Accepted' : 'Wrong Answer'}\n                        </span>\n                      </div>\n                      {results.feedback && (\n                        <div className=\"text-sm mt-1\">{results.feedback}</div>\n                      )}\n                    </div>\n                  )}\n\n                  {/* Query Results */}\n                  {results.rows && results.rows.length > 0 && (\n                    <div>\n                      <div className=\"text-xs text-gray-500 dark:text-gray-400 mb-2\">\n                        {results.rows.length} rows • {results.executionTime}\n                      </div>\n                      <div className=\"border border-gray-200 dark:border-gray-700 rounded max-h-80 overflow-y-auto\">\n                          <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n                            <thead className=\"bg-gray-50 dark:bg-gray-800 sticky top-0\">\n                              <tr>\n                                {Object.keys(results.rows[0]).map((column) => (\n                                  <th key={column} className=\"px-3 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                                    {column}\n                                  </th>\n                                ))}\n                              </tr>\n                            </thead>\n                            <tbody className=\"bg-white dark:bg-gray-900 divide-y divide-gray-200 dark:divide-gray-700\">\n                              {results.rows.map((row, idx) => (\n                                <tr key={idx}>\n                                  {Object.values(row).map((cell, cellIdx) => (\n                                    <td key={cellIdx} className=\"px-3 py-2 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100\">\n                                      {cell !== null ? cell.toString() : <span className=\"text-gray-400\">NULL</span>}\n                                    </td>\n                                  ))}\n                                </tr>\n                              ))}\n                            </tbody>\n                          </table>\n                        {results.rows.length > 10 && (\n                          <div className=\"bg-gray-50 dark:bg-gray-800 px-4 py-2 text-xs text-gray-500 dark:text-gray-400 text-center border-t border-gray-200 dark:border-gray-700\">\n                            Showing all {results.rows.length} rows • Scroll to see more\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  )}\n\n                  {results.rows && results.rows.length === 0 && (\n                    <div className=\"text-center py-8 text-gray-500 dark:text-gray-400\">\n                      Query executed successfully but returned no rows\n                    </div>\n                  )}\n                </div>\n              )}\n\n              {!results && !error && !isExecuting && (\n                <div className=\"text-center py-8 text-gray-500 dark:text-gray-400\">\n                  Run your code to see results here\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Problems dropdown */}\n      {showProblemsList && (\n        <div className=\"fixed top-16 right-4 w-80 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg z-50 max-h-96 overflow-y-auto\">\n          <div className=\"p-2\">\n            {allProblems?.map((prob, index) => (\n              <button\n                key={prob.id}\n                onClick={() => {\n                  navigateToProblem(prob.numeric_id);\n                  setShowProblemsList(false);\n                }}\n                className={`w-full text-left px-3 py-2 rounded text-sm transition-colors ${\n                  prob.numeric_id === problem?.numeric_id\n                    ? 'bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300'\n                    : 'hover:bg-gray-100 dark:hover:bg-gray-700 text-gray-700 dark:text-gray-300'\n                }`}\n              >\n                <div className=\"flex items-center space-x-2\">\n                  <span className=\"font-medium\">{prob.numeric_id}.</span>\n                  <span className=\"truncate flex-1\">{prob.title}</span>\n                  <span className={`px-1 py-0.5 rounded text-xs ${\n                    prob.difficulty === 'easy' ? 'bg-green-100 text-green-800' :\n                    prob.difficulty === 'medium' ? 'bg-yellow-100 text-yellow-800' :\n                    'bg-red-100 text-red-800'\n                  }`}>\n                    {prob.difficulty?.charAt(0).toUpperCase()}\n                  </span>\n                </div>\n              </button>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default PracticePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}