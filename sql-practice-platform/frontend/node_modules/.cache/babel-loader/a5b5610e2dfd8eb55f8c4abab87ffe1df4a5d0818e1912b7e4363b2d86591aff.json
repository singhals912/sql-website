{"ast":null,"code":"var _jsxFileName = \"/Users/ss/Downloads/Code/Vibe_coding/SQL_practice_website/sql-practice-platform/frontend/src/pages/PracticePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useParams, useNavigate, Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport ProgressService from '../services/progressService';\nimport HintsPanel from '../components/HintsPanel';\nimport BookmarkButton from '../components/BookmarkButton';\nimport EnhancedErrorDisplay from '../components/EnhancedErrorDisplay';\n// import SimpleSQLEditor from '../components/SimpleSQLEditor';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PracticePage() {\n  _s();\n  var _problem$numeric_id, _problem$difficulty, _problem$difficulty2, _results$rows, _results$rows2, _results$rows3;\n  const {\n    problemId\n  } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    token\n  } = useAuth();\n  const [sqlQuery, setSqlQuery] = useState('-- Write your SQL query here\\n');\n  const [selectedDialect, setSelectedDialect] = useState('postgresql');\n  const [isExecuting, setIsExecuting] = useState(false);\n  const [results, setResults] = useState(null);\n  const [error, setError] = useState(null);\n  const [problem, setProblem] = useState(null);\n  const [schema, setSchema] = useState(null);\n  const [showSolution, setShowSolution] = useState(false);\n  const [allProblems, setAllProblems] = useState([]);\n  const [showProblemsList, setShowProblemsList] = useState(false);\n  const [currentProblemIndex, setCurrentProblemIndex] = useState(0);\n  const [attemptCount, setAttemptCount] = useState(0);\n  const [showHints, setShowHints] = useState(false);\n  const [learningPathContext, setLearningPathContext] = useState(null);\n  const [pathPosition, setPathPosition] = useState(null);\n  const [errorAnalysis, setErrorAnalysis] = useState(null);\n  const textareaRef = useRef(null);\n  const [expandedSection, setExpandedSection] = useState(null); // 'schema' or 'expected' or null\n\n  // Load cached query from localStorage when problem changes\n  useEffect(() => {\n    if (problemId) {\n      const cachedQuery = localStorage.getItem(`sql_query_${problemId}`);\n      console.log('DEBUG: Loading cached query for problem', problemId, ':', cachedQuery ? cachedQuery.substring(0, 50) + '...' : 'not found');\n\n      // Clean up problematic cached queries\n      if (cachedQuery && cachedQuery.includes('SELECT * FROM customers;')) {\n        console.log('DEBUG: Removing problematic cached query');\n        localStorage.removeItem(`sql_query_${problemId}`);\n        setSqlQuery('-- Write your SQL query here\\n');\n      } else if (cachedQuery && cachedQuery !== '-- Write your SQL query here\\n' && cachedQuery.trim() !== '') {\n        setSqlQuery(cachedQuery);\n      } else {\n        setSqlQuery('-- Write your SQL query here\\n');\n      }\n    }\n  }, [problemId]);\n\n  // Save query to localStorage whenever it changes\n  useEffect(() => {\n    if (problemId && sqlQuery && sqlQuery !== '-- Write your SQL query here\\n' && sqlQuery.trim() !== '') {\n      const timeoutId = setTimeout(() => {\n        console.log('DEBUG: Saving query to localStorage for problem', problemId, sqlQuery.substring(0, 50) + '...');\n        localStorage.setItem(`sql_query_${problemId}`, sqlQuery);\n      }, 500); // Debounce saving for 500ms\n\n      return () => clearTimeout(timeoutId);\n    }\n  }, [sqlQuery, problemId]);\n\n  // Load all problems and current problem\n  useEffect(() => {\n    const initialize = async () => {\n      // Initialize session first\n      try {\n        console.log('DEBUG PracticePage: Initializing session');\n        await ProgressService.initializeSession();\n        console.log('DEBUG PracticePage: Session initialized with ID:', ProgressService.sessionId);\n      } catch (error) {\n        console.error('Failed to initialize session in PracticePage:', error);\n      }\n\n      // Then load problems and current problem\n      loadAllProblems();\n      if (problemId) {\n        loadProblem(problemId);\n        checkLearningPathContext(problemId);\n      } else {\n        // Set up default environment\n        setupDefaultEnvironment();\n      }\n    };\n    initialize();\n  }, [problemId, location.search, loadProblem, checkLearningPathContext]);\n\n  // Update current problem index when problem changes\n  useEffect(() => {\n    if (problemId && allProblems && allProblems.length > 0) {\n      const index = allProblems.findIndex(p => p.id === problemId || p.slug === problemId || p.numeric_id === parseInt(problemId));\n      if (index !== -1) {\n        setCurrentProblemIndex(index);\n      }\n    }\n  }, [problemId, allProblems]);\n  const loadAllProblems = async () => {\n    try {\n      // Check if we're in a learning path context\n      const searchParams = new URLSearchParams(location.search);\n      const learningPathId = searchParams.get('learningPath');\n      if (learningPathId) {\n        // Load problems specific to this learning path\n        const response = await fetch(`http://localhost:5001/api/learning-paths/${learningPathId}`);\n        const data = await response.json();\n        if (response.ok && data.problems) {\n          // Sort by step order for learning paths\n          const sortedProblems = data.problems.sort((a, b) => (a.stepOrder || 0) - (b.stepOrder || 0)).map(problem => ({\n            ...problem,\n            // Ensure compatibility with existing problem structure\n            id: problem.id,\n            numeric_id: problem.numeric_id,\n            title: problem.title,\n            difficulty: problem.difficulty,\n            slug: problem.slug\n          }));\n          setAllProblems(sortedProblems);\n          console.log(`Loaded ${sortedProblems.length} problems for learning path`);\n        } else {\n          console.error('Learning path problems not found:', data);\n          setAllProblems([]);\n        }\n      } else {\n        // Load all problems (default behavior)\n        const response = await fetch('http://localhost:5001/api/sql/problems');\n        const data = await response.json();\n        if (response.ok && data.problems) {\n          // Sort problems by numeric_id for sequential ordering\n          const sortedProblems = data.problems.sort((a, b) => (a.numeric_id || 0) - (b.numeric_id || 0));\n          setAllProblems(sortedProblems);\n        } else {\n          console.error('Problems data not found in response:', data);\n          setAllProblems([]);\n        }\n      }\n    } catch (error) {\n      console.error('Failed to load problems list:', error);\n      setAllProblems([]);\n    }\n  };\n  const loadProblem = useCallback(async id => {\n    try {\n      const response = await fetch(`http://localhost:5001/api/sql/problems/${id}`);\n      const data = await response.json();\n      if (response.ok) {\n        setProblem(data.problem);\n        setSchema(data.schema);\n        // Don't reset sqlQuery here - let the caching useEffect handle it\n        setShowSolution(false); // Reset solution visibility\n        // Clear results and errors when loading a new problem\n        setResults(null);\n        setError(null);\n        // Reset attempt count for new problem\n        setAttemptCount(0);\n        setShowHints(false);\n\n        // Setup problem environment\n        await setupProblemEnvironment(id);\n      }\n    } catch (error) {\n      console.error('Failed to load problem:', error);\n    }\n  }, [selectedDialect]);\n  const navigateToProblem = problemId => {\n    // Preserve learning path context in URL if it exists\n    const searchParams = new URLSearchParams(location.search);\n    const learningPathId = searchParams.get('learningPath');\n    const url = learningPathId ? `/practice/${problemId}?learningPath=${learningPathId}` : `/practice/${problemId}`;\n    navigate(url);\n    setShowProblemsList(false);\n    // Clear results and errors when navigating to a new problem\n    setResults(null);\n    setError(null);\n    // Scroll to top when navigating to new problem\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n  const navigateToNextProblem = useCallback(async () => {\n    // If in learning path context, use learning path navigation\n    if (learningPathContext && pathPosition) {\n      try {\n        const response = await fetch(`http://localhost:5001/api/learning-paths/${learningPathContext.learning_path_id}/next/${problemId}`);\n        const data = await response.json();\n        if (response.ok && data.nextProblem) {\n          navigateToProblem(data.nextProblem.problem_numeric_id);\n        } else if (data.message) {\n          // Show completion message for learning path\n          alert(data.message);\n        }\n        return;\n      } catch (error) {\n        console.error('Failed to get next problem in path:', error);\n        // Fall through to regular navigation\n      }\n    }\n\n    // Regular navigation (not in learning path or API failed)\n    if (allProblems && allProblems.length > 0 && currentProblemIndex < allProblems.length - 1) {\n      const nextProblem = allProblems[currentProblemIndex + 1];\n      if (nextProblem) {\n        navigateToProblem(nextProblem.numeric_id);\n      }\n    }\n  }, [learningPathContext, pathPosition, problemId, allProblems, currentProblemIndex]);\n  const navigateToPreviousProblem = useCallback(async () => {\n    // If in learning path context, use learning path navigation\n    if (learningPathContext && pathPosition && pathPosition.has_previous) {\n      const prevProblem = pathPosition.previous_problem;\n      if (prevProblem) {\n        navigateToProblem(prevProblem.problem_numeric_id);\n        return;\n      }\n    }\n\n    // Regular navigation (not in learning path or no previous in path)\n    if (currentProblemIndex > 0) {\n      const prevProblem = allProblems[currentProblemIndex - 1];\n      navigateToProblem(prevProblem.numeric_id);\n    }\n  }, [learningPathContext, pathPosition, currentProblemIndex, allProblems]);\n  const getDifficultyColor = difficulty => {\n    switch (difficulty === null || difficulty === void 0 ? void 0 : difficulty.toLowerCase()) {\n      case 'easy':\n        return 'text-green-600 bg-green-100';\n      case 'medium':\n        return 'text-yellow-600 bg-yellow-100';\n      case 'hard':\n        return 'text-red-600 bg-red-100';\n      default:\n        return 'text-gray-600 bg-gray-100';\n    }\n  };\n  const setupProblemEnvironment = async id => {\n    try {\n      await fetch(`http://localhost:5001/api/sql/problems/${id}/setup`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          dialect: selectedDialect\n        })\n      });\n    } catch (error) {\n      console.error('Failed to setup problem environment:', error);\n    }\n  };\n  const setupDefaultEnvironment = async () => {\n    // Default environment is set up automatically by the backend\n    console.log('Using default practice environment');\n  };\n  const checkLearningPathContext = useCallback(async problemId => {\n    try {\n      // Check if learning path is specified in URL parameters\n      const searchParams = new URLSearchParams(location.search);\n      const learningPathId = searchParams.get('learningPath');\n      if (learningPathId) {\n        // User came from a specific learning path, use that context\n        const positionResponse = await fetch(`http://localhost:5001/api/learning-paths/${learningPathId}/position/${problemId}`);\n        const positionData = await positionResponse.json();\n        if (positionResponse.ok) {\n          setLearningPathContext({\n            learning_path_id: learningPathId,\n            learning_path_name: 'Learning Path'\n          });\n          setPathPosition(positionData.position);\n          return;\n        }\n      }\n\n      // Fallback: check if problem belongs to any learning paths\n      const response = await fetch(`http://localhost:5001/api/problems/${problemId}/learning-paths`);\n      const data = await response.json();\n      if (response.ok && data.learningPaths && data.learningPaths.length > 0) {\n        // Set the first learning path as context\n        const primaryPath = data.learningPaths[0];\n        setLearningPathContext(primaryPath);\n\n        // Get position information for this problem in the learning path\n        const positionResponse = await fetch(`http://localhost:5001/api/learning-paths/${primaryPath.learning_path_id}/position/${problemId}`);\n        const positionData = await positionResponse.json();\n        if (positionResponse.ok) {\n          setPathPosition(positionData.position);\n        }\n      } else {\n        setLearningPathContext(null);\n        setPathPosition(null);\n      }\n    } catch (error) {\n      console.error('Failed to check learning path context:', error);\n      setLearningPathContext(null);\n      setPathPosition(null);\n    }\n  }, [location.search]);\n  const executeQuery = async () => {\n    if (!sqlQuery.trim()) {\n      setError('Please enter a SQL query');\n      return;\n    }\n    setIsExecuting(true);\n    setError(null);\n    setResults(null); // Clear previous results\n\n    // Increment attempt count\n    const newAttemptCount = attemptCount + 1;\n    setAttemptCount(newAttemptCount);\n    try {\n      console.log('DEBUG: Executing query with session ID:', ProgressService.sessionId, 'for problem:', problemId);\n      const response = await fetch('http://localhost:5001/api/execute/sql', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Session-ID': ProgressService.sessionId,\n          ...(token && {\n            'Authorization': `Bearer ${token}`\n          })\n        },\n        body: JSON.stringify({\n          sql: sqlQuery,\n          dialect: selectedDialect,\n          problemId: (problem === null || problem === void 0 ? void 0 : problem.id) || problemId,\n          // Use the actual UUID if available\n          problemNumericId: parseInt(problemId)\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        setResults(data.data);\n        setError(null);\n        setErrorAnalysis(null);\n\n        // Progress is automatically tracked by the backend in execute.js\n        console.log('DEBUG: Query completed. Progress should be automatically tracked by backend.', {\n          sessionId: ProgressService.sessionId,\n          problemId: (problem === null || problem === void 0 ? void 0 : problem.id) || problemId,\n          problemNumericId: problemId,\n          isCorrect: data.data.isCorrect\n        });\n      } else {\n        setError(data.error);\n        setErrorAnalysis(data.errorAnalysis || null);\n        setResults(null); // Clear results on error\n\n        // Record failed attempt\n        try {\n          const progressService = new ProgressService();\n          await progressService.recordAttempt(problemId, parseInt(problemId),\n          // problemNumericId\n          sqlQuery, false,\n          // isCorrect = false for errors\n          0,\n          // no execution time for errors\n          data.error,\n          // error message\n          false,\n          // hintUsed\n          false // solutionViewed\n          );\n        } catch (progressError) {\n          console.log('Failed to record failed attempt:', progressError);\n        }\n      }\n    } catch (err) {\n      setError('Failed to execute query. Please check your connection.');\n      setErrorAnalysis(null);\n      setResults(null); // Clear results on network error\n    } finally {\n      setIsExecuting(false);\n    }\n  };\n\n  // Close problems list when clicking outside\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (!event.target.closest('.relative')) {\n        setShowProblemsList(false);\n      }\n    };\n    if (showProblemsList) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [showProblemsList]);\n\n  // Add keyboard shortcuts\n  useEffect(() => {\n    const handleKeyPress = event => {\n      // Only trigger shortcuts when not typing in textarea or input\n      if (event.target.tagName === 'TEXTAREA' || event.target.tagName === 'INPUT') {\n        return;\n      }\n      if (event.key === 'ArrowLeft' && event.ctrlKey) {\n        event.preventDefault();\n        navigateToPreviousProblem();\n      } else if (event.key === 'ArrowRight' && event.ctrlKey) {\n        event.preventDefault();\n        navigateToNextProblem();\n      } else if (event.key === 'p' && event.ctrlKey) {\n        event.preventDefault();\n        setShowProblemsList(!showProblemsList);\n      }\n    };\n    document.addEventListener('keydown', handleKeyPress);\n    return () => {\n      document.removeEventListener('keydown', handleKeyPress);\n    };\n  }, [currentProblemIndex, allProblems === null || allProblems === void 0 ? void 0 : allProblems.length, showProblemsList, navigateToNextProblem, navigateToPreviousProblem]);\n\n  // If no problem is selected, redirect to problems page\n  if (!problemId) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/problems\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 12\n    }, this);\n  }\n  // Problem mode - show the full problem-solving interface\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-7xl mx-auto px-4 py-8 animate-fade-in bg-gray-50 dark:bg-gray-900 min-h-screen transition-colors\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: problem && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-start justify-between mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-start space-x-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-2xl font-bold text-blue-600 dark:text-blue-400 bg-blue-100 dark:bg-blue-900 px-3 py-1 rounded-lg\",\n              children: [\"#\", ((_problem$numeric_id = problem.numeric_id) === null || _problem$numeric_id === void 0 ? void 0 : _problem$numeric_id.toString().padStart(3, '0')) || '000']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-3xl font-bold text-gray-900 dark:text-white\",\n                children: problem.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center space-x-4 mt-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `px-2 py-1 rounded text-xs font-medium ${getDifficultyColor(problem.difficulty)}`,\n                  children: ((_problem$difficulty = problem.difficulty) === null || _problem$difficulty === void 0 ? void 0 : _problem$difficulty.charAt(0).toUpperCase()) + ((_problem$difficulty2 = problem.difficulty) === null || _problem$difficulty2 === void 0 ? void 0 : _problem$difficulty2.slice(1))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm text-gray-500 dark:text-gray-400\",\n                  children: problem.category_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 21\n                }, this), learningPathContext && pathPosition && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center space-x-2 px-3 py-1 bg-blue-100 dark:bg-blue-900/50 rounded-full border border-blue-200 dark:border-blue-800\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-xs text-blue-700 dark:text-blue-300 font-medium\",\n                    children: [\"\\uD83D\\uDCDA \", learningPathContext.learning_path_name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 456,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-xs text-blue-600 dark:text-blue-400\",\n                    children: [\"(\", pathPosition.current_step, \"/\", pathPosition.total_steps, \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 459,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(BookmarkButton, {\n              problemId: problem === null || problem === void 0 ? void 0 : problem.id,\n              size: \"md\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-px h-8 bg-gray-300 dark:bg-gray-600 mx-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-gray-500 mr-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Ctrl + \\u2190 / \\u2192\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Ctrl + P\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: navigateToPreviousProblem,\n              disabled: currentProblemIndex === 0,\n              className: \"px-3 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-md hover:bg-gray-50 dark:hover:bg-gray-700 hover:shadow-md disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 hover-lift btn-press\",\n              title: \"Previous Problem (Ctrl + Left Arrow)\",\n              children: \"\\u2190 Previous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setShowProblemsList(!showProblemsList),\n                className: \"px-4 py-2 text-sm font-medium text-white bg-blue-600 dark:bg-blue-700 border border-blue-600 dark:border-blue-700 rounded-md hover:bg-blue-700 dark:hover:bg-blue-600 hover:shadow-lg transition-all duration-200 hover-lift btn-press animate-pulse-gentle\",\n                children: [\"All Problems (\", (allProblems === null || allProblems === void 0 ? void 0 : allProblems.length) || 0, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 19\n              }, this), showProblemsList && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"absolute right-0 mt-2 w-80 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg z-50 max-h-96 overflow-y-auto\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-2\",\n                  children: allProblems === null || allProblems === void 0 ? void 0 : allProblems.map((prob, index) => {\n                    var _prob$numeric_id, _prob$difficulty;\n                    return /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => {\n                        navigateToProblem(prob.numeric_id);\n                        setShowProblemsList(false);\n                      },\n                      className: `w-full text-left px-3 py-2 rounded text-sm transition-colors ${prob.numeric_id === (problem === null || problem === void 0 ? void 0 : problem.numeric_id) ? 'bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300' : 'hover:bg-gray-100 dark:hover:bg-gray-700 text-gray-700 dark:text-gray-300'}`,\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex items-center space-x-2\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"font-medium\",\n                          children: [\"#\", ((_prob$numeric_id = prob.numeric_id) === null || _prob$numeric_id === void 0 ? void 0 : _prob$numeric_id.toString().padStart(3, '0')) || '000']\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 513,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"truncate flex-1\",\n                          children: prob.title\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 514,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: `px-1 py-0.5 rounded text-xs ${getDifficultyColor(prob.difficulty)}`,\n                          children: (_prob$difficulty = prob.difficulty) === null || _prob$difficulty === void 0 ? void 0 : _prob$difficulty.charAt(0).toUpperCase()\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 515,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 512,\n                        columnNumber: 29\n                      }, this)\n                    }, prob.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 500,\n                      columnNumber: 27\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 498,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: navigateToNextProblem,\n              disabled: currentProblemIndex === ((allProblems === null || allProblems === void 0 ? void 0 : allProblems.length) || 0) - 1,\n              className: \"px-3 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-md hover:bg-gray-50 dark:hover:bg-gray-700 hover:shadow-md disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 hover-lift btn-press\",\n              title: \"Next Problem (Ctrl + Right Arrow)\",\n              children: \"Next \\u2192\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 lg:grid-cols-2 gap-6 min-h-[600px] max-h-[80vh]\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col space-y-4 overflow-y-auto pr-2\",\n        children: [problem && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white dark:bg-gray-800 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border-b border-gray-200 dark:border-gray-700 px-4 py-3 flex justify-between items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-lg font-medium text-gray-900 dark:text-white\",\n              children: \"Problem Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 17\n            }, this), schema && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowSolution(!showSolution),\n              className: \"text-sm px-3 py-1 rounded border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors\",\n              children: showSolution ? 'Hide Solution' : 'Show Solution'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"prose max-w-none text-gray-900 dark:text-white\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                dangerouslySetInnerHTML: {\n                  __html: problem.description.replace(/\\*\\*Expected Output:\\*\\*.*?(?=\\*\\*|$)/g, '') // Remove Expected Output section\n                  .replace(/Expected Output:.*?(?=\\n\\n|\\n\\*\\*|$)/g, '') // Remove Expected Output without bold\n                  // Make section headers bold (whether they already are or not)\n                  .replace(/\\*\\*Business Context:\\*\\*/g, '<strong class=\"text-gray-900 dark:text-white\">Business Context:</strong>').replace(/\\*\\*Scenario:\\*\\*/g, '<strong class=\"text-gray-900 dark:text-white\">Scenario:</strong>').replace(/\\*\\*Problem:\\*\\*/g, '<strong class=\"text-gray-900 dark:text-white\">Problem:</strong>').replace(/Business Context:/g, '<strong class=\"text-gray-900 dark:text-white\">Business Context:</strong>').replace(/Scenario:/g, '<strong class=\"text-gray-900 dark:text-white\">Scenario:</strong>').replace(/Problem:/g, '<strong class=\"text-gray-900 dark:text-white\">Problem:</strong>')\n                  // Handle other bold text\n                  .replace(/\\*\\*(.*?)\\*\\*/g, '<strong class=\"text-gray-900 dark:text-white\">$1</strong>').replace(/`(.*?)`/g, '<code class=\"bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-white px-1 rounded\">$1</code>').replace(/```sql\\n([\\s\\S]*?)\\n```/g, '<pre class=\"bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-white p-3 rounded overflow-x-auto\"><code>$1</code></pre>').replace(/\\n/g, '<br>').replace(/<br><br>/g, '<br>') // Clean up double line breaks\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 562,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 17\n            }, this), showSolution && schema && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-6 p-4 bg-blue-50 dark:bg-blue-900/50 border border-blue-200 dark:border-blue-800 rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-between mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center space-x-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-lg\",\n                    children: \"\\uD83D\\uDCA1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 587,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"font-semibold text-blue-800 dark:text-blue-300\",\n                    children: \"Solution\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 588,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 586,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: e => {\n                    navigator.clipboard.writeText(schema.solution_sql);\n                    // Add a temporary visual feedback\n                    const btn = e.target;\n                    const originalText = btn.textContent;\n                    btn.textContent = 'Copied!';\n                    setTimeout(() => {\n                      btn.textContent = originalText;\n                    }, 2000);\n                  },\n                  className: \"text-xs px-2 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors\",\n                  title: \"Copy SQL to clipboard\",\n                  children: \"\\uD83D\\uDCCB Copy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 590,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 585,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-gray-900 dark:bg-gray-950 p-4 rounded overflow-x-auto\",\n                children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  value: schema.solution_sql,\n                  readOnly: true,\n                  className: \"w-full h-48 p-3 bg-gray-800 text-green-400 font-mono text-sm border-0 resize-none\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 608,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 607,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white dark:bg-gray-800 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setExpandedSection(expandedSection === 'schema' ? null : 'schema'),\n              className: \"w-full px-4 py-3 text-left flex items-center justify-between hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-lg font-medium text-gray-900 dark:text-white\",\n                children: \"Database Schema\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 628,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n                className: `w-5 h-5 text-gray-500 dark:text-gray-400 transform transition-transform ${expandedSection === 'schema' ? 'rotate-180' : ''}`,\n                fill: \"none\",\n                stroke: \"currentColor\",\n                viewBox: \"0 0 24 24\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M19 9l-7 7-7-7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 637,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 629,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 624,\n              columnNumber: 15\n            }, this), expandedSection === 'schema' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"border-t border-gray-200 dark:border-gray-700 p-4\",\n              children: schema ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: (() => {\n                  const createTableRegex = /CREATE TABLE (\\w+) \\(([\\s\\S]*?)\\);/g;\n                  const tables = [];\n                  const sampleData = {};\n                  let match;\n\n                  // Parse table structures\n                  while ((match = createTableRegex.exec(schema.setup_sql)) !== null) {\n                    const tableName = match[1];\n                    const columnsText = match[2];\n                    const parseColumns = columnsText => {\n                      const columns = [];\n                      let current = '';\n                      let parenDepth = 0;\n                      for (let i = 0; i < columnsText.length; i++) {\n                        const char = columnsText[i];\n                        if (char === '(') parenDepth++;\n                        if (char === ')') parenDepth--;\n                        if (char === ',' && parenDepth === 0) {\n                          if (current.trim()) columns.push(current.trim());\n                          current = '';\n                        } else {\n                          current += char;\n                        }\n                      }\n                      if (current.trim()) columns.push(current.trim());\n                      return columns;\n                    };\n                    const columns = parseColumns(columnsText).filter(col => col.length > 0).map(col => {\n                      const parts = col.split(' ');\n                      const name = parts[0];\n                      const type = parts.slice(1).join(' ').toUpperCase();\n                      return {\n                        name,\n                        type\n                      };\n                    });\n                    tables.push({\n                      name: tableName,\n                      columns\n                    });\n                  }\n\n                  // Parse sample data\n                  const insertMatches = [...schema.setup_sql.matchAll(/INSERT INTO\\s+(\\w+)\\s+VALUES\\s+([\\s\\S]*?);/g)];\n                  insertMatches.forEach(match => {\n                    const tableName = match[1];\n                    const valuesText = match[2];\n                    const rowMatches = [...valuesText.matchAll(/\\(([\\s\\S]*?)\\)/g)];\n                    sampleData[tableName] = rowMatches.slice(0, 5).map(rowMatch => {\n                      return rowMatch[1].split(',').map(val => {\n                        const trimmed = val.trim();\n                        // Remove quotes and handle nulls\n                        if (trimmed === 'NULL') return 'NULL';\n                        return trimmed.replace(/^'|'$/g, '').replace(/''/g, \"'\");\n                      });\n                    });\n                  });\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"space-y-6\",\n                    children: tables.map(table => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"border border-gray-200 dark:border-gray-600 rounded-lg\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"bg-gray-50 dark:bg-gray-700 px-4 py-2 border-b border-gray-200 dark:border-gray-600 rounded-t-lg\",\n                        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                          className: \"font-semibold text-gray-900 dark:text-white\",\n                          children: table.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 711,\n                          columnNumber: 35\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 710,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"p-4\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"space-y-2 mb-4\",\n                          children: table.columns.map(col => /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"flex justify-between items-center py-2 border-b border-gray-100 dark:border-gray-700 last:border-0\",\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"text-sm font-medium text-gray-700 dark:text-gray-300\",\n                              children: col.name\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 717,\n                              columnNumber: 41\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"text-xs text-blue-600 dark:text-blue-400 bg-blue-50 dark:bg-blue-900/50 px-2 py-0.5 rounded\",\n                              children: col.type\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 718,\n                              columnNumber: 41\n                            }, this)]\n                          }, col.name, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 716,\n                            columnNumber: 39\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 714,\n                          columnNumber: 35\n                        }, this), sampleData[table.name] && sampleData[table.name].length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                            className: \"text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\",\n                            children: \"Sample Data:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 726,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"overflow-x-auto\",\n                            children: /*#__PURE__*/_jsxDEV(\"table\", {\n                              className: \"min-w-full text-xs border border-gray-200 dark:border-gray-600\",\n                              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                                className: \"bg-gray-50 dark:bg-gray-700\",\n                                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                                  children: table.columns.map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n                                    className: \"px-2 py-1 text-left font-medium text-gray-700 dark:text-gray-300 border-r border-gray-200 dark:border-gray-600 last:border-0\",\n                                    children: col.name\n                                  }, col.name, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 732,\n                                    columnNumber: 49\n                                  }, this))\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 730,\n                                  columnNumber: 45\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 729,\n                                columnNumber: 43\n                              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                                children: sampleData[table.name].map((row, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                                  className: \"border-t border-gray-200 dark:border-gray-600\",\n                                  children: row.map((cell, cellIdx) => /*#__PURE__*/_jsxDEV(\"td\", {\n                                    className: \"px-2 py-1 text-gray-700 dark:text-gray-300 border-r border-gray-200 dark:border-gray-600 last:border-0\",\n                                    children: cell\n                                  }, cellIdx, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 742,\n                                    columnNumber: 51\n                                  }, this))\n                                }, idx, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 740,\n                                  columnNumber: 47\n                                }, this))\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 738,\n                                columnNumber: 43\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 728,\n                              columnNumber: 41\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 727,\n                            columnNumber: 39\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 725,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 713,\n                        columnNumber: 33\n                      }, this)]\n                    }, table.name, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 709,\n                      columnNumber: 31\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 707,\n                    columnNumber: 27\n                  }, this);\n                })()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 644,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-gray-500 dark:text-gray-400\",\n                children: \"No database schema available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 761,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 13\n          }, this), problem && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white dark:bg-gray-800 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setExpandedSection(expandedSection === 'expected' ? null : 'expected'),\n              className: \"w-full px-4 py-3 text-left flex items-center justify-between hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-lg font-medium text-gray-900 dark:text-white\",\n                children: \"Expected Output\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 774,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n                className: `w-5 h-5 text-gray-500 dark:text-gray-400 transform transition-transform ${expandedSection === 'expected' ? 'rotate-180' : ''}`,\n                fill: \"none\",\n                stroke: \"currentColor\",\n                viewBox: \"0 0 24 24\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M19 9l-7 7-7-7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 783,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 775,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 770,\n              columnNumber: 17\n            }, this), expandedSection === 'expected' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"border-t border-gray-200 dark:border-gray-700 p-4\",\n              children: schema && schema.expected_output && schema.expected_output.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"overflow-x-auto\",\n                children: [/*#__PURE__*/_jsxDEV(\"table\", {\n                  className: \"min-w-full divide-y divide-gray-200 dark:divide-gray-600\",\n                  children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                    className: \"bg-gray-50 dark:bg-gray-700\",\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: Object.keys(schema.expected_output[0]).map((column, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n                        className: \"px-4 py-2 text-left text-xs font-medium text-gray-700 dark:text-gray-300 uppercase tracking-wider border border-gray-300 dark:border-gray-500\",\n                        children: column\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 795,\n                        columnNumber: 33\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 793,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 792,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    className: \"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-600\",\n                    children: schema.expected_output.slice(0, 10).map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                      className: \"hover:bg-gray-50 dark:hover:bg-gray-700\",\n                      children: Object.values(row).map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"px-4 py-2 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100 border border-gray-300 dark:border-gray-500\",\n                        children: cell !== null ? cell.toString() : 'NULL'\n                      }, cellIndex, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 808,\n                        columnNumber: 35\n                      }, this))\n                    }, rowIndex, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 806,\n                      columnNumber: 31\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 804,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 791,\n                  columnNumber: 25\n                }, this), schema.expected_output.length > 10 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-gray-500 dark:text-gray-400 mt-2 text-center\",\n                  children: [\"Showing first 10 rows of \", schema.expected_output.length, \" expected rows\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 820,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 790,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-500 dark:text-gray-400\",\n                children: \"Expected output will be shown when available.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 826,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 788,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 769,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 11\n        }, this), problem && showHints && /*#__PURE__*/_jsxDEV(HintsPanel, {\n          problemId: problemId,\n          attemptCount: attemptCount,\n          onClose: () => setShowHints(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 838,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col space-y-4 overflow-hidden\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white dark:bg-gray-800 rounded-lg shadow-lg flex-1 min-h-0 border border-gray-200 dark:border-gray-700\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border-b border-gray-200 dark:border-gray-700 px-4 py-3 flex justify-between items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-lg font-medium text-gray-900 dark:text-white\",\n              children: \"SQL Query\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 852,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-2\",\n              children: [problem && attemptCount > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setShowHints(true),\n                className: \"text-xs px-2 py-1 bg-yellow-100 dark:bg-yellow-900/50 text-yellow-700 dark:text-yellow-300 rounded hover:bg-yellow-200 dark:hover:bg-yellow-900 transition-colors\",\n                children: [\"\\uD83D\\uDCA1 Hints (\", Math.min(attemptCount, 3), \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 855,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: selectedDialect,\n                onChange: e => setSelectedDialect(e.target.value),\n                className: \"text-sm px-2 py-1 border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-700 text-gray-900 dark:text-white\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"postgresql\",\n                  children: \"PostgreSQL\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 867,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"mysql\",\n                  children: \"MySQL\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 868,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 862,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: executeQuery,\n                disabled: isExecuting,\n                className: \"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50 transition-all duration-200 hover-lift btn-press\",\n                title: \"Execute query (Ctrl+Enter)\",\n                children: isExecuting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"inline-block animate-spin w-4 h-4 border-2 border-white border-t-transparent rounded-full mr-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 878,\n                    columnNumber: 23\n                  }, this), \"Running...\"]\n                }, void 0, true) : 'Run Query'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 870,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 853,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 851,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1\",\n            style: {\n              minHeight: '500px',\n              height: '500px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: sqlQuery,\n              onChange: e => setSqlQuery(e.target.value),\n              onKeyDown: e => {\n                if ((e.ctrlKey || e.metaKey) && e.key === 'Enter') {\n                  e.preventDefault();\n                  executeQuery();\n                }\n              },\n              className: \"w-full h-full p-4 bg-gray-900 text-green-400 font-mono text-sm border-0 resize-none\",\n              placeholder: \"-- Write your SQL query here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 889,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 888,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 850,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white dark:bg-gray-800 rounded-lg shadow-lg flex-1 min-h-0 border border-gray-200 dark:border-gray-700\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border-b border-gray-200 dark:border-gray-700 px-4 py-3\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-lg font-medium text-gray-900 dark:text-white\",\n              children: \"Results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 907,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 906,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 overflow-y-auto h-full\",\n            children: [error && /*#__PURE__*/_jsxDEV(EnhancedErrorDisplay, {\n              error: error,\n              errorAnalysis: errorAnalysis,\n              onQuickFix: fixedQuery => {\n                setSqlQuery(fixedQuery);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 912,\n              columnNumber: 17\n            }, this), results && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center justify-between mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm text-gray-500\",\n                    children: [\"Execution time: \", results.executionTime, \" \\u2022 \", results.rowCount || ((_results$rows = results.rows) === null || _results$rows === void 0 ? void 0 : _results$rows.length) || 0, \" rows returned\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 925,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm text-green-600 font-medium\",\n                    children: \"\\u2713 Query executed successfully\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 928,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 924,\n                  columnNumber: 21\n                }, this), (results.isCorrect !== null || results.feedback) && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `p-3 rounded-md border ${results.isCorrect === true ? 'bg-green-50 dark:bg-green-900/50 border-green-200 dark:border-green-800' : 'bg-red-50 dark:bg-red-900/50 border-red-200 dark:border-red-800'}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `flex items-center space-x-2 ${results.isCorrect === true ? 'text-green-800 dark:text-green-300' : 'text-red-800 dark:text-red-300'}`,\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-lg\",\n                      children: results.isCorrect ? '🎉' : '❌'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 945,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"font-medium\",\n                      children: results.isCorrect ? 'Correct Solution!' : 'Incorrect Solution'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 948,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 940,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `text-sm mt-1 ${results.isCorrect ? 'text-green-700 dark:text-green-400' : 'text-red-700 dark:text-red-400'}`,\n                    children: results.feedback\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 952,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 935,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 923,\n                columnNumber: 19\n              }, this), results.rows && results.rows.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"overflow-x-auto\",\n                children: [/*#__PURE__*/_jsxDEV(\"table\", {\n                  className: \"min-w-full border border-gray-200 dark:border-gray-600\",\n                  children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                    className: \"bg-gray-50 dark:bg-gray-700\",\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: Object.keys(results.rows[0]).map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n                        className: \"px-3 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider border-b border-gray-200 dark:border-gray-600\",\n                        children: column\n                      }, column, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 970,\n                        columnNumber: 31\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 968,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 967,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    className: \"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-600\",\n                    children: results.rows.slice(0, 100).map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: Object.values(row).map((value, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"px-3 py-2 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100 border-b border-gray-200 dark:border-gray-600\",\n                        children: value !== null ? value.toString() : /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-gray-400\",\n                          children: \"NULL\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 981,\n                          columnNumber: 72\n                        }, this)\n                      }, i, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 980,\n                        columnNumber: 33\n                      }, this))\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 978,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 976,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 966,\n                  columnNumber: 23\n                }, this), ((_results$rows2 = results.rows) === null || _results$rows2 === void 0 ? void 0 : _results$rows2.length) > 100 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-gray-500 dark:text-gray-400 mt-2 text-center\",\n                  children: [\"Showing first 100 rows of \", ((_results$rows3 = results.rows) === null || _results$rows3 === void 0 ? void 0 : _results$rows3.length) || 0, \" total rows\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 990,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 965,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center py-8\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-gray-500 dark:text-gray-400\",\n                  children: \"Query executed successfully but returned no rows\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 997,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 996,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 922,\n              columnNumber: 17\n            }, this), problem && problem.expected_output && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-6 border-t border-gray-200 dark:border-gray-700 pt-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-lg font-medium text-gray-900 dark:text-white mb-3\",\n                children: \"Expected Output\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1008,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-gray-50 dark:bg-gray-700 rounded-lg p-4\",\n                children: problem.expected_output.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"overflow-x-auto\",\n                  children: [/*#__PURE__*/_jsxDEV(\"table\", {\n                    className: \"min-w-full divide-y divide-gray-200 dark:divide-gray-600\",\n                    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                      className: \"bg-gray-100 dark:bg-gray-600\",\n                      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: Object.keys(problem.expected_output[0]).map((column, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n                          className: \"px-4 py-2 text-left text-xs font-medium text-gray-700 dark:text-gray-300 uppercase tracking-wider border border-gray-300 dark:border-gray-500\",\n                          children: column\n                        }, index, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1016,\n                          columnNumber: 33\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1014,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1013,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                      className: \"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-600\",\n                      children: problem.expected_output.slice(0, 20).map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                        className: \"hover:bg-gray-50 dark:hover:bg-gray-700\",\n                        children: Object.values(row).map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n                          className: \"px-4 py-2 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100 border border-gray-300 dark:border-gray-500\",\n                          children: cell !== null ? cell.toString() : 'NULL'\n                        }, cellIndex, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1029,\n                          columnNumber: 35\n                        }, this))\n                      }, rowIndex, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1027,\n                        columnNumber: 31\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1025,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1012,\n                    columnNumber: 25\n                  }, this), problem.expected_output.length > 20 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm text-gray-500 dark:text-gray-400 mt-2 text-center\",\n                    children: [\"Showing first 20 rows of \", problem.expected_output.length, \" expected rows\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1041,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1011,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center py-4\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-gray-500 dark:text-gray-400\",\n                    children: \"Expected output not available for this problem\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1048,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1047,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1009,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1007,\n              columnNumber: 17\n            }, this), !results && !error && !isExecuting && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center py-8\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-gray-500 dark:text-gray-400\",\n                children: \"\\uD83D\\uDCBB\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1059,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-gray-500 dark:text-gray-400 mt-2\",\n                children: \"Run a query to see results\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1060,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1058,\n              columnNumber: 17\n            }, this), isExecuting && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center py-8\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inline-block animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600 dark:border-blue-400\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1066,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-gray-500 dark:text-gray-400 mt-2\",\n                children: \"Executing query...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1067,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1065,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 910,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 905,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 847,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 438,\n    columnNumber: 5\n  }, this);\n}\n_s(PracticePage, \"kY7EVWTUfHL4sKjFLN067ImW/Mc=\", false, function () {\n  return [useParams, useNavigate, useLocation, useAuth];\n});\n_c = PracticePage;\nexport default PracticePage;\nvar _c;\n$RefreshReg$(_c, \"PracticePage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useParams","useNavigate","Navigate","useLocation","useAuth","ProgressService","HintsPanel","BookmarkButton","EnhancedErrorDisplay","jsxDEV","_jsxDEV","Fragment","_Fragment","PracticePage","_s","_problem$numeric_id","_problem$difficulty","_problem$difficulty2","_results$rows","_results$rows2","_results$rows3","problemId","navigate","location","token","sqlQuery","setSqlQuery","selectedDialect","setSelectedDialect","isExecuting","setIsExecuting","results","setResults","error","setError","problem","setProblem","schema","setSchema","showSolution","setShowSolution","allProblems","setAllProblems","showProblemsList","setShowProblemsList","currentProblemIndex","setCurrentProblemIndex","attemptCount","setAttemptCount","showHints","setShowHints","learningPathContext","setLearningPathContext","pathPosition","setPathPosition","errorAnalysis","setErrorAnalysis","textareaRef","expandedSection","setExpandedSection","cachedQuery","localStorage","getItem","console","log","substring","includes","removeItem","trim","timeoutId","setTimeout","setItem","clearTimeout","initialize","initializeSession","sessionId","loadAllProblems","loadProblem","checkLearningPathContext","setupDefaultEnvironment","search","length","index","findIndex","p","id","slug","numeric_id","parseInt","searchParams","URLSearchParams","learningPathId","get","response","fetch","data","json","ok","problems","sortedProblems","sort","a","b","stepOrder","map","title","difficulty","setupProblemEnvironment","navigateToProblem","url","window","scrollTo","top","behavior","navigateToNextProblem","learning_path_id","nextProblem","problem_numeric_id","message","alert","navigateToPreviousProblem","has_previous","prevProblem","previous_problem","getDifficultyColor","toLowerCase","method","headers","body","JSON","stringify","dialect","positionResponse","positionData","learning_path_name","position","learningPaths","primaryPath","executeQuery","newAttemptCount","sql","problemNumericId","success","isCorrect","progressService","recordAttempt","progressError","err","handleClickOutside","event","target","closest","document","addEventListener","removeEventListener","handleKeyPress","tagName","key","ctrlKey","preventDefault","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","className","children","toString","padStart","charAt","toUpperCase","slice","category_name","current_step","total_steps","size","onClick","disabled","prob","_prob$numeric_id","_prob$difficulty","dangerouslySetInnerHTML","__html","description","e","navigator","clipboard","writeText","solution_sql","btn","originalText","textContent","value","readOnly","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","createTableRegex","tables","sampleData","match","exec","setup_sql","tableName","columnsText","parseColumns","columns","current","parenDepth","i","char","push","filter","col","parts","split","name","type","join","insertMatches","matchAll","forEach","valuesText","rowMatches","rowMatch","val","trimmed","table","row","idx","cell","cellIdx","expected_output","Object","keys","column","rowIndex","values","cellIndex","onClose","Math","min","onChange","style","minHeight","height","onKeyDown","metaKey","placeholder","onQuickFix","fixedQuery","executionTime","rowCount","rows","feedback","_c","$RefreshReg$"],"sources":["/Users/ss/Downloads/Code/Vibe_coding/SQL_practice_website/sql-practice-platform/frontend/src/pages/PracticePage.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useParams, useNavigate, Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport ProgressService from '../services/progressService';\nimport HintsPanel from '../components/HintsPanel';\nimport BookmarkButton from '../components/BookmarkButton';\nimport EnhancedErrorDisplay from '../components/EnhancedErrorDisplay';\n// import SimpleSQLEditor from '../components/SimpleSQLEditor';\n\n\nfunction PracticePage() {\n  const { problemId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { token } = useAuth();\n  const [sqlQuery, setSqlQuery] = useState('-- Write your SQL query here\\n');\n  const [selectedDialect, setSelectedDialect] = useState('postgresql');\n  const [isExecuting, setIsExecuting] = useState(false);\n  const [results, setResults] = useState(null);\n  const [error, setError] = useState(null);\n  const [problem, setProblem] = useState(null);\n  const [schema, setSchema] = useState(null);\n  const [showSolution, setShowSolution] = useState(false);\n  const [allProblems, setAllProblems] = useState([]);\n  const [showProblemsList, setShowProblemsList] = useState(false);\n  const [currentProblemIndex, setCurrentProblemIndex] = useState(0);\n  const [attemptCount, setAttemptCount] = useState(0);\n  const [showHints, setShowHints] = useState(false);\n  const [learningPathContext, setLearningPathContext] = useState(null);\n  const [pathPosition, setPathPosition] = useState(null);\n  const [errorAnalysis, setErrorAnalysis] = useState(null);\n  const textareaRef = useRef(null);\n  const [expandedSection, setExpandedSection] = useState(null); // 'schema' or 'expected' or null\n\n  // Load cached query from localStorage when problem changes\n  useEffect(() => {\n    if (problemId) {\n      const cachedQuery = localStorage.getItem(`sql_query_${problemId}`);\n      console.log('DEBUG: Loading cached query for problem', problemId, ':', cachedQuery ? cachedQuery.substring(0, 50) + '...' : 'not found');\n      \n      // Clean up problematic cached queries\n      if (cachedQuery && cachedQuery.includes('SELECT * FROM customers;')) {\n        console.log('DEBUG: Removing problematic cached query');\n        localStorage.removeItem(`sql_query_${problemId}`);\n        setSqlQuery('-- Write your SQL query here\\n');\n      } else if (cachedQuery && cachedQuery !== '-- Write your SQL query here\\n' && cachedQuery.trim() !== '') {\n        setSqlQuery(cachedQuery);\n      } else {\n        setSqlQuery('-- Write your SQL query here\\n');\n      }\n    }\n  }, [problemId]);\n\n  // Save query to localStorage whenever it changes\n  useEffect(() => {\n    if (problemId && sqlQuery && sqlQuery !== '-- Write your SQL query here\\n' && sqlQuery.trim() !== '') {\n      const timeoutId = setTimeout(() => {\n        console.log('DEBUG: Saving query to localStorage for problem', problemId, sqlQuery.substring(0, 50) + '...');\n        localStorage.setItem(`sql_query_${problemId}`, sqlQuery);\n      }, 500); // Debounce saving for 500ms\n      \n      return () => clearTimeout(timeoutId);\n    }\n  }, [sqlQuery, problemId]);\n\n  // Load all problems and current problem\n  useEffect(() => {\n    const initialize = async () => {\n      // Initialize session first\n      try {\n        console.log('DEBUG PracticePage: Initializing session');\n        await ProgressService.initializeSession();\n        console.log('DEBUG PracticePage: Session initialized with ID:', ProgressService.sessionId);\n      } catch (error) {\n        console.error('Failed to initialize session in PracticePage:', error);\n      }\n      \n      // Then load problems and current problem\n      loadAllProblems();\n      if (problemId) {\n        loadProblem(problemId);\n        checkLearningPathContext(problemId);\n      } else {\n        // Set up default environment\n        setupDefaultEnvironment();\n      }\n    };\n    \n    initialize();\n  }, [problemId, location.search, loadProblem, checkLearningPathContext]);\n\n  // Update current problem index when problem changes\n  useEffect(() => {\n    if (problemId && allProblems && allProblems.length > 0) {\n      const index = allProblems.findIndex(p => \n        p.id === problemId || \n        p.slug === problemId || \n        p.numeric_id === parseInt(problemId)\n      );\n      if (index !== -1) {\n        setCurrentProblemIndex(index);\n      }\n    }\n  }, [problemId, allProblems]);\n\n  const loadAllProblems = async () => {\n    try {\n      // Check if we're in a learning path context\n      const searchParams = new URLSearchParams(location.search);\n      const learningPathId = searchParams.get('learningPath');\n      \n      if (learningPathId) {\n        // Load problems specific to this learning path\n        const response = await fetch(`http://localhost:5001/api/learning-paths/${learningPathId}`);\n        const data = await response.json();\n        if (response.ok && data.problems) {\n          // Sort by step order for learning paths\n          const sortedProblems = data.problems\n            .sort((a, b) => (a.stepOrder || 0) - (b.stepOrder || 0))\n            .map(problem => ({\n              ...problem,\n              // Ensure compatibility with existing problem structure\n              id: problem.id,\n              numeric_id: problem.numeric_id,\n              title: problem.title,\n              difficulty: problem.difficulty,\n              slug: problem.slug\n            }));\n          setAllProblems(sortedProblems);\n          console.log(`Loaded ${sortedProblems.length} problems for learning path`);\n        } else {\n          console.error('Learning path problems not found:', data);\n          setAllProblems([]);\n        }\n      } else {\n        // Load all problems (default behavior)\n        const response = await fetch('http://localhost:5001/api/sql/problems');\n        const data = await response.json();\n        if (response.ok && data.problems) {\n          // Sort problems by numeric_id for sequential ordering\n          const sortedProblems = data.problems.sort((a, b) => (a.numeric_id || 0) - (b.numeric_id || 0));\n          setAllProblems(sortedProblems);\n        } else {\n          console.error('Problems data not found in response:', data);\n          setAllProblems([]);\n        }\n      }\n    } catch (error) {\n      console.error('Failed to load problems list:', error);\n      setAllProblems([]);\n    }\n  };\n\n  const loadProblem = useCallback(async (id) => {\n    try {\n      const response = await fetch(`http://localhost:5001/api/sql/problems/${id}`);\n      const data = await response.json();\n      \n      if (response.ok) {\n        setProblem(data.problem);\n        setSchema(data.schema);\n        // Don't reset sqlQuery here - let the caching useEffect handle it\n        setShowSolution(false); // Reset solution visibility\n        // Clear results and errors when loading a new problem\n        setResults(null);\n        setError(null);\n        // Reset attempt count for new problem\n        setAttemptCount(0);\n        setShowHints(false);\n        \n        // Setup problem environment\n        await setupProblemEnvironment(id);\n      }\n    } catch (error) {\n      console.error('Failed to load problem:', error);\n    }\n  }, [selectedDialect]);\n\n  const navigateToProblem = (problemId) => {\n    // Preserve learning path context in URL if it exists\n    const searchParams = new URLSearchParams(location.search);\n    const learningPathId = searchParams.get('learningPath');\n    const url = learningPathId ? `/practice/${problemId}?learningPath=${learningPathId}` : `/practice/${problemId}`;\n    \n    navigate(url);\n    setShowProblemsList(false);\n    // Clear results and errors when navigating to a new problem\n    setResults(null);\n    setError(null);\n    // Scroll to top when navigating to new problem\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  const navigateToNextProblem = useCallback(async () => {\n    // If in learning path context, use learning path navigation\n    if (learningPathContext && pathPosition) {\n      try {\n        const response = await fetch(`http://localhost:5001/api/learning-paths/${learningPathContext.learning_path_id}/next/${problemId}`);\n        const data = await response.json();\n        \n        if (response.ok && data.nextProblem) {\n          navigateToProblem(data.nextProblem.problem_numeric_id);\n        } else if (data.message) {\n          // Show completion message for learning path\n          alert(data.message);\n        }\n        return;\n      } catch (error) {\n        console.error('Failed to get next problem in path:', error);\n        // Fall through to regular navigation\n      }\n    }\n    \n    // Regular navigation (not in learning path or API failed)\n    if (allProblems && allProblems.length > 0 && currentProblemIndex < allProblems.length - 1) {\n      const nextProblem = allProblems[currentProblemIndex + 1];\n      if (nextProblem) {\n        navigateToProblem(nextProblem.numeric_id);\n      }\n    }\n  }, [learningPathContext, pathPosition, problemId, allProblems, currentProblemIndex]);\n\n  const navigateToPreviousProblem = useCallback(async () => {\n    // If in learning path context, use learning path navigation\n    if (learningPathContext && pathPosition && pathPosition.has_previous) {\n      const prevProblem = pathPosition.previous_problem;\n      if (prevProblem) {\n        navigateToProblem(prevProblem.problem_numeric_id);\n        return;\n      }\n    }\n    \n    // Regular navigation (not in learning path or no previous in path)\n    if (currentProblemIndex > 0) {\n      const prevProblem = allProblems[currentProblemIndex - 1];\n      navigateToProblem(prevProblem.numeric_id);\n    }\n  }, [learningPathContext, pathPosition, currentProblemIndex, allProblems]);\n\n  const getDifficultyColor = (difficulty) => {\n    switch (difficulty?.toLowerCase()) {\n      case 'easy': return 'text-green-600 bg-green-100';\n      case 'medium': return 'text-yellow-600 bg-yellow-100';\n      case 'hard': return 'text-red-600 bg-red-100';\n      default: return 'text-gray-600 bg-gray-100';\n    }\n  };\n\n  const setupProblemEnvironment = async (id) => {\n    try {\n      await fetch(`http://localhost:5001/api/sql/problems/${id}/setup`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ dialect: selectedDialect })\n      });\n    } catch (error) {\n      console.error('Failed to setup problem environment:', error);\n    }\n  };\n\n  const setupDefaultEnvironment = async () => {\n    // Default environment is set up automatically by the backend\n    console.log('Using default practice environment');\n  };\n\n  const checkLearningPathContext = useCallback(async (problemId) => {\n    try {\n      // Check if learning path is specified in URL parameters\n      const searchParams = new URLSearchParams(location.search);\n      const learningPathId = searchParams.get('learningPath');\n      \n      if (learningPathId) {\n        // User came from a specific learning path, use that context\n        const positionResponse = await fetch(`http://localhost:5001/api/learning-paths/${learningPathId}/position/${problemId}`);\n        const positionData = await positionResponse.json();\n        \n        if (positionResponse.ok) {\n          setLearningPathContext({ learning_path_id: learningPathId, learning_path_name: 'Learning Path' });\n          setPathPosition(positionData.position);\n          return;\n        }\n      }\n      \n      // Fallback: check if problem belongs to any learning paths\n      const response = await fetch(`http://localhost:5001/api/problems/${problemId}/learning-paths`);\n      const data = await response.json();\n      \n      if (response.ok && data.learningPaths && data.learningPaths.length > 0) {\n        // Set the first learning path as context\n        const primaryPath = data.learningPaths[0];\n        setLearningPathContext(primaryPath);\n        \n        // Get position information for this problem in the learning path\n        const positionResponse = await fetch(`http://localhost:5001/api/learning-paths/${primaryPath.learning_path_id}/position/${problemId}`);\n        const positionData = await positionResponse.json();\n        \n        if (positionResponse.ok) {\n          setPathPosition(positionData.position);\n        }\n      } else {\n        setLearningPathContext(null);\n        setPathPosition(null);\n      }\n    } catch (error) {\n      console.error('Failed to check learning path context:', error);\n      setLearningPathContext(null);\n      setPathPosition(null);\n    }\n  }, [location.search]);\n\n  const executeQuery = async () => {\n    if (!sqlQuery.trim()) {\n      setError('Please enter a SQL query');\n      return;\n    }\n\n    setIsExecuting(true);\n    setError(null);\n    setResults(null); // Clear previous results\n    \n    // Increment attempt count\n    const newAttemptCount = attemptCount + 1;\n    setAttemptCount(newAttemptCount);\n    \n    try {\n      console.log('DEBUG: Executing query with session ID:', ProgressService.sessionId, 'for problem:', problemId);\n      const response = await fetch('http://localhost:5001/api/execute/sql', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Session-ID': ProgressService.sessionId,\n          ...(token && { 'Authorization': `Bearer ${token}` })\n        },\n        body: JSON.stringify({ \n          sql: sqlQuery, \n          dialect: selectedDialect,\n          problemId: problem?.id || problemId, // Use the actual UUID if available\n          problemNumericId: parseInt(problemId)\n        })\n      });\n      \n      const data = await response.json();\n      \n      if (data.success) {\n        setResults(data.data);\n        setError(null);\n        setErrorAnalysis(null);\n        \n        // Progress is automatically tracked by the backend in execute.js\n        console.log('DEBUG: Query completed. Progress should be automatically tracked by backend.', {\n          sessionId: ProgressService.sessionId,\n          problemId: problem?.id || problemId,\n          problemNumericId: problemId,\n          isCorrect: data.data.isCorrect\n        });\n      } else {\n        setError(data.error);\n        setErrorAnalysis(data.errorAnalysis || null);\n        setResults(null); // Clear results on error\n        \n        // Record failed attempt\n        try {\n          const progressService = new ProgressService();\n          await progressService.recordAttempt(\n            problemId,\n            parseInt(problemId), // problemNumericId\n            sqlQuery,\n            false, // isCorrect = false for errors\n            0, // no execution time for errors\n            data.error, // error message\n            false, // hintUsed\n            false  // solutionViewed\n          );\n        } catch (progressError) {\n          console.log('Failed to record failed attempt:', progressError);\n        }\n      }\n    } catch (err) {\n      setError('Failed to execute query. Please check your connection.');\n      setErrorAnalysis(null);\n      setResults(null); // Clear results on network error\n    } finally {\n      setIsExecuting(false);\n    }\n  };\n\n  // Close problems list when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (!event.target.closest('.relative')) {\n        setShowProblemsList(false);\n      }\n    };\n    \n    if (showProblemsList) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n    \n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [showProblemsList]);\n\n  // Add keyboard shortcuts\n  useEffect(() => {\n    const handleKeyPress = (event) => {\n      // Only trigger shortcuts when not typing in textarea or input\n      if (event.target.tagName === 'TEXTAREA' || event.target.tagName === 'INPUT') {\n        return;\n      }\n      \n      if (event.key === 'ArrowLeft' && event.ctrlKey) {\n        event.preventDefault();\n        navigateToPreviousProblem();\n      } else if (event.key === 'ArrowRight' && event.ctrlKey) {\n        event.preventDefault();\n        navigateToNextProblem();\n      } else if (event.key === 'p' && event.ctrlKey) {\n        event.preventDefault();\n        setShowProblemsList(!showProblemsList);\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyPress);\n    return () => {\n      document.removeEventListener('keydown', handleKeyPress);\n    };\n  }, [currentProblemIndex, allProblems?.length, showProblemsList, navigateToNextProblem, navigateToPreviousProblem]);\n\n  // If no problem is selected, redirect to problems page\n  if (!problemId) {\n    return <Navigate to=\"/problems\" replace />;\n  }\n  // Problem mode - show the full problem-solving interface\n  return (\n    <div className=\"max-w-7xl mx-auto px-4 py-8 animate-fade-in bg-gray-50 dark:bg-gray-900 min-h-screen transition-colors\">\n      <div className=\"mb-6\">\n        {problem && (\n          <div>\n            <div className=\"flex items-start justify-between mb-4\">\n              <div className=\"flex items-start space-x-3\">\n                <span className=\"text-2xl font-bold text-blue-600 dark:text-blue-400 bg-blue-100 dark:bg-blue-900 px-3 py-1 rounded-lg\">\n                  #{problem.numeric_id?.toString().padStart(3, '0') || '000'}\n                </span>\n                <div>\n                  <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">{problem.title}</h1>\n                  <div className=\"flex items-center space-x-4 mt-2\">\n                    <span className={`px-2 py-1 rounded text-xs font-medium ${getDifficultyColor(problem.difficulty)}`}>\n                      {problem.difficulty?.charAt(0).toUpperCase() + problem.difficulty?.slice(1)}\n                    </span>\n                    <span className=\"text-sm text-gray-500 dark:text-gray-400\">{problem.category_name}</span>\n                    {learningPathContext && pathPosition && (\n                      <div className=\"flex items-center space-x-2 px-3 py-1 bg-blue-100 dark:bg-blue-900/50 rounded-full border border-blue-200 dark:border-blue-800\">\n                        <span className=\"text-xs text-blue-700 dark:text-blue-300 font-medium\">\n                          📚 {learningPathContext.learning_path_name}\n                        </span>\n                        <span className=\"text-xs text-blue-600 dark:text-blue-400\">\n                          ({pathPosition.current_step}/{pathPosition.total_steps})\n                        </span>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n              \n              {/* Navigation Controls */}\n              <div className=\"flex items-center space-x-2\">\n                {/* Bookmark Button */}\n                <BookmarkButton problemId={problem?.id} size=\"md\" />\n                \n                <div className=\"w-px h-8 bg-gray-300 dark:bg-gray-600 mx-2\"></div>\n                <div className=\"text-xs text-gray-500 mr-2\">\n                  <div>Ctrl + ← / →</div>\n                  <div>Ctrl + P</div>\n                </div>\n                <button\n                  onClick={navigateToPreviousProblem}\n                  disabled={currentProblemIndex === 0}\n                  className=\"px-3 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-md hover:bg-gray-50 dark:hover:bg-gray-700 hover:shadow-md disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 hover-lift btn-press\"\n                  title=\"Previous Problem (Ctrl + Left Arrow)\"\n                >\n                  ← Previous\n                </button>\n                \n                <div className=\"relative\">\n                  <button\n                    onClick={() => setShowProblemsList(!showProblemsList)}\n                    className=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 dark:bg-blue-700 border border-blue-600 dark:border-blue-700 rounded-md hover:bg-blue-700 dark:hover:bg-blue-600 hover:shadow-lg transition-all duration-200 hover-lift btn-press animate-pulse-gentle\"\n                  >\n                    All Problems ({allProblems?.length || 0})\n                  </button>\n                  \n                  {/* Problems dropdown */}\n                  {showProblemsList && (\n                    <div className=\"absolute right-0 mt-2 w-80 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg z-50 max-h-96 overflow-y-auto\">\n                      <div className=\"p-2\">\n                        {allProblems?.map((prob, index) => (\n                          <button\n                            key={prob.id}\n                            onClick={() => {\n                              navigateToProblem(prob.numeric_id);\n                              setShowProblemsList(false);\n                            }}\n                            className={`w-full text-left px-3 py-2 rounded text-sm transition-colors ${\n                              prob.numeric_id === problem?.numeric_id\n                                ? 'bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300'\n                                : 'hover:bg-gray-100 dark:hover:bg-gray-700 text-gray-700 dark:text-gray-300'\n                            }`}\n                          >\n                            <div className=\"flex items-center space-x-2\">\n                              <span className=\"font-medium\">#{prob.numeric_id?.toString().padStart(3, '0') || '000'}</span>\n                              <span className=\"truncate flex-1\">{prob.title}</span>\n                              <span className={`px-1 py-0.5 rounded text-xs ${getDifficultyColor(prob.difficulty)}`}>\n                                {prob.difficulty?.charAt(0).toUpperCase()}\n                              </span>\n                            </div>\n                          </button>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                </div>\n                \n                <button\n                  onClick={navigateToNextProblem}\n                  disabled={currentProblemIndex === (allProblems?.length || 0) - 1}\n                  className=\"px-3 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-md hover:bg-gray-50 dark:hover:bg-gray-700 hover:shadow-md disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 hover-lift btn-press\"\n                  title=\"Next Problem (Ctrl + Right Arrow)\"\n                >\n                  Next →\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Main Content: Left/Right Split Layout */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 min-h-[600px] max-h-[80vh]\">\n        \n        {/* LEFT PANEL: Problem Info, Schema, Hints */}\n        <div className=\"flex flex-col space-y-4 overflow-y-auto pr-2\">\n          \n          {/* Problem Description */}\n          {problem && (\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700\">\n              <div className=\"border-b border-gray-200 dark:border-gray-700 px-4 py-3 flex justify-between items-center\">\n                <h2 className=\"text-lg font-medium text-gray-900 dark:text-white\">Problem Description</h2>\n                {schema && (\n                  <button\n                    onClick={() => setShowSolution(!showSolution)}\n                    className=\"text-sm px-3 py-1 rounded border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors\"\n                  >\n                    {showSolution ? 'Hide Solution' : 'Show Solution'}\n                  </button>\n                )}\n              </div>\n              <div className=\"p-4\">\n                <div className=\"prose max-w-none text-gray-900 dark:text-white\">\n                  <div dangerouslySetInnerHTML={{ \n                    __html: problem.description\n                      .replace(/\\*\\*Expected Output:\\*\\*.*?(?=\\*\\*|$)/g, '') // Remove Expected Output section\n                      .replace(/Expected Output:.*?(?=\\n\\n|\\n\\*\\*|$)/g, '') // Remove Expected Output without bold\n                      // Make section headers bold (whether they already are or not)\n                      .replace(/\\*\\*Business Context:\\*\\*/g, '<strong class=\"text-gray-900 dark:text-white\">Business Context:</strong>')\n                      .replace(/\\*\\*Scenario:\\*\\*/g, '<strong class=\"text-gray-900 dark:text-white\">Scenario:</strong>')\n                      .replace(/\\*\\*Problem:\\*\\*/g, '<strong class=\"text-gray-900 dark:text-white\">Problem:</strong>')\n                      .replace(/Business Context:/g, '<strong class=\"text-gray-900 dark:text-white\">Business Context:</strong>')\n                      .replace(/Scenario:/g, '<strong class=\"text-gray-900 dark:text-white\">Scenario:</strong>')\n                      .replace(/Problem:/g, '<strong class=\"text-gray-900 dark:text-white\">Problem:</strong>')\n                      // Handle other bold text\n                      .replace(/\\*\\*(.*?)\\*\\*/g, '<strong class=\"text-gray-900 dark:text-white\">$1</strong>')\n                      .replace(/`(.*?)`/g, '<code class=\"bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-white px-1 rounded\">$1</code>')\n                      .replace(/```sql\\n([\\s\\S]*?)\\n```/g, '<pre class=\"bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-white p-3 rounded overflow-x-auto\"><code>$1</code></pre>')\n                      .replace(/\\n/g, '<br>')\n                      .replace(/<br><br>/g, '<br>') // Clean up double line breaks\n                  }} />\n                </div>\n                \n                {/* Show Solution */}\n                {showSolution && schema && (\n                  <div className=\"mt-6 p-4 bg-blue-50 dark:bg-blue-900/50 border border-blue-200 dark:border-blue-800 rounded-lg\">\n                    <div className=\"flex items-center justify-between mb-3\">\n                      <div className=\"flex items-center space-x-2\">\n                        <span className=\"text-lg\">💡</span>\n                        <h3 className=\"font-semibold text-blue-800 dark:text-blue-300\">Solution</h3>\n                      </div>\n                      <button\n                        onClick={(e) => {\n                          navigator.clipboard.writeText(schema.solution_sql);\n                          // Add a temporary visual feedback\n                          const btn = e.target;\n                          const originalText = btn.textContent;\n                          btn.textContent = 'Copied!';\n                          setTimeout(() => {\n                            btn.textContent = originalText;\n                          }, 2000);\n                        }}\n                        className=\"text-xs px-2 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors\"\n                        title=\"Copy SQL to clipboard\"\n                      >\n                        📋 Copy\n                      </button>\n                    </div>\n                    <div className=\"bg-gray-900 dark:bg-gray-950 p-4 rounded overflow-x-auto\">\n                      <textarea\n                        value={schema.solution_sql}\n                        readOnly\n                        className=\"w-full h-48 p-3 bg-gray-800 text-green-400 font-mono text-sm border-0 resize-none\"\n                      />\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n\n          {/* Collapsible Sections */}\n          <div className=\"space-y-4\">\n            {/* Database Schema Section */}\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700\">\n              <button\n                onClick={() => setExpandedSection(expandedSection === 'schema' ? null : 'schema')}\n                className=\"w-full px-4 py-3 text-left flex items-center justify-between hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors rounded-lg\"\n              >\n                <h2 className=\"text-lg font-medium text-gray-900 dark:text-white\">Database Schema</h2>\n                <svg\n                  className={`w-5 h-5 text-gray-500 dark:text-gray-400 transform transition-transform ${\n                    expandedSection === 'schema' ? 'rotate-180' : ''\n                  }`}\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                </svg>\n              </button>\n              \n              {expandedSection === 'schema' && (\n                <div className=\"border-t border-gray-200 dark:border-gray-700 p-4\">\n                  {schema ? (\n                    <div>\n                      {/* Parse and display schema tables */}\n                      {(() => {\n                        const createTableRegex = /CREATE TABLE (\\w+) \\(([\\s\\S]*?)\\);/g;\n                        const tables = [];\n                        const sampleData = {};\n                        let match;\n                        \n                        // Parse table structures\n                        while ((match = createTableRegex.exec(schema.setup_sql)) !== null) {\n                          const tableName = match[1];\n                          const columnsText = match[2];\n                          \n                          const parseColumns = (columnsText) => {\n                            const columns = [];\n                            let current = '';\n                            let parenDepth = 0;\n                            \n                            for (let i = 0; i < columnsText.length; i++) {\n                              const char = columnsText[i];\n                              if (char === '(') parenDepth++;\n                              if (char === ')') parenDepth--;\n                              \n                              if (char === ',' && parenDepth === 0) {\n                                if (current.trim()) columns.push(current.trim());\n                                current = '';\n                              } else {\n                                current += char;\n                              }\n                            }\n                            if (current.trim()) columns.push(current.trim());\n                            return columns;\n                          };\n                          \n                          const columns = parseColumns(columnsText)\n                            .filter(col => col.length > 0)\n                            .map(col => {\n                              const parts = col.split(' ');\n                              const name = parts[0];\n                              const type = parts.slice(1).join(' ').toUpperCase();\n                              return { name, type };\n                            });\n                          \n                          tables.push({ name: tableName, columns });\n                        }\n                        \n                        // Parse sample data\n                        const insertMatches = [...schema.setup_sql.matchAll(/INSERT INTO\\s+(\\w+)\\s+VALUES\\s+([\\s\\S]*?);/g)];\n                        insertMatches.forEach(match => {\n                          const tableName = match[1];\n                          const valuesText = match[2];\n                          const rowMatches = [...valuesText.matchAll(/\\(([\\s\\S]*?)\\)/g)];\n                          sampleData[tableName] = rowMatches.slice(0, 5).map(rowMatch => {\n                            return rowMatch[1].split(',').map(val => {\n                              const trimmed = val.trim();\n                              // Remove quotes and handle nulls\n                              if (trimmed === 'NULL') return 'NULL';\n                              return trimmed.replace(/^'|'$/g, '').replace(/''/g, \"'\");\n                            });\n                          });\n                        });\n                        \n                        return (\n                          <div className=\"space-y-6\">\n                            {tables.map(table => (\n                              <div key={table.name} className=\"border border-gray-200 dark:border-gray-600 rounded-lg\">\n                                <div className=\"bg-gray-50 dark:bg-gray-700 px-4 py-2 border-b border-gray-200 dark:border-gray-600 rounded-t-lg\">\n                                  <h3 className=\"font-semibold text-gray-900 dark:text-white\">{table.name}</h3>\n                                </div>\n                                <div className=\"p-4\">\n                                  <div className=\"space-y-2 mb-4\">\n                                    {table.columns.map(col => (\n                                      <div key={col.name} className=\"flex justify-between items-center py-2 border-b border-gray-100 dark:border-gray-700 last:border-0\">\n                                        <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">{col.name}</span>\n                                        <span className=\"text-xs text-blue-600 dark:text-blue-400 bg-blue-50 dark:bg-blue-900/50 px-2 py-0.5 rounded\">{col.type}</span>\n                                      </div>\n                                    ))}\n                                  </div>\n                                  \n                                  {/* Sample Data */}\n                                  {sampleData[table.name] && sampleData[table.name].length > 0 && (\n                                    <div>\n                                      <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">Sample Data:</h4>\n                                      <div className=\"overflow-x-auto\">\n                                        <table className=\"min-w-full text-xs border border-gray-200 dark:border-gray-600\">\n                                          <thead className=\"bg-gray-50 dark:bg-gray-700\">\n                                            <tr>\n                                              {table.columns.map(col => (\n                                                <th key={col.name} className=\"px-2 py-1 text-left font-medium text-gray-700 dark:text-gray-300 border-r border-gray-200 dark:border-gray-600 last:border-0\">\n                                                  {col.name}\n                                                </th>\n                                              ))}\n                                            </tr>\n                                          </thead>\n                                          <tbody>\n                                            {sampleData[table.name].map((row, idx) => (\n                                              <tr key={idx} className=\"border-t border-gray-200 dark:border-gray-600\">\n                                                {row.map((cell, cellIdx) => (\n                                                  <td key={cellIdx} className=\"px-2 py-1 text-gray-700 dark:text-gray-300 border-r border-gray-200 dark:border-gray-600 last:border-0\">\n                                                    {cell}\n                                                  </td>\n                                                ))}\n                                              </tr>\n                                            ))}\n                                          </tbody>\n                                        </table>\n                                      </div>\n                                    </div>\n                                  )}\n                                </div>\n                              </div>\n                            ))}\n                          </div>\n                        );\n                      })()}\n                    </div>\n                  ) : (\n                    <div className=\"text-gray-500 dark:text-gray-400\">No database schema available</div>\n                  )}\n                </div>\n              )}\n            </div>\n\n            {/* Expected Output Section */}\n            {problem && (\n              <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700\">\n                <button\n                  onClick={() => setExpandedSection(expandedSection === 'expected' ? null : 'expected')}\n                  className=\"w-full px-4 py-3 text-left flex items-center justify-between hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors rounded-lg\"\n                >\n                  <h2 className=\"text-lg font-medium text-gray-900 dark:text-white\">Expected Output</h2>\n                  <svg\n                    className={`w-5 h-5 text-gray-500 dark:text-gray-400 transform transition-transform ${\n                      expandedSection === 'expected' ? 'rotate-180' : ''\n                    }`}\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                  </svg>\n                </button>\n                \n                {expandedSection === 'expected' && (\n                  <div className=\"border-t border-gray-200 dark:border-gray-700 p-4\">\n                    {schema && schema.expected_output && schema.expected_output.length > 0 ? (\n                      <div className=\"overflow-x-auto\">\n                        <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-600\">\n                          <thead className=\"bg-gray-50 dark:bg-gray-700\">\n                            <tr>\n                              {Object.keys(schema.expected_output[0]).map((column, index) => (\n                                <th\n                                  key={index}\n                                  className=\"px-4 py-2 text-left text-xs font-medium text-gray-700 dark:text-gray-300 uppercase tracking-wider border border-gray-300 dark:border-gray-500\"\n                                >\n                                  {column}\n                                </th>\n                              ))}\n                            </tr>\n                          </thead>\n                          <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-600\">\n                            {schema.expected_output.slice(0, 10).map((row, rowIndex) => (\n                              <tr key={rowIndex} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\n                                {Object.values(row).map((cell, cellIndex) => (\n                                  <td\n                                    key={cellIndex}\n                                    className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100 border border-gray-300 dark:border-gray-500\"\n                                  >\n                                    {cell !== null ? cell.toString() : 'NULL'}\n                                  </td>\n                                ))}\n                              </tr>\n                            ))}\n                          </tbody>\n                        </table>\n                        {schema.expected_output.length > 10 && (\n                          <div className=\"text-sm text-gray-500 dark:text-gray-400 mt-2 text-center\">\n                            Showing first 10 rows of {schema.expected_output.length} expected rows\n                          </div>\n                        )}\n                      </div>\n                    ) : (\n                      <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                        Expected output will be shown when available.\n                      </div>\n                    )}\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n\n          {/* Hints Panel */}\n          {problem && showHints && (\n            <HintsPanel \n              problemId={problemId}\n              attemptCount={attemptCount}\n              onClose={() => setShowHints(false)}\n            />\n          )}\n        </div>\n        \n        {/* RIGHT PANEL: SQL Editor, Results */}\n        <div className=\"flex flex-col space-y-4 overflow-hidden\">\n          \n          {/* SQL Editor */}\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg flex-1 min-h-0 border border-gray-200 dark:border-gray-700\">\n            <div className=\"border-b border-gray-200 dark:border-gray-700 px-4 py-3 flex justify-between items-center\">\n              <h2 className=\"text-lg font-medium text-gray-900 dark:text-white\">SQL Query</h2>\n              <div className=\"flex items-center space-x-2\">\n                {problem && attemptCount > 0 && (\n                  <button\n                    onClick={() => setShowHints(true)}\n                    className=\"text-xs px-2 py-1 bg-yellow-100 dark:bg-yellow-900/50 text-yellow-700 dark:text-yellow-300 rounded hover:bg-yellow-200 dark:hover:bg-yellow-900 transition-colors\"\n                  >\n                    💡 Hints ({Math.min(attemptCount, 3)})\n                  </button>\n                )}\n                <select\n                  value={selectedDialect}\n                  onChange={(e) => setSelectedDialect(e.target.value)}\n                  className=\"text-sm px-2 py-1 border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                >\n                  <option value=\"postgresql\">PostgreSQL</option>\n                  <option value=\"mysql\">MySQL</option>\n                </select>\n                <button\n                  onClick={executeQuery}\n                  disabled={isExecuting}\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50 transition-all duration-200 hover-lift btn-press\"\n                  title=\"Execute query (Ctrl+Enter)\"\n                >\n                  {isExecuting ? (\n                    <>\n                      <span className=\"inline-block animate-spin w-4 h-4 border-2 border-white border-t-transparent rounded-full mr-2\"></span>\n                      Running...\n                    </>\n                  ) : (\n                    'Run Query'\n                  )}\n                </button>\n              </div>\n            </div>\n            \n            <div className=\"flex-1\" style={{ minHeight: '500px', height: '500px' }}>\n              <textarea\n                value={sqlQuery}\n                onChange={(e) => setSqlQuery(e.target.value)}\n                onKeyDown={(e) => {\n                  if ((e.ctrlKey || e.metaKey) && e.key === 'Enter') {\n                    e.preventDefault();\n                    executeQuery();\n                  }\n                }}\n                className=\"w-full h-full p-4 bg-gray-900 text-green-400 font-mono text-sm border-0 resize-none\"\n                placeholder=\"-- Write your SQL query here\"\n              />\n            </div>\n          </div>\n          \n          {/* Results Panel */}\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg flex-1 min-h-0 border border-gray-200 dark:border-gray-700\">\n            <div className=\"border-b border-gray-200 dark:border-gray-700 px-4 py-3\">\n              <h2 className=\"text-lg font-medium text-gray-900 dark:text-white\">Results</h2>\n            </div>\n            \n            <div className=\"p-4 overflow-y-auto h-full\">\n              {error && (\n                <EnhancedErrorDisplay \n                  error={error}\n                  errorAnalysis={errorAnalysis}\n                  onQuickFix={(fixedQuery) => {\n                    setSqlQuery(fixedQuery);\n                  }}\n                />\n              )}\n              \n              {results && (\n                <div>\n                  <div className=\"mb-4\">\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <div className=\"text-sm text-gray-500\">\n                        Execution time: {results.executionTime} • {results.rowCount || results.rows?.length || 0} rows returned\n                      </div>\n                      <div className=\"text-sm text-green-600 font-medium\">\n                        ✓ Query executed successfully\n                      </div>\n                    </div>\n                    \n                    {/* Validation Results */}\n                    {(results.isCorrect !== null || results.feedback) && (\n                      <div className={`p-3 rounded-md border ${\n                        results.isCorrect === true\n                          ? 'bg-green-50 dark:bg-green-900/50 border-green-200 dark:border-green-800' \n                          : 'bg-red-50 dark:bg-red-900/50 border-red-200 dark:border-red-800'\n                      }`}>\n                        <div className={`flex items-center space-x-2 ${\n                          results.isCorrect === true\n                            ? 'text-green-800 dark:text-green-300' \n                            : 'text-red-800 dark:text-red-300'\n                        }`}>\n                          <span className=\"text-lg\">\n                            {results.isCorrect ? '🎉' : '❌'}\n                          </span>\n                          <span className=\"font-medium\">\n                            {results.isCorrect ? 'Correct Solution!' : 'Incorrect Solution'}\n                          </span>\n                        </div>\n                        <div className={`text-sm mt-1 ${\n                          results.isCorrect \n                            ? 'text-green-700 dark:text-green-400' \n                            : 'text-red-700 dark:text-red-400'\n                        }`}>\n                          {results.feedback}\n                        </div>\n                      </div>\n                    )}\n                  </div>\n\n                  {/* Results Table */}\n                  {results.rows && results.rows.length > 0 ? (\n                    <div className=\"overflow-x-auto\">\n                      <table className=\"min-w-full border border-gray-200 dark:border-gray-600\">\n                        <thead className=\"bg-gray-50 dark:bg-gray-700\">\n                          <tr>\n                            {Object.keys(results.rows[0]).map((column) => (\n                              <th key={column} className=\"px-3 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider border-b border-gray-200 dark:border-gray-600\">\n                                {column}\n                              </th>\n                            ))}\n                          </tr>\n                        </thead>\n                        <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-600\">\n                          {results.rows.slice(0, 100).map((row, index) => (\n                            <tr key={index}>\n                              {Object.values(row).map((value, i) => (\n                                <td key={i} className=\"px-3 py-2 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100 border-b border-gray-200 dark:border-gray-600\">\n                                  {value !== null ? value.toString() : <span className=\"text-gray-400\">NULL</span>}\n                                </td>\n                              ))}\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                      \n                      {results.rows?.length > 100 && (\n                        <div className=\"text-sm text-gray-500 dark:text-gray-400 mt-2 text-center\">\n                          Showing first 100 rows of {results.rows?.length || 0} total rows\n                        </div>\n                      )}\n                    </div>\n                  ) : (\n                    <div className=\"text-center py-8\">\n                      <div className=\"text-gray-500 dark:text-gray-400\">\n                        Query executed successfully but returned no rows\n                      </div>\n                    </div>\n                  )}\n                </div>\n              )}\n\n              {/* Expected Output Section */}\n              {problem && problem.expected_output && (\n                <div className=\"mt-6 border-t border-gray-200 dark:border-gray-700 pt-4\">\n                  <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-3\">Expected Output</h3>\n                  <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-4\">\n                    {problem.expected_output.length > 0 ? (\n                      <div className=\"overflow-x-auto\">\n                        <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-600\">\n                          <thead className=\"bg-gray-100 dark:bg-gray-600\">\n                            <tr>\n                              {Object.keys(problem.expected_output[0]).map((column, index) => (\n                                <th\n                                  key={index}\n                                  className=\"px-4 py-2 text-left text-xs font-medium text-gray-700 dark:text-gray-300 uppercase tracking-wider border border-gray-300 dark:border-gray-500\"\n                                >\n                                  {column}\n                                </th>\n                              ))}\n                            </tr>\n                          </thead>\n                          <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-600\">\n                            {problem.expected_output.slice(0, 20).map((row, rowIndex) => (\n                              <tr key={rowIndex} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\n                                {Object.values(row).map((cell, cellIndex) => (\n                                  <td\n                                    key={cellIndex}\n                                    className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100 border border-gray-300 dark:border-gray-500\"\n                                  >\n                                    {cell !== null ? cell.toString() : 'NULL'}\n                                  </td>\n                                ))}\n                              </tr>\n                            ))}\n                          </tbody>\n                        </table>\n                        {problem.expected_output.length > 20 && (\n                          <div className=\"text-sm text-gray-500 dark:text-gray-400 mt-2 text-center\">\n                            Showing first 20 rows of {problem.expected_output.length} expected rows\n                          </div>\n                        )}\n                      </div>\n                    ) : (\n                      <div className=\"text-center py-4\">\n                        <div className=\"text-gray-500 dark:text-gray-400\">\n                          Expected output not available for this problem\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              )}\n              \n              {!results && !error && !isExecuting && (\n                <div className=\"text-center py-8\">\n                  <div className=\"text-gray-500 dark:text-gray-400\">💻</div>\n                  <div className=\"text-gray-500 dark:text-gray-400 mt-2\">Run a query to see results</div>\n                </div>\n              )}\n              \n              {isExecuting && (\n                <div className=\"text-center py-8\">\n                  <div className=\"inline-block animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600 dark:border-blue-400\"></div>\n                  <div className=\"text-gray-500 dark:text-gray-400 mt-2\">Executing query...</div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PracticePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}