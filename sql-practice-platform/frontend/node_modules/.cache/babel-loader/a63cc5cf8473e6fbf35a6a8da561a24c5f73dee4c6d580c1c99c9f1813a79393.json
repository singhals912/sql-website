{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{authUrl}from'../config/environment.js';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[token,setToken]=useState(localStorage.getItem('token'));const[loading,setLoading]=useState(true);// Check if user is authenticated on app load\nuseEffect(()=>{checkAuthStatus();},[]);const checkAuthStatus=async()=>{const storedToken=localStorage.getItem('token');if(!storedToken){setLoading(false);return;}try{const response=await fetch(authUrl('validate'),{headers:{'Authorization':\"Bearer \".concat(storedToken)}});if(response.ok){const data=await response.json();setUser(data.user);setToken(storedToken);}else{// Token is invalid\nlocalStorage.removeItem('token');setToken(null);setUser(null);}}catch(error){console.error('Auth check failed:',error);localStorage.removeItem('token');setToken(null);setUser(null);}finally{setLoading(false);}};const login=async(email,password,sessionId)=>{try{const response=await fetch(authUrl('login'),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,password,sessionId})});const data=await response.json();if(response.ok){setUser(data.user);setToken(data.token);localStorage.setItem('token',data.token);return{success:true,user:data.user};}else{return{success:false,error:data.error};}}catch(error){console.error('Login error:',error);return{success:false,error:'Login failed. Please try again.'};}};const register=async(email,password,username,fullName)=>{try{const response=await fetch(authUrl('register'),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,password,username,fullName})});const data=await response.json();if(response.ok){return{success:true,message:data.message,requiresVerification:data.requiresVerification,userId:data.userId,email:data.email,fullName:fullName};}else{return{success:false,error:data.error};}}catch(error){console.error('Registration error:',error);return{success:false,error:'Registration failed. Please try again.'};}};const logout=()=>{setUser(null);setToken(null);localStorage.removeItem('token');};const updateProfile=async updates=>{try{const response=await fetch(authUrl('profile'),{method:'PUT',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(token)},body:JSON.stringify(updates)});const data=await response.json();if(response.ok){setUser(data.user);return{success:true,user:data.user};}else{return{success:false,error:data.error};}}catch(error){console.error('Profile update error:',error);return{success:false,error:'Profile update failed.'};}};const forgotPassword=async email=>{try{const response=await fetch(authUrl('forgot-password'),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email})});const data=await response.json();return{success:response.ok,message:data.message,error:data.error};}catch(error){console.error('Forgot password error:',error);return{success:false,error:'Request failed. Please try again.'};}};const resetPassword=async(token,password)=>{try{const response=await fetch(authUrl('reset-password'),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({token,password})});const data=await response.json();return{success:response.ok,message:data.message,error:data.error};}catch(error){console.error('Reset password error:',error);return{success:false,error:'Reset failed. Please try again.'};}};const value={user,token,loading,isAuthenticated:!!user,login,register,logout,updateProfile,forgotPassword,resetPassword,checkAuthStatus};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authUrl","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","checkAuthStatus","storedToken","response","fetch","headers","concat","ok","data","json","removeItem","error","console","login","email","password","sessionId","method","body","JSON","stringify","setItem","success","register","username","fullName","message","requiresVerification","userId","logout","updateProfile","updates","forgotPassword","resetPassword","value","isAuthenticated","Provider"],"sources":["/Users/ss/Downloads/Code/Vibe_coding/SQL_practice_website/sql-practice-platform/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authUrl } from '../config/environment.js';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [loading, setLoading] = useState(true);\n\n  // Check if user is authenticated on app load\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n\n  const checkAuthStatus = async () => {\n    const storedToken = localStorage.getItem('token');\n    if (!storedToken) {\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const response = await fetch(authUrl('validate'), {\n        headers: {\n          'Authorization': `Bearer ${storedToken}`\n        }\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setUser(data.user);\n        setToken(storedToken);\n      } else {\n        // Token is invalid\n        localStorage.removeItem('token');\n        setToken(null);\n        setUser(null);\n      }\n    } catch (error) {\n      console.error('Auth check failed:', error);\n      localStorage.removeItem('token');\n      setToken(null);\n      setUser(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (email, password, sessionId) => {\n    try {\n      const response = await fetch(authUrl('login'), {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password, sessionId }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        setUser(data.user);\n        setToken(data.token);\n        localStorage.setItem('token', data.token);\n        return { success: true, user: data.user };\n      } else {\n        return { success: false, error: data.error };\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      return { success: false, error: 'Login failed. Please try again.' };\n    }\n  };\n\n  const register = async (email, password, username, fullName) => {\n    try {\n      const response = await fetch(authUrl('register'), {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password, username, fullName }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        return { \n          success: true, \n          message: data.message,\n          requiresVerification: data.requiresVerification,\n          userId: data.userId,\n          email: data.email,\n          fullName: fullName\n        };\n      } else {\n        return { success: false, error: data.error };\n      }\n    } catch (error) {\n      console.error('Registration error:', error);\n      return { success: false, error: 'Registration failed. Please try again.' };\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('token');\n  };\n\n  const updateProfile = async (updates) => {\n    try {\n      const response = await fetch(authUrl('profile'), {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(updates),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        setUser(data.user);\n        return { success: true, user: data.user };\n      } else {\n        return { success: false, error: data.error };\n      }\n    } catch (error) {\n      console.error('Profile update error:', error);\n      return { success: false, error: 'Profile update failed.' };\n    }\n  };\n\n  const forgotPassword = async (email) => {\n    try {\n      const response = await fetch(authUrl('forgot-password'), {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email }),\n      });\n\n      const data = await response.json();\n      return { success: response.ok, message: data.message, error: data.error };\n    } catch (error) {\n      console.error('Forgot password error:', error);\n      return { success: false, error: 'Request failed. Please try again.' };\n    }\n  };\n\n  const resetPassword = async (token, password) => {\n    try {\n      const response = await fetch(authUrl('reset-password'), {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ token, password }),\n      });\n\n      const data = await response.json();\n      return { success: response.ok, message: data.message, error: data.error };\n    } catch (error) {\n      console.error('Reset password error:', error);\n      return { success: false, error: 'Reset failed. Please try again.' };\n    }\n  };\n\n  const value = {\n    user,\n    token,\n    loading,\n    isAuthenticated: !!user,\n    login,\n    register,\n    logout,\n    updateProfile,\n    forgotPassword,\n    resetPassword,\n    checkAuthStatus\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}